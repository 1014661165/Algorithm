[ {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\code\\JavaCodeUtils.java",
  "startLine" : 24,
  "endLine" : 168,
  "identifiers" : [ "MethodSignature", "methodSignature", "new", "MethodSignature", "methodSignature", "setPath", "path", "methodSignature", "setStartLine", "startLine", "File", "file", "new", "File", "path", "if", "file", "exists", "return", "null", "try", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "List", "String", "lines", "new", "ArrayList", "String", "line", "null", "int", "lineCount", "while", "line", "reader", "readLine", "null", "lineCount", "if", "lineCount", "startLine", "break", "lines", "add", "line", "reader", "close", "String", "code", "String", "join", "lines", "int", "index", "code", "lastIndexOf", "if", "index", "return", "null", "char", "c", "code", "charAt", "index", "StringBuilder", "builder", "new", "StringBuilder", "while", "c", "index", "if", "index", "return", "null", "c", "code", "charAt", "index", "if", "c", "builder", "append", "c", "String", "str", "builder", "reverse", "toString", "trim", "if", "str", "contains", "return", "null", "if", "str", "isEmpty", "str", "contains", "str", "str", "replaceAll", "str", "str", "replaceAll", "String", "exceptions", "str", "split", "methodSignature", "setExceptions", "Arrays", "asList", "exceptions", "builder", "delete", "builder", "length", "int", "rightParenNum", "while", "rightParenNum", "index", "if", "index", "return", "null", "c", "code", "charAt", "index", "if", "c", "rightParenNum", "else", "if", "c", "rightParenNum", "builder", "append", "c", "str", "builder", "deleteCharAt", "builder", "length", "reverse", "toString", "trim", "if", "str", "isEmpty", "str", "str", "replaceAll", "if", "str", "contains", "return", "null", "String", "params", "str", "split", "int", "pi", "int", "angleBrackets", "char", "brackets", "new", "char", "String", "lastParam", "while", "pi", "params", "length", "String", "param", "params", "pi", "trim", "int", "cnt", "count", "param", "brackets", "int", "sum", "cnt", "cnt", "cnt", "cnt", "if", "sum", "angleBrackets", "if", "lastParam", "isEmpty", "param", "lastParam", "param", "if", "param", "lastIndexOf", "continue", "String", "paramType", "param", "substring", "param", "lastIndexOf", "if", "paramType", "contains", "paramType", "paramType", "substring", "paramType", "lastIndexOf", "String", "paramName", "param", "substring", "param", "lastIndexOf", "methodSignature", "getParams", "add", "new", "MethodSignature", "MethodParam", "paramType", "paramName", "lastParam", "angleBrackets", "else", "lastParam", "lastParam", "isEmpty", "param", "lastParam", "param", "angleBrackets", "sum", "pi", "builder", "delete", "builder", "length", "index", "skipWhitespace", "code", "index", "c", "code", "charAt", "index", "while", "Character", "isWhitespace", "c", "builder", "append", "c", "index", "if", "index", "return", "null", "c", "code", "charAt", "index", "str", "builder", "reverse", "toString", "trim", "methodSignature", "setMethodName", "str", "builder", "delete", "builder", "length", "index", "skipWhitespace", "code", "index", "c", "code", "charAt", "index", "while", "Character", "isWhitespace", "c", "builder", "append", "c", "index", "if", "index", "return", "null", "c", "code", "charAt", "index", "str", "builder", "reverse", "toString", "trim", "methodSignature", "setReturnType", "str", "return", "methodSignature" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\code\\JavaCodeUtils.java",
  "startLine" : 177,
  "endLine" : 226,
  "identifiers" : [ "MethodBody", "methodBody", "new", "MethodBody", "methodBody", "setPath", "path", "methodBody", "setStartLine", "startLine", "methodBody", "setEndLine", "endLine", "File", "file", "new", "File", "path", "if", "file", "exists", "return", "null", "try", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "List", "String", "lines", "new", "ArrayList", "String", "line", "null", "int", "cnt", "while", "line", "reader", "readLine", "null", "cnt", "if", "cnt", "startLine", "cnt", "endLine", "lines", "add", "line", "else", "if", "cnt", "endLine", "break", "reader", "close", "String", "code", "String", "join", "lines", "int", "leftBracketIndex", "code", "indexOf", "int", "rightBracketIndex", "code", "lastIndexOf", "if", "leftBracketIndex", "rightBracketIndex", "return", "null", "code", "code", "substring", "leftBracketIndex", "rightBracketIndex", "code", "code", "replaceAll", "JAVA_SINGLE_LINE_COMMENT_PATTERN", "code", "code", "replaceAll", "JAVA_MULTI_LINE_COMMENT_PATTERN", "code", "code", "replaceAll", "JAVA_STRING_PATTERN", "int", "index", "while", "index", "code", "length", "char", "c", "code", "charAt", "index", "if", "Character", "isLetter", "c", "c", "_", "StringBuilder", "builder", "new", "StringBuilder", "while", "Character", "isLetterOrDigit", "c", "c", "_", "builder", "append", "c", "c", "code", "charAt", "index", "methodBody", "getIdentifiers", "add", "builder", "toString", "index" ]
}, null, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\security\\CipherUtil.java",
  "startLine" : 25,
  "endLine" : 39,
  "identifiers" : [ "List", "byte", "keys", "new", "ArrayList", "try", "KeyPairGenerator", "generator", "KeyPairGenerator", "getInstance", "algorithm", "generator", "initialize", "keySize", "new", "SecureRandom", "KeyPair", "keyPair", "generator", "genKeyPair", "byte", "privateKey", "keyPair", "getPrivate", "getEncoded", "byte", "publicKey", "keyPair", "getPublic", "getEncoded", "keys", "add", "publicKey", "keys", "add", "privateKey", "catch", "Exception", "e", "e", "printStackTrace", "return", "keys" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\security\\CipherUtil.java",
  "startLine" : 49,
  "endLine" : 61,
  "identifiers" : [ "byte", "encodedMsg", "null", "try", "KeyFactory", "keyFactory", "KeyFactory", "getInstance", "algorithm", "PublicKey", "key", "keyFactory", "generatePublic", "new", "X509EncodedKeySpec", "publicKey", "Cipher", "cipher", "Cipher", "getInstance", "algorithm", "cipher", "init", "Cipher", "ENCRYPT_MODE", "key", "encodedMsg", "cipher", "doFinal", "msg", "catch", "Exception", "e", "e", "printStackTrace", "return", "encodedMsg" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\security\\CipherUtil.java",
  "startLine" : 72,
  "endLine" : 84,
  "identifiers" : [ "byte", "msg", "null", "try", "KeyFactory", "keyFactory", "KeyFactory", "getInstance", "algorithm", "PrivateKey", "key", "keyFactory", "generatePrivate", "new", "PKCS8EncodedKeySpec", "privateKey", "Cipher", "cipher", "Cipher", "getInstance", "algorithm", "cipher", "init", "Cipher", "DECRYPT_MODE", "key", "msg", "cipher", "doFinal", "encodedMsg", "catch", "Exception", "e", "e", "printStackTrace", "return", "msg" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\security\\CipherUtil.java",
  "startLine" : 92,
  "endLine" : 102,
  "identifiers" : [ "byte", "key", "null", "try", "KeyGenerator", "keyGenerator", "KeyGenerator", "getInstance", "algorithm", "SecretKey", "secretKey", "keyGenerator", "generateKey", "key", "secretKey", "getEncoded", "catch", "Exception", "e", "e", "printStackTrace", "return", "key" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\security\\CipherUtil.java",
  "startLine" : 111,
  "endLine" : 122,
  "identifiers" : [ "byte", "encodedMsg", "null", "try", "SecretKey", "key", "new", "SecretKeySpec", "secretKey", "algorithm", "Cipher", "cipher", "Cipher", "getInstance", "algorithm", "cipher", "init", "Cipher", "ENCRYPT_MODE", "key", "encodedMsg", "cipher", "doFinal", "msg", "catch", "Exception", "e", "e", "printStackTrace", "return", "encodedMsg" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\security\\CipherUtil.java",
  "startLine" : 131,
  "endLine" : 142,
  "identifiers" : [ "byte", "msg", "null", "try", "SecretKey", "key", "new", "SecretKeySpec", "secretKey", "algorithm", "Cipher", "cipher", "Cipher", "getInstance", "algorithm", "cipher", "init", "Cipher", "DECRYPT_MODE", "key", "msg", "cipher", "doFinal", "encodedMsg", "catch", "Exception", "e", "e", "printStackTrace", "return", "msg" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\strings\\CodeUtils.java",
  "startLine" : 16,
  "endLine" : 85,
  "identifiers" : [ "try", "List", "Byte", "tokens1", "lexer", "code1", "List", "Byte", "tokens2", "lexer", "code2", "List", "Fragment", "fragments", "new", "ArrayList", "fragments", "add", "new", "Fragment", "tokens1", "size", "fragments", "add", "new", "Fragment", "tokens1", "size", "tokens1", "size", "tokens2", "size", "List", "Byte", "tokens", "new", "ArrayList", "tokens", "addAll", "tokens1", "tokens", "addAll", "tokens2", "SuffixArray", "suffixArray", "new", "SuffixArray", "suffixArray", "init", "tokens", "List", "Integer", "result", "suffixArray", "process", "List", "ClonePair", "clonePairs", "new", "ArrayList", "for", "int", "i", "i", "result", "size", "i", "if", "result", "get", "i", "continue", "int", "x1", "result", "get", "i", "int", "x2", "result", "get", "i", "int", "cloneLen", "result", "get", "i", "int", "firstFrom", "searchFragment", "fragments", "x1", "int", "firstTo", "searchFragment", "fragments", "x1", "cloneLen", "int", "secondFrom", "searchFragment", "fragments", "x2", "int", "secondTo", "searchFragment", "fragments", "x2", "cloneLen", "if", "firstFrom", "secondFrom", "continue", "if", "firstFrom", "firstTo", "secondFrom", "secondTo", "continue", "if", "cloneLen", "continue", "if", "firstFrom", "clonePairs", "add", "new", "ClonePair", "x1", "x2", "cloneLen", "else", "clonePairs", "add", "new", "ClonePair", "x2", "x1", "cloneLen", "Collections", "sort", "clonePairs", "new", "Comparator", "ClonePair", "Override", "public", "int", "compare", "ClonePair", "o1", "ClonePair", "o2", "if", "o1", "first", "o2", "first", "return", "else", "if", "o1", "first", "o2", "first", "return", "return", "int", "overlapping", "calculateOverlapping", "clonePairs", "return", "overlapping", "f", "Math", "max", "tokens1", "size", "tokens2", "size", "catch", "Exception", "e", "e", "printStackTrace", "return", "f" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\strings\\CodeUtils.java",
  "startLine" : 93,
  "endLine" : 102,
  "identifiers" : [ "int", "index", "for", "int", "i", "i", "fragments", "size", "i", "if", "startIndex", "fragments", "get", "i", "start", "startIndex", "fragments", "get", "i", "end", "index", "i", "break", "return", "index" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\strings\\CodeUtils.java",
  "startLine" : 109,
  "endLine" : 138,
  "identifiers" : [ "int", "index", "int", "startToken", "int", "size", "int", "totalSize", "while", "index", "pairs", "size", "int", "pairIndex", "pairs", "get", "index", "first", "int", "pairSize", "pairs", "get", "index", "size", "if", "index", "startToken", "pairIndex", "size", "pairSize", "index", "continue", "if", "startToken", "size", "pairIndex", "if", "startToken", "size", "pairIndex", "pairSize", "else", "size", "pairIndex", "startToken", "pairSize", "index", "else", "totalSize", "size", "startToken", "pairIndex", "size", "pairSize", "index", "return", "Math", "max", "totalSize", "size" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\strings\\CodeUtils.java",
  "startLine" : 145,
  "endLine" : 181,
  "identifiers" : [ "int", "index", "List", "Byte", "res", "new", "ArrayList", "String", "token", "while", "index", "stat", "length", "char", "c", "stat", "charAt", "index", "if", "Character", "isSpaceChar", "c", "index", "continue", "if", "Character", "isDigit", "c", "while", "Character", "isDigit", "c", "token", "c", "if", "index", "stat", "length", "break", "c", "stat", "charAt", "index", "res", "add", "str2hash", "token", "token", "continue", "if", "Character", "isLetter", "c", "c", "_", "while", "Character", "isLetterOrDigit", "c", "c", "_", "token", "c", "if", "index", "stat", "length", "break", "c", "stat", "charAt", "index", "res", "add", "str2hash", "token", "token", "continue", "res", "add", "str2hash", "c", "index", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\strings\\CodeUtils.java",
  "startLine" : 188,
  "endLine" : 201,
  "identifiers" : [ "str", "str", "toLowerCase", "if", "str", "length", "int", "h", "str", "toCharArray", "str", "length", "h", "return", "byte", "h", "x7f", "else", "int", "h1", "str", "toCharArray", "str", "length", "int", "h2", "str", "toCharArray", "str", "length", "h1", "int", "h", "h1", "h2", "return", "byte", "h", "x7f" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\strings\\CodeUtils.java",
  "startLine" : 226,
  "endLine" : 253,
  "identifiers" : [ "for", "int", "i", "i", "sa", "length", "i", "sa", "i", "i", "for", "int", "i", "i", "tokens", "size", "i", "for", "int", "j", "i", "j", "tokens", "size", "j", "List", "Byte", "suffix1", "tokens", "subList", "sa", "i", "tokens", "size", "List", "Byte", "suffix2", "tokens", "subList", "sa", "j", "tokens", "size", "int", "size", "Math", "min", "suffix1", "size", "suffix2", "size", "boolean", "result", "suffix1", "size", "suffix2", "size", "for", "int", "m", "m", "size", "m", "if", "suffix1", "get", "m", "suffix2", "get", "m", "result", "true", "break", "else", "if", "suffix1", "get", "m", "suffix2", "get", "m", "result", "false", "break", "if", "result", "int", "tmp", "sa", "i", "sa", "i", "sa", "j", "sa", "j", "tmp" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\strings\\CodeUtils.java",
  "startLine" : 258,
  "endLine" : 272,
  "identifiers" : [ "for", "int", "i", "i", "sa", "length", "i", "List", "Byte", "pre", "tokens", "subList", "sa", "i", "tokens", "size", "List", "Byte", "cur", "tokens", "subList", "sa", "i", "tokens", "size", "int", "cnt", "int", "size", "Math", "min", "pre", "size", "cur", "size", "for", "int", "j", "j", "size", "j", "if", "pre", "get", "j", "equals", "cur", "get", "j", "break", "cnt", "height", "i", "cnt" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\strings\\CodeUtils.java",
  "startLine" : 278,
  "endLine" : 288,
  "identifiers" : [ "buildSuffixArray", "calculateHeight", "List", "Integer", "results", "new", "ArrayList", "for", "int", "i", "i", "height", "length", "i", "results", "add", "sa", "i", "results", "add", "sa", "i", "results", "add", "height", "i", "return", "results" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\strings\\DiffUtils.java",
  "startLine" : 21,
  "endLine" : 32,
  "identifiers" : [ "Patch", "String", "patch", "difflib", "DiffUtils", "diff", "original", "revised", "List", "String", "res", "new", "ArrayList", "for", "Delta", "String", "delta", "patch", "getDeltas", "int", "s1", "delta", "getOriginal", "getPosition", "int", "e1", "s1", "delta", "getOriginal", "getLines", "size", "int", "s2", "delta", "getRevised", "getPosition", "int", "e2", "s2", "delta", "getRevised", "getLines", "size", "res", "add", "String", "format", "s1", "e1", "s2", "e2", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\strings\\StringUtils.java",
  "startLine" : 13,
  "endLine" : 40,
  "identifiers" : [ "List", "Byte", "allTokens", "new", "ArrayList", "allTokens", "addAll", "tokensX", "allTokens", "addAll", "tokensY", "Set", "Byte", "tokenSet", "new", "HashSet", "allTokens", "Map", "Byte", "Integer", "tokenMapX", "new", "HashMap", "Map", "Byte", "Integer", "tokenMapY", "new", "HashMap", "for", "Byte", "b", "tokensX", "tokenMapX", "put", "b", "tokenMapX", "getOrDefault", "b", "for", "Byte", "b", "tokensY", "tokenMapY", "put", "b", "tokenMapY", "getOrDefault", "b", "List", "Integer", "vecX", "new", "ArrayList", "List", "Integer", "vecY", "new", "ArrayList", "for", "Byte", "b", "tokenSet", "vecX", "add", "tokenMapX", "getOrDefault", "b", "vecY", "add", "tokenMapY", "getOrDefault", "b", "long", "x", "y", "xy", "for", "int", "i", "i", "tokenSet", "size", "i", "xy", "vecX", "get", "i", "vecY", "get", "i", "x", "vecX", "get", "i", "vecX", "get", "i", "y", "vecY", "get", "i", "vecY", "get", "i", "return", "xy", "Math", "sqrt", "x", "Math", "sqrt", "y" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\strings\\StringUtils.java",
  "startLine" : 48,
  "endLine" : 70,
  "identifiers" : [ "int", "matrix", "new", "int", "tokensY", "length", "for", "int", "i", "i", "matrix", "length", "i", "matrix", "i", "i", "for", "int", "i", "i", "matrix", "length", "i", "matrix", "i", "i", "for", "int", "i", "i", "tokensX", "length", "i", "for", "int", "j", "j", "matrix", "length", "j", "Byte", "b1", "tokensX", "i", "Byte", "b2", "tokensY", "j", "int", "leftTop", "b1", "equals", "b2", "matrix", "j", "matrix", "j", "int", "left", "matrix", "j", "int", "top", "matrix", "j", "matrix", "j", "Math", "min", "leftTop", "Math", "min", "left", "top", "System", "arraycopy", "matrix", "matrix", "matrix", "length", "Arrays", "fill", "matrix", "matrix", "i", "return", "matrix", "matrix", "length" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\strings\\SuffixArray.java",
  "startLine" : 27,
  "endLine" : 54,
  "identifiers" : [ "for", "int", "i", "i", "sa", "length", "i", "sa", "i", "i", "for", "int", "i", "i", "tokens", "size", "i", "for", "int", "j", "i", "j", "tokens", "size", "j", "List", "Byte", "suffix1", "tokens", "subList", "sa", "i", "tokens", "size", "List", "Byte", "suffix2", "tokens", "subList", "sa", "j", "tokens", "size", "int", "size", "Math", "min", "suffix1", "size", "suffix2", "size", "boolean", "result", "suffix1", "size", "suffix2", "size", "for", "int", "m", "m", "size", "m", "if", "suffix1", "get", "m", "suffix2", "get", "m", "result", "true", "break", "else", "if", "suffix1", "get", "m", "suffix2", "get", "m", "result", "false", "break", "if", "result", "int", "tmp", "sa", "i", "sa", "i", "sa", "j", "sa", "j", "tmp" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\strings\\SuffixArray.java",
  "startLine" : 59,
  "endLine" : 73,
  "identifiers" : [ "for", "int", "i", "i", "sa", "length", "i", "List", "Byte", "pre", "tokens", "subList", "sa", "i", "tokens", "size", "List", "Byte", "cur", "tokens", "subList", "sa", "i", "tokens", "size", "int", "cnt", "int", "size", "Math", "min", "pre", "size", "cur", "size", "for", "int", "j", "j", "size", "j", "if", "pre", "get", "j", "equals", "cur", "get", "j", "break", "cnt", "height", "i", "cnt" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\main\\java\\strings\\SuffixArray.java",
  "startLine" : 79,
  "endLine" : 91,
  "identifiers" : [ "buildSuffixArray", "calculateHeight", "List", "Result", "results", "new", "ArrayList", "for", "int", "i", "i", "height", "length", "i", "Result", "result", "new", "Result", "result", "firstIndex", "sa", "i", "result", "secondIndex", "sa", "i", "result", "length", "height", "i", "results", "add", "result", "return", "results" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\test\\java\\code\\JavaCodeUtilsTest.java",
  "startLine" : 17,
  "endLine" : 32,
  "identifiers" : [ "ObjectMapper", "objectMapper", "new", "ObjectMapper", "String", "measureIndexPath", "File", "measureIndexFile", "new", "File", "measureIndexPath", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "measureIndexFile", "String", "line", "null", "List", "MethodSignature", "signatures", "new", "ArrayList", "while", "line", "reader", "readLine", "null", "String", "tmp", "line", "split", "MethodSignature", "methodSignature", "JavaCodeUtils", "parseMethodSignature", "tmp", "Integer", "parseInt", "tmp", "signatures", "add", "methodSignature" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\test\\java\\code\\JavaCodeUtilsTest.java",
  "startLine" : 35,
  "endLine" : 49,
  "identifiers" : [ "ObjectMapper", "objectMapper", "new", "ObjectMapper", "String", "measureIndexPath", "File", "measureIndexFile", "new", "File", "measureIndexPath", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "measureIndexFile", "String", "line", "null", "List", "MethodBody", "bodies", "new", "ArrayList", "while", "line", "reader", "readLine", "null", "String", "tmp", "line", "split", "MethodBody", "methodBody", "JavaCodeUtils", "parseMethodBody", "tmp", "Integer", "parseInt", "tmp", "Integer", "parseInt", "tmp", "bodies", "add", "methodBody" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\test\\java\\strings\\DiffTests.java",
  "startLine" : 14,
  "endLine" : 25,
  "identifiers" : [ "char", "c1", "char", "c2", "t", "char", "c3", "r", "char", "c4", "n", "char", "c5", "a", "System", "out", "println", "Character", "isWhitespace", "c1", "System", "out", "println", "Character", "isWhitespace", "c2", "System", "out", "println", "Character", "isWhitespace", "c3", "System", "out", "println", "Character", "isWhitespace", "c4", "System", "out", "println", "Character", "isWhitespace", "c5" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\test\\java\\strings\\StringUtilTests.java",
  "startLine" : 14,
  "endLine" : 29,
  "identifiers" : [ "List", "Byte", "tokenX", "new", "ArrayList", "for", "int", "i", "i", "i", "tokenX", "add", "byte", "i", "List", "Byte", "tokenY", "new", "ArrayList", "for", "int", "i", "i", "i", "tokenY", "add", "byte", "i", "for", "int", "i", "i", "i", "tokenY", "add", "byte", "i", "double", "similarity", "StringUtils", "cosineSimilarity", "tokenX", "tokenY", "System", "out", "println", "similarity" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\test\\java\\strings\\StringUtilTests.java",
  "startLine" : 32,
  "endLine" : 38,
  "identifiers" : [ "String", "a", "String", "b", "int", "dist", "StringUtils", "editDistance", "a", "getBytes", "b", "getBytes", "System", "out", "printf", "dist", "dist", "f", "a", "length", "b", "length" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\test\\java\\strings\\StringUtilTests.java",
  "startLine" : 41,
  "endLine" : 51,
  "identifiers" : [ "int", "nums", "new", "int", "ObjectMapper", "objectMapper", "new", "ObjectMapper", "String", "json", "objectMapper", "writerWithDefaultPrettyPrinter", "writeValueAsString", "nums", "System", "out", "println", "json", "length", "XmlMapper", "xmlMapper", "new", "XmlMapper", "String", "xml", "xmlMapper", "writerWithDefaultPrettyPrinter", "writeValueAsString", "nums", "System", "out", "println", "xml", "length" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\test\\java\\strings\\SuffixArrayTests.java",
  "startLine" : 30,
  "endLine" : 36,
  "identifiers" : [ "long", "start", "System", "currentTimeMillis", "suffixArray", "init", "tokens", "List", "SuffixArray", "Result", "results", "suffixArray", "process", "long", "end", "System", "currentTimeMillis", "System", "out", "printf", "results", "size", "end", "start", "e3" ]
}, {
  "path" : "d:\\GitRepo\\Algorithm\\src\\test\\java\\thread\\MultiThreadTests.java",
  "startLine" : 16,
  "endLine" : 24,
  "identifiers" : [ "ExecutorService", "executorService", "Executors", "newFixedThreadPool", "for", "int", "i", "i", "i", "executorService", "execute", "new", "Processor", "latch", "await", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution\\src\\main\\java\\com\\fudan\\config\\Config.java",
  "startLine" : 29,
  "endLine" : 40,
  "identifiers" : [ "if", "new", "File", "CONFIG_FILE", "exists", "properties", "load", "new", "FileReader", "CONFIG_FILE", "groupFolder", "properties", "getProperty", "blobPrefix", "properties", "getProperty", "outputFolder", "properties", "getProperty", "else", "System", "out", "printf", "CONFIG_FILE", "save", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution\\src\\main\\java\\com\\fudan\\entity\\CommitRecord.java",
  "startLine" : 39,
  "endLine" : 52,
  "identifiers" : [ "this", "groupId", "groupId", "this", "startLine", "startLine", "this", "endLine", "endLine", "this", "snippetStartLine", "snippetStartLine", "this", "snippetEndLine", "snippetEndLine", "this", "blobId", "blobId", "this", "commitId", "commitId", "this", "date", "date", "this", "realPath", "realPath", "this", "submitter", "submitter", "this", "status", "status", "this", "commitMessage", "commitMessage" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution\\src\\main\\java\\com\\fudan\\Main.java",
  "startLine" : 13,
  "endLine" : 55,
  "identifiers" : [ "long", "start", "System", "currentTimeMillis", "System", "out", "println", "Config", "load", "System", "out", "println", "File", "filePathDir", "new", "File", "Config", "groupFolder", "if", "filePathDir", "isFile", "System", "out", "printf", "Config", "groupFolder", "System", "exit", "File", "subDirs", "filePathDir", "listFiles", "if", "subDirs", "null", "subDirs", "length", "System", "out", "printf", "Config", "groupFolder", "System", "exit", "File", "outputDir", "new", "File", "Config", "outputFolder", "if", "outputDir", "exists", "outputDir", "mkdir", "System", "out", "println", "for", "File", "dir", "subDirs", "File", "subFiles", "dir", "listFiles", "if", "subFiles", "null", "subFiles", "length", "continue", "String", "files", "new", "String", "subFiles", "length", "for", "int", "i", "i", "files", "length", "i", "files", "i", "subFiles", "i", "getAbsolutePath", "int", "groupId", "Integer", "parseInt", "dir", "getName", "String", "result", "CloneEvolutionUtil", "transform", "groupId", "files", "String", "outputFile", "outputDir", "getAbsolutePath", "File", "separator", "dir", "getName", "System", "out", "printf", "outputFile", "FileUtil", "write", "outputFile", "result", "false", "long", "end", "System", "currentTimeMillis", "System", "out", "printf", "end", "start", "e3" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution\\src\\main\\java\\com\\fudan\\util\\CloneEvolutionUtil.java",
  "startLine" : 22,
  "endLine" : 171,
  "identifiers" : [ "GroupContentManager", "initGroupContent", "List", "List", "CommitRecord", "fileList", "new", "ArrayList", "Map", "String", "Queue", "CommitRecord", "timeCommitMap", "new", "HashMap", "for", "String", "file", "files", "List", "CommitRecord", "res", "parse", "groupId", "file", "if", "res", "size", "continue", "fileList", "add", "res", "for", "CommitRecord", "ef", "res", "if", "timeCommitMap", "containsKey", "ef", "getDate", "timeCommitMap", "put", "ef", "getDate", "new", "LinkedBlockingQueue", "timeCommitMap", "get", "ef", "getDate", "add", "ef", "List", "String", "timeList", "new", "ArrayList", "timeCommitMap", "keySet", "Collections", "sort", "timeList", "new", "Comparator", "String", "Override", "public", "int", "compare", "String", "o1", "String", "o2", "return", "DateUtil", "compare", "o1", "o2", "List", "VisualCommitInfo", "resultList", "new", "ArrayList", "boolean", "isBorn", "new", "boolean", "fileList", "size", "Arrays", "fill", "isBorn", "false", "List", "String", "existCommitId", "new", "ArrayList", "for", "String", "time", "timeList", "int", "id", "VisualCommitInfo", "result", "new", "VisualCommitInfo", "result", "setDate", "time", "CommitRecord", "currentCommit", "timeCommitMap", "get", "time", "poll", "if", "existCommitId", "contains", "currentCommit", "getCommitId", "continue", "existCommitId", "add", "currentCommit", "getCommitId", "result", "setCommitId", "currentCommit", "getCommitId", "result", "setSubmitter", "currentCommit", "getSubmitter", "result", "setCommitMessage", "currentCommit", "getCommitMessage", "int", "changeCnt", "for", "int", "i", "i", "fileList", "size", "i", "List", "CommitRecord", "commitRecords", "fileList", "get", "i", "CommitRecord", "commitRecord", "getRecord", "commitRecords", "time", "result", "getCommitId", "if", "commitRecord", "null", "CommitRecord", "tmp", "new", "CommitRecord", "tmp", "setInstanceNumber", "id", "tmp", "setRealPath", "commitRecords", "get", "getRealPath", "tmp", "setGroupId", "commitRecords", "get", "getGroupId", "if", "isBorn", "i", "tmp", "setStatus", "tmp", "setStartLine", "commitRecords", "get", "getStartLine", "tmp", "setEndLine", "commitRecords", "get", "getEndLine", "tmp", "setSnippetStartLine", "commitRecords", "get", "getSnippetStartLine", "tmp", "setSnippetEndLine", "commitRecords", "get", "getSnippetEndLine", "result", "getCodes", "add", "tmp", "else", "isBorn", "i", "true", "if", "commitRecord", "getStatus", "equals", "CommitRecord", "tmp", "new", "CommitRecord", "tmp", "setInstanceNumber", "id", "tmp", "setRealPath", "commitRecord", "getRealPath", "tmp", "setStatus", "tmp", "setGroupId", "commitRecord", "getGroupId", "tmp", "setStartLine", "commitRecord", "getStartLine", "tmp", "setEndLine", "commitRecord", "getEndLine", "tmp", "setSnippetStartLine", "commitRecord", "getSnippetStartLine", "tmp", "setSnippetEndLine", "commitRecord", "getSnippetEndLine", "result", "getCodes", "add", "tmp", "continue", "CommitRecord", "evolutionRecord", "new", "CommitRecord", "evolutionRecord", "setStartLine", "commitRecord", "getStartLine", "evolutionRecord", "setEndLine", "commitRecord", "getEndLine", "evolutionRecord", "setSnippetStartLine", "commitRecord", "getSnippetStartLine", "evolutionRecord", "setSnippetEndLine", "commitRecord", "getSnippetEndLine", "int", "index", "commitRecords", "indexOf", "commitRecord", "CommitRecord", "preRecord", "null", "if", "index", "preRecord", "commitRecords", "get", "index", "else", "preRecord", "commitRecord", "try", "String", "blobId", "preRecord", "getBlobId", "int", "startLine", "preRecord", "getSnippetStartLine", "int", "endLine", "preRecord", "getSnippetEndLine", "String", "preCode", "GroupContentManager", "getContentByBlobId", "blobId", "startLine", "endLine", "evolutionRecord", "setPreCode", "preCode", "catch", "Exception", "e", "evolutionRecord", "setPreCode", "if", "commitRecord", "getStatus", "equals", "evolutionRecord", "setCurCode", "else", "try", "String", "blobId", "commitRecord", "getBlobId", "int", "startLine", "commitRecord", "getSnippetStartLine", "int", "endLine", "commitRecord", "getSnippetEndLine", "String", "curCode", "GroupContentManager", "getContentByBlobId", "blobId", "startLine", "endLine", "evolutionRecord", "setCurCode", "curCode", "catch", "Exception", "e", "evolutionRecord", "setCurCode", "if", "preRecord", "commitRecord", "evolutionRecord", "getPreCode", "equals", "evolutionRecord", "getCurCode", "CommitRecord", "tmp", "new", "CommitRecord", "tmp", "setInstanceNumber", "id", "tmp", "setRealPath", "commitRecord", "getRealPath", "tmp", "setStatus", "tmp", "setGroupId", "commitRecord", "getGroupId", "tmp", "setStartLine", "commitRecord", "getStartLine", "tmp", "setEndLine", "commitRecord", "getEndLine", "tmp", "setSnippetStartLine", "commitRecord", "getSnippetStartLine", "tmp", "setSnippetEndLine", "commitRecord", "getSnippetEndLine", "result", "getCodes", "add", "tmp", "continue", "changeCnt", "evolutionRecord", "setStatus", "commitRecord", "getStatus", "evolutionRecord", "setRealPath", "commitRecord", "getRealPath", "evolutionRecord", "setInstanceNumber", "id", "evolutionRecord", "setGroupId", "commitRecord", "getGroupId", "result", "getCodes", "add", "evolutionRecord", "if", "changeCnt", "resultList", "add", "result", "GroupContentManager", "clear", "return", "JSONObject", "toJSONString", "resultList" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution\\src\\main\\java\\com\\fudan\\util\\CloneEvolutionUtil.java",
  "startLine" : 180,
  "endLine" : 222,
  "identifiers" : [ "try", "List", "CommitRecord", "records", "new", "ArrayList", "List", "String", "lines", "FileUtil", "readLines", "file", "for", "String", "line", "lines", "String", "info", "line", "split", "if", "info", "length", "continue", "String", "realPath", "info", "int", "startLine", "Integer", "parseInt", "info", "int", "endLine", "Integer", "parseInt", "info", "int", "snippetStartLine", "Integer", "parseInt", "info", "int", "snippetEndLine", "Integer", "parseInt", "info", "String", "status", "info", "String", "commitId", "info", "String", "blobId", "info", "String", "commitTime", "info", "String", "submitter", "info", "String", "commitMessage", "if", "info", "length", "commitMessage", "info", "else", "if", "info", "length", "String", "tmp", "Arrays", "copyOfRange", "info", "info", "length", "commitMessage", "String", "join", "tmp", "CommitRecord", "record", "new", "CommitRecord", "groupId", "startLine", "endLine", "snippetStartLine", "snippetEndLine", "blobId", "commitId", "commitTime", "realPath", "submitter", "status", "commitMessage", "records", "add", "record", "Collections", "sort", "records", "new", "Comparator", "CommitRecord", "Override", "public", "int", "compare", "CommitRecord", "o1", "CommitRecord", "o2", "return", "DateUtil", "compare", "o1", "getDate", "o2", "getDate", "return", "records", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 19,
  "endLine" : 28,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "List", "String", "lines", "new", "ArrayList", "String", "line", "null", "while", "line", "reader", "readLine", "null", "lines", "add", "line", "reader", "close", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 37,
  "endLine" : 43,
  "identifiers" : [ "BufferedWriter", "writer", "new", "BufferedWriter", "new", "OutputStreamWriter", "new", "FileOutputStream", "file", "append", "StandardCharsets", "UTF_8", "writer", "write", "content", "writer", "newLine", "writer", "flush", "writer", "close" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution\\src\\main\\java\\com\\fudan\\util\\GitUtil.java",
  "startLine" : 48,
  "endLine" : 75,
  "identifiers" : [ "try", "filePath", "getVersedRelativePath", "filePath", "ObjectId", "lastCommitId", "repository", "resolve", "version", "revWalk", "reset", "RevCommit", "commit", "revWalk", "parseCommit", "lastCommitId", "RevTree", "tree", "commit", "getTree", "treeWalk", "reset", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "filePath", "if", "treeWalk", "next", "return", "new", "ArrayList", "ObjectId", "objectId", "treeWalk", "getObjectId", "ObjectLoader", "loader", "repository", "open", "objectId", "ByteArrayOutputStream", "outputStream", "new", "ByteArrayOutputStream", "loader", "copyTo", "outputStream", "String", "content", "outputStream", "toString", "List", "String", "lines", "Arrays", "asList", "content", "split", "outputStream", "close", "return", "lines", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution\\src\\main\\java\\com\\fudan\\util\\GitUtil.java",
  "startLine" : 83,
  "endLine" : 104,
  "identifiers" : [ "String", "blobId", "null", "try", "realPath", "getVersedRelativePath", "realPath", "ObjectId", "lastCommitId", "repository", "resolve", "commitId", "revWalk", "reset", "RevCommit", "commit", "revWalk", "parseCommit", "lastCommitId", "RevTree", "tree", "commit", "getTree", "treeWalk", "reset", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "realPath", "if", "treeWalk", "next", "return", "null", "ObjectId", "objectId", "treeWalk", "getObjectId", "blobId", "objectId", "getName", "catch", "Exception", "e", "e", "printStackTrace", "return", "blobId" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution\\src\\main\\java\\com\\fudan\\util\\GroupContentManager.java",
  "startLine" : 16,
  "endLine" : 39,
  "identifiers" : [ "if", "blobId", "null", "blobId", "isEmpty", "return", "if", "groupContentInfo", "contentMap", "containsKey", "blobId", "String", "blobPath", "PathUtil", "getBlobPathByBlobId", "blobId", "try", "groupContentInfo", "contentMap", "put", "blobId", "FileUtil", "readLines", "blobPath", "catch", "IOException", "e", "e", "printStackTrace", "StringBuilder", "builder", "new", "StringBuilder", "List", "String", "content", "groupContentInfo", "contentMap", "get", "blobId", "for", "int", "i", "i", "content", "size", "i", "if", "i", "endLine", "break", "if", "i", "startLine", "i", "endLine", "builder", "append", "content", "get", "i", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\bean\\CommitRecord.java",
  "startLine" : 52,
  "endLine" : 62,
  "identifiers" : [ "this", "id", "id", "this", "groupId", "groupId", "this", "methodId", "methodId", "this", "path", "path", "this", "startLine", "startLine", "this", "endLine", "endLine", "this", "blobId", "blobId", "this", "realPath", "realPath", "this", "methodName", "methodName" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\bean\\CommitRecord.java",
  "startLine" : 64,
  "endLine" : 78,
  "identifiers" : [ "this", "id", "id", "this", "groupId", "groupId", "this", "methodId", "methodId", "this", "path", "path", "this", "startLine", "startLine", "this", "endLine", "endLine", "this", "blobId", "blobId", "this", "commitId", "commitId", "this", "date", "date", "this", "authorDate", "authorDate", "this", "realPath", "realPath", "this", "methodName", "methodName", "this", "submitter", "submitter" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\bean\\CommitRecord.java",
  "startLine" : 248,
  "endLine" : 257,
  "identifiers" : [ "CommitRecord", "other", "new", "CommitRecord", "id", "groupId", "methodId", "path", "startLine", "endLine", "blobId", "commitId", "date", "authorDate", "realPath", "methodName", "submitter", "other", "setPrevMethodId", "prevMethodId", "other", "setNextMethodId", "nextMethodId", "other", "setInstanceNumber", "instanceNumber", "other", "setStatus", "status", "other", "setRepoName", "repoName", "other", "setIsCurCommit", "isCurCommit", "return", "other" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\config\\Config.java",
  "startLine" : 36,
  "endLine" : 58,
  "identifiers" : [ "properties", "setProperty", "DRIVER", "properties", "setProperty", "URL", "properties", "setProperty", "USERNAME", "properties", "setProperty", "PASSWORD", "properties", "setProperty", "INITIAL_SIZE", "toString", "properties", "setProperty", "MAX_ACTIVE", "toString", "properties", "setProperty", "TABLE", "properties", "setProperty", "PROJECT", "properties", "setProperty", "BLOB_PREFIX", "properties", "setProperty", "COMMIT_INFO", "properties", "setProperty", "BLOB_COMMIT_PREFIX", "properties", "setProperty", "MAX_INSTANCE", "properties", "setProperty", "START_GROUP_ID", "properties", "setProperty", "END_GROUP_ID", "properties", "setProperty", "DELETE_FILE_INFO", "properties", "setProperty", "THREAD_NUMBER", "properties", "setProperty", "IS_MULTI", "properties", "setProperty", "LANGUAGE", "properties", "setProperty", "BLOB_SNAPSHOT_MAP_RESULT", "properties", "store", "new", "FileWriter", "CONFIG_FILE" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\config\\Config.java",
  "startLine" : 60,
  "endLine" : 87,
  "identifiers" : [ "if", "new", "File", "CONFIG_FILE", "exists", "System", "out", "printf", "CONFIG_FILE", "save", "System", "exit", "properties", "load", "new", "FileReader", "CONFIG_FILE", "DRIVER", "properties", "getProperty", "URL", "properties", "getProperty", "USERNAME", "properties", "getProperty", "PASSWORD", "properties", "getProperty", "INITIAL_SIZE", "Integer", "parseInt", "properties", "getProperty", "MAX_ACTIVE", "Integer", "parseInt", "properties", "getProperty", "TABLE", "properties", "getProperty", "PROJECT", "properties", "getProperty", "BLOB_PREFIX", "properties", "getProperty", "COMMIT_INFO", "properties", "getProperty", "BLOB_COMMIT_PREFIX", "properties", "getProperty", "MAX_INSTANCE", "properties", "getProperty", "START_GROUP_ID", "Integer", "parseInt", "properties", "getProperty", "END_GROUP_ID", "Integer", "parseInt", "properties", "getProperty", "DELETE_FILE_INFO", "properties", "getProperty", "THREAD_NUMBER", "Integer", "parseInt", "properties", "getProperty", "IS_MULTI", "properties", "getProperty", "LANGUAGE", "properties", "getProperty", "BLOB_SNAPSHOT_MAP_RESULT", "properties", "getProperty" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\Main.java",
  "startLine" : 29,
  "endLine" : 64,
  "identifiers" : [ "System", "out", "println", "try", "Config", "load", "catch", "IOException", "e", "e", "printStackTrace", "try", "System", "out", "println", "InitialProcessor", "initRawcommitList", "InitialProcessor", "initDeletedFileList", "InitialProcessor", "initSnapshotBlobMapper", "catch", "IOException", "e", "e", "printStackTrace", "try", "System", "out", "println", "DruidUtil", "initDataSource", "catch", "SQLException", "e", "e", "printStackTrace", "System", "exit", "if", "Config", "IS_MULTI", "equals", "link", "else", "linkMulti", "RawCommitManager", "destroy", "DeletedFileManager", "destroy", "SnapshotToBlobGroupManager", "destroy", "DruidUtil", "close", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\Main.java",
  "startLine" : 66,
  "endLine" : 156,
  "identifiers" : [ "try", "System", "out", "println", "GitUtil", "initRepository", "Config", "PROJECT", "File", "resultsDir", "new", "File", "LINK_OUTPUT_DIR", "if", "resultsDir", "exists", "resultsDir", "mkdir", "System", "out", "println", "GroupContentManager", "initGroupContent", "for", "Map", "Entry", "String", "List", "String", "entry", "SnapshotToBlobGroupManager", "snapshotBlobGroupIdMapper", "entrySet", "List", "String", "blobGroupIds", "entry", "getValue", "String", "finalGroupId", "blobGroupIds", "get", "List", "CommitRecord", "totalRecords", "new", "ArrayList", "for", "String", "groupId", "blobGroupIds", "List", "CommitRecord", "commitRecords", "CommitRecordUtil", "load", "Integer", "parseInt", "groupId", "if", "groupId", "equals", "finalGroupId", "for", "CommitRecord", "instance", "commitRecords", "if", "instance", "getGroupId", "Integer", "parseInt", "groupId", "instance", "setGroupId", "Integer", "parseInt", "finalGroupId", "totalRecords", "addAll", "commitRecords", "if", "totalRecords", "size", "System", "out", "printf", "finalGroupId", "continue", "List", "CommitInfo", "commitInfos", "CommitInfoUtil", "transform", "totalRecords", "CommitInfoUtil", "mapping", "commitInfos", "VisualDataUtil", "transformData", "commitInfos", "VisualDataUtil", "checkCodeStatus", "VisualDataUtil", "generateVisualData", "String", "outputFile1", "String", "format", "LINK_OUTPUT_DIR", "finalGroupId", "FileUtil", "write", "outputFile1", "JSONObject", "toJSONString", "VisualDataUtil", "visualCommitInfoList", "false", "GroupContentManager", "clear", "System", "out", "println", "GitUtil", "close", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\Main.java",
  "startLine" : 161,
  "endLine" : 400,
  "identifiers" : [ "try", "System", "out", "println", "GitUtil", "initRepository", "Config", "PROJECT", "File", "resultsDir", "new", "File", "LINK_OUTPUT_DIR", "if", "resultsDir", "exists", "resultsDir", "mkdir", "int", "maxGroupId", "if", "Config", "END_GROUP_ID", "System", "out", "println", "maxGroupId", "CommitInfoUtil", "findMaxGroupId", "if", "maxGroupId", "System", "out", "println", "System", "exit", "System", "out", "printf", "maxGroupId", "else", "maxGroupId", "Config", "END_GROUP_ID", "System", "out", "println", "GroupContentManager", "initGroupContent", "for", "int", "groupId", "Config", "START_GROUP_ID", "groupId", "maxGroupId", "groupId", "try", "System", "out", "printf", "groupId", "print", "double", "groupId", "double", "maxGroupId", "List", "CommitRecord", "totalRecords", "CommitRecordUtil", "load", "groupId", "if", "totalRecords", "size", "System", "out", "printf", "groupId", "continue", "Map", "String", "List", "CommitRecord", "repoMap", "new", "HashMap", "for", "CommitRecord", "record", "totalRecords", "String", "repoName", "record", "getRepoName", "if", "repoMap", "containsKey", "repoName", "repoMap", "put", "repoName", "new", "ArrayList", "repoMap", "get", "repoName", "add", "record", "System", "out", "println", "repoMap", "size", "Map", "String", "List", "VisualCommitInfo", "resultMap", "new", "HashMap", "for", "String", "repo", "repoMap", "keySet", "List", "CommitRecord", "records", "repoMap", "get", "repo", "List", "CommitInfo", "commitInfos", "CommitInfoUtil", "transform", "records", "CommitInfoUtil", "mapping", "commitInfos", "VisualDataUtil", "transformData", "commitInfos", "int", "resultInstanceSize", "resultInstanceSize", "VisualDataUtil", "instanceList", "size", "if", "resultInstanceSize", "System", "out", "println", "resultInstanceSize", "records", "size", "System", "out", "println", "continue", "VisualDataUtil", "checkCodeStatus", "VisualDataUtil", "generateVisualData", "resultMap", "put", "repo", "new", "ArrayList", "VisualDataUtil", "visualCommitInfoList", "Map", "String", "Integer", "instanceNumMap", "new", "HashMap", "for", "String", "repo", "resultMap", "keySet", "List", "VisualCommitInfo", "commitInfos", "resultMap", "get", "repo", "if", "commitInfos", "size", "continue", "int", "instanceNum", "commitInfos", "get", "getCodes", "size", "instanceNumMap", "put", "repo", "instanceNum", "int", "mergedInstanceNum", "instanceNumMap", "values", "stream", "mapToInt", "Integer", "intValue", "sum", "List", "VisualCommitInfo", "resultCommitInfos", "null", "int", "blankCounter", "for", "String", "repo", "instanceNumMap", "keySet", "if", "resultCommitInfos", "null", "resultCommitInfos", "resultMap", "get", "repo", "blankCounter", "instanceNumMap", "get", "repo", "for", "VisualCommitInfo", "commitInfo", "resultCommitInfos", "for", "int", "i", "i", "mergedInstanceNum", "blankCounter", "i", "CommitRecord", "record", "new", "CommitRecord", "record", "setStatus", "commitInfo", "getCodes", "add", "record", "continue", "List", "VisualCommitInfo", "currentCommitInfos", "resultMap", "get", "repo", "for", "VisualCommitInfo", "commitInfo", "currentCommitInfos", "List", "CommitRecord", "codes", "commitInfo", "getCodes", "for", "int", "i", "i", "blankCounter", "i", "CommitRecord", "record", "new", "CommitRecord", "record", "setStatus", "codes", "add", "record", "blankCounter", "instanceNumMap", "get", "repo", "for", "VisualCommitInfo", "commitInfo", "currentCommitInfos", "for", "int", "i", "i", "mergedInstanceNum", "blankCounter", "i", "CommitRecord", "record", "new", "CommitRecord", "record", "setStatus", "commitInfo", "getCodes", "add", "record", "resultCommitInfos", "addAll", "currentCommitInfos", "if", "resultCommitInfos", "null", "resultCommitInfos", "size", "continue", "resultCommitInfos", "sort", "new", "Comparator", "VisualCommitInfo", "Override", "public", "int", "compare", "VisualCommitInfo", "o1", "VisualCommitInfo", "o2", "return", "DateUtil", "compare", "o1", "getDate", "o2", "getDate", "for", "VisualCommitInfo", "commitInfo", "resultCommitInfos", "List", "CommitRecord", "records", "commitInfo", "getCodes", "int", "insNum", "for", "CommitRecord", "commitRecord", "records", "commitRecord", "setInstanceNumber", "insNum", "Map", "Integer", "Integer", "insBornMap", "new", "HashMap", "Map", "Integer", "Integer", "insDeleteMap", "new", "HashMap", "Map", "Integer", "Integer", "insPreGropuIdMap", "new", "HashMap", "for", "int", "i", "i", "mergedInstanceNum", "i", "insBornMap", "put", "i", "insDeleteMap", "put", "i", "insPreGropuIdMap", "put", "i", "for", "VisualCommitInfo", "commitInfo", "resultCommitInfos", "List", "CommitRecord", "records", "commitInfo", "getCodes", "for", "CommitRecord", "re", "records", "int", "instanceNumber", "re", "getInstanceNumber", "if", "re", "getStatus", "equals", "insBornMap", "put", "instanceNumber", "if", "re", "getStatus", "equals", "insDeleteMap", "put", "instanceNumber", "if", "insBornMap", "get", "instanceNumber", "insDeleteMap", "get", "instanceNumber", "if", "re", "getStatus", "equals", "re", "setGroupId", "insPreGropuIdMap", "get", "instanceNumber", "insPreGropuIdMap", "put", "instanceNumber", "re", "getGroupId", "Map", "Integer", "String", "realPathMap", "new", "HashMap", "Map", "Integer", "String", "repoNameMap", "new", "HashMap", "for", "VisualCommitInfo", "commitInfo", "resultCommitInfos", "List", "CommitRecord", "records", "commitInfo", "getCodes", "for", "CommitRecord", "record", "records", "if", "record", "getRealPath", "null", "realPathMap", "containsKey", "record", "getInstanceNumber", "realPathMap", "put", "record", "getInstanceNumber", "record", "getRealPath", "if", "record", "getRepoName", "equals", "repoNameMap", "containsKey", "record", "getInstanceNumber", "repoNameMap", "put", "record", "getInstanceNumber", "record", "getRepoName", "for", "VisualCommitInfo", "commitInfo", "resultCommitInfos", "List", "CommitRecord", "records", "commitInfo", "getCodes", "for", "CommitRecord", "record", "records", "if", "record", "getRepoName", "equals", "record", "setRepoName", "repoNameMap", "get", "record", "getInstanceNumber", "if", "record", "getRealPath", "null", "record", "setRealPath", "realPathMap", "get", "record", "getInstanceNumber", "String", "outputFile", "String", "format", "LINK_OUTPUT_DIR", "groupId", "System", "out", "println", "resultCommitInfos", "size", "resultCommitInfos", "get", "getCodes", "size", "try", "FileUtil", "write", "outputFile", "JSONObject", "toJSONString", "resultCommitInfos", "false", "catch", "Throwable", "e", "System", "out", "println", "groupId", "e", "getClass", "getCanonicalName", "e", "getMessage", "resultCommitInfos", "clear", "catch", "Exception", "e", "e", "printStackTrace", "GroupContentManager", "clear", "System", "out", "println", "GitUtil", "close", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\Main.java",
  "startLine" : 402,
  "endLine" : 410,
  "identifiers" : [ "if", "Double", "compare", "num2", "throw", "new", "RuntimeException", "double", "ratio", "num1", "num2", "NumberFormat", "format", "NumberFormat", "getPercentInstance", "format", "setMaximumFractionDigits", "System", "out", "println", "format", "format", "ratio" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\Manager\\GroupContentManager.java",
  "startLine" : 21,
  "endLine" : 48,
  "identifiers" : [ "if", "blobId", "null", "blobId", "isEmpty", "return", "if", "groupContentInfo", "contentMap", "containsKey", "blobId", "String", "blobPath", "PathUtil", "getBlobPathByBlobId", "blobId", "repoName", "try", "if", "groupContentInfo", "contentMap", "size", "popElement", "groupContentInfo", "contentMap", "put", "blobId", "FileUtil", "readLines", "blobPath", "catch", "IOException", "e", "e", "printStackTrace", "StringBuilder", "builder", "new", "StringBuilder", "List", "String", "content", "groupContentInfo", "contentMap", "get", "blobId", "for", "int", "i", "i", "content", "size", "i", "if", "i", "endLine", "break", "if", "i", "startLine", "i", "endLine", "builder", "append", "content", "get", "i", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\Manager\\GroupContentManager.java",
  "startLine" : 50,
  "endLine" : 73,
  "identifiers" : [ "if", "blobId", "null", "blobId", "isEmpty", "return", "new", "ArrayList", "if", "groupContentInfo", "contentMap", "containsKey", "blobId", "String", "blobPath", "PathUtil", "getBlobPathByBlobId", "blobId", "repoName", "try", "if", "groupContentInfo", "contentMap", "size", "popElement", "groupContentInfo", "contentMap", "put", "blobId", "FileUtil", "readLines", "blobPath", "catch", "IOException", "e", "e", "printStackTrace", "List", "String", "content", "groupContentInfo", "contentMap", "get", "blobId", "return", "content" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\Manager\\GroupContentManagerMT.java",
  "startLine" : 14,
  "endLine" : 37,
  "identifiers" : [ "if", "blobId", "null", "blobId", "isEmpty", "return", "if", "groupContentInfo", "contentMap", "containsKey", "blobId", "String", "blobPath", "PathUtil", "getBlobPathByBlobId", "blobId", "repoName", "try", "groupContentInfo", "contentMap", "put", "blobId", "FileUtil", "readLines", "blobPath", "catch", "IOException", "e", "e", "printStackTrace", "StringBuilder", "builder", "new", "StringBuilder", "List", "String", "content", "groupContentInfo", "contentMap", "get", "blobId", "for", "int", "i", "i", "content", "size", "i", "if", "i", "endLine", "break", "if", "i", "startLine", "i", "endLine", "builder", "append", "content", "get", "i", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\processor\\InitialProcessor.java",
  "startLine" : 19,
  "endLine" : 29,
  "identifiers" : [ "System", "out", "println", "if", "Config", "IS_MULTI", "equals", "initSingleProject", "if", "Config", "IS_MULTI", "equals", "initMultiProject", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\processor\\InitialProcessor.java",
  "startLine" : 31,
  "endLine" : 45,
  "identifiers" : [ "System", "out", "println", "Config", "COMMIT_INFO", "List", "String", "commitList", "FileUtil", "readLines", "Config", "COMMIT_INFO", "int", "lineNumber", "String", "latestCommitId", "for", "String", "line", "commitList", "String", "tempList", "line", "split", "if", "lineNumber", "latestCommitId", "tempList", "RawCommitInfo", "info", "new", "RawCommitInfo", "tempList", "tempList", "tempList", "tempList", "lineNumber", "tempList", "replaceAll", "RawCommitManager", "rawCommitInfoMap", "put", "tempList", "info", "RawCommitManager", "latestCommitId", "latestCommitId" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\processor\\InitialProcessor.java",
  "startLine" : 47,
  "endLine" : 89,
  "identifiers" : [ "System", "out", "println", "Config", "COMMIT_INFO", "File", "commitInfoDir", "new", "File", "Config", "COMMIT_INFO", "if", "commitInfoDir", "exists", "System", "out", "printf", "Config", "COMMIT_INFO", "System", "exit", "File", "projectsDirs", "commitInfoDir", "listFiles", "if", "projectsDirs", "null", "projectsDirs", "length", "System", "out", "printf", "Config", "COMMIT_INFO", "System", "exit", "for", "File", "projectDir", "projectsDirs", "String", "projectName", "projectDir", "getName", "File", "files", "projectDir", "listFiles", "if", "files", "null", "files", "length", "continue", "File", "commitInfoFile", "null", "for", "File", "file", "files", "if", "file", "getName", "equals", "commitInfoFile", "file", "break", "if", "commitInfoFile", "null", "continue", "int", "lineNumber", "List", "String", "commitList", "FileUtil", "readLines", "commitInfoFile", "getAbsolutePath", "String", "latestCommitId", "for", "String", "line", "commitList", "String", "tempList", "line", "split", "if", "lineNumber", "latestCommitId", "tempList", "RawCommitInfo", "info", "new", "RawCommitInfo", "tempList", "tempList", "tempList", "tempList", "lineNumber", "tempList", "replaceAll", "projectName", "RawCommitManager", "rawCommitInfoMap", "put", "tempList", "info", "RawCommitManager", "latestCommitIdMap", "put", "projectName", "latestCommitId" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\processor\\InitialProcessor.java",
  "startLine" : 91,
  "endLine" : 111,
  "identifiers" : [ "try", "List", "String", "mappedId", "FileUtil", "readLines", "Config", "BLOB_SNAPSHOT_MAP_RESULT", "String", "groupZero", "for", "String", "line", "mappedId", "if", "line", "contains", "String", "ids", "line", "split", "if", "ids", "length", "continue", "List", "String", "blobGroupIds", "SnapshotToBlobGroupManager", "snapshotBlobGroupIdMapper", "getOrDefault", "ids", "new", "ArrayList", "if", "groupZero", "equals", "ids", "blobGroupIds", "add", "ids", "SnapshotToBlobGroupManager", "snapshotBlobGroupIdMapper", "put", "ids", "blobGroupIds", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\processor\\InitialProcessor.java",
  "startLine" : 114,
  "endLine" : 125,
  "identifiers" : [ "System", "out", "println", "if", "Config", "IS_MULTI", "equals", "singleProDeletedFile", "if", "Config", "IS_MULTI", "equals", "multiProDeletedFile", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\processor\\InitialProcessor.java",
  "startLine" : 127,
  "endLine" : 135,
  "identifiers" : [ "System", "out", "println", "Config", "DELETE_FILE_INFO", "List", "String", "deletedFileList", "FileUtil", "readLines", "Config", "DELETE_FILE_INFO", "for", "String", "line", "deletedFileList", "String", "tempList", "line", "split", "DeletedFileManager", "deletedFileMapInfo", "dfileMap", "put", "tempList", "tempList" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\processor\\InitialProcessor.java",
  "startLine" : 137,
  "endLine" : 175,
  "identifiers" : [ "System", "out", "println", "Config", "COMMIT_INFO", "File", "commitInfoDir", "new", "File", "Config", "COMMIT_INFO", "if", "commitInfoDir", "exists", "System", "out", "printf", "Config", "COMMIT_INFO", "System", "exit", "File", "projectsDirs", "commitInfoDir", "listFiles", "if", "projectsDirs", "null", "projectsDirs", "length", "System", "out", "printf", "Config", "COMMIT_INFO", "System", "exit", "for", "File", "projectDir", "projectsDirs", "String", "projectName", "projectDir", "getName", "File", "files", "projectDir", "listFiles", "if", "files", "null", "files", "length", "continue", "File", "deleteInfoFile", "null", "for", "File", "file", "files", "if", "file", "getName", "equals", "deleteInfoFile", "file", "break", "if", "deleteInfoFile", "null", "continue", "List", "String", "deletedFileList", "FileUtil", "readLines", "deleteInfoFile", "getAbsolutePath", "for", "String", "line", "deletedFileList", "String", "tempList", "line", "split", "DeletedFileManager", "deletedFileMapInfo", "dfileMap", "put", "tempList", "tempList" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\CommitInfoUtil.java",
  "startLine" : 23,
  "endLine" : 51,
  "identifiers" : [ "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "String", "sql", "String", "format", "Config", "TABLE", "PreparedStatement", "statement", "connection", "prepareStatement", "sql", "ResultSet", "resultSet", "statement", "executeQuery", "int", "maxGroupId", "if", "resultSet", "next", "maxGroupId", "resultSet", "getInt", "try", "resultSet", "close", "statement", "close", "finally", "connection", "recycle", "return", "maxGroupId" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\CommitInfoUtil.java",
  "startLine" : 58,
  "endLine" : 110,
  "identifiers" : [ "Map", "String", "CommitInfo", "commitInfoMap", "new", "HashMap", "for", "CommitRecord", "record", "records", "if", "commitInfoMap", "containsKey", "record", "getCommitId", "CommitInfo", "commitInfo", "new", "CommitInfo", "commitInfo", "setCommitId", "record", "getCommitId", "commitInfo", "setDate", "record", "getDate", "commitInfo", "setSubmitter", "record", "getSubmitter", "commitInfo", "setAuthorDate", "record", "getAuthorDate", "commitInfoMap", "put", "record", "getCommitId", "commitInfo", "if", "record", "getStatus", "equals", "commitInfoMap", "get", "record", "getCommitId", "getRecords", "add", "record", "String", "latestCommitId", "null", "if", "Config", "IS_MULTI", "equals", "latestCommitId", "RawCommitManager", "latestCommitId", "else", "if", "records", "size", "String", "repoName", "records", "get", "getRepoName", "latestCommitId", "RawCommitManager", "latestCommitIdMap", "get", "repoName", "CommitInfo", "commitInfo", "new", "CommitInfo", "commitInfo", "setCommitId", "latestCommitId", "commitInfo", "setDate", "RawCommitManager", "rawCommitInfoMap", "get", "latestCommitId", "date", "commitInfo", "setSubmitter", "RawCommitManager", "rawCommitInfoMap", "get", "latestCommitId", "author", "commitInfo", "setAuthorDate", "RawCommitManager", "rawCommitInfoMap", "get", "latestCommitId", "authorDate", "if", "commitInfoMap", "containsKey", "latestCommitId", "commitInfoMap", "put", "latestCommitId", "commitInfo", "List", "CommitInfo", "commitInfoList", "new", "ArrayList", "commitInfoMap", "values", "Collections", "sort", "commitInfoList", "new", "Comparator", "CommitInfo", "Override", "public", "int", "compare", "CommitInfo", "o1", "CommitInfo", "o2", "int", "lineNumber1", "RawCommitManager", "rawCommitInfoMap", "get", "o1", "getCommitId", "lineNumber", "int", "lineNumber2", "RawCommitManager", "rawCommitInfoMap", "get", "o2", "getCommitId", "lineNumber", "if", "lineNumber1", "lineNumber2", "return", "else", "if", "lineNumber1", "lineNumber2", "return", "else", "return", "return", "commitInfoList" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\CommitInfoUtil.java",
  "startLine" : 116,
  "endLine" : 312,
  "identifiers" : [ "if", "commitInfoList", "size", "return", "int", "instanceNumber", "if", "commitInfoList", "size", "CommitInfo", "currentCommitInfo", "commitInfoList", "get", "for", "int", "k", "k", "currentCommitInfo", "getRecords", "size", "k", "currentCommitInfo", "getRecords", "get", "k", "setStatus", "currentCommitInfo", "getRecords", "get", "k", "setInstanceNumber", "instanceNumber", "instanceNumber", "return", "Map", "String", "List", "CommitRecord", "nextRecordMap", "new", "HashMap", "Map", "String", "List", "CommitRecord", "curRecordMap", "new", "HashMap", "int", "listSize", "commitInfoList", "size", "for", "int", "i", "i", "listSize", "i", "CommitInfo", "currentCommitInfo", "commitInfoList", "get", "i", "CommitInfo", "nextCommitInfo", "commitInfoList", "get", "i", "nextRecordMap", "clear", "curRecordMap", "clear", "for", "int", "n", "n", "nextCommitInfo", "getRecords", "size", "n", "String", "pathAndMethodName", "nextCommitInfo", "getRecords", "get", "n", "getRealPath", "nextCommitInfo", "getRecords", "get", "n", "getMethodName", "nextCommitInfo", "getRecords", "get", "n", "getRepoName", "nextCommitInfo", "getRecords", "get", "n", "getParams", "List", "CommitRecord", "curList", "nextRecordMap", "getOrDefault", "pathAndMethodName", "new", "ArrayList", "curList", "add", "nextCommitInfo", "getRecords", "get", "n", "nextRecordMap", "put", "pathAndMethodName", "curList", "for", "int", "k", "k", "currentCommitInfo", "getRecords", "size", "k", "String", "pathAndMethodName", "currentCommitInfo", "getRecords", "get", "k", "getRealPath", "currentCommitInfo", "getRecords", "get", "k", "getMethodName", "currentCommitInfo", "getRecords", "get", "k", "getRepoName", "currentCommitInfo", "getRecords", "get", "k", "getParams", "List", "CommitRecord", "curList", "curRecordMap", "getOrDefault", "pathAndMethodName", "new", "ArrayList", "curList", "add", "currentCommitInfo", "getRecords", "get", "k", "curRecordMap", "put", "pathAndMethodName", "curList", "for", "int", "m", "m", "currentCommitInfo", "getRecords", "size", "m", "CommitRecord", "record1", "currentCommitInfo", "getRecords", "get", "m", "if", "i", "record1", "setInstanceNumber", "instanceNumber", "instanceNumber", "record1", "setStatus", "if", "i", "record1", "getPrevMethodId", "record1", "setInstanceNumber", "instanceNumber", "instanceNumber", "record1", "setStatus", "if", "record1", "getStatus", "equals", "continue", "boolean", "exist", "false", "String", "pathAndMethodName1", "record1", "getRealPath", "record1", "getMethodName", "record1", "getRepoName", "record1", "getParams", "String", "nextCommitInfoCommitId", "nextCommitInfo", "getCommitId", "String", "dCommitId", "DeletedFileManager", "deletedFileMapInfo", "dfileMap", "get", "record1", "getRealPath", "if", "dCommitId", "null", "dCommitId", "equals", "nextCommitInfoCommitId", "CommitRecord", "other", "record1", "clone", "record1", "setNextMethodId", "other", "getMethodId", "other", "setCommitId", "nextCommitInfoCommitId", "other", "setDate", "nextCommitInfo", "getDate", "other", "setSubmitter", "nextCommitInfo", "getSubmitter", "other", "setPrevMethodId", "record1", "getMethodId", "other", "setGroupId", "other", "setStatus", "other", "setRepoName", "record1", "getRepoName", "other", "setParams", "record1", "getParams", "nextCommitInfo", "getRecords", "add", "other", "continue", "if", "nextRecordMap", "containsKey", "pathAndMethodName1", "exist", "true", "List", "CommitRecord", "curList", "curRecordMap", "get", "pathAndMethodName1", "List", "CommitRecord", "nextList", "nextRecordMap", "get", "pathAndMethodName1", "setRelevantStartLine", "curList", "setRelevantStartLine", "nextList", "CommitRecord", "record3", "null", "if", "curList", "size", "nextList", "size", "record3", "nextList", "get", "else", "String", "params", "record1", "getParams", "String", "curPMP", "pathAndMethodName1", "String", "className", "if", "Config", "LANGUAGE", "equals", "List", "String", "code", "new", "ArrayList", "code", "GroupContentManager", "getFileContentByBlobId", "record1", "getBlobId", "record1", "getRepoName", "className", "getClassName", "code", "record1", "getStartLine", "if", "Config", "LANGUAGE", "equals", "Config", "LANGUAGE", "equals", "className", "Integer", "toString", "record1", "getRelevantStartLine", "curPMP", "className", "className", "for", "int", "k", "k", "nextList", "size", "k", "CommitRecord", "tempRecord", "nextList", "get", "k", "String", "params1", "tempRecord", "getParams", "String", "tempPMP", "tempRecord", "getRealPath", "tempRecord", "getMethodName", "tempRecord", "getRepoName", "params1", "if", "Config", "LANGUAGE", "equals", "List", "String", "code", "new", "ArrayList", "code", "GroupContentManager", "getFileContentByBlobId", "tempRecord", "getBlobId", "tempRecord", "getRepoName", "className", "getClassName", "code", "tempRecord", "getStartLine", "if", "Config", "LANGUAGE", "equals", "Config", "LANGUAGE", "equals", "className", "Integer", "toString", "tempRecord", "getRelevantStartLine", "tempPMP", "className", "if", "tempRecord", "getStatus", "equals", "curPMP", "removeParamsAndClassName", "curPMP", "tempPMP", "removeParamsAndClassName", "tempPMP", "if", "curPMP", "equals", "tempPMP", "record3", "tempRecord", "break", "if", "record3", "null", "record1", "setNextMethodId", "record3", "getMethodId", "record3", "setPrevMethodId", "record1", "getMethodId", "record3", "setInstanceNumber", "record1", "getInstanceNumber", "else", "exist", "false", "if", "exist", "Boolean", "nextRecordExist", "CommitRecordUtil", "isNextRecordExist", "record1", "getBlobId", "record1", "getRealPath", "nextCommitInfo", "getCommitId", "record1", "getRepoName", "String", "date", "nextCommitInfo", "getDate", "String", "authorDate", "nextCommitInfo", "getAuthorDate", "String", "commitId", "nextCommitInfo", "getCommitId", "if", "nextRecordExist", "CommitRecord", "nextRecord", "record1", "clone", "nextRecord", "setStatus", "nextRecord", "setDate", "date", "nextRecord", "setAuthorDate", "authorDate", "nextRecord", "setInstanceNumber", "record1", "getInstanceNumber", "nextRecord", "setCommitId", "commitId", "record1", "setNextMethodId", "nextRecord", "getMethodId", "nextRecord", "setPrevMethodId", "record1", "getMethodId", "nextRecord", "setRepoName", "record1", "getRepoName", "nextRecord", "setParams", "record1", "getParams", "nextCommitInfo", "getRecords", "add", "nextRecord", "else", "CommitRecord", "other", "record1", "clone", "record1", "setNextMethodId", "other", "getMethodId", "other", "setCommitId", "nextCommitInfo", "getCommitId", "other", "setDate", "nextCommitInfo", "getDate", "other", "setSubmitter", "nextCommitInfo", "getSubmitter", "other", "setPrevMethodId", "record1", "getMethodId", "other", "setGroupId", "other", "setStatus", "other", "setRepoName", "record1", "getRepoName", "other", "setParams", "record1", "getParams", "nextCommitInfo", "getRecords", "add", "other", "if", "commitInfoList", "size", "for", "int", "m", "m", "nextCommitInfo", "getRecords", "size", "m", "if", "nextCommitInfo", "getRecords", "get", "m", "getPrevMethodId", "nextCommitInfo", "getRecords", "get", "m", "setStatus", "nextCommitInfo", "getRecords", "get", "m", "setInstanceNumber", "instanceNumber", "instanceNumber", "CommitInfo", "lastCommitInfo", "commitInfoList", "get", "listSize", "for", "int", "m", "m", "lastCommitInfo", "getRecords", "size", "m", "if", "lastCommitInfo", "getRecords", "get", "m", "getPrevMethodId", "lastCommitInfo", "getRecords", "get", "m", "setStatus", "lastCommitInfo", "getRecords", "get", "m", "setInstanceNumber", "instanceNumber", "instanceNumber" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\CommitInfoUtil.java",
  "startLine" : 319,
  "endLine" : 335,
  "identifiers" : [ "String", "className", "List", "String", "classNameList", "new", "ArrayList", "classNameList", "add", "int", "lineNum", "for", "String", "line", "code", "lineNum", "if", "line", "contains", "classNameList", "add", "line", "replace", "if", "lineNum", "startLine", "className", "classNameList", "get", "classNameList", "size", "break", "return", "className" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\CommitInfoUtil.java",
  "startLine" : 337,
  "endLine" : 348,
  "identifiers" : [ "String", "params", "String", "codeArr", "code", "split", "String", "param", "codeArr", "split", "methodName", "try", "params", "param", "replaceAll", "replaceAll", "catch", "Exception", "e", "System", "out", "println", "return", "params" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\CommitInfoUtil.java",
  "startLine" : 351,
  "endLine" : 368,
  "identifiers" : [ "int", "minStartLine", "List", "Integer", "tempList", "new", "ArrayList", "for", "CommitRecord", "record", "recordList", "if", "record", "getStartLine", "minStartLine", "minStartLine", "record", "getStartLine", "for", "CommitRecord", "record", "recordList", "record", "setRelevantStartLine", "record", "getStartLine", "minStartLine", "tempList", "add", "record", "getStartLine", "minStartLine", "Collections", "sort", "tempList", "for", "CommitRecord", "record", "recordList", "int", "rl", "record", "getRelevantStartLine", "record", "setRelevantStartLine", "tempList", "indexOf", "rl" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\CommitRecordUtil.java",
  "startLine" : 27,
  "endLine" : 173,
  "identifiers" : [ "List", "CommitRecord", "records", "new", "ArrayList", "DruidPooledConnection", "connection", "null", "PreparedStatement", "statement", "null", "ResultSet", "resultSet", "null", "try", "int", "insCount", "getInstanceCount", "groupId", "int", "filterCount", "Integer", "parseInt", "Config", "MAX_INSTANCE", "if", "insCount", "filterCount", "filterCount", "try", "FileUtil", "write", "Integer", "toString", "groupId", "true", "catch", "IOException", "e", "e", "printStackTrace", "return", "records", "boolean", "hasSameCommit", "false", "Set", "String", "commitSet", "new", "HashSet", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "String", "sql", "String", "format", "Config", "TABLE", "groupId", "statement", "connection", "prepareStatement", "sql", "Set", "String", "realPathSet", "new", "HashSet", "resultSet", "statement", "executeQuery", "while", "resultSet", "next", "int", "id", "resultSet", "getInt", "int", "methodId", "resultSet", "getInt", "String", "path", "resultSet", "getString", "int", "startLine", "resultSet", "getInt", "int", "endLine", "resultSet", "getInt", "int", "isCurCommit", "resultSet", "getInt", "String", "realPath", "resultSet", "getString", "String", "blobId", "resultSet", "getString", "String", "methodName", "resultSet", "getString", "String", "params", "resultSet", "getString", "String", "repoName", "int", "hashCode", "if", "Config", "IS_MULTI", "equals", "repoName", "resultSet", "getString", "hashCode", "resultSet", "getInt", "if", "methodName", "equals", "continue", "if", "blobId", "null", "continue", "String", "earlyCommit", "getEarlyCommitId", "blobId", "realPath", "repoName", "hashCode", "if", "earlyCommit", "equals", "continue", "if", "commitSet", "contains", "earlyCommit", "hasSameCommit", "true", "if", "hasSameCommit", "commitSet", "add", "earlyCommit", "realPathSet", "add", "realPath", "methodName", "repoName", "params", "CommitRecord", "commitRecord", "new", "CommitRecord", "id", "groupId", "methodId", "path", "startLine", "endLine", "blobId", "earlyCommit", "RawCommitManager", "rawCommitInfoMap", "get", "earlyCommit", "date", "RawCommitManager", "rawCommitInfoMap", "get", "earlyCommit", "authorDate", "realPath", "methodName", "RawCommitManager", "rawCommitInfoMap", "get", "earlyCommit", "author", "if", "repoName", "null", "commitRecord", "setRepoName", "repoName", "commitRecord", "setIsCurCommit", "isCurCommit", "commitRecord", "setParams", "params", "records", "add", "commitRecord", "if", "realPathSet", "size", "hasSameCommit", "records", "clear", "System", "out", "println", "return", "records", "Set", "String", "extraLoaded", "new", "HashSet", "for", "String", "method", "realPathSet", "String", "infos", "method", "split", "if", "DeletedFileManager", "deletedFileMapInfo", "dfileMap", "containsKey", "infos", "CommitRecord", "deletedRecord", "new", "CommitRecord", "String", "dCommitId", "DeletedFileManager", "deletedFileMapInfo", "dfileMap", "get", "infos", "String", "date", "RawCommitManager", "rawCommitInfoMap", "get", "dCommitId", "date", "String", "authorDate", "RawCommitManager", "rawCommitInfoMap", "get", "dCommitId", "authorDate", "String", "author", "RawCommitManager", "rawCommitInfoMap", "get", "dCommitId", "author", "deletedRecord", "setGroupId", "deletedRecord", "setCommitId", "dCommitId", "deletedRecord", "setDate", "date", "deletedRecord", "setAuthorDate", "authorDate", "deletedRecord", "setSubmitter", "author", "deletedRecord", "setMethodName", "infos", "deletedRecord", "setRealPath", "infos", "deletedRecord", "setRepoName", "infos", "deletedRecord", "setParams", "infos", "deletedRecord", "setStatus", "records", "add", "deletedRecord", "System", "out", "printf", "groupId", "infos", "infos", "String", "pathAndMethod", "infos", "infos", "List", "CommitRecord", "extraRecords", "new", "ArrayList", "if", "extraLoaded", "contains", "pathAndMethod", "continue", "else", "extraRecords", "loadExtraRecords", "infos", "infos", "groupId", "extraLoaded", "add", "pathAndMethod", "if", "extraRecords", "size", "System", "out", "println", "groupId", "records", "addAll", "extraRecords", "catch", "Exception", "e", "e", "printStackTrace", "finally", "if", "resultSet", "null", "try", "resultSet", "close", "statement", "close", "connection", "recycle", "catch", "Exception", "e", "e", "printStackTrace", "return", "records" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\CommitRecordUtil.java",
  "startLine" : 175,
  "endLine" : 195,
  "identifiers" : [ "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "String", "sql", "String", "format", "groupId", "Config", "TABLE", "PreparedStatement", "statement", "connection", "prepareStatement", "sql", "ResultSet", "resultSet", "statement", "executeQuery", "int", "insCount", "if", "resultSet", "next", "insCount", "resultSet", "getInt", "try", "resultSet", "close", "statement", "close", "finally", "connection", "recycle", "return", "insCount" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\CommitRecordUtil.java",
  "startLine" : 197,
  "endLine" : 229,
  "identifiers" : [ "BlobCommitsetInfo", "curInfo", "new", "BlobCommitsetInfo", "String", "blobCommitPath", "PathUtil", "getBlobCommitPathByTransformedBlobId", "transBlobId", "repoName", "if", "BlobCommitSetManager", "blobCommitSetManagerMap", "containsKey", "transBlobId", "curInfo", "BlobCommitSetManager", "blobCommitSetManagerMap", "get", "transBlobId", "return", "curInfo", "List", "String", "commitList", "new", "ArrayList", "try", "if", "new", "File", "blobCommitPath", "exists", "System", "out", "println", "blobCommitPath", "System", "out", "println", "realPath", "System", "out", "println", "realPath", "hashCode", "else", "commitList", "FileUtil", "readLines", "blobCommitPath", "catch", "IOException", "e", "e", "printStackTrace", "return", "null", "curInfo", "commitSet", "addAll", "commitList", "int", "blobCommitSize", "BlobCommitSetManager", "blobCommitSetManagerMap", "size", "if", "blobCommitSize", "BlobCommitSetManager", "popElement", "else", "BlobCommitSetManager", "blobCommitSetManagerMap", "put", "transBlobId", "curInfo", "return", "curInfo" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\CommitRecordUtil.java",
  "startLine" : 236,
  "endLine" : 258,
  "identifiers" : [ "boolean", "res", "false", "Set", "String", "instances", "new", "HashSet", "for", "CommitRecord", "record", "records", "instances", "add", "record", "getRealPath", "record", "getMethodName", "if", "instances", "size", "res", "true", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\CommitRecordUtil.java",
  "startLine" : 267,
  "endLine" : 284,
  "identifiers" : [ "if", "blobId", "null", "return", "false", "BlobCommitsetInfo", "commitsetInfo", "String", "transformedBlobId", "blobId", "realPath", "hashCode", "if", "BlobCommitSetManager", "blobCommitSetManagerMap", "containsKey", "transformedBlobId", "commitsetInfo", "BlobCommitSetManager", "blobCommitSetManagerMap", "get", "transformedBlobId", "else", "commitsetInfo", "getBlobCommitSetByTransBlobId", "transformedBlobId", "repoName", "realPath", "if", "commitsetInfo", "commitSet", "contains", "commitId", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\CommitRecordUtil.java",
  "startLine" : 369,
  "endLine" : 422,
  "identifiers" : [ "List", "CommitRecord", "extraRecords", "new", "ArrayList", "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "String", "sql", "String", "format", "Config", "TABLE", "realPath", "methodName", "PreparedStatement", "statement", "connection", "prepareStatement", "sql", "ResultSet", "resultSet", "statement", "executeQuery", "while", "resultSet", "next", "int", "id", "resultSet", "getInt", "int", "methodId", "resultSet", "getInt", "int", "currentGroupId", "resultSet", "getInt", "String", "blobPath", "resultSet", "getString", "int", "startLine", "resultSet", "getInt", "int", "endLine", "resultSet", "getInt", "int", "isCurCommit", "resultSet", "getInt", "String", "blobId", "resultSet", "getString", "String", "params", "resultSet", "getString", "String", "repoName", "null", "Integer", "hashCode", "if", "Config", "IS_MULTI", "equals", "repoName", "resultSet", "getString", "hashCode", "resultSet", "getInt", "String", "earlyCommit", "getEarlyCommitId", "blobId", "realPath", "repoName", "hashCode", "CommitRecord", "commitRecord", "new", "CommitRecord", "id", "currentGroupId", "methodId", "blobPath", "startLine", "endLine", "blobId", "earlyCommit", "RawCommitManager", "rawCommitInfoMap", "get", "earlyCommit", "date", "RawCommitManager", "rawCommitInfoMap", "get", "earlyCommit", "authorDate", "realPath", "methodName", "RawCommitManager", "rawCommitInfoMap", "get", "earlyCommit", "author", "if", "repoName", "null", "commitRecord", "setRepoName", "repoName", "commitRecord", "setIsCurCommit", "isCurCommit", "commitRecord", "setParams", "params", "extraRecords", "add", "commitRecord", "try", "resultSet", "close", "statement", "close", "finally", "connection", "recycle", "extraRecords", "extraRecords", "stream", "filter", "s", "s", "getGroupId", "groupId", "collect", "Collectors", "toList", "return", "extraRecords" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\CommitRecordUtil.java",
  "startLine" : 430,
  "endLine" : 461,
  "identifiers" : [ "if", "hashCode", "hashCode", "realPath", "hashCode", "BlobCommitsetInfo", "commitsetInfo", "String", "transformedBlobId", "blobId", "hashCode", "if", "BlobCommitSetManager", "blobCommitSetManagerMap", "containsKey", "transformedBlobId", "commitsetInfo", "BlobCommitSetManager", "blobCommitSetManagerMap", "get", "transformedBlobId", "else", "commitsetInfo", "getBlobCommitSetByTransBlobId", "transformedBlobId", "repoName", "realPath", "if", "commitsetInfo", "null", "return", "String", "earlyCommit", "for", "String", "commitId", "commitsetInfo", "commitSet", "if", "earlyCommit", "isEmpty", "earlyCommit", "commitId", "continue", "int", "lineNumber1", "RawCommitManager", "rawCommitInfoMap", "get", "commitId", "lineNumber", "int", "lineNumber2", "RawCommitManager", "rawCommitInfoMap", "get", "earlyCommit", "lineNumber", "if", "lineNumber1", "lineNumber2", "earlyCommit", "commitId", "return", "earlyCommit" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\DB.java",
  "startLine" : 17,
  "endLine" : 34,
  "identifiers" : [ "if", "instance", "null", "return", "instance", "try", "Class", "forName", "Config", "DRIVER", "conn", "DriverManager", "getConnection", "Config", "URL", "Config", "USERNAME", "Config", "PASSWORD", "if", "conn", "null", "instance", "new", "DB", "System", "out", "printf", "Config", "URL", "else", "System", "out", "println", "catch", "Exception", "e", "e", "printStackTrace", "return", "instance" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 34,
  "endLine" : 137,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "State", "state", "State", "CODE", "for", "int", "i", "i", "strToHandle", "length", "i", "char", "c", "strToHandle", "charAt", "i", "switch", "state", "case", "CODE", "if", "c", "state", "State", "SLASH", "else", "builder", "append", "c", "if", "c", "state", "State", "CODE_CHAR", "else", "if", "c", "r", "n", "r", "n", "r", "n", "state", "State", "CODE", "else", "state", "State", "CODE_STRING", "break", "case", "STRING_ESCAPE_SEQUENCE", "builder", "append", "c", "state", "State", "CODE_STRING", "break", "default", "break", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 145,
  "endLine" : 165,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "try", "FileInputStream", "fis", "new", "FileInputStream", "inputFileName", "InputStreamReader", "dis", "new", "InputStreamReader", "fis", "BufferedReader", "reader", "new", "BufferedReader", "dis", "String", "s", "while", "s", "reader", "readLine", "null", "builder", "append", "s", "builder", "append", "reader", "close", "dis", "close", "fis", "close", "catch", "IOException", "e", "e", "printStackTrace", "System", "exit", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 172,
  "endLine" : 185,
  "identifiers" : [ "try", "FileOutputStream", "fos", "new", "FileOutputStream", "outputFileName", "OutputStreamWriter", "dos", "new", "OutputStreamWriter", "fos", "BufferedWriter", "writer", "new", "BufferedWriter", "dos", "writer", "write", "strHandled", "writer", "close", "dos", "close", "fos", "close", "System", "out", "println", "outputFileName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 191,
  "endLine" : 204,
  "identifiers" : [ "Scanner", "in", "new", "Scanner", "System", "in", "System", "out", "println", "String", "inputFileName", "in", "nextLine", "System", "out", "println", "String", "outputFileName", "in", "nextLine", "String", "strToHandle", "readFile", "inputFileName", "String", "strHandled", "delete_C_Cplusplus_Java_Note", "strToHandle", "writeFile", "outputFileName", "strHandled" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\DruidUtil.java",
  "startLine" : 21,
  "endLine" : 40,
  "identifiers" : [ "if", "dataSource", "null", "return", "dataSource", "new", "DruidDataSource", "dataSource", "setDriverClassName", "Config", "DRIVER", "dataSource", "setUrl", "Config", "URL", "dataSource", "setUsername", "Config", "USERNAME", "dataSource", "setPassword", "Config", "PASSWORD", "dataSource", "setInitialSize", "Config", "INITIAL_SIZE", "dataSource", "setMaxActive", "Config", "MAX_ACTIVE", "dataSource", "setMaxWait", "dataSource", "setMinIdle", "dataSource", "setTimeBetweenEvictionRunsMillis", "dataSource", "setTestWhileIdle", "true", "dataSource", "setValidationQuery", "dataSource", "setTestOnBorrow", "true", "dataSource", "setTestOnReturn", "false", "dataSource", "init" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 19,
  "endLine" : 28,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "List", "String", "lines", "new", "ArrayList", "String", "line", "null", "while", "line", "reader", "readLine", "null", "lines", "add", "line", "reader", "close", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 36,
  "endLine" : 45,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "StringBuilder", "builder", "new", "StringBuilder", "while", "line", "reader", "readLine", "null", "builder", "append", "line", "reader", "close", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 55,
  "endLine" : 72,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "StringBuilder", "builder", "new", "StringBuilder", "int", "lineNumber", "while", "line", "reader", "readLine", "null", "lineNumber", "if", "lineNumber", "startLine", "continue", "if", "lineNumber", "endLine", "break", "builder", "append", "line", "reader", "close", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 82,
  "endLine" : 88,
  "identifiers" : [ "BufferedWriter", "writer", "new", "BufferedWriter", "new", "OutputStreamWriter", "new", "FileOutputStream", "file", "append", "StandardCharsets", "UTF_8", "writer", "write", "content", "writer", "newLine", "writer", "flush", "writer", "close" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\GitUtil.java",
  "startLine" : 32,
  "endLine" : 61,
  "identifiers" : [ "if", "Config", "IS_MULTI", "equals", "repository", "new", "FileRepositoryBuilder", "setGitDir", "new", "File", "repoDir", "File", "separator", "build", "revWalk", "new", "RevWalk", "repository", "treeWalk", "new", "TreeWalk", "repository", "repositoryMap", "new", "HashMap", "if", "Config", "IS_MULTI", "equals", "File", "projectsDir", "new", "File", "repoDir", "if", "projectsDir", "exists", "System", "out", "printf", "repoDir", "System", "exit", "File", "projects", "projectsDir", "listFiles", "if", "projects", "null", "projects", "length", "System", "out", "printf", "repoDir", "System", "exit", "repositoryMap", "new", "HashMap", "for", "File", "project", "projects", "Repository", "repository", "new", "FileRepositoryBuilder", "setGitDir", "new", "File", "project", "getAbsolutePath", "File", "separator", "build", "repositoryMap", "put", "project", "getName", "repository" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\GitUtil.java",
  "startLine" : 63,
  "endLine" : 76,
  "identifiers" : [ "if", "treeWalk", "null", "treeWalk", "close", "if", "revWalk", "null", "revWalk", "close", "if", "repository", "null", "repository", "close", "for", "Repository", "repository", "repositoryMap", "values", "repository", "close" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\GitUtil.java",
  "startLine" : 84,
  "endLine" : 96,
  "identifiers" : [ "try", "ObjectId", "objectId", "repository", "resolve", "commitId", "RevCommit", "commit", "revWalk", "parseCommit", "objectId", "int", "commitTime", "commit", "getCommitTime", "return", "DateUtil", "convertTime", "commitTime", "catch", "Exception", "e", "e", "printStackTrace", "return", "DateUtil", "format", "new", "Date" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\GitUtil.java",
  "startLine" : 104,
  "endLine" : 131,
  "identifiers" : [ "try", "filePath", "getVersedRelativePath", "filePath", "ObjectId", "lastCommitId", "repository", "resolve", "commitId", "revWalk", "reset", "RevCommit", "commit", "revWalk", "parseCommit", "lastCommitId", "RevTree", "tree", "commit", "getTree", "treeWalk", "reset", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "filePath", "if", "treeWalk", "next", "return", "new", "ArrayList", "ObjectId", "objectId", "treeWalk", "getObjectId", "ObjectLoader", "loader", "repository", "open", "objectId", "ByteArrayOutputStream", "outputStream", "new", "ByteArrayOutputStream", "loader", "copyTo", "outputStream", "String", "content", "outputStream", "toString", "List", "String", "lines", "Arrays", "asList", "content", "split", "outputStream", "close", "return", "lines", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\GitUtil.java",
  "startLine" : 141,
  "endLine" : 149,
  "identifiers" : [ "List", "String", "lines", "getContent", "commitId", "filePath", "if", "lines", "size", "return", "endLine", "Math", "min", "endLine", "lines", "size", "List", "String", "functions", "lines", "subList", "startLine", "endLine", "return", "String", "join", "functions" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\GitUtil.java",
  "startLine" : 157,
  "endLine" : 178,
  "identifiers" : [ "String", "blobId", "null", "try", "realPath", "getVersedRelativePath", "realPath", "ObjectId", "lastCommitId", "repository", "resolve", "commitId", "revWalk", "reset", "RevCommit", "commit", "revWalk", "parseCommit", "lastCommitId", "RevTree", "tree", "commit", "getTree", "treeWalk", "reset", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "realPath", "if", "treeWalk", "next", "return", "null", "ObjectId", "objectId", "treeWalk", "getObjectId", "blobId", "objectId", "getName", "catch", "Exception", "e", "e", "printStackTrace", "return", "blobId" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\GitUtil.java",
  "startLine" : 180,
  "endLine" : 205,
  "identifiers" : [ "String", "blobId", "null", "try", "realPath", "getVersedRelativePath", "realPath", "ObjectId", "lastCommitId", "repositoryMap", "get", "projectName", "resolve", "commitId", "revWalk", "new", "RevWalk", "repositoryMap", "get", "projectName", "RevCommit", "commit", "revWalk", "parseCommit", "lastCommitId", "RevTree", "tree", "commit", "getTree", "treeWalk", "new", "TreeWalk", "repositoryMap", "get", "projectName", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "realPath", "if", "treeWalk", "next", "revWalk", "close", "treeWalk", "close", "return", "null", "ObjectId", "objectId", "treeWalk", "getObjectId", "blobId", "objectId", "getName", "revWalk", "close", "treeWalk", "close", "catch", "Exception", "e", "e", "printStackTrace", "return", "blobId" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\PathUtil.java",
  "startLine" : 9,
  "endLine" : 13,
  "identifiers" : [ "if", "Config", "IS_MULTI", "equals", "return", "Config", "BLOB_PREFIX", "File", "separator", "repoName", "File", "separator", "blobId", "substring", "File", "separator", "blobId", "substring", "return", "Config", "BLOB_PREFIX", "File", "separator", "blobId", "substring", "File", "separator", "blobId", "substring" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\PathUtil.java",
  "startLine" : 15,
  "endLine" : 19,
  "identifiers" : [ "if", "Config", "IS_MULTI", "equals", "return", "Config", "BLOB_COMMIT_PREFIX", "File", "separator", "repoName", "File", "separator", "transformedBlobId", "substring", "File", "separator", "transformedBlobId", "substring", "return", "Config", "BLOB_COMMIT_PREFIX", "File", "separator", "transformedBlobId", "substring", "File", "separator", "transformedBlobId", "substring" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\VisualDataUtil.java",
  "startLine" : 21,
  "endLine" : 128,
  "identifiers" : [ "visualCommitInfoList", "clear", "instanceList", "clear", "commitIdList", "clear", "String", "repoName", "for", "int", "i", "i", "commitInfoList", "size", "i", "List", "CommitRecord", "curRecords", "commitInfoList", "get", "i", "getRecords", "if", "repoName", "equals", "try", "repoName", "curRecords", "get", "getRepoName", "catch", "Exception", "e", "for", "CommitRecord", "record", "curRecords", "int", "instanceNum", "record", "getInstanceNumber", "Map", "String", "CommitRecord", "instanceRecords", "instanceList", "getOrDefault", "instanceNum", "new", "HashMap", "instanceRecords", "put", "record", "getCommitId", "record", "instanceList", "put", "instanceNum", "instanceRecords", "commitIdList", "add", "commitInfoList", "get", "i", "getCommitId", "for", "Map", "Entry", "Integer", "Map", "String", "CommitRecord", "entry", "instanceList", "entrySet", "Map", "String", "CommitRecord", "curInstanceMap", "entry", "getValue", "List", "String", "curCommitIds", "new", "ArrayList", "curInstanceMap", "keySet", "Collections", "sort", "curCommitIds", "new", "Comparator", "String", "Override", "public", "int", "compare", "String", "c1", "String", "c2", "int", "lineNumber1", "RawCommitManager", "rawCommitInfoMap", "get", "c1", "lineNumber", "int", "lineNumber2", "RawCommitManager", "rawCommitInfoMap", "get", "c2", "lineNumber", "if", "lineNumber1", "lineNumber2", "return", "else", "if", "lineNumber1", "lineNumber2", "return", "else", "return", "String", "earliestCommitId", "curCommitIds", "get", "String", "latestCommitId", "curCommitIds", "get", "curCommitIds", "size", "int", "ealiestIndex", "commitIdList", "indexOf", "earliestCommitId", "int", "latestIndex", "commitIdList", "indexOf", "latestCommitId", "CommitRecord", "bornInstance", "curInstanceMap", "get", "earliestCommitId", "CommitRecord", "latestInstance", "curInstanceMap", "get", "latestCommitId", "for", "String", "commitId", "commitIdList", "int", "curIndex", "commitIdList", "indexOf", "commitId", "if", "curIndex", "ealiestIndex", "CommitRecord", "noneRecord", "new", "CommitRecord", "noneRecord", "setRealPath", "bornInstance", "getRealPath", "noneRecord", "setInstanceNumber", "entry", "getKey", "noneRecord", "setRepoName", "repoName", "curInstanceMap", "put", "commitId", "noneRecord", "else", "if", "curIndex", "latestIndex", "latestInstance", "getStatus", "equals", "CommitRecord", "noneRecord", "new", "CommitRecord", "noneRecord", "setRealPath", "bornInstance", "getRealPath", "noneRecord", "setInstanceNumber", "entry", "getKey", "noneRecord", "setRepoName", "repoName", "curInstanceMap", "put", "commitId", "noneRecord", "else", "if", "curIndex", "latestIndex", "latestInstance", "getStatus", "equals", "curIndex", "String", "preCommitId", "commitIdList", "get", "curIndex", "while", "curInstanceMap", "containsKey", "preCommitId", "curIndex", "preCommitId", "commitIdList", "get", "curIndex", "CommitRecord", "insertRecord", "curInstanceMap", "get", "preCommitId", "clone", "insertRecord", "setStatus", "insertRecord", "setRepoName", "repoName", "insertRecord", "setDate", "RawCommitManager", "rawCommitInfoMap", "get", "commitId", "date", "insertRecord", "setAuthorDate", "RawCommitManager", "rawCommitInfoMap", "get", "commitId", "authorDate", "curInstanceMap", "put", "commitId", "insertRecord", "else", "if", "curIndex", "ealiestIndex", "curIndex", "latestIndex", "if", "curInstanceMap", "containsKey", "commitId", "continue", "curIndex", "String", "preCommitId", "commitIdList", "get", "curIndex", "while", "curInstanceMap", "containsKey", "preCommitId", "curIndex", "preCommitId", "commitIdList", "get", "curIndex", "CommitRecord", "insertRecord", "curInstanceMap", "get", "preCommitId", "clone", "insertRecord", "setStatus", "insertRecord", "setRepoName", "repoName", "insertRecord", "setDate", "RawCommitManager", "rawCommitInfoMap", "get", "commitId", "date", "insertRecord", "setAuthorDate", "RawCommitManager", "rawCommitInfoMap", "get", "commitId", "authorDate", "curInstanceMap", "put", "commitId", "insertRecord" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\VisualDataUtil.java",
  "startLine" : 131,
  "endLine" : 174,
  "identifiers" : [ "for", "Map", "Entry", "Integer", "Map", "String", "CommitRecord", "entry", "instanceList", "entrySet", "Map", "String", "CommitRecord", "curInstanceMap", "entry", "getValue", "Boolean", "isBorn", "false", "for", "int", "i", "i", "commitIdList", "size", "i", "CommitRecord", "curRecord", "curInstanceMap", "get", "commitIdList", "get", "i", "if", "curRecord", "getStatus", "equals", "String", "code", "GroupContentManager", "getContentByBlobId", "curRecord", "getBlobId", "curRecord", "getStartLine", "curRecord", "getEndLine", "curRecord", "getRepoName", "curRecord", "setPreCode", "code", "curRecord", "setCurCode", "code", "isBorn", "true", "continue", "if", "isBorn", "continue", "if", "curRecord", "getStatus", "equals", "break", "CommitRecord", "preRecord", "curInstanceMap", "get", "commitIdList", "get", "i", "String", "preCode", "DeleteCAndCplusplusAndJavaNote", "delete_C_Cplusplus_Java_Note", "GroupContentManager", "getContentByBlobId", "preRecord", "getBlobId", "preRecord", "getStartLine", "preRecord", "getEndLine", "preRecord", "getRepoName", "String", "curCode", "DeleteCAndCplusplusAndJavaNote", "delete_C_Cplusplus_Java_Note", "GroupContentManager", "getContentByBlobId", "curRecord", "getBlobId", "curRecord", "getStartLine", "curRecord", "getEndLine", "curRecord", "getRepoName", "String", "preCode1", "getFlatString", "preCode", "String", "curCode1", "getFlatString", "curCode", "if", "curCode1", "equals", "preCode1", "curRecord", "setStatus", "else", "curRecord", "setStatus", "curRecord", "setCurCode", "curCode", "curRecord", "setPreCode", "preCode" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\VisualDataUtil.java",
  "startLine" : 176,
  "endLine" : 192,
  "identifiers" : [ "String", "className", "List", "String", "classNameList", "new", "ArrayList", "classNameList", "add", "int", "lineNum", "for", "String", "line", "code", "lineNum", "if", "line", "contains", "classNameList", "add", "line", "replace", "if", "lineNum", "startLine", "className", "classNameList", "get", "classNameList", "size", "break", "return", "className" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\main\\java\\com\\fudan\\util\\VisualDataUtil.java",
  "startLine" : 203,
  "endLine" : 229,
  "identifiers" : [ "List", "Integer", "instanceNumber", "new", "ArrayList", "instanceList", "keySet", "Collections", "sort", "instanceNumber", "for", "String", "commitId", "commitIdList", "VisualCommitInfo", "curInfo", "new", "VisualCommitInfo", "RawCommitInfo", "rawCommitInfo", "RawCommitManager", "rawCommitInfoMap", "get", "commitId", "curInfo", "setCommitId", "rawCommitInfo", "commitId", "curInfo", "setDate", "rawCommitInfo", "date", "curInfo", "setSubmitter", "rawCommitInfo", "author", "curInfo", "setCommitMessage", "rawCommitInfo", "commitMessage", "List", "CommitRecord", "curRecords", "new", "ArrayList", "Boolean", "needAdd", "false", "for", "int", "insNumber", "instanceNumber", "CommitRecord", "curInsRecord", "instanceList", "get", "insNumber", "get", "commitId", "curRecords", "add", "curInsRecord", "if", "curInsRecord", "getStatus", "curInsRecord", "getStatus", "curInsRecord", "getStatus", "needAdd", "true", "if", "needAdd", "curInfo", "setCodes", "curRecords", "visualCommitInfoList", "add", "curInfo" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\test\\java\\com\\fudan\\util\\FileUtilTests.java",
  "startLine" : 19,
  "endLine" : 23,
  "identifiers" : [ "System", "out", "println", "DateUtil", "compare", "System", "out", "println", "DateUtil", "compare", "System", "out", "println", "DateUtil", "compare" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\test\\java\\com\\fudan\\util\\FileUtilTests.java",
  "startLine" : 26,
  "endLine" : 72,
  "identifiers" : [ "String", "code", "rb", "cannot", "open", "for", "reading", "n", "cannot", "allocate", "d", "to", "hold", "content", "of", "n", "cannot", "read", "all", "d", "bytes", "of", "n", "String", "codeArr", "code", "split", "System", "out", "println", "codeArr", "String", "param", "codeArr", "split", "System", "out", "println", "param", "replaceAll", "replaceAll", "List", "Integer", "testList", "new", "ArrayList", "testList", "add", "testList", "add", "testList", "add", "testList", "add", "Collections", "sort", "testList", "System", "out", "println", "testList", "print" ]
}, {
  "path" : "d:\\GitRepo\\CloneEvolution2\\src\\test\\java\\com\\fudan\\util\\FileUtilTests.java",
  "startLine" : 74,
  "endLine" : 82,
  "identifiers" : [ "if", "Double", "compare", "num2", "throw", "new", "RuntimeException", "double", "ratio", "num1", "num2", "NumberFormat", "format", "NumberFormat", "getPercentInstance", "format", "setMaximumFractionDigits", "System", "out", "println", "format", "format", "ratio" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\.mvn\\wrapper\\MavenWrapperDownloader.java",
  "startLine" : 49,
  "endLine" : 96,
  "identifiers" : [ "System", "out", "println", "File", "baseDirectory", "new", "File", "args", "System", "out", "println", "baseDirectory", "getAbsolutePath", "File", "mavenWrapperPropertyFile", "new", "File", "baseDirectory", "MAVEN_WRAPPER_PROPERTIES_PATH", "String", "url", "DEFAULT_DOWNLOAD_URL", "if", "mavenWrapperPropertyFile", "exists", "FileInputStream", "mavenWrapperPropertyFileInputStream", "null", "try", "mavenWrapperPropertyFileInputStream", "new", "FileInputStream", "mavenWrapperPropertyFile", "Properties", "mavenWrapperProperties", "new", "Properties", "mavenWrapperProperties", "load", "mavenWrapperPropertyFileInputStream", "url", "mavenWrapperProperties", "getProperty", "PROPERTY_NAME_WRAPPER_URL", "url", "catch", "IOException", "e", "System", "out", "println", "MAVEN_WRAPPER_PROPERTIES_PATH", "finally", "try", "if", "mavenWrapperPropertyFileInputStream", "null", "mavenWrapperPropertyFileInputStream", "close", "catch", "IOException", "e", "System", "out", "println", "url", "File", "outputFile", "new", "File", "baseDirectory", "getAbsolutePath", "MAVEN_WRAPPER_JAR_PATH", "if", "outputFile", "getParentFile", "exists", "if", "outputFile", "getParentFile", "mkdirs", "System", "out", "println", "outputFile", "getParentFile", "getAbsolutePath", "System", "out", "println", "outputFile", "getAbsolutePath", "try", "downloadFileFromURL", "url", "outputFile", "System", "out", "println", "System", "exit", "catch", "Throwable", "e", "System", "out", "println", "e", "printStackTrace", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\.mvn\\wrapper\\MavenWrapperDownloader.java",
  "startLine" : 98,
  "endLine" : 116,
  "identifiers" : [ "if", "System", "getenv", "null", "System", "getenv", "null", "String", "username", "System", "getenv", "char", "password", "System", "getenv", "toCharArray", "Authenticator", "setDefault", "new", "Authenticator", "Override", "protected", "PasswordAuthentication", "getPasswordAuthentication", "return", "new", "PasswordAuthentication", "username", "password", "URL", "website", "new", "URL", "urlString", "ReadableByteChannel", "rbc", "rbc", "Channels", "newChannel", "website", "openStream", "FileOutputStream", "fos", "new", "FileOutputStream", "destination", "fos", "getChannel", "transferFrom", "rbc", "Long", "MAX_VALUE", "fos", "close", "rbc", "close" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\config\\BlobInfoConfig.java",
  "startLine" : 23,
  "endLine" : 36,
  "identifiers" : [ "FileUtil", "fileUtil", "new", "FileUtil", "fileUtil", "createFile", "File", "separator", "properties", "setProperty", "singleToolDTO", "getSuffix", "properties", "setProperty", "singleToolDTO", "getRepoPath", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "properties", "setProperty", "singleToolDTO", "getStartCommit", "properties", "setProperty", "singleToolDTO", "getEndCommit", "properties", "setProperty", "singleToolDTO", "getCommitInterval", "properties", "setProperty", "singleToolDTO", "getTraceCommit", "properties", "setProperty", "singleToolDTO", "getExtractedPath" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\config\\BlobInfoConfig.java",
  "startLine" : 38,
  "endLine" : 48,
  "identifiers" : [ "suffix", "properties", "getProperty", "repoPath", "properties", "getProperty", "outputFolder", "properties", "getProperty", "startCommit", "properties", "getProperty", "endCommit", "properties", "getProperty", "commitInterval", "Integer", "valueOf", "properties", "getProperty", "traceCommit", "properties", "getProperty", "extractedPath", "properties", "getProperty" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\config\\DangerConfig.java",
  "startLine" : 33,
  "endLine" : 55,
  "identifiers" : [ "FileUtil", "fileUtil", "new", "FileUtil", "fileUtil", "createFile", "File", "separator", "properties", "setProperty", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "singleToolDTO", "getKeyWordList", "properties", "setProperty", "singleToolDTO", "getIgnoreWordList", "properties", "setProperty", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "File", "separator" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\config\\DangerConfig.java",
  "startLine" : 57,
  "endLine" : 87,
  "identifiers" : [ "maxCloneInstanceNum", "Integer", "valueOf", "properties", "getProperty", "inputJsonFolder", "properties", "getProperty", "outputPairFolder", "properties", "getProperty", "extractedJsonFolder", "properties", "getProperty", "consisResultFolder", "properties", "getProperty", "useBugInfo", "Integer", "valueOf", "properties", "getProperty", "lowCCP", "Double", "parseDouble", "properties", "getProperty", "highCCP", "Double", "parseDouble", "properties", "getProperty", "CPI", "Integer", "valueOf", "properties", "getProperty", "highCCD", "Integer", "valueOf", "properties", "getProperty", "keyWordList", "properties", "getProperty", "isMulti", "properties", "getProperty", "commitInfo", "properties", "getProperty", "keyWordList", "properties", "getProperty", "ignoreWordList", "properties", "getProperty" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\config\\DbConfig.java",
  "startLine" : 27,
  "endLine" : 46,
  "identifiers" : [ "FileUtil", "fileUtil", "new", "FileUtil", "fileUtil", "createFile", "File", "separator", "properties", "setProperty", "String", "valueOf", "singleToolDTO", "getThreadNum", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "properties", "setProperty", "singleToolDTO", "getProjectName", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "properties", "setProperty", "properties", "setProperty", "DRIVER", "properties", "setProperty", "jdbc", "usernamejdbc", "password", "singleToolDTO", "getPassword" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\config\\DbConfig.java",
  "startLine" : 48,
  "endLine" : 64,
  "identifiers" : [ "threadNum", "Integer", "valueOf", "properties", "getProperty", "resultFolder", "properties", "getProperty", "detectFolder", "properties", "getProperty", "measureIndexTbName", "properties", "getProperty", "bufferCount", "Integer", "valueOf", "properties", "getProperty", "CC_OUT", "properties", "getProperty", "DRIVER", "properties", "getProperty", "URL", "properties", "getProperty", "USERNAME", "properties", "getProperty", "PASSWORD", "properties", "getProperty", "blobIdRealPathCsv", "CC_OUT", "File", "separator", "CurCommitBlobCsv", "CC_OUT", "File", "separator" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\config\\DetectConfig.java",
  "startLine" : 34,
  "endLine" : 62,
  "identifiers" : [ "FileUtil", "fileUtil", "new", "FileUtil", "fileUtil", "createFile", "File", "separator", "properties", "setProperty", "singleToolDTO", "getLanguage", "properties", "setProperty", "properties", "setProperty", "String", "valueOf", "threshold", "properties", "setProperty", "String", "valueOf", "mlc", "properties", "setProperty", "String", "valueOf", "mlcc", "properties", "setProperty", "String", "valueOf", "minLine", "properties", "setProperty", "String", "valueOf", "sepNum", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "File", "separator", "File", "separator", "singleToolDTO", "getExeName", "properties", "setProperty", "granularity", "properties", "setProperty", "String", "valueOf", "openStringHash", "properties", "setProperty", "String", "valueOf", "useLongType", "properties", "setProperty", "String", "valueOf", "useGPU", "properties", "setProperty", "String", "valueOf", "tokenize", "properties", "setProperty", "String", "valueOf", "onlyTokenize", "File", "file", "new", "File", "String", "canonicalPath", "try", "canonicalPath", "file", "getCanonicalPath", "catch", "IOException", "e", "e", "printStackTrace", "repoPath", "canonicalPath", "File", "separator", "File", "separator", "File", "separator", "File", "separator" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\config\\DetectConfig.java",
  "startLine" : 65,
  "endLine" : 83,
  "identifiers" : [ "language", "properties", "getProperty", "extensions", "properties", "getProperty", "extensionArray", "extensions", "split", "threshold", "Float", "parseFloat", "properties", "getProperty", "mlc", "Integer", "parseInt", "properties", "getProperty", "mlcc", "Integer", "parseInt", "properties", "getProperty", "minLine", "Integer", "parseInt", "properties", "getProperty", "sepNum", "Long", "parseLong", "properties", "getProperty", "exe", "properties", "getProperty", "granularity", "properties", "getProperty", "openStringHash", "Integer", "parseInt", "properties", "getProperty", "useLongType", "Integer", "parseInt", "properties", "getProperty", "useGPU", "Integer", "parseInt", "properties", "getProperty", "tokenize", "Integer", "parseInt", "properties", "getProperty", "onlyTokenize", "Integer", "parseInt", "properties", "getProperty" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\config\\EvoConfig.java",
  "startLine" : 35,
  "endLine" : 59,
  "identifiers" : [ "FileUtil", "fileUtil", "new", "FileUtil", "fileUtil", "createFile", "File", "separator", "properties", "setProperty", "DRIVER", "properties", "setProperty", "jdbc", "usernamejdbc", "passwordjdbc", "initialSizejdbc", "maxActivetableprojectblob_prefix", "clonePerniciousnessValidationblobInfoCC_OUTblobscommit_info", "clonePerniciousnessValidationblobInfoCC_OUTcommitInfo", "csvblob_commit_prefix", "clonePerniciousnessValidationblobInfoCC_OUTblobIdmax_instance0start_group_id1end_group_id0deleted_file_info", "clonePerniciousnessValidationblobInfoCC_OUTremovePathList", "csvthread_numberisMultinolanguageblobSnapshotMapResult", "map_result2", "txt" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\config\\EvoConfig.java",
  "startLine" : 62,
  "endLine" : 85,
  "identifiers" : [ "DRIVER", "properties", "getProperty", "URL", "properties", "getProperty", "USERNAME", "properties", "getProperty", "PASSWORD", "properties", "getProperty", "INITIAL_SIZE", "Integer", "parseInt", "properties", "getProperty", "MAX_ACTIVE", "Integer", "parseInt", "properties", "getProperty", "TABLE", "properties", "getProperty", "PROJECT", "properties", "getProperty", "BLOB_PREFIX", "properties", "getProperty", "COMMIT_INFO", "properties", "getProperty", "BLOB_COMMIT_PREFIX", "properties", "getProperty", "MAX_INSTANCE", "properties", "getProperty", "START_GROUP_ID", "Integer", "parseInt", "properties", "getProperty", "END_GROUP_ID", "Integer", "parseInt", "properties", "getProperty", "DELETE_FILE_INFO", "properties", "getProperty", "THREAD_NUMBER", "Integer", "parseInt", "properties", "getProperty", "IS_MULTI", "properties", "getProperty", "LANGUAGE", "properties", "getProperty", "BLOB_SNAPSHOT_MAP_RESULT", "properties", "getProperty" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\config\\SnapshotConfig.java",
  "startLine" : 33,
  "endLine" : 54,
  "identifiers" : [ "FileUtil", "fileUtil", "new", "FileUtil", "fileUtil", "createFile", "File", "separator", "properties", "setProperty", "singleToolDTO", "getLanguage", "properties", "setProperty", "singleToolDTO", "getSuffix", "properties", "setProperty", "String", "valueOf", "threshold", "properties", "setProperty", "String", "valueOf", "mlc", "properties", "setProperty", "String", "valueOf", "mlcc", "properties", "setProperty", "String", "valueOf", "minLine", "properties", "setProperty", "String", "valueOf", "sepNum", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "File", "separator", "File", "separator", "singleToolDTO", "getExeName", "properties", "setProperty", "granularity", "properties", "setProperty", "String", "valueOf", "openStringHash", "properties", "setProperty", "String", "valueOf", "useLongType", "properties", "setProperty", "String", "valueOf", "useGPU", "properties", "setProperty", "String", "valueOf", "tokenize", "properties", "setProperty", "String", "valueOf", "onlyTokenize", "repoPath", "singleToolDTO", "getRepoPath" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\config\\SnapshotConfig.java",
  "startLine" : 57,
  "endLine" : 75,
  "identifiers" : [ "language", "properties", "getProperty", "extensions", "properties", "getProperty", "extensionArray", "extensions", "split", "threshold", "Float", "parseFloat", "properties", "getProperty", "mlc", "Integer", "parseInt", "properties", "getProperty", "mlcc", "Integer", "parseInt", "properties", "getProperty", "minLine", "Integer", "parseInt", "properties", "getProperty", "sepNum", "Long", "parseLong", "properties", "getProperty", "exe", "properties", "getProperty", "granularity", "properties", "getProperty", "openStringHash", "Integer", "parseInt", "properties", "getProperty", "useLongType", "Integer", "parseInt", "properties", "getProperty", "useGPU", "Integer", "parseInt", "properties", "getProperty", "tokenize", "Integer", "parseInt", "properties", "getProperty", "onlyTokenize", "Integer", "parseInt", "properties", "getProperty" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\controller\\CloneDangerController.java",
  "startLine" : 36,
  "endLine" : 51,
  "identifiers" : [ "log", "info", "SingleToolDTO", "singleToolDTO", "viewService", "setConfigValueTool", "viewDTO", "JsonResult", "jsonResult", "viewService", "dangerCheckView", "singleToolDTO", "if", "jsonResult", "getCode", "return", "jsonResult", "pipeLineService", "pipeLineStart", "singleToolDTO", "log", "info", "return", "new", "JsonResult", "JsonResult", "CODE_OK" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\controller\\CloneDangerController.java",
  "startLine" : 54,
  "endLine" : 78,
  "identifiers" : [ "String", "logPath", "CloneDetectConstants", "SAGA_LOG_FOLDER", "File", "separator", "FileName", "DANGER_CHECK_LOG_NAME", "File", "logFile", "new", "File", "logPath", "if", "logFile", "exists", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "List", "String", "lines", "FileUtil", "readLines", "logPath", "int", "startLine", "for", "int", "i", "lines", "size", "i", "i", "String", "line", "lines", "get", "i", "if", "line", "contains", "startLine", "i", "break", "lines", "lines", "subList", "startLine", "lines", "size", "String", "content", "String", "join", "lines", "DataJsonResult", "result", "new", "DataJsonResult", "result", "setCode", "JsonResult", "CODE_OK", "result", "setMsg", "result", "setData", "content", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\controller\\MyControllerAdvice.java",
  "startLine" : 24,
  "endLine" : 33,
  "identifiers" : [ "String", "sOut", "StackTraceElement", "trace", "e", "getStackTrace", "for", "StackTraceElement", "s", "trace", "sOut", "s", "log", "error", "e", "toString", "log", "error", "sOut", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "e", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\Analyser.java",
  "startLine" : 94,
  "endLine" : 246,
  "identifiers" : [ "reset", "String", "groupId", "new", "File", "file", "getName", "replace", "System", "out", "println", "groupId", "try", "List", "EvolutionMergeResult", "data", "loadData", "file", "if", "data", "size", "return", "List", "List", "EvolutionMergeResult", "EvolutionRecord", "records", "new", "ArrayList", "int", "size", "data", "size", "records", "getInstances", "data", "size", "List", "EvolutionMergeResult", "EvolutionRecord", "latestGroup", "records", "get", "records", "size", "Set", "Integer", "instanceIds", "new", "HashSet", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "latestGroup", "if", "instance", "status", "equals", "instance", "status", "equals", "instance", "groupId", "equals", "groupId", "instanceIds", "add", "instance", "instanceNumber", "insNumber", "instanceIds", "size", "if", "insNumber", "return", "Map", "Integer", "String", "insBornCodeMap", "new", "HashMap", "for", "EvolutionMergeResult", "commitInfo", "data", "Map", "String", "Integer", "groupIdCountMap", "new", "HashMap", "List", "EvolutionMergeResult", "EvolutionRecord", "curGroup", "commitInfo", "getCodes", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "curGroup", "if", "instance", "groupId", "equals", "continue", "int", "count", "groupIdCountMap", "getOrDefault", "instance", "groupId", "count", "groupIdCountMap", "put", "instance", "groupId", "count", "if", "instance", "status", "equals", "insBornCodeMap", "put", "instance", "instanceNumber", "instance", "curCode", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "curGroup", "if", "instance", "groupId", "equals", "continue", "if", "instanceIds", "contains", "instance", "instanceNumber", "if", "groupIdCountMap", "get", "instance", "groupId", "insBornMap", "containsKey", "instance", "instanceNumber", "insBornMap", "put", "instance", "instanceNumber", "commitInfo", "date", "curGroupEvolutionInfo", "new", "ArrayList", "boolean", "cloneGroupCreated", "false", "Set", "String", "groupIds", "new", "HashSet", "for", "EvolutionMergeResult", "commitInfo", "data", "List", "EvolutionMergeResult", "EvolutionRecord", "codes", "commitInfo", "getCodes", "List", "EvolutionMergeResult", "EvolutionRecord", "extractCodes", "new", "ArrayList", "EvolutionMergeResult", "extractCommit", "new", "EvolutionMergeResult", "Set", "String", "statusSet", "new", "HashSet", "String", "authorTime", "groupIds", "clear", "int", "notZeroGroupIdInstanceNum", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "codes", "if", "instance", "status", "equals", "instance", "status", "equals", "instanceIds", "contains", "instance", "instanceNumber", "statusSet", "add", "instance", "status", "authorTime", "instance", "authorDate", "if", "instanceIds", "contains", "instance", "instanceNumber", "EvolutionMergeResult", "EvolutionRecord", "newins", "getNewInstance", "instance", "commitInfo", "date", "insBornCodeMap", "get", "instance", "instanceNumber", "extractCodes", "add", "newins", "if", "instance", "groupId", "equals", "instanceIds", "contains", "instance", "instanceNumber", "groupIds", "add", "instance", "groupId", "notZeroGroupIdInstanceNum", "if", "groupIds", "size", "notZeroGroupIdInstanceNum", "cloneGroupCreated", "true", "String", "status", "if", "statusSet", "size", "statusSet", "contains", "status", "else", "status", "if", "statusSet", "size", "statusSet", "contains", "continue", "if", "cloneGroupCreated", "extractCommit", "setCodes", "extractCodes", "extractCommit", "setCommitId", "commitInfo", "commitId", "extractCommit", "setStatus", "status", "extractCommit", "setSubmitter", "commitInfo", "submitter", "extractCommit", "setDate", "commitInfo", "date", "extractCommit", "setAuthorTime", "authorTime", "extractCommit", "setModifiedFileCount", "commitInfo", "modifiedFileCount", "extractCommit", "setCommitMessage", "commitInfo", "commitMessage", "curGroupEvolutionInfo", "add", "extractCommit", "List", "List", "EvolutionMergeResult", "EvolutionRecord", "instanceList", "new", "ArrayList", "size", "curGroupEvolutionInfo", "size", "records", "clear", "records", "getInstances", "curGroupEvolutionInfo", "size", "instanceList", "getArrangedInstances", "records", "ConsistAnalyser", "consistAnalyser", "new", "ConsistAnalyser", "consistAnalyser", "startAnalyse", "instanceList", "consistAnalyser", "outputResult", "consistResult", "consistAnalyser", "consistResult", "extractCloneInformation", "extractConsistTimeInterval", "getCommitBugsNum", "getConsistBugsNum", "String", "outputFile1", "String", "format", "DangerConfig", "extractedJsonFolder", "groupId", "FileUtil", "write", "outputFile1", "JSONObject", "toJSONString", "curGroupEvolutionInfo", "false", "String", "outputFile", "String", "format", "DangerConfig", "consisResultFolder", "groupId", "FileUtil", "write", "outputFile", "JSONObject", "toJSONString", "consistResult", "false", "String", "outputFile2", "String", "format", "DangerConfig", "consisResultFolder", "groupId", "FileUtil", "write", "outputFile2", "JSONObject", "toJSONString", "consistResultForTest", "false", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\Analyser.java",
  "startLine" : 248,
  "endLine" : 286,
  "identifiers" : [ "EvolutionMergeResult", "EvolutionRecord", "newIns", "instance", "if", "instance", "status", "equals", "return", "newIns", "long", "time", "l", "try", "String", "bornTime", "insBornMap", "get", "instance", "instanceNumber", "time", "DateUtil", "getTimestamp", "commitDate", "DateUtil", "getTimestamp", "bornTime", "catch", "ParseException", "e", "e", "printStackTrace", "if", "time", "l", "if", "newIns", "status", "equals", "newIns", "status", "newIns", "preCode", "code", "newIns", "curCode", "code", "else", "if", "instance", "status", "equals", "newIns", "status", "instance", "status", "newIns", "preCode", "newIns", "curCode", "else", "if", "time", "l", "if", "newIns", "status", "equals", "newIns", "status", "newIns", "preCode", "newIns", "curCode", "return", "newIns" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\Analyser.java",
  "startLine" : 295,
  "endLine" : 358,
  "identifiers" : [ "Set", "String", "judgedMessage", "new", "HashSet", "for", "EvolutionMergeResult", "commitInfo", "curGroupEvolutionInfo", "String", "commitId", "commitInfo", "commitId", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "commitInfo", "getCodes", "insMessageMap", "put", "instance", "id", "commitInfo", "commitMessage", "if", "matchedIds", "contains", "instance", "id", "judgedMessage", "contains", "commitInfo", "commitMessage", "if", "isBugsRelated", "commitInfo", "commitMessage", "toLowerCase", "bugsConsistCommitCount", "judgedMessage", "add", "commitInfo", "commitMessage", "float", "currentRatio", "RawCommitManager", "rawCommitInfoMap", "get", "commitId", "modifiedFileCount", "fileNumber", "if", "modifyFilesCloneFilesRatio", "currentRatio", "modifyFilesCloneFilesRatio", "currentRatio", "Set", "String", "result", "new", "HashSet", "for", "String", "ids", "consistResult", "String", "idPair", "ids", "split", "if", "instanceMap", "get", "Integer", "parseInt", "idPair", "date", "equals", "instanceMap", "get", "Integer", "parseInt", "idPair", "date", "double", "messageSim", "String", "code1", "instanceMap", "get", "Integer", "parseInt", "idPair", "preCode", "instanceMap", "get", "Integer", "parseInt", "idPair", "curCode", "String", "code2", "instanceMap", "get", "Integer", "parseInt", "idPair", "preCode", "instanceMap", "get", "Integer", "parseInt", "idPair", "curCode", "Set", "String", "codeWords1", "getCodeWords", "code1", "Set", "String", "codeWords2", "getCodeWords", "code2", "try", "messageSim", "MinimumEditDistanceUtil", "stringSimilarity", "insMessageMap", "get", "Integer", "parseInt", "idPair", "insMessageMap", "get", "Integer", "parseInt", "idPair", "catch", "Exception", "e", "if", "messageSim", "intervalMessageSimNumber", "String", "message1", "insMessageMap", "get", "Integer", "parseInt", "idPair", "toLowerCase", "String", "message2", "insMessageMap", "get", "Integer", "parseInt", "idPair", "toLowerCase", "Set", "String", "messageWord1", "getCodeWords", "message1", "Set", "String", "messageWord2", "getCodeWords", "message2", "if", "isBugsRelated", "message1", "judgedMessage", "contains", "message1", "bugsConsistCommitCount", "judgedMessage", "add", "message1", "result", "clear", "result", "addAll", "codeWords1", "result", "retainAll", "messageWord1", "if", "result", "size", "messageCodeRelated", "if", "isBugsRelated", "message2", "judgedMessage", "contains", "message2", "bugsConsistCommitCount", "judgedMessage", "add", "message2", "result", "clear", "result", "addAll", "codeWords2", "result", "retainAll", "messageWord2", "if", "result", "size", "messageCodeRelated" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\Analyser.java",
  "startLine" : 360,
  "endLine" : 372,
  "identifiers" : [ "String", "codes", "code", "replaceAll", "toLowerCase", "codes", "codes", "replaceAll", "codes", "codes", "replaceAll", "codes", "codes", "replaceAll", "codes", "codes", "replaceAll", "codes", "codes", "replaceAll", "codes", "codes", "replaceAll", "Set", "String", "codeWords", "new", "HashSet", "Arrays", "asList", "codes", "split", "return", "codeWords" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\Analyser.java",
  "startLine" : 386,
  "endLine" : 429,
  "identifiers" : [ "Map", "Integer", "Integer", "modifyMap", "new", "HashMap", "int", "totalModifyTimes", "for", "int", "i", "i", "records", "size", "i", "int", "year", "List", "EvolutionMergeResult", "EvolutionRecord", "curList", "records", "get", "i", "int", "insNumber", "for", "int", "j", "j", "curList", "size", "j", "EvolutionMergeResult", "EvolutionRecord", "curRe", "curList", "get", "j", "if", "curRe", "status", "equals", "curRe", "status", "equals", "year", "Integer", "parseInt", "curList", "get", "j", "date", "split", "insNumber", "if", "insNumber", "totalModifyTimes", "int", "modifyTimes", "modifyMap", "getOrDefault", "year", "modifyMap", "put", "year", "modifyTimes", "int", "bornYear", "for", "Map", "Entry", "Integer", "Integer", "entry", "modifyMap", "entrySet", "if", "entry", "getKey", "bornYear", "bornYear", "entry", "getKey", "double", "activity", "String", "strNow", "new", "SimpleDateFormat", "format", "new", "Date", "toString", "split", "Integer", "curYear", "Integer", "parseInt", "strNow", "int", "sum", "for", "int", "i", "i", "curYear", "bornYear", "i", "sum", "i", "for", "Map", "Entry", "Integer", "Integer", "entry", "modifyMap", "entrySet", "if", "entry", "getKey", "bornYear", "continue", "activity", "Double", "valueOf", "entry", "getKey", "bornYear", "sum", "Double", "valueOf", "entry", "getValue", "totalModifyTimes", "return", "activity" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\Analyser.java",
  "startLine" : 431,
  "endLine" : 448,
  "identifiers" : [ "Collections", "sort", "timeStampList", "Collections", "sort", "allTimestampList", "if", "timeStampList", "size", "timeStampList", "add", "l", "if", "allTimestampList", "size", "allTimestampList", "add", "l", "maxConsisTimeInterval", "timeStampList", "get", "timeStampList", "size", "midConsisTimeInterval", "median", "timeStampList", "quaterTimeInterval", "timeStampList", "get", "timeStampList", "size", "averageConsisTimeInterval", "computeAverageTimeStamp", "timeStampList", "maxConsisTimeInterval1", "allTimestampList", "get", "allTimestampList", "size", "midConsisTimeInterval1", "median", "allTimestampList", "quaterTimeInterval1", "allTimestampList", "get", "allTimestampList", "size", "averageConsisTimeInterval1", "computeAverageTimeStamp", "allTimestampList" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\Analyser.java",
  "startLine" : 450,
  "endLine" : 459,
  "identifiers" : [ "long", "j", "int", "size", "total", "size", "if", "size", "j", "total", "get", "size", "else", "j", "total", "get", "size", "total", "get", "size", "l", "return", "j" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\Analyser.java",
  "startLine" : 469,
  "endLine" : 544,
  "identifiers" : [ "Set", "String", "fileSet", "new", "HashSet", "List", "String", "functionList", "new", "ArrayList", "Set", "String", "authors", "new", "HashSet", "Set", "String", "consistAuthors", "new", "HashSet", "int", "totalLine", "groupModifyNum", "curGroupEvolutionInfo", "size", "boolean", "firstCommitModify", "false", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "curGroupEvolutionInfo", "get", "getCodes", "if", "instance", "status", "equals", "firstCommitModify", "true", "repoSet", "add", "instance", "repoName", "for", "String", "name", "repoSet", "repoNameConcatenate", "name", "if", "firstCommitModify", "groupModifyNum", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "curGroupEvolutionInfo", "get", "curGroupEvolutionInfo", "size", "getCodes", "fileSet", "add", "instance", "repoName", "instance", "realPath", "String", "funcPath", "instance", "realPath", "replaceAll", "instance", "startLine", "instance", "endLine", "functionList", "add", "funcPath", "totalLine", "instance", "endLine", "instance", "startLine", "for", "EvolutionMergeResult", "commitInfo", "curGroupEvolutionInfo", "authors", "add", "commitInfo", "submitter", "for", "EvolutionMergeResult", "EvolutionRecord", "ins", "commitInfo", "getCodes", "if", "ins", "status", "equals", "insModifyNum", "fileNumber", "fileSet", "size", "distance", "ComputeDistanceUtil", "computeDistance", "functionList", "averageLine", "totalLine", "insNumber", "authorNum", "authors", "size", "Long", "curTime", "null", "try", "curTime", "DateUtil", "getTimestamp", "DateUtil", "format", "new", "Date", "String", "commitDate", "if", "DangerConfig", "isMulti", "equals", "commitDate", "RawCommitManager", "rawCommitInfoMap", "get", "RawCommitManager", "latestCommitId", "commitDate", "curTime", "DateUtil", "getTimestamp", "commitDate", "Long", "bornTime", "DateUtil", "getTimestamp", "curGroupEvolutionInfo", "get", "date", "System", "out", "println", "curGroupEvolutionInfo", "get", "date", "commitDate", "cloneGroupAge", "Math", "abs", "curTime", "bornTime", "catch", "ParseException", "e", "e", "printStackTrace", "latestModifyTime", "curGroupEvolutionInfo", "get", "curGroupEvolutionInfo", "size", "date", "if", "insModifyNum", "consistRatio", "else", "consistRatio", "Double", "valueOf", "matchedIds", "size", "insModifyNum", "consistModifyNum", "matchedIds", "size", "for", "EvolutionMergeResult", "commitInfo", "curGroupEvolutionInfo", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "commitInfo", "getCodes", "if", "matchedIds", "contains", "instance", "id", "consistAuthors", "add", "commitInfo", "submitter", "if", "instance", "status", "equals", "latestInstanceBornTime", "commitInfo", "date", "if", "latestInstanceBornTime", "equals", "latestInstanceBornTime", "curGroupEvolutionInfo", "get", "date", "consistAuthorNum", "consistAuthors", "size" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\Analyser.java",
  "startLine" : 546,
  "endLine" : 576,
  "identifiers" : [ "int", "evoRow", "List", "List", "EvolutionMergeResult", "EvolutionRecord", "records", "new", "ArrayList", "for", "int", "i", "i", "size", "i", "records", "add", "new", "ArrayList", "int", "id", "for", "EvolutionMergeResult", "result", "evoInfo", "List", "EvolutionMergeResult", "EvolutionRecord", "curCodes", "result", "getCodes", "for", "int", "i", "i", "curCodes", "size", "i", "curCodes", "get", "i", "id", "id", "try", "curCodes", "get", "i", "curCode", "DeleteCAndCplusplusAndJavaNote", "delete_C_Cplusplus_Java_Note", "curCodes", "get", "i", "curCode", "catch", "Exception", "e", "System", "out", "println", "try", "curCodes", "get", "i", "preCode", "DeleteCAndCplusplusAndJavaNote", "delete_C_Cplusplus_Java_Note", "curCodes", "get", "i", "preCode", "catch", "Exception", "e", "System", "out", "println", "EvolutionMergeResult", "EvolutionRecord", "curRecord", "curCodes", "get", "i", "records", "get", "evoRow", "add", "curRecord", "id", "evoRow", "return", "records" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\Analyser.java",
  "startLine" : 579,
  "endLine" : 594,
  "identifiers" : [ "List", "List", "EvolutionMergeResult", "EvolutionRecord", "arrangedList", "new", "ArrayList", "for", "int", "i", "i", "records", "get", "size", "i", "arrangedList", "add", "new", "ArrayList", "for", "int", "j", "j", "records", "size", "j", "for", "int", "k", "k", "records", "get", "j", "size", "k", "arrangedList", "get", "k", "add", "records", "get", "j", "get", "k", "instanceMap", "put", "records", "get", "j", "get", "k", "id", "records", "get", "j", "get", "k", "return", "arrangedList" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\Analyser.java",
  "startLine" : 596,
  "endLine" : 606,
  "identifiers" : [ "List", "String", "lines", "FileUtil", "readLines", "file", "String", "content", "String", "join", "lines", "List", "EvolutionMergeResult", "extractedContent", "new", "ArrayList", "try", "extractedContent", "JSONArray", "parseArray", "content", "EvolutionMergeResult", "class", "catch", "Exception", "e", "System", "out", "println", "return", "extractedContent" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\Analyser.java",
  "startLine" : 608,
  "endLine" : 650,
  "identifiers" : [ "timeStampList", "clear", "cloneGroupAge", "l", "consistRatio", "matchedIds", "clear", "activity", "consistResult", "clear", "instanceMap", "clear", "curGroupEvolutionInfo", "clear", "insNumber", "fileNumber", "distance", "insModifyNum", "groupModifyNum", "averageLine", "authorNum", "latestModifyTime", "maxConsisTimeInterval", "l", "averageConsisTimeInterval", "l", "midConsisTimeInterval", "l", "quaterTimeInterval", "l", "maxConsisTimeInterval1", "l", "averageConsisTimeInterval1", "l", "midConsisTimeInterval1", "l", "quaterTimeInterval1", "l", "consistModifyNum", "consistAuthorNum", "latestInstanceBornTime", "allTimestampList", "clear", "allConsistPair", "clear", "bugsCommitCount", "bugsConsistCommitCount", "modifyFilesCloneFilesRatio", "insBornMap", "clear", "consistResultForTest", "clear", "insMessageMap", "clear", "intervalMessageSimNumber", "repoSet", "clear", "repoNameConcatenate", "messageCodeRelated" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 25,
  "endLine" : 34,
  "identifiers" : [ "int", "instanceNum", "instanceList", "size", "for", "int", "i", "i", "instanceNum", "i", "List", "EvolutionMergeResult", "EvolutionRecord", "instancesOne", "instanceList", "get", "i", "for", "int", "j", "i", "j", "instanceNum", "j", "List", "EvolutionMergeResult", "EvolutionRecord", "instancesTwo", "instanceList", "get", "j", "resultList", "add", "analyseBetweenInstances", "instancesOne", "instancesTwo" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 36,
  "endLine" : 58,
  "identifiers" : [ "Map", "Integer", "Map", "Integer", "Double", "result", "new", "HashMap", "for", "EvolutionMergeResult", "EvolutionRecord", "instanceLeft", "instancesOne", "for", "EvolutionMergeResult", "EvolutionRecord", "instanceRight", "instancesTwo", "if", "instanceLeft", "status", "equals", "instanceRight", "status", "equals", "continue", "double", "similarity", "computeEditBehaviorSimilarity", "instanceLeft", "instanceRight", "if", "similarity", "Map", "Integer", "Double", "leftResult", "result", "getOrDefault", "instanceLeft", "id", "new", "HashMap", "leftResult", "put", "instanceRight", "id", "similarity", "result", "put", "instanceLeft", "id", "leftResult", "Map", "Integer", "Double", "rightResult", "result", "getOrDefault", "instanceRight", "id", "new", "HashMap", "rightResult", "put", "instanceLeft", "id", "similarity", "result", "put", "instanceRight", "id", "rightResult", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 60,
  "endLine" : 78,
  "identifiers" : [ "double", "similarity", "String", "leftPreCode", "formatCode", "instanceLeft", "preCode", "String", "leftCurCode", "formatCode", "instanceLeft", "curCode", "String", "rightPreCode", "formatCode", "instanceRight", "preCode", "String", "rightCurCode", "formatCode", "instanceRight", "curCode", "LinkedList", "diff_match_patch", "Diff", "leftModifyList", "generateModifyInfo", "leftPreCode", "leftCurCode", "LinkedList", "diff_match_patch", "Diff", "rightModifyList", "generateModifyInfo", "rightPreCode", "rightCurCode", "cleanupOperation", "leftModifyList", "diff_match_patch", "Operation", "EQUAL", "cleanupOperation", "rightModifyList", "diff_match_patch", "Operation", "EQUAL", "similarity", "computeSimilarity", "leftModifyList", "rightModifyList", "return", "similarity" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 80,
  "endLine" : 90,
  "identifiers" : [ "String", "snippet", "String", "codeArr", "code", "split", "for", "int", "i", "i", "codeArr", "length", "i", "if", "sStartLine", "i", "i", "sEndLine", "snippet", "codeArr", "i", "return", "snippet" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 92,
  "endLine" : 100,
  "identifiers" : [ "String", "code", "code", "codeText", "replaceAll", "code", "code", "replaceAll", "code", "code", "replaceAll", "code", "code", "replaceAll", "code", "code", "replaceAll", "return", "code" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 102,
  "endLine" : 147,
  "identifiers" : [ "leftDiff", "processDiffList", "leftDiff", "rightDiff", "processDiffList", "rightDiff", "int", "sizeLeft", "leftDiff", "size", "int", "sizeRight", "rightDiff", "size", "List", "diff_match_patch", "Diff", "matchedDiffList", "new", "ArrayList", "int", "maxEditSize", "LinkedList", "diff_match_patch", "Diff", "outterDiffList", "LinkedList", "diff_match_patch", "Diff", "innerDiffList", "if", "sizeLeft", "sizeRight", "outterDiffList", "leftDiff", "innerDiffList", "rightDiff", "maxEditSize", "leftDiff", "size", "else", "outterDiffList", "rightDiff", "innerDiffList", "leftDiff", "maxEditSize", "rightDiff", "size", "for", "int", "i", "i", "outterDiffList", "size", "i", "boolean", "matched", "false", "for", "int", "j", "j", "innerDiffList", "size", "j", "if", "outterDiffList", "get", "i", "operation", "equals", "innerDiffList", "get", "j", "operation", "String", "outterEditString", "processEditText", "outterDiffList", "get", "i", "text", "String", "innerEditString", "processEditText", "innerDiffList", "get", "j", "text", "if", "outterEditString", "replaceAll", "equals", "innerEditString", "replaceAll", "equals", "continue", "if", "MinimumEditDistanceUtil", "stringSimilarity", "outterEditString", "innerEditString", "matchedDiffList", "add", "outterDiffList", "get", "i", "innerDiffList", "remove", "j", "matched", "true", "break", "if", "matched", "outterDiffList", "remove", "i", "i", "return", "double", "matchedDiffList", "size", "maxEditSize" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 149,
  "endLine" : 158,
  "identifiers" : [ "String", "result", "String", "IDENTIFIER", "result", "text", "replaceAll", "IDENTIFIER", "result", "result", "replaceAll", "result", "result", "replaceAll", "result", "result", "replaceAll", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 160,
  "endLine" : 177,
  "identifiers" : [ "LinkedList", "diff_match_patch", "Diff", "editList", "new", "LinkedList", "for", "diff_match_patch", "Diff", "diff", "diffList", "diff_match_patch", "Operation", "operation", "diff", "operation", "String", "textList", "diff", "text", "split", "for", "String", "text", "textList", "text", "text", "replace", "text", "text", "replace", "if", "text", "equals", "continue", "diff_match_patch", "Diff", "edit", "new", "diff_match_patch", "Diff", "operation", "text", "editList", "add", "edit", "return", "editList" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 179,
  "endLine" : 190,
  "identifiers" : [ "Set", "diff_match_patch", "Diff", "leftSet", "new", "HashSet", "leftDiff", "Set", "diff_match_patch", "Diff", "rightSet", "new", "HashSet", "rightDiff", "Set", "diff_match_patch", "Diff", "crossSet", "new", "HashSet", "crossSet", "addAll", "leftDiff", "crossSet", "retainAll", "rightDiff", "int", "biggerSize", "leftDiff", "size", "rightDiff", "size", "leftDiff", "size", "rightDiff", "size", "return", "double", "crossSet", "size", "biggerSize" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 214,
  "endLine" : 267,
  "identifiers" : [ "for", "Map", "Integer", "Map", "Integer", "Double", "result", "resultList", "for", "Map", "Entry", "Integer", "Map", "Integer", "Double", "entry", "result", "entrySet", "int", "outterKey", "entry", "getKey", "Map", "Integer", "Double", "innerMap", "entry", "getValue", "Set", "Integer", "exactSimilarity", "new", "HashSet", "for", "Map", "Entry", "Integer", "Double", "innerEntry", "innerMap", "entrySet", "Analyser", "consistResultForTest", "add", "outterKey", "innerEntry", "getKey", "innerEntry", "getValue", "if", "innerEntry", "getValue", "exactSimilarity", "add", "innerEntry", "getKey", "if", "exactSimilarity", "size", "Long", "maxTime", "l", "Long", "interval", "l", "int", "matchedId", "for", "Integer", "id", "exactSimilarity", "try", "interval", "Math", "abs", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "outterKey", "date", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "id", "date", "if", "interval", "maxTime", "matchedId", "id", "maxTime", "interval", "catch", "ParseException", "e", "e", "printStackTrace", "if", "isTwoInstanceMatched", "outterKey", "matchedId", "continue", "if", "Analyser", "matchedIds", "contains", "outterKey", "Analyser", "matchedIds", "contains", "matchedId", "continue", "addAllTimeInterval", "outterKey", "matchedId", "String", "resultString", "outterKey", "matchedId", "outterKey", "matchedId", "matchedId", "outterKey", "consistResult", "add", "resultString", "Analyser", "matchedIds", "add", "outterKey", "Analyser", "matchedIds", "add", "matchedId", "exactMatchedIds", "add", "outterKey", "exactMatchedIds", "add", "matchedId", "Analyser", "timeStampList", "add", "maxTime", "List", "Integer", "curList1", "idMatchedInstance", "getOrDefault", "outterKey", "new", "ArrayList", "List", "Integer", "curList2", "idMatchedInstance", "getOrDefault", "matchedId", "new", "ArrayList", "curList1", "add", "Analyser", "instanceMap", "get", "matchedId", "instanceNumber", "curList2", "add", "Analyser", "instanceMap", "get", "outterKey", "instanceNumber", "idMatchedInstance", "put", "outterKey", "curList1", "idMatchedInstance", "put", "matchedId", "curList2" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 269,
  "endLine" : 276,
  "identifiers" : [ "if", "idMatchedInstance", "getOrDefault", "instanceId1", "new", "ArrayList", "contains", "Analyser", "instanceMap", "get", "instanceId2", "instanceNumber", "return", "true", "if", "idMatchedInstance", "getOrDefault", "instanceId2", "new", "ArrayList", "contains", "Analyser", "instanceMap", "get", "instanceId1", "instanceNumber", "return", "true", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 278,
  "endLine" : 366,
  "identifiers" : [ "for", "Map", "Integer", "Map", "Integer", "Double", "result", "resultList", "for", "Map", "Entry", "Integer", "Map", "Integer", "Double", "entry", "result", "entrySet", "int", "outterKey", "entry", "getKey", "Map", "Integer", "Double", "innerMap", "entry", "getValue", "long", "outterTime", "l", "try", "outterTime", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "outterKey", "date", "catch", "ParseException", "e", "e", "printStackTrace", "Set", "Integer", "nearSimilarity", "new", "HashSet", "double", "consistSim", "for", "Map", "Entry", "Integer", "Double", "innerEntry", "innerMap", "entrySet", "if", "innerEntry", "getValue", "nearSimilarity", "add", "innerEntry", "getKey", "if", "nearSimilarity", "size", "for", "Integer", "id", "nearSimilarity", "double", "timeInterval", "double", "getTimeIntervalById", "outterKey", "id", "double", "twoYear", "if", "timeInterval", "twoYear", "continue", "long", "curTime", "l", "try", "curTime", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "id", "date", "catch", "ParseException", "e", "e", "printStackTrace", "if", "curTime", "outterTime", "continue", "consistSim", "innerMap", "get", "id", "try", "for", "Integer", "id", "nearSimilarity", "if", "consistSim", "innerMap", "get", "id", "nearSimilarity", "remove", "id", "consistSim", "catch", "Exception", "e", "System", "out", "println", "if", "consistSim", "consistSim", "for", "Integer", "id", "nearSimilarity", "double", "timeInterval", "double", "getTimeIntervalById", "outterKey", "id", "double", "twoYear", "if", "timeInterval", "twoYear", "continue", "long", "curTime", "l", "try", "curTime", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "id", "date", "catch", "ParseException", "e", "e", "printStackTrace", "if", "curTime", "outterTime", "continue", "if", "exactMatchedIds", "contains", "outterKey", "exactMatchedIds", "contains", "id", "continue", "if", "Analyser", "matchedIds", "contains", "outterKey", "Analyser", "matchedIds", "contains", "id", "continue", "String", "resultString", "outterKey", "id", "outterKey", "id", "id", "outterKey", "consistResult", "add", "resultString", "innerMap", "get", "id", "Analyser", "matchedIds", "add", "outterKey", "Analyser", "matchedIds", "add", "id", "try", "long", "consistTimeInterval", "Math", "abs", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "outterKey", "date", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "id", "date", "Analyser", "timeStampList", "add", "consistTimeInterval", "Analyser", "allTimestampList", "add", "consistTimeInterval", "catch", "ParseException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 368,
  "endLine" : 412,
  "identifiers" : [ "for", "Map", "Integer", "Map", "Integer", "Double", "result", "resultList", "for", "Map", "Entry", "Integer", "Map", "Integer", "Double", "entry", "result", "entrySet", "int", "outterKey", "entry", "getKey", "Map", "Integer", "Double", "innerMap", "entry", "getValue", "Set", "Integer", "similarity", "new", "HashSet", "for", "Map", "Entry", "Integer", "Double", "innerEntry", "innerMap", "entrySet", "Analyser", "consistResultForTest", "add", "outterKey", "innerEntry", "getKey", "innerEntry", "getValue", "if", "innerEntry", "getValue", "innerEntry", "getValue", "similarity", "add", "innerEntry", "getKey", "double", "matchSim", "if", "similarity", "size", "Long", "maxTime", "l", "Long", "interval", "l", "int", "matchedId", "for", "Integer", "id", "similarity", "try", "interval", "Math", "abs", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "outterKey", "date", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "id", "date", "if", "interval", "maxTime", "matchedId", "id", "maxTime", "interval", "matchSim", "innerMap", "get", "id", "catch", "ParseException", "e", "e", "printStackTrace", "addAllTimeInterval", "outterKey", "matchedId", "if", "Analyser", "matchedIds", "contains", "outterKey", "Analyser", "matchedIds", "contains", "matchedId", "continue", "String", "resultString", "outterKey", "matchedId", "outterKey", "matchedId", "matchedId", "outterKey", "consistResult", "add", "resultString", "matchSim", "Analyser", "matchedIds", "add", "outterKey", "Analyser", "matchedIds", "add", "matchedId", "exactMatchedIds", "add", "outterKey", "exactMatchedIds", "add", "matchedId", "Analyser", "timeStampList", "add", "maxTime" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 414,
  "endLine" : 422,
  "identifiers" : [ "Long", "timeInterval", "l", "try", "timeInterval", "Math", "abs", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "cloneId1", "date", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "cloneId2", "date", "catch", "ParseException", "e", "e", "printStackTrace", "return", "timeInterval" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 424,
  "endLine" : 430,
  "identifiers" : [ "String", "clonePair", "cloneId1", "cloneId2", "cloneId1", "cloneId2", "cloneId2", "cloneId1", "if", "Analyser", "allConsistPair", "contains", "clonePair", "Analyser", "allConsistPair", "add", "clonePair", "Analyser", "allTimestampList", "add", "getTimeIntervalById", "cloneId1", "cloneId2" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\entity\\CommitInfo.java",
  "startLine" : 19,
  "endLine" : 29,
  "identifiers" : [ "try", "List", "String", "info", "FileUtil", "readLines", "for", "String", "line", "info", "String", "lineArr", "line", "split", "commitMessage", "put", "lineArr", "lineArr", "lineArr", "length", "replace", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\extractor\\CloneInfoExtractor.java",
  "startLine" : 18,
  "endLine" : 87,
  "identifiers" : [ "File", "outFolder", "new", "File", "outputDirPath", "if", "outFolder", "exists", "outFolder", "mkdir", "FileWriter", "fw", "new", "FileWriter", "outputDirPath", "File", "separator", "type", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "bw", "write", "bw", "newLine", "FileWriter", "fw1", "new", "FileWriter", "outputDirPath", "File", "separator", "type", "BufferedWriter", "bw1", "new", "BufferedWriter", "fw1", "bw1", "write", "bw1", "newLine", "File", "dir", "new", "File", "inputDirPath", "File", "files", "dir", "listFiles", "assert", "files", "null", "for", "File", "file", "files", "if", "file", "isFile", "String", "curGroupId", "file", "getName", "replace", "try", "Analyser", "analyse", "file", "getPath", "type", "catch", "Exception", "e", "System", "out", "println", "continue", "if", "Analyser", "insNumber", "continue", "int", "dangerDegree", "String", "info", "curGroupId", "Analyser", "insNumber", "Analyser", "fileNumber", "Analyser", "averageLine", "Analyser", "repoSet", "size", "Analyser", "distance", "Analyser", "modifyFilesCloneFilesRatio", "Analyser", "groupModifyNum", "Analyser", "insModifyNum", "Analyser", "consistModifyNum", "Analyser", "consistRatio", "Analyser", "authorNum", "Analyser", "consistAuthorNum", "Analyser", "maxConsisTimeInterval", "Analyser", "maxConsisTimeInterval1", "Analyser", "averageConsisTimeInterval", "Analyser", "averageConsisTimeInterval1", "Analyser", "midConsisTimeInterval", "Analyser", "midConsisTimeInterval1", "Analyser", "quaterTimeInterval", "Analyser", "quaterTimeInterval1", "Analyser", "bugsCommitCount", "Analyser", "bugsConsistCommitCount", "Analyser", "cloneGroupAge", "Analyser", "latestInstanceBornTime", "Analyser", "latestModifyTime", "Analyser", "messageCodeRelated", "Analyser", "intervalMessageSimNumber", "dangerDegree", "bw", "write", "info", "System", "out", "println", "info", "bw", "newLine", "bw1", "write", "curGroupId", "Analyser", "repoNameConcatenate", "bw1", "newLine", "bw", "close", "bw1", "close" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\extractor\\CloneInfoExtractor.java",
  "startLine" : 89,
  "endLine" : 107,
  "identifiers" : [ "int", "dangerDegree", "double", "changePerInstance", "Double", "valueOf", "Analyser", "insModifyNum", "Analyser", "insNumber", "if", "changePerInstance", "DangerConfig", "CPI", "dangerDegree", "else", "if", "Analyser", "consistRatio", "DangerConfig", "lowCCP", "dangerDegree", "else", "if", "Analyser", "averageConsisTimeInterval", "DangerConfig", "lowCCD", "l", "dangerDegree", "else", "if", "DangerConfig", "lowCCD", "l", "Analyser", "averageConsisTimeInterval", "Analyser", "averageConsisTimeInterval", "DangerConfig", "highCCD", "l", "dangerDegree", "else", "if", "Analyser", "averageConsisTimeInterval", "DangerConfig", "highCCD", "l", "dangerDegree", "if", "Analyser", "bugsConsistCommitCount", "DangerConfig", "useBugInfo", "dangerDegree", "return", "dangerDegree" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\extractor\\InfoExtractor.java",
  "startLine" : 18,
  "endLine" : 194,
  "identifiers" : [ "File", "outFolder", "new", "File", "outputDirPath", "if", "outFolder", "exists", "outFolder", "mkdir", "FileWriter", "fw", "new", "FileWriter", "outputDirPath", "File", "separator", "type", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "bw", "write", "bw", "newLine", "File", "dir", "new", "File", "inputDirPath", "File", "files", "dir", "listFiles", "assert", "files", "null", "for", "File", "file", "files", "if", "file", "isFile", "String", "curGroupId", "file", "getName", "replace", "System", "out", "println", "curGroupId", "type", "List", "EvolutionMergeResult", "data", "loadData", "file", "getPath", "EvolutionMergeResult", "currentResult", "new", "EvolutionMergeResult", "if", "data", "size", "continue", "if", "type", "equals", "currentResult", "data", "get", "data", "size", "else", "if", "type", "equals", "currentResult", "data", "get", "else", "System", "out", "println", "int", "insNum", "Set", "String", "fileSet", "new", "HashSet", "List", "String", "functionSet", "new", "ArrayList", "int", "inSameGroupInstanceNumber", "for", "EvolutionMergeResult", "EvolutionRecord", "record", "currentResult", "getCodes", "if", "record", "status", "equals", "record", "status", "equals", "insNum", "fileSet", "add", "record", "realPath", "replaceAll", "String", "funcPath", "record", "realPath", "replaceAll", "File", "separator", "record", "startLine", "record", "endLine", "functionSet", "add", "funcPath", "if", "record", "groupId", "equals", "curGroupId", "inSameGroupInstanceNumber", "if", "insNum", "inSameGroupInstanceNumber", "continue", "int", "distance", "ComputeDistanceUtil", "computeDistance", "functionSet", "Set", "String", "equalMergePair", "Analyser", "analyse", "file", "getPath", "type", "int", "insModifyCount", "int", "cloneModifyCount", "int", "instanceCount", "int", "totalLineCount", "Set", "String", "authorSet", "new", "HashSet", "if", "type", "equals", "for", "int", "i", "data", "size", "i", "i", "EvolutionMergeResult", "result", "data", "get", "i", "int", "intNotNullCount", "int", "modifyThisLineCount", "for", "EvolutionMergeResult", "EvolutionRecord", "record", "result", "getCodes", "if", "record", "status", "equals", "intNotNullCount", "if", "record", "status", "equals", "modifyThisLineCount", "if", "record", "status", "equals", "record", "status", "equals", "instanceCount", "totalLineCount", "record", "endLine", "record", "startLine", "if", "intNotNullCount", "break", "insModifyCount", "modifyThisLineCount", "if", "result", "getStatus", "null", "result", "getStatus", "equals", "modifyThisLineCount", "cloneModifyCount", "authorSet", "add", "result", "getSubmitter", "else", "if", "type", "equals", "for", "int", "i", "i", "data", "size", "i", "EvolutionMergeResult", "result", "data", "get", "i", "int", "intNotNullCount", "int", "modifyThisLineCount", "for", "EvolutionMergeResult", "EvolutionRecord", "record", "result", "getCodes", "if", "record", "status", "equals", "intNotNullCount", "if", "record", "status", "equals", "modifyThisLineCount", "if", "record", "status", "equals", "record", "status", "equals", "instanceCount", "totalLineCount", "record", "endLine", "record", "startLine", "if", "intNotNullCount", "break", "insModifyCount", "modifyThisLineCount", "if", "result", "getStatus", "null", "result", "getStatus", "equals", "modifyThisLineCount", "cloneModifyCount", "authorSet", "add", "result", "getSubmitter", "else", "System", "out", "println", "Set", "String", "consistInstanceIds", "new", "HashSet", "for", "String", "line", "equalMergePair", "String", "ids", "line", "split", "consistInstanceIds", "add", "ids", "consistInstanceIds", "add", "ids", "double", "averageLine", "Double", "valueOf", "totalLineCount", "instanceCount", "double", "consistRatio", "if", "insModifyCount", "consistRatio", "Double", "valueOf", "consistInstanceIds", "size", "insModifyCount", "int", "dangerDegree", "if", "cloneModifyCount", "consistRatio", "dangerDegree", "else", "if", "consistRatio", "distance", "Analyser", "maxTimeStamp", "dangerDegree", "else", "if", "consistRatio", "distance", "Analyser", "maxTimeStamp", "dangerDegree", "else", "dangerDegree", "Collections", "sort", "Analyser", "timeStampList", "String", "info", "if", "Analyser", "timeStampList", "size", "info", "file", "getName", "replace", "insNum", "fileSet", "size", "distance", "averageLine", "consistRatio", "insModifyCount", "Analyser", "maxTimeStamp", "computeAverageTimeStamp", "Analyser", "timeStampList", "Analyser", "timeStampList", "get", "Analyser", "timeStampList", "size", "Analyser", "timeStampList", "get", "Analyser", "timeStampList", "size", "cloneModifyCount", "authorSet", "size", "Analyser", "cloneGroupAge", "Analyser", "activity", "dangerDegree", "else", "info", "file", "getName", "replace", "insNum", "fileSet", "size", "distance", "averageLine", "consistRatio", "insModifyCount", "cloneModifyCount", "authorSet", "size", "Analyser", "cloneGroupAge", "Analyser", "activity", "dangerDegree", "Analyser", "maxTimeStamp", "L", "Analyser", "activity", "Analyser", "cloneGroupAge", "l", "Analyser", "timeStampList", "clear", "System", "out", "println", "info", "bw", "write", "info", "bw", "newLine", "bw", "close" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\processor\\InitialProcessor.java",
  "startLine" : 15,
  "endLine" : 25,
  "identifiers" : [ "System", "out", "println", "if", "DangerConfig", "isMulti", "equals", "initSingleProject", "if", "DangerConfig", "isMulti", "equals", "initMultiProject", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\processor\\InitialProcessor.java",
  "startLine" : 27,
  "endLine" : 41,
  "identifiers" : [ "System", "out", "println", "DangerConfig", "commitInfo", "List", "String", "commitList", "FileUtil", "readLines", "DangerConfig", "commitInfo", "int", "lineNumber", "String", "latestCommitId", "for", "String", "line", "commitList", "String", "tempList", "line", "split", "if", "lineNumber", "latestCommitId", "tempList", "RawCommitInfo", "info", "new", "RawCommitInfo", "tempList", "tempList", "lineNumber", "Integer", "parseInt", "tempList", "RawCommitManager", "rawCommitInfoMap", "put", "tempList", "info", "RawCommitManager", "latestCommitId", "latestCommitId" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\processor\\InitialProcessor.java",
  "startLine" : 43,
  "endLine" : 85,
  "identifiers" : [ "System", "out", "println", "DangerConfig", "commitInfo", "File", "commitInfoDir", "new", "File", "DangerConfig", "commitInfo", "if", "commitInfoDir", "exists", "System", "out", "printf", "DangerConfig", "commitInfo", "System", "exit", "File", "projectsDirs", "commitInfoDir", "listFiles", "if", "projectsDirs", "null", "projectsDirs", "length", "System", "out", "printf", "DangerConfig", "commitInfo", "System", "exit", "for", "File", "projectDir", "projectsDirs", "String", "projectName", "projectDir", "getName", "File", "files", "projectDir", "listFiles", "if", "files", "null", "files", "length", "continue", "File", "commitInfoFile", "null", "for", "File", "file", "files", "if", "file", "getName", "equals", "commitInfoFile", "file", "break", "if", "commitInfoFile", "null", "continue", "int", "lineNumber", "List", "String", "commitList", "FileUtil", "readLines", "commitInfoFile", "getAbsolutePath", "String", "latestCommitId", "for", "String", "line", "commitList", "String", "tempList", "line", "split", "if", "lineNumber", "latestCommitId", "tempList", "RawCommitInfo", "info", "new", "RawCommitInfo", "tempList", "tempList", "lineNumber", "Integer", "parseInt", "tempList", "RawCommitManager", "rawCommitInfoMap", "put", "tempList", "info", "RawCommitManager", "latestCommitIdMap", "put", "projectName", "latestCommitId" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\processor\\MainProcessor.java",
  "startLine" : 23,
  "endLine" : 41,
  "identifiers" : [ "try", "List", "EvolutionMergeResult", "data", "loadData", "file", "String", "groupName", "name", "for", "EvolutionMergeResult", "ele", "data", "System", "out", "println", "ele", "toString", "String", "commitId", "ele", "commitId", "List", "EvolutionMergeResult", "EvolutionRecord", "codes", "ele", "getCodes", "List", "InstanceInfo", "insInfoList", "new", "ArrayList", "for", "EvolutionMergeResult", "EvolutionRecord", "record", "codes", "InstanceInfo", "info", "new", "InstanceInfo", "Integer", "toString", "record", "id", "commitId", "record", "status", "insInfoList", "add", "info", "tempInfo", "add", "insInfoList", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\processor\\MainProcessor.java",
  "startLine" : 43,
  "endLine" : 57,
  "identifiers" : [ "process", "file", "groupName", "EvolutionInfo", "evolutionInfo", "new", "EvolutionInfo", "groupName", "for", "int", "i", "i", "tempInfo", "size", "i", "List", "InstanceInfo", "curInsList", "tempInfo", "get", "i", "List", "InstanceInfo", "nextInsList", "tempInfo", "get", "i", "for", "int", "j", "j", "curInsList", "size", "j", "curInsList", "get", "j", "children", "add", "nextInsList", "get", "j", "evolutionInfo", "children", "tempInfo", "get", "return", "evolutionInfo" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\Analyser.java",
  "startLine" : 31,
  "endLine" : 126,
  "identifiers" : [ "try", "List", "EvolutionMergeResult", "data", "loadData", "file", "List", "List", "EvolutionMergeResult", "EvolutionRecord", "records", "new", "ArrayList", "List", "List", "EvolutionMergeResult", "EvolutionRecord", "reversedRecords", "new", "ArrayList", "int", "size", "data", "size", "for", "int", "i", "i", "size", "i", "records", "add", "new", "ArrayList", "int", "evoRow", "for", "EvolutionMergeResult", "result", "data", "List", "EvolutionMergeResult", "EvolutionRecord", "curCodes", "result", "getCodes", "for", "int", "i", "i", "curCodes", "size", "i", "EvolutionMergeResult", "EvolutionRecord", "curRecord", "curCodes", "get", "i", "records", "get", "evoRow", "add", "curRecord", "evoRow", "if", "type", "equals", "for", "int", "k", "records", "size", "k", "k", "reversedRecords", "add", "records", "get", "k", "records", "clear", "records", "addAll", "reversedRecords", "getCloneGroupAge", "records", "activity", "getCloneGroupActivety", "records", "Set", "String", "pairs", "new", "HashSet", "int", "row", "records", "size", "int", "column", "records", "get", "size", "for", "int", "i", "i", "row", "i", "for", "int", "j", "j", "column", "j", "EvolutionMergeResult", "EvolutionRecord", "leftRecord", "records", "get", "i", "get", "j", "if", "leftRecord", "status", "equals", "continue", "for", "int", "n", "n", "column", "n", "if", "n", "j", "continue", "for", "int", "m", "i", "m", "row", "m", "List", "EvolutionMergeResult", "EvolutionRecord", "curCommitInstanceList", "records", "get", "m", "int", "curInstanceNumber", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "curCommitInstanceList", "if", "instance", "status", "equals", "type", "equals", "curInstanceNumber", "if", "instance", "status", "equals", "instance", "status", "equals", "type", "equals", "curInstanceNumber", "if", "curInstanceNumber", "continue", "EvolutionMergeResult", "EvolutionRecord", "rightRecord", "records", "get", "m", "get", "n", "if", "rightRecord", "status", "equals", "continue", "String", "pair", "judgeConsistencyModify", "leftRecord", "rightRecord", "if", "pair", "equals", "pairs", "add", "pair", "break", "return", "pairs", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "HashSet" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\Analyser.java",
  "startLine" : 128,
  "endLine" : 171,
  "identifiers" : [ "Map", "Integer", "Integer", "modifyMap", "new", "HashMap", "int", "totalModifyTimes", "for", "int", "i", "i", "records", "size", "i", "int", "year", "List", "EvolutionMergeResult", "EvolutionRecord", "curList", "records", "get", "i", "int", "insNumber", "for", "int", "j", "j", "curList", "size", "j", "EvolutionMergeResult", "EvolutionRecord", "curRe", "curList", "get", "j", "if", "curRe", "status", "equals", "curRe", "status", "equals", "year", "Integer", "parseInt", "curList", "get", "j", "date", "split", "insNumber", "if", "insNumber", "totalModifyTimes", "int", "modifyTimes", "modifyMap", "getOrDefault", "year", "modifyMap", "put", "year", "modifyTimes", "int", "bornYear", "for", "Map", "Entry", "Integer", "Integer", "entry", "modifyMap", "entrySet", "if", "entry", "getKey", "bornYear", "bornYear", "entry", "getKey", "double", "activity", "String", "strNow", "new", "SimpleDateFormat", "format", "new", "Date", "toString", "split", "Integer", "curYear", "Integer", "parseInt", "strNow", "int", "sum", "for", "int", "i", "i", "curYear", "bornYear", "i", "sum", "i", "for", "Map", "Entry", "Integer", "Integer", "entry", "modifyMap", "entrySet", "if", "entry", "getKey", "bornYear", "continue", "activity", "Double", "valueOf", "entry", "getKey", "bornYear", "sum", "Double", "valueOf", "entry", "getValue", "totalModifyTimes", "return", "activity" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\Analyser.java",
  "startLine" : 173,
  "endLine" : 197,
  "identifiers" : [ "Long", "age", "l", "String", "time", "for", "int", "i", "i", "records", "size", "i", "int", "insNumber", "List", "EvolutionMergeResult", "EvolutionRecord", "curList", "records", "get", "i", "for", "int", "j", "j", "curList", "size", "j", "EvolutionMergeResult", "EvolutionRecord", "curRe", "curList", "get", "j", "if", "curRe", "status", "equals", "curRe", "status", "equals", "insNumber", "if", "insNumber", "curRe", "date", "equals", "time", "curRe", "date", "if", "insNumber", "try", "Long", "curTime", "DateUtil", "getTimestamp", "DateUtil", "format", "new", "Date", "Long", "bornTime", "DateUtil", "getTimestamp", "time", "cloneGroupAge", "Math", "abs", "curTime", "bornTime", "catch", "ParseException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\Analyser.java",
  "startLine" : 199,
  "endLine" : 245,
  "identifiers" : [ "String", "curResult", "if", "matchedIds", "contains", "leftRecord", "id", "matchedIds", "contains", "rightRecord", "id", "return", "curResult", "String", "leftPreCode", "leftRecord", "preCode", "String", "leftCurCode", "leftRecord", "curCode", "String", "rightPreCode", "rightRecord", "preCode", "String", "rightCurCode", "rightRecord", "curCode", "LinkedList", "diff_match_patch", "Diff", "leftModifyList", "generateModifyInfo", "leftPreCode", "leftCurCode", "LinkedList", "diff_match_patch", "Diff", "rightModifyList", "generateModifyInfo", "rightPreCode", "rightCurCode", "cleanupOperation", "leftModifyList", "diff_match_patch", "Operation", "EQUAL", "cleanupOperation", "rightModifyList", "diff_match_patch", "Operation", "EQUAL", "boolean", "isEquals", "isModifyEqual", "leftModifyList", "rightModifyList", "if", "isEquals", "matchedIds", "add", "leftRecord", "id", "matchedIds", "add", "rightRecord", "id", "curResult", "leftRecord", "instanceNumber", "rightRecord", "instanceNumber", "leftRecord", "id", "rightRecord", "id", "rightRecord", "id", "leftRecord", "id", "Long", "interval", "Math", "abs", "DateUtil", "getTimestamp", "leftRecord", "date", "DateUtil", "getTimestamp", "rightRecord", "date", "timeStampList", "add", "interval", "if", "interval", "maxTimeStamp", "maxTimeStamp", "interval", "curResult", "consistencyModifyDegree", "consistencyModifyDegree", "return", "curResult" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\Analyser.java",
  "startLine" : 258,
  "endLine" : 292,
  "identifiers" : [ "int", "sizeLeft", "leftDiff", "size", "int", "sizeRight", "rightDiff", "size", "LinkedList", "diff_match_patch", "Diff", "matchedDiffList", "new", "LinkedList", "LinkedList", "diff_match_patch", "Diff", "outterDiffList", "LinkedList", "diff_match_patch", "Diff", "innerDiffList", "String", "IDENTIFIER", "if", "sizeLeft", "sizeRight", "outterDiffList", "leftDiff", "innerDiffList", "rightDiff", "else", "outterDiffList", "rightDiff", "innerDiffList", "leftDiff", "for", "int", "i", "i", "outterDiffList", "size", "i", "for", "int", "j", "j", "innerDiffList", "size", "j", "if", "outterDiffList", "get", "i", "operation", "equals", "innerDiffList", "get", "j", "operation", "String", "outterEditString", "outterDiffList", "get", "i", "text", "replaceAll", "IDENTIFIER", "String", "innerEditString", "innerDiffList", "get", "j", "text", "replaceAll", "IDENTIFIER", "outterEditString", "outterEditString", "replaceAll", "innerEditString", "innerEditString", "replaceAll", "if", "outterEditString", "replaceAll", "equals", "innerEditString", "replaceAll", "equals", "continue", "if", "MinimumEditDistanceUtil", "stringSimilarity", "outterEditString", "innerEditString", "matchedDiffList", "add", "outterDiffList", "get", "i", "consistencyModifyDegree", "double", "matchedDiffList", "size", "outterDiffList", "size", "return", "matchedDiffList", "size" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\ComputeDistanceUtil.java",
  "startLine" : 16,
  "endLine" : 41,
  "identifiers" : [ "HashMap", "String", "Integer", "fileMap", "initFileMap", "fileList", "List", "String", "noSame_fileList", "new", "ArrayList", "fileMap", "keySet", "List", "String", "fileFragList", "new", "ArrayList", "int", "size_MIN", "for", "String", "fileString", "noSame_fileList", "String", "fileFrag", "fileString", "split", "if", "fileFrag", "length", "size_MIN", "size_MIN", "fileFrag", "length", "fileFragList", "add", "fileFrag", "int", "fatherNodeIndex", "computeFatherNodeIndex", "fileFragList", "size_MIN", "int", "distance", "for", "String", "fileFrag", "fileFragList", "int", "dist", "fileFrag", "length", "fatherNodeIndex", "distance", "dist", "return", "distance" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\ComputeDistanceUtil.java",
  "startLine" : 45,
  "endLine" : 59,
  "identifiers" : [ "HashMap", "String", "Integer", "fileMap", "new", "HashMap", "for", "String", "fileString", "fileList", "int", "index", "fileString", "lastIndexOf", "if", "index", "index", "fileString", "fileString", "substring", "index", "if", "fileMap", "containsKey", "fileString", "fileMap", "put", "fileString", "fileMap", "get", "fileString", "else", "fileMap", "put", "fileString", "return", "fileMap" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\ComputeDistanceUtil.java",
  "startLine" : 62,
  "endLine" : 76,
  "identifiers" : [ "int", "fatherNodeIndex", "for", "int", "i", "i", "size_MIN", "i", "String", "temp", "fileFragList", "get", "i", "for", "int", "j", "j", "fileFragList", "size", "j", "if", "fileFragList", "get", "j", "i", "equals", "temp", "return", "fatherNodeIndex", "fatherNodeIndex", "i", "return", "fatherNodeIndex" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\ComputeDistanceUtil.java",
  "startLine" : 81,
  "endLine" : 101,
  "identifiers" : [ "List", "String", "fileList", "new", "ArrayList", "fileList", "add", "fileList", "add", "fileList", "add", "fileList", "add", "fileList", "add", "fileList", "add", "List", "String", "fileList2", "new", "ArrayList", "fileList2", "add", "fileList2", "add", "System", "out", "println", "ComputeDistanceUtil", "computeDistance", "fileList2" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 34,
  "endLine" : 137,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "State", "state", "State", "CODE", "for", "int", "i", "i", "strToHandle", "length", "i", "char", "c", "strToHandle", "charAt", "i", "switch", "state", "case", "CODE", "if", "c", "state", "State", "SLASH", "else", "builder", "append", "c", "if", "c", "state", "State", "CODE_CHAR", "else", "if", "c", "r", "n", "r", "n", "r", "n", "state", "State", "CODE", "else", "state", "State", "CODE_STRING", "break", "case", "STRING_ESCAPE_SEQUENCE", "builder", "append", "c", "state", "State", "CODE_STRING", "break", "default", "break", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 145,
  "endLine" : 165,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "try", "FileInputStream", "fis", "new", "FileInputStream", "inputFileName", "InputStreamReader", "dis", "new", "InputStreamReader", "fis", "BufferedReader", "reader", "new", "BufferedReader", "dis", "String", "s", "while", "s", "reader", "readLine", "null", "builder", "append", "s", "builder", "append", "reader", "close", "dis", "close", "fis", "close", "catch", "IOException", "e", "e", "printStackTrace", "System", "exit", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 172,
  "endLine" : 185,
  "identifiers" : [ "try", "FileOutputStream", "fos", "new", "FileOutputStream", "outputFileName", "OutputStreamWriter", "dos", "new", "OutputStreamWriter", "fos", "BufferedWriter", "writer", "new", "BufferedWriter", "dos", "writer", "write", "strHandled", "writer", "close", "dos", "close", "fos", "close", "System", "out", "println", "outputFileName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 191,
  "endLine" : 204,
  "identifiers" : [ "Scanner", "in", "new", "Scanner", "System", "in", "System", "out", "println", "String", "inputFileName", "in", "nextLine", "System", "out", "println", "String", "outputFileName", "in", "nextLine", "String", "strToHandle", "readFile", "inputFileName", "String", "strHandled", "delete_C_Cplusplus_Java_Note", "strToHandle", "writeFile", "outputFileName", "strHandled" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 158,
  "endLine" : 199,
  "identifiers" : [ "if", "text1", "null", "text2", "null", "throw", "new", "IllegalArgumentException", "LinkedList", "Diff", "diffs", "if", "text1", "equals", "text2", "diffs", "new", "LinkedList", "Diff", "if", "text1", "length", "diffs", "add", "new", "Diff", "Operation", "EQUAL", "text1", "return", "diffs", "int", "commonlength", "diff_commonPrefix", "text1", "text2", "String", "commonprefix", "text1", "substring", "commonlength", "text1", "text1", "substring", "commonlength", "text2", "text2", "substring", "commonlength", "commonlength", "diff_commonSuffix", "text1", "text2", "String", "commonsuffix", "text1", "substring", "text1", "length", "commonlength", "text1", "text1", "substring", "text1", "length", "commonlength", "text2", "text2", "substring", "text2", "length", "commonlength", "diffs", "diff_compute", "text1", "text2", "checklines", "deadline", "if", "commonprefix", "length", "diffs", "addFirst", "new", "Diff", "Operation", "EQUAL", "commonprefix", "if", "commonsuffix", "length", "diffs", "addLast", "new", "Diff", "Operation", "EQUAL", "commonsuffix", "diff_cleanupMerge", "diffs", "return", "diffs" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 213,
  "endLine" : 275,
  "identifiers" : [ "LinkedList", "Diff", "diffs", "new", "LinkedList", "Diff", "if", "text1", "length", "diffs", "add", "new", "Diff", "Operation", "INSERT", "text2", "return", "diffs", "if", "text2", "length", "diffs", "add", "new", "Diff", "Operation", "DELETE", "text1", "return", "diffs", "String", "longtext", "text1", "length", "text2", "length", "text1", "text2", "String", "shorttext", "text1", "length", "text2", "length", "text2", "text1", "int", "i", "longtext", "indexOf", "shorttext", "if", "i", "Operation", "op", "text1", "length", "text2", "length", "Operation", "DELETE", "Operation", "INSERT", "diffs", "add", "new", "Diff", "op", "longtext", "substring", "i", "diffs", "add", "new", "Diff", "Operation", "EQUAL", "shorttext", "diffs", "add", "new", "Diff", "op", "longtext", "substring", "i", "shorttext", "length", "return", "diffs", "if", "shorttext", "length", "diffs", "add", "new", "Diff", "Operation", "DELETE", "text1", "diffs", "add", "new", "Diff", "Operation", "INSERT", "text2", "return", "diffs", "String", "hm", "diff_halfMatch", "text1", "text2", "if", "hm", "null", "String", "text1_a", "hm", "String", "text1_b", "hm", "String", "text2_a", "hm", "String", "text2_b", "hm", "String", "mid_common", "hm", "LinkedList", "Diff", "diffs_a", "diff_main", "text1_a", "text2_a", "checklines", "deadline", "LinkedList", "Diff", "diffs_b", "diff_main", "text1_b", "text2_b", "checklines", "deadline", "diffs", "diffs_a", "diffs", "add", "new", "Diff", "Operation", "EQUAL", "mid_common", "diffs", "addAll", "diffs_b", "return", "diffs", "if", "checklines", "text1", "length", "text2", "length", "return", "diff_lineMode", "text1", "text2", "deadline", "return", "diff_bisect", "text1", "text2", "deadline" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 287,
  "endLine" : 345,
  "identifiers" : [ "LinesToCharsResult", "a", "diff_linesToChars", "text1", "text2", "text1", "a", "chars1", "text2", "a", "chars2", "List", "String", "linearray", "a", "lineArray", "LinkedList", "Diff", "diffs", "diff_main", "text1", "text2", "false", "deadline", "diff_charsToLines", "diffs", "linearray", "diff_cleanupSemantic", "diffs", "diffs", "add", "new", "Diff", "Operation", "EQUAL", "int", "count_delete", "int", "count_insert", "String", "text_delete", "String", "text_insert", "ListIterator", "Diff", "pointer", "diffs", "listIterator", "Diff", "thisDiff", "pointer", "next", "while", "thisDiff", "null", "switch", "thisDiff", "operation", "case", "INSERT", "count_insert", "text_insert", "thisDiff", "text", "break", "case", "DELETE", "count_delete", "text_delete", "thisDiff", "text", "break", "case", "EQUAL", "if", "count_delete", "count_insert", "pointer", "previous", "for", "int", "j", "j", "count_delete", "count_insert", "j", "pointer", "previous", "pointer", "remove", "for", "Diff", "subDiff", "diff_main", "text_delete", "text_insert", "false", "deadline", "pointer", "add", "subDiff", "count_insert", "count_delete", "text_delete", "text_insert", "break", "thisDiff", "pointer", "hasNext", "pointer", "next", "null", "diffs", "removeLast", "return", "diffs" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 357,
  "endLine" : 467,
  "identifiers" : [ "int", "text1_length", "text1", "length", "int", "text2_length", "text2", "length", "int", "max_d", "text1_length", "text2_length", "int", "v_offset", "max_d", "int", "v_length", "max_d", "int", "v1", "new", "int", "v_length", "int", "v2", "new", "int", "v_length", "for", "int", "x", "x", "v_length", "x", "v1", "x", "v2", "x", "v1", "v_offset", "v2", "v_offset", "int", "delta", "text1_length", "text2_length", "boolean", "front", "delta", "int", "k1start", "int", "k1end", "int", "k2start", "int", "k2end", "for", "int", "d", "d", "max_d", "d", "if", "System", "currentTimeMillis", "deadline", "break", "for", "int", "k1", "d", "k1start", "k1", "d", "k1end", "k1", "int", "k1_offset", "v_offset", "k1", "int", "x1", "if", "k1", "d", "k1", "d", "v1", "k1_offset", "v1", "k1_offset", "x1", "v1", "k1_offset", "else", "x1", "v1", "k1_offset", "int", "y1", "x1", "k1", "while", "x1", "text1_length", "y1", "text2_length", "text1", "charAt", "x1", "text2", "charAt", "y1", "x1", "y1", "v1", "k1_offset", "x1", "if", "x1", "text1_length", "k1end", "else", "if", "y1", "text2_length", "k1start", "else", "if", "front", "int", "k2_offset", "v_offset", "delta", "k1", "if", "k2_offset", "k2_offset", "v_length", "v2", "k2_offset", "int", "x2", "text1_length", "v2", "k2_offset", "if", "x1", "x2", "return", "diff_bisectSplit", "text1", "text2", "x1", "y1", "deadline", "for", "int", "k2", "d", "k2start", "k2", "d", "k2end", "k2", "int", "k2_offset", "v_offset", "k2", "int", "x2", "if", "k2", "d", "k2", "d", "v2", "k2_offset", "v2", "k2_offset", "x2", "v2", "k2_offset", "else", "x2", "v2", "k2_offset", "int", "y2", "x2", "k2", "while", "x2", "text1_length", "y2", "text2_length", "text1", "charAt", "text1_length", "x2", "text2", "charAt", "text2_length", "y2", "x2", "y2", "v2", "k2_offset", "x2", "if", "x2", "text1_length", "k2end", "else", "if", "y2", "text2_length", "k2start", "else", "if", "front", "int", "k1_offset", "v_offset", "delta", "k2", "if", "k1_offset", "k1_offset", "v_length", "v1", "k1_offset", "int", "x1", "v1", "k1_offset", "int", "y1", "v_offset", "x1", "k1_offset", "x2", "text1_length", "x2", "if", "x1", "x2", "return", "diff_bisectSplit", "text1", "text2", "x1", "y1", "deadline", "LinkedList", "Diff", "diffs", "new", "LinkedList", "Diff", "diffs", "add", "new", "Diff", "Operation", "DELETE", "text1", "diffs", "add", "new", "Diff", "Operation", "INSERT", "text2", "return", "diffs" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 480,
  "endLine" : 492,
  "identifiers" : [ "String", "text1a", "text1", "substring", "x", "String", "text2a", "text2", "substring", "y", "String", "text1b", "text1", "substring", "x", "String", "text2b", "text2", "substring", "y", "LinkedList", "Diff", "diffs", "diff_main", "text1a", "text2a", "false", "deadline", "LinkedList", "Diff", "diffsb", "diff_main", "text1b", "text2b", "false", "deadline", "diffs", "addAll", "diffsb", "return", "diffs" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 503,
  "endLine" : 517,
  "identifiers" : [ "List", "String", "lineArray", "new", "ArrayList", "String", "Map", "String", "Integer", "lineHash", "new", "HashMap", "String", "Integer", "lineArray", "add", "String", "chars1", "diff_linesToCharsMunge", "text1", "lineArray", "lineHash", "String", "chars2", "diff_linesToCharsMunge", "text2", "lineArray", "lineHash", "return", "new", "LinesToCharsResult", "chars1", "chars2", "lineArray" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 529,
  "endLine" : 560,
  "identifiers" : [ "int", "lineStart", "int", "lineEnd", "String", "line", "StringBuilder", "chars", "new", "StringBuilder", "while", "lineEnd", "text", "length", "lineEnd", "text", "indexOf", "n", "lineStart", "if", "lineEnd", "lineEnd", "text", "length", "line", "text", "substring", "lineStart", "lineEnd", "if", "lineHash", "containsKey", "line", "chars", "append", "String", "valueOf", "char", "int", "lineHash", "get", "line", "else", "if", "lineArray", "size", "maxLines", "line", "text", "substring", "lineStart", "lineEnd", "text", "length", "lineArray", "add", "line", "lineHash", "put", "line", "lineArray", "size", "chars", "append", "String", "valueOf", "char", "lineArray", "size", "lineStart", "lineEnd", "return", "chars", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 569,
  "endLine" : 578,
  "identifiers" : [ "StringBuilder", "text", "for", "Diff", "diff", "diffs", "text", "new", "StringBuilder", "for", "int", "j", "j", "diff", "text", "length", "j", "text", "append", "lineArray", "get", "diff", "text", "charAt", "j", "diff", "text", "text", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 586,
  "endLine" : 595,
  "identifiers" : [ "int", "n", "Math", "min", "text1", "length", "text2", "length", "for", "int", "i", "i", "n", "i", "if", "text1", "charAt", "i", "text2", "charAt", "i", "return", "i", "return", "n" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 603,
  "endLine" : 614,
  "identifiers" : [ "int", "text1_length", "text1", "length", "int", "text2_length", "text2", "length", "int", "n", "Math", "min", "text1_length", "text2_length", "for", "int", "i", "i", "n", "i", "if", "text1", "charAt", "text1_length", "i", "text2", "charAt", "text2_length", "i", "return", "i", "return", "n" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 623,
  "endLine" : 661,
  "identifiers" : [ "int", "text1_length", "text1", "length", "int", "text2_length", "text2", "length", "if", "text1_length", "text2_length", "return", "if", "text1_length", "text2_length", "text1", "text1", "substring", "text1_length", "text2_length", "else", "if", "text1_length", "text2_length", "text2", "text2", "substring", "text1_length", "int", "text_length", "Math", "min", "text1_length", "text2_length", "if", "text1", "equals", "text2", "return", "text_length", "int", "best", "int", "length", "while", "true", "String", "pattern", "text1", "substring", "text_length", "length", "int", "found", "text2", "indexOf", "pattern", "if", "found", "return", "best", "length", "found", "if", "found", "text1", "substring", "text_length", "length", "equals", "text2", "substring", "length", "best", "length", "length" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 673,
  "endLine" : 709,
  "identifiers" : [ "if", "Diff_Timeout", "return", "null", "String", "longtext", "text1", "length", "text2", "length", "text1", "text2", "String", "shorttext", "text1", "length", "text2", "length", "text2", "text1", "if", "longtext", "length", "shorttext", "length", "longtext", "length", "return", "null", "String", "hm1", "diff_halfMatchI", "longtext", "shorttext", "longtext", "length", "String", "hm2", "diff_halfMatchI", "longtext", "shorttext", "longtext", "length", "String", "hm", "if", "hm1", "null", "hm2", "null", "return", "null", "else", "if", "hm2", "null", "hm", "hm1", "else", "if", "hm1", "null", "hm", "hm2", "else", "hm", "hm1", "length", "hm2", "length", "hm1", "hm2", "if", "text1", "length", "text2", "length", "return", "hm", "else", "return", "new", "String", "hm", "hm", "hm", "hm", "hm" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 721,
  "endLine" : 748,
  "identifiers" : [ "String", "seed", "longtext", "substring", "i", "i", "longtext", "length", "int", "j", "String", "best_common", "String", "best_longtext_a", "best_longtext_b", "String", "best_shorttext_a", "best_shorttext_b", "while", "j", "shorttext", "indexOf", "seed", "j", "int", "prefixLength", "diff_commonPrefix", "longtext", "substring", "i", "shorttext", "substring", "j", "int", "suffixLength", "diff_commonSuffix", "longtext", "substring", "i", "shorttext", "substring", "j", "if", "best_common", "length", "suffixLength", "prefixLength", "best_common", "shorttext", "substring", "j", "suffixLength", "j", "shorttext", "substring", "j", "j", "prefixLength", "best_longtext_a", "longtext", "substring", "i", "suffixLength", "best_longtext_b", "longtext", "substring", "i", "prefixLength", "best_shorttext_a", "shorttext", "substring", "j", "suffixLength", "best_shorttext_b", "shorttext", "substring", "j", "prefixLength", "if", "best_common", "length", "longtext", "length", "return", "new", "String", "best_longtext_a", "best_longtext_b", "best_shorttext_a", "best_shorttext_b", "best_common", "else", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 754,
  "endLine" : 895,
  "identifiers" : [ "if", "diffs", "isEmpty", "return", "boolean", "changes", "false", "Deque", "Diff", "equalities", "new", "ArrayDeque", "Diff", "String", "lastEquality", "null", "ListIterator", "Diff", "pointer", "diffs", "listIterator", "int", "length_insertions1", "int", "length_deletions1", "int", "length_insertions2", "int", "length_deletions2", "Diff", "thisDiff", "pointer", "next", "while", "thisDiff", "null", "if", "thisDiff", "operation", "Operation", "EQUAL", "equalities", "push", "thisDiff", "length_insertions1", "length_insertions2", "length_deletions1", "length_deletions2", "length_insertions2", "length_deletions2", "lastEquality", "thisDiff", "text", "else", "if", "thisDiff", "operation", "Operation", "INSERT", "length_insertions2", "thisDiff", "text", "length", "else", "length_deletions2", "thisDiff", "text", "length", "if", "lastEquality", "null", "lastEquality", "length", "Math", "max", "length_insertions1", "length_deletions1", "lastEquality", "length", "Math", "max", "length_insertions2", "length_deletions2", "while", "thisDiff", "equalities", "peek", "thisDiff", "pointer", "previous", "pointer", "next", "pointer", "set", "new", "Diff", "Operation", "DELETE", "lastEquality", "pointer", "add", "new", "Diff", "Operation", "INSERT", "lastEquality", "equalities", "pop", "if", "equalities", "isEmpty", "equalities", "pop", "if", "equalities", "isEmpty", "while", "pointer", "hasPrevious", "pointer", "previous", "else", "thisDiff", "equalities", "peek", "while", "thisDiff", "pointer", "previous", "length_insertions1", "length_insertions2", "length_deletions1", "length_deletions2", "lastEquality", "null", "changes", "true", "thisDiff", "pointer", "hasNext", "pointer", "next", "null", "if", "changes", "diff_cleanupMerge", "diffs", "diff_cleanupSemanticLossless", "diffs", "pointer", "diffs", "listIterator", "Diff", "prevDiff", "null", "thisDiff", "null", "if", "pointer", "hasNext", "prevDiff", "pointer", "next", "if", "pointer", "hasNext", "thisDiff", "pointer", "next", "while", "thisDiff", "null", "if", "prevDiff", "operation", "Operation", "DELETE", "thisDiff", "operation", "Operation", "INSERT", "String", "deletion", "prevDiff", "text", "String", "insertion", "thisDiff", "text", "int", "overlap_length1", "this", "diff_commonOverlap", "deletion", "insertion", "int", "overlap_length2", "this", "diff_commonOverlap", "insertion", "deletion", "if", "overlap_length1", "overlap_length2", "if", "overlap_length1", "deletion", "length", "overlap_length1", "insertion", "length", "pointer", "previous", "pointer", "add", "new", "Diff", "Operation", "EQUAL", "insertion", "substring", "overlap_length1", "prevDiff", "text", "deletion", "substring", "deletion", "length", "overlap_length1", "thisDiff", "text", "insertion", "substring", "overlap_length1", "else", "if", "overlap_length2", "deletion", "length", "overlap_length2", "insertion", "length", "pointer", "previous", "pointer", "add", "new", "Diff", "Operation", "EQUAL", "deletion", "substring", "overlap_length2", "prevDiff", "operation", "Operation", "INSERT", "prevDiff", "text", "insertion", "substring", "insertion", "length", "overlap_length2", "thisDiff", "operation", "Operation", "DELETE", "thisDiff", "text", "deletion", "substring", "overlap_length2", "thisDiff", "pointer", "hasNext", "pointer", "next", "null", "prevDiff", "thisDiff", "thisDiff", "pointer", "hasNext", "pointer", "next", "null" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 903,
  "endLine" : 980,
  "identifiers" : [ "String", "equality1", "edit", "equality2", "String", "commonString", "int", "commonOffset", "int", "score", "bestScore", "String", "bestEquality1", "bestEdit", "bestEquality2", "ListIterator", "Diff", "pointer", "diffs", "listIterator", "Diff", "prevDiff", "pointer", "hasNext", "pointer", "next", "null", "Diff", "thisDiff", "pointer", "hasNext", "pointer", "next", "null", "Diff", "nextDiff", "pointer", "hasNext", "pointer", "next", "null", "while", "nextDiff", "null", "if", "prevDiff", "operation", "Operation", "EQUAL", "nextDiff", "operation", "Operation", "EQUAL", "equality1", "prevDiff", "text", "edit", "thisDiff", "text", "equality2", "nextDiff", "text", "commonOffset", "diff_commonSuffix", "equality1", "edit", "if", "commonOffset", "commonString", "edit", "substring", "edit", "length", "commonOffset", "equality1", "equality1", "substring", "equality1", "length", "commonOffset", "edit", "commonString", "edit", "substring", "edit", "length", "commonOffset", "equality2", "commonString", "equality2", "bestEquality1", "equality1", "bestEdit", "edit", "bestEquality2", "equality2", "bestScore", "diff_cleanupSemanticScore", "equality1", "edit", "diff_cleanupSemanticScore", "edit", "equality2", "while", "edit", "length", "equality2", "length", "edit", "charAt", "equality2", "charAt", "equality1", "edit", "charAt", "edit", "edit", "substring", "equality2", "charAt", "equality2", "equality2", "substring", "score", "diff_cleanupSemanticScore", "equality1", "edit", "diff_cleanupSemanticScore", "edit", "equality2", "if", "score", "bestScore", "bestScore", "score", "bestEquality1", "equality1", "bestEdit", "edit", "bestEquality2", "equality2", "if", "prevDiff", "text", "equals", "bestEquality1", "if", "bestEquality1", "length", "prevDiff", "text", "bestEquality1", "else", "pointer", "previous", "pointer", "previous", "pointer", "previous", "pointer", "remove", "pointer", "next", "pointer", "next", "thisDiff", "text", "bestEdit", "if", "bestEquality2", "length", "nextDiff", "text", "bestEquality2", "else", "pointer", "remove", "nextDiff", "thisDiff", "thisDiff", "prevDiff", "prevDiff", "thisDiff", "thisDiff", "nextDiff", "nextDiff", "pointer", "hasNext", "pointer", "next", "null" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 990,
  "endLine" : 1031,
  "identifiers" : [ "if", "one", "length", "two", "length", "return", "char", "char1", "one", "charAt", "one", "length", "char", "char2", "two", "charAt", "boolean", "nonAlphaNumeric1", "Character", "isLetterOrDigit", "char1", "boolean", "nonAlphaNumeric2", "Character", "isLetterOrDigit", "char2", "boolean", "whitespace1", "nonAlphaNumeric1", "Character", "isWhitespace", "char1", "boolean", "whitespace2", "nonAlphaNumeric2", "Character", "isWhitespace", "char2", "boolean", "lineBreak1", "whitespace1", "Character", "getType", "char1", "Character", "CONTROL", "boolean", "lineBreak2", "whitespace2", "Character", "getType", "char2", "Character", "CONTROL", "boolean", "blankLine1", "lineBreak1", "BLANKLINEEND", "matcher", "one", "find", "boolean", "blankLine2", "lineBreak2", "BLANKLINESTART", "matcher", "two", "find", "if", "blankLine1", "blankLine2", "return", "else", "if", "lineBreak1", "lineBreak2", "return", "else", "if", "nonAlphaNumeric1", "whitespace1", "whitespace2", "return", "else", "if", "whitespace1", "whitespace2", "return", "else", "if", "nonAlphaNumeric1", "nonAlphaNumeric2", "return", "return" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 1043,
  "endLine" : 1144,
  "identifiers" : [ "if", "diffs", "isEmpty", "return", "boolean", "changes", "false", "Deque", "Diff", "equalities", "new", "ArrayDeque", "Diff", "String", "lastEquality", "null", "ListIterator", "Diff", "pointer", "diffs", "listIterator", "boolean", "pre_ins", "false", "boolean", "pre_del", "false", "boolean", "post_ins", "false", "boolean", "post_del", "false", "Diff", "thisDiff", "pointer", "next", "Diff", "safeDiff", "thisDiff", "while", "thisDiff", "null", "if", "thisDiff", "operation", "Operation", "EQUAL", "if", "thisDiff", "text", "length", "Diff_EditCost", "post_ins", "post_del", "equalities", "push", "thisDiff", "pre_ins", "post_ins", "pre_del", "post_del", "lastEquality", "thisDiff", "text", "else", "equalities", "clear", "lastEquality", "null", "safeDiff", "thisDiff", "post_ins", "post_del", "false", "else", "if", "thisDiff", "operation", "Operation", "DELETE", "post_del", "true", "else", "post_ins", "true", "if", "lastEquality", "null", "pre_ins", "pre_del", "post_ins", "post_del", "lastEquality", "length", "Diff_EditCost", "pre_ins", "pre_del", "post_ins", "post_del", "while", "thisDiff", "equalities", "peek", "thisDiff", "pointer", "previous", "pointer", "next", "pointer", "set", "new", "Diff", "Operation", "DELETE", "lastEquality", "pointer", "add", "thisDiff", "new", "Diff", "Operation", "INSERT", "lastEquality", "equalities", "pop", "lastEquality", "null", "if", "pre_ins", "pre_del", "post_ins", "post_del", "true", "equalities", "clear", "safeDiff", "thisDiff", "else", "if", "equalities", "isEmpty", "equalities", "pop", "if", "equalities", "isEmpty", "thisDiff", "safeDiff", "else", "thisDiff", "equalities", "peek", "while", "thisDiff", "pointer", "previous", "post_ins", "post_del", "false", "changes", "true", "thisDiff", "pointer", "hasNext", "pointer", "next", "null", "if", "changes", "diff_cleanupMerge", "diffs" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 1151,
  "endLine" : 1294,
  "identifiers" : [ "diffs", "add", "new", "Diff", "Operation", "EQUAL", "ListIterator", "Diff", "pointer", "diffs", "listIterator", "int", "count_delete", "int", "count_insert", "String", "text_delete", "String", "text_insert", "Diff", "thisDiff", "pointer", "next", "Diff", "prevEqual", "null", "int", "commonlength", "while", "thisDiff", "null", "switch", "thisDiff", "operation", "case", "INSERT", "count_insert", "text_insert", "thisDiff", "text", "prevEqual", "null", "break", "case", "DELETE", "count_delete", "text_delete", "thisDiff", "text", "prevEqual", "null", "break", "case", "EQUAL", "if", "count_delete", "count_insert", "boolean", "both_types", "count_delete", "count_insert", "pointer", "previous", "while", "count_delete", "pointer", "previous", "pointer", "remove", "while", "count_insert", "pointer", "previous", "pointer", "remove", "if", "both_types", "commonlength", "diff_commonPrefix", "text_insert", "text_delete", "if", "commonlength", "if", "pointer", "hasPrevious", "thisDiff", "pointer", "previous", "assert", "thisDiff", "operation", "Operation", "EQUAL", "thisDiff", "text", "text_insert", "substring", "commonlength", "pointer", "next", "else", "pointer", "add", "new", "Diff", "Operation", "EQUAL", "text_insert", "substring", "commonlength", "text_insert", "text_insert", "substring", "commonlength", "text_delete", "text_delete", "substring", "commonlength", "commonlength", "diff_commonSuffix", "text_insert", "text_delete", "if", "commonlength", "thisDiff", "pointer", "next", "thisDiff", "text", "text_insert", "substring", "text_insert", "length", "commonlength", "thisDiff", "text", "text_insert", "text_insert", "substring", "text_insert", "length", "commonlength", "text_delete", "text_delete", "substring", "text_delete", "length", "commonlength", "pointer", "previous", "if", "text_delete", "length", "pointer", "add", "new", "Diff", "Operation", "DELETE", "text_delete", "if", "text_insert", "length", "pointer", "add", "new", "Diff", "Operation", "INSERT", "text_insert", "thisDiff", "pointer", "hasNext", "pointer", "next", "null", "else", "if", "prevEqual", "null", "prevEqual", "text", "thisDiff", "text", "pointer", "remove", "thisDiff", "pointer", "previous", "pointer", "next", "count_insert", "count_delete", "text_delete", "text_insert", "prevEqual", "thisDiff", "break", "thisDiff", "pointer", "hasNext", "pointer", "next", "null", "if", "diffs", "getLast", "text", "length", "diffs", "removeLast", "boolean", "changes", "false", "pointer", "diffs", "listIterator", "Diff", "prevDiff", "pointer", "hasNext", "pointer", "next", "null", "thisDiff", "pointer", "hasNext", "pointer", "next", "null", "Diff", "nextDiff", "pointer", "hasNext", "pointer", "next", "null", "while", "nextDiff", "null", "if", "prevDiff", "operation", "Operation", "EQUAL", "nextDiff", "operation", "Operation", "EQUAL", "if", "thisDiff", "text", "endsWith", "prevDiff", "text", "thisDiff", "text", "prevDiff", "text", "thisDiff", "text", "substring", "thisDiff", "text", "length", "prevDiff", "text", "length", "nextDiff", "text", "prevDiff", "text", "nextDiff", "text", "pointer", "previous", "pointer", "previous", "pointer", "previous", "pointer", "remove", "pointer", "next", "thisDiff", "pointer", "next", "nextDiff", "pointer", "hasNext", "pointer", "next", "null", "changes", "true", "else", "if", "thisDiff", "text", "startsWith", "nextDiff", "text", "prevDiff", "text", "nextDiff", "text", "thisDiff", "text", "thisDiff", "text", "substring", "nextDiff", "text", "length", "nextDiff", "text", "pointer", "remove", "nextDiff", "pointer", "hasNext", "pointer", "next", "null", "changes", "true", "prevDiff", "thisDiff", "thisDiff", "nextDiff", "nextDiff", "pointer", "hasNext", "pointer", "next", "null", "if", "changes", "diff_cleanupMerge", "diffs" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 1304,
  "endLine" : 1333,
  "identifiers" : [ "int", "chars1", "int", "chars2", "int", "last_chars1", "int", "last_chars2", "Diff", "lastDiff", "null", "for", "Diff", "aDiff", "diffs", "if", "aDiff", "operation", "Operation", "INSERT", "chars1", "aDiff", "text", "length", "if", "aDiff", "operation", "Operation", "DELETE", "chars2", "aDiff", "text", "length", "if", "chars1", "loc", "lastDiff", "aDiff", "break", "last_chars1", "chars1", "last_chars2", "chars2", "if", "lastDiff", "null", "lastDiff", "operation", "Operation", "DELETE", "return", "last_chars2", "return", "last_chars2", "loc", "last_chars1" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 1340,
  "endLine" : 1360,
  "identifiers" : [ "StringBuilder", "html", "new", "StringBuilder", "for", "Diff", "aDiff", "diffs", "String", "text", "aDiff", "text", "replace", "replace", "replace", "replace", "switch", "aDiff", "operation", "case", "INSERT", "html", "append", "background", "e6ffe6", "append", "text", "append", "break", "case", "DELETE", "html", "append", "background", "ffe6e6", "append", "text", "append", "break", "case", "EQUAL", "html", "append", "append", "text", "append", "break", "return", "html", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 1398,
  "endLine" : 1420,
  "identifiers" : [ "int", "levenshtein", "int", "insertions", "int", "deletions", "for", "Diff", "aDiff", "diffs", "switch", "aDiff", "operation", "case", "INSERT", "insertions", "aDiff", "text", "length", "break", "case", "DELETE", "deletions", "aDiff", "text", "length", "break", "case", "EQUAL", "levenshtein", "Math", "max", "insertions", "deletions", "insertions", "deletions", "break", "levenshtein", "Math", "max", "insertions", "deletions", "return", "levenshtein" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 1430,
  "endLine" : 1458,
  "identifiers" : [ "StringBuilder", "text", "new", "StringBuilder", "for", "Diff", "aDiff", "diffs", "switch", "aDiff", "operation", "case", "INSERT", "try", "text", "append", "append", "URLEncoder", "encode", "aDiff", "text", "replace", "append", "catch", "UnsupportedEncodingException", "e", "throw", "new", "Error", "e", "break", "case", "DELETE", "text", "append", "append", "aDiff", "text", "length", "append", "break", "case", "EQUAL", "text", "append", "append", "aDiff", "text", "length", "append", "break", "String", "delta", "text", "toString", "if", "delta", "length", "delta", "delta", "substring", "delta", "length", "delta", "unescapeForEncodeUriCompatability", "delta", "return", "delta" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 1469,
  "endLine" : 1536,
  "identifiers" : [ "LinkedList", "Diff", "diffs", "new", "LinkedList", "Diff", "int", "pointer", "String", "tokens", "delta", "split", "for", "String", "token", "tokens", "if", "token", "length", "continue", "String", "param", "token", "substring", "switch", "token", "charAt", "case", "param", "param", "replace", "try", "param", "URLDecoder", "decode", "param", "catch", "UnsupportedEncodingException", "e", "throw", "new", "Error", "e", "catch", "IllegalArgumentException", "e", "throw", "new", "IllegalArgumentException", "param", "e", "diffs", "add", "new", "Diff", "Operation", "INSERT", "param", "break", "case", "case", "int", "n", "try", "n", "Integer", "parseInt", "param", "catch", "NumberFormatException", "e", "throw", "new", "IllegalArgumentException", "param", "e", "if", "n", "throw", "new", "IllegalArgumentException", "param", "String", "text", "try", "text", "text1", "substring", "pointer", "pointer", "n", "catch", "StringIndexOutOfBoundsException", "e", "throw", "new", "IllegalArgumentException", "pointer", "text1", "length", "e", "if", "token", "charAt", "diffs", "add", "new", "Diff", "Operation", "EQUAL", "text", "else", "diffs", "add", "new", "Diff", "Operation", "DELETE", "text", "break", "default", "throw", "new", "IllegalArgumentException", "token", "charAt", "if", "pointer", "text1", "length", "throw", "new", "IllegalArgumentException", "pointer", "text1", "length", "return", "diffs" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 1550,
  "endLine" : 1571,
  "identifiers" : [ "if", "text", "null", "pattern", "null", "throw", "new", "IllegalArgumentException", "loc", "Math", "max", "Math", "min", "loc", "text", "length", "if", "text", "equals", "pattern", "return", "else", "if", "text", "length", "return", "else", "if", "loc", "pattern", "length", "text", "length", "text", "substring", "loc", "loc", "pattern", "length", "equals", "pattern", "return", "loc", "else", "return", "match_bitap", "text", "pattern", "loc" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 1581,
  "endLine" : 1674,
  "identifiers" : [ "assert", "Match_MaxBits", "pattern", "length", "Match_MaxBits", "Map", "Character", "Integer", "s", "match_alphabet", "pattern", "double", "score_threshold", "Match_Threshold", "int", "best_loc", "text", "indexOf", "pattern", "loc", "if", "best_loc", "score_threshold", "Math", "min", "match_bitapScore", "best_loc", "loc", "pattern", "score_threshold", "best_loc", "text", "lastIndexOf", "pattern", "loc", "pattern", "length", "if", "best_loc", "score_threshold", "Math", "min", "match_bitapScore", "best_loc", "loc", "pattern", "score_threshold", "int", "matchmask", "pattern", "length", "best_loc", "int", "bin_min", "bin_mid", "int", "bin_max", "pattern", "length", "text", "length", "int", "last_rd", "new", "int", "for", "int", "d", "d", "pattern", "length", "d", "bin_min", "bin_mid", "bin_max", "while", "bin_min", "bin_mid", "if", "match_bitapScore", "d", "loc", "bin_mid", "loc", "pattern", "score_threshold", "bin_min", "bin_mid", "else", "bin_max", "bin_mid", "bin_mid", "bin_max", "bin_min", "bin_min", "bin_max", "bin_mid", "int", "start", "Math", "max", "loc", "bin_mid", "int", "finish", "Math", "min", "loc", "bin_mid", "text", "length", "pattern", "length", "int", "rd", "new", "int", "finish", "rd", "finish", "d", "for", "int", "j", "finish", "j", "start", "j", "int", "charMatch", "if", "text", "length", "j", "s", "containsKey", "text", "charAt", "j", "charMatch", "else", "charMatch", "s", "get", "text", "charAt", "j", "if", "d", "rd", "j", "rd", "j", "charMatch", "else", "rd", "j", "rd", "j", "charMatch", "last_rd", "j", "last_rd", "j", "last_rd", "j", "if", "rd", "j", "matchmask", "double", "score", "match_bitapScore", "d", "j", "loc", "pattern", "if", "score", "score_threshold", "score_threshold", "score", "best_loc", "j", "if", "best_loc", "loc", "start", "Math", "max", "loc", "best_loc", "else", "break", "if", "match_bitapScore", "d", "loc", "loc", "pattern", "score_threshold", "break", "last_rd", "rd", "return", "best_loc" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 1684,
  "endLine" : 1692,
  "identifiers" : [ "float", "accuracy", "float", "e", "pattern", "length", "int", "proximity", "Math", "abs", "loc", "x", "if", "Match_Distance", "return", "proximity", "accuracy", "return", "accuracy", "proximity", "float", "Match_Distance" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 1699,
  "endLine" : 1711,
  "identifiers" : [ "Map", "Character", "Integer", "s", "new", "HashMap", "Character", "Integer", "char", "char_pattern", "pattern", "toCharArray", "for", "char", "c", "char_pattern", "s", "put", "c", "int", "i", "for", "char", "c", "char_pattern", "s", "put", "c", "s", "get", "c", "pattern", "length", "i", "i", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 1723,
  "endLine" : 1760,
  "identifiers" : [ "if", "text", "length", "return", "String", "pattern", "text", "substring", "patch", "start2", "patch", "start2", "patch", "length1", "int", "padding", "while", "text", "indexOf", "pattern", "text", "lastIndexOf", "pattern", "pattern", "length", "Match_MaxBits", "Patch_Margin", "Patch_Margin", "padding", "Patch_Margin", "pattern", "text", "substring", "Math", "max", "patch", "start2", "padding", "Math", "min", "text", "length", "patch", "start2", "patch", "length1", "padding", "padding", "Patch_Margin", "String", "prefix", "text", "substring", "Math", "max", "patch", "start2", "padding", "patch", "start2", "if", "prefix", "length", "patch", "diffs", "addFirst", "new", "Diff", "Operation", "EQUAL", "prefix", "String", "suffix", "text", "substring", "patch", "start2", "patch", "length1", "Math", "min", "text", "length", "patch", "start2", "patch", "length1", "padding", "if", "suffix", "length", "patch", "diffs", "addLast", "new", "Diff", "Operation", "EQUAL", "suffix", "patch", "start1", "prefix", "length", "patch", "start2", "prefix", "length", "patch", "length1", "prefix", "length", "suffix", "length", "patch", "length2", "prefix", "length", "suffix", "length" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 1769,
  "endLine" : 1780,
  "identifiers" : [ "if", "text1", "null", "text2", "null", "throw", "new", "IllegalArgumentException", "LinkedList", "Diff", "diffs", "diff_main", "text1", "text2", "true", "if", "diffs", "size", "diff_cleanupSemantic", "diffs", "diff_cleanupEfficiency", "diffs", "return", "patch_make", "text1", "diffs" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 1818,
  "endLine" : 1896,
  "identifiers" : [ "if", "text1", "null", "diffs", "null", "throw", "new", "IllegalArgumentException", "LinkedList", "Patch", "patches", "new", "LinkedList", "Patch", "if", "diffs", "isEmpty", "return", "patches", "Patch", "patch", "new", "Patch", "int", "char_count1", "int", "char_count2", "String", "prepatch_text", "text1", "String", "postpatch_text", "text1", "for", "Diff", "aDiff", "diffs", "if", "patch", "diffs", "isEmpty", "aDiff", "operation", "Operation", "EQUAL", "patch", "start1", "char_count1", "patch", "start2", "char_count2", "switch", "aDiff", "operation", "case", "INSERT", "patch", "diffs", "add", "aDiff", "patch", "length2", "aDiff", "text", "length", "postpatch_text", "postpatch_text", "substring", "char_count2", "aDiff", "text", "postpatch_text", "substring", "char_count2", "break", "case", "DELETE", "patch", "length1", "aDiff", "text", "length", "patch", "diffs", "add", "aDiff", "postpatch_text", "postpatch_text", "substring", "char_count2", "postpatch_text", "substring", "char_count2", "aDiff", "text", "length", "break", "case", "EQUAL", "if", "aDiff", "text", "length", "Patch_Margin", "patch", "diffs", "isEmpty", "aDiff", "diffs", "getLast", "patch", "diffs", "add", "aDiff", "patch", "length1", "aDiff", "text", "length", "patch", "length2", "aDiff", "text", "length", "if", "aDiff", "text", "length", "Patch_Margin", "patch", "diffs", "isEmpty", "if", "patch", "diffs", "isEmpty", "patch_addContext", "patch", "prepatch_text", "patches", "add", "patch", "patch", "new", "Patch", "prepatch_text", "postpatch_text", "char_count1", "char_count2", "break", "if", "aDiff", "operation", "Operation", "INSERT", "char_count1", "aDiff", "text", "length", "if", "aDiff", "operation", "Operation", "DELETE", "char_count2", "aDiff", "text", "length", "if", "patch", "diffs", "isEmpty", "patch_addContext", "patch", "prepatch_text", "patches", "add", "patch", "return", "patches" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 1903,
  "endLine" : 1918,
  "identifiers" : [ "LinkedList", "Patch", "patchesCopy", "new", "LinkedList", "Patch", "for", "Patch", "aPatch", "patches", "Patch", "patchCopy", "new", "Patch", "for", "Diff", "aDiff", "aPatch", "diffs", "Diff", "diffCopy", "new", "Diff", "aDiff", "operation", "aDiff", "text", "patchCopy", "diffs", "add", "diffCopy", "patchCopy", "start1", "aPatch", "start1", "patchCopy", "start2", "aPatch", "start2", "patchCopy", "length1", "aPatch", "length1", "patchCopy", "length2", "aPatch", "length2", "patchesCopy", "add", "patchCopy", "return", "patchesCopy" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 1928,
  "endLine" : 2029,
  "identifiers" : [ "if", "patches", "isEmpty", "return", "new", "Object", "text", "new", "boolean", "patches", "patch_deepCopy", "patches", "String", "nullPadding", "patch_addPadding", "patches", "text", "nullPadding", "text", "nullPadding", "patch_splitMax", "patches", "int", "x", "int", "delta", "boolean", "results", "new", "boolean", "patches", "size", "for", "Patch", "aPatch", "patches", "int", "expected_loc", "aPatch", "start2", "delta", "String", "text1", "diff_text1", "aPatch", "diffs", "int", "start_loc", "int", "end_loc", "if", "text1", "length", "this", "Match_MaxBits", "start_loc", "match_main", "text", "text1", "substring", "this", "Match_MaxBits", "expected_loc", "if", "start_loc", "end_loc", "match_main", "text", "text1", "substring", "text1", "length", "this", "Match_MaxBits", "expected_loc", "text1", "length", "this", "Match_MaxBits", "if", "end_loc", "start_loc", "end_loc", "start_loc", "else", "start_loc", "match_main", "text", "text1", "expected_loc", "if", "start_loc", "results", "x", "false", "delta", "aPatch", "length2", "aPatch", "length1", "else", "results", "x", "true", "delta", "start_loc", "expected_loc", "String", "text2", "if", "end_loc", "text2", "text", "substring", "start_loc", "Math", "min", "start_loc", "text1", "length", "text", "length", "else", "text2", "text", "substring", "start_loc", "Math", "min", "end_loc", "this", "Match_MaxBits", "text", "length", "if", "text1", "equals", "text2", "text", "text", "substring", "start_loc", "diff_text2", "aPatch", "diffs", "text", "substring", "start_loc", "text1", "length", "else", "LinkedList", "Diff", "diffs", "diff_main", "text1", "text2", "false", "if", "text1", "length", "this", "Match_MaxBits", "diff_levenshtein", "diffs", "float", "text1", "length", "this", "Patch_DeleteThreshold", "results", "x", "false", "else", "diff_cleanupSemanticLossless", "diffs", "int", "index1", "for", "Diff", "aDiff", "aPatch", "diffs", "if", "aDiff", "operation", "Operation", "EQUAL", "int", "index2", "diff_xIndex", "diffs", "index1", "if", "aDiff", "operation", "Operation", "INSERT", "text", "text", "substring", "start_loc", "index2", "aDiff", "text", "text", "substring", "start_loc", "index2", "else", "if", "aDiff", "operation", "Operation", "DELETE", "text", "text", "substring", "start_loc", "index2", "text", "substring", "start_loc", "diff_xIndex", "diffs", "index1", "aDiff", "text", "length", "if", "aDiff", "operation", "Operation", "DELETE", "index1", "aDiff", "text", "length", "x", "text", "text", "substring", "nullPadding", "length", "text", "length", "nullPadding", "length", "return", "new", "Object", "text", "results" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 2037,
  "endLine" : 2090,
  "identifiers" : [ "short", "paddingLength", "this", "Patch_Margin", "String", "nullPadding", "for", "short", "x", "x", "paddingLength", "x", "nullPadding", "String", "valueOf", "char", "x", "for", "Patch", "aPatch", "patches", "aPatch", "start1", "paddingLength", "aPatch", "start2", "paddingLength", "Patch", "patch", "patches", "getFirst", "LinkedList", "Diff", "diffs", "patch", "diffs", "if", "diffs", "isEmpty", "diffs", "getFirst", "operation", "Operation", "EQUAL", "diffs", "addFirst", "new", "Diff", "Operation", "EQUAL", "nullPadding", "patch", "start1", "paddingLength", "patch", "start2", "paddingLength", "patch", "length1", "paddingLength", "patch", "length2", "paddingLength", "else", "if", "paddingLength", "diffs", "getFirst", "text", "length", "Diff", "firstDiff", "diffs", "getFirst", "int", "extraLength", "paddingLength", "firstDiff", "text", "length", "firstDiff", "text", "nullPadding", "substring", "firstDiff", "text", "length", "firstDiff", "text", "patch", "start1", "extraLength", "patch", "start2", "extraLength", "patch", "length1", "extraLength", "patch", "length2", "extraLength", "patch", "patches", "getLast", "diffs", "patch", "diffs", "if", "diffs", "isEmpty", "diffs", "getLast", "operation", "Operation", "EQUAL", "diffs", "addLast", "new", "Diff", "Operation", "EQUAL", "nullPadding", "patch", "length1", "paddingLength", "patch", "length2", "paddingLength", "else", "if", "paddingLength", "diffs", "getLast", "text", "length", "Diff", "lastDiff", "diffs", "getLast", "int", "extraLength", "paddingLength", "lastDiff", "text", "length", "lastDiff", "text", "nullPadding", "substring", "extraLength", "patch", "length1", "extraLength", "patch", "length2", "extraLength", "return", "nullPadding" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 2098,
  "endLine" : 2194,
  "identifiers" : [ "short", "patch_size", "Match_MaxBits", "String", "precontext", "postcontext", "Patch", "patch", "int", "start1", "start2", "boolean", "empty", "Operation", "diff_type", "String", "diff_text", "ListIterator", "Patch", "pointer", "patches", "listIterator", "Patch", "bigpatch", "pointer", "hasNext", "pointer", "next", "null", "while", "bigpatch", "null", "if", "bigpatch", "length1", "Match_MaxBits", "bigpatch", "pointer", "hasNext", "pointer", "next", "null", "continue", "pointer", "remove", "start1", "bigpatch", "start1", "start2", "bigpatch", "start2", "precontext", "while", "bigpatch", "diffs", "isEmpty", "patch", "new", "Patch", "empty", "true", "patch", "start1", "start1", "precontext", "length", "patch", "start2", "start2", "precontext", "length", "if", "precontext", "length", "patch", "length1", "patch", "length2", "precontext", "length", "patch", "diffs", "add", "new", "Diff", "Operation", "EQUAL", "precontext", "while", "bigpatch", "diffs", "isEmpty", "patch", "length1", "patch_size", "Patch_Margin", "diff_type", "bigpatch", "diffs", "getFirst", "operation", "diff_text", "bigpatch", "diffs", "getFirst", "text", "if", "diff_type", "Operation", "INSERT", "patch", "length2", "diff_text", "length", "start2", "diff_text", "length", "patch", "diffs", "addLast", "bigpatch", "diffs", "removeFirst", "empty", "false", "else", "if", "diff_type", "Operation", "DELETE", "patch", "diffs", "size", "patch", "diffs", "getFirst", "operation", "Operation", "EQUAL", "diff_text", "length", "patch_size", "patch", "length1", "diff_text", "length", "start1", "diff_text", "length", "empty", "false", "patch", "diffs", "add", "new", "Diff", "diff_type", "diff_text", "bigpatch", "diffs", "removeFirst", "else", "diff_text", "diff_text", "substring", "Math", "min", "diff_text", "length", "patch_size", "patch", "length1", "Patch_Margin", "patch", "length1", "diff_text", "length", "start1", "diff_text", "length", "if", "diff_type", "Operation", "EQUAL", "patch", "length2", "diff_text", "length", "start2", "diff_text", "length", "else", "empty", "false", "patch", "diffs", "add", "new", "Diff", "diff_type", "diff_text", "if", "diff_text", "equals", "bigpatch", "diffs", "getFirst", "text", "bigpatch", "diffs", "removeFirst", "else", "bigpatch", "diffs", "getFirst", "text", "bigpatch", "diffs", "getFirst", "text", "substring", "diff_text", "length", "precontext", "diff_text2", "patch", "diffs", "precontext", "precontext", "substring", "Math", "max", "precontext", "length", "Patch_Margin", "if", "diff_text1", "bigpatch", "diffs", "length", "Patch_Margin", "postcontext", "diff_text1", "bigpatch", "diffs", "substring", "Patch_Margin", "else", "postcontext", "diff_text1", "bigpatch", "diffs", "if", "postcontext", "length", "patch", "length1", "postcontext", "length", "patch", "length2", "postcontext", "length", "if", "patch", "diffs", "isEmpty", "patch", "diffs", "getLast", "operation", "Operation", "EQUAL", "patch", "diffs", "getLast", "text", "postcontext", "else", "patch", "diffs", "add", "new", "Diff", "Operation", "EQUAL", "postcontext", "if", "empty", "pointer", "add", "patch", "bigpatch", "pointer", "hasNext", "pointer", "next", "null" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 2217,
  "endLine" : 2302,
  "identifiers" : [ "List", "Patch", "patches", "new", "LinkedList", "Patch", "if", "textline", "length", "return", "patches", "List", "String", "textList", "Arrays", "asList", "textline", "split", "LinkedList", "String", "text", "new", "LinkedList", "String", "textList", "Patch", "patch", "Pattern", "patchHeader", "Pattern", "compile", "Matcher", "m", "char", "sign", "String", "line", "while", "text", "isEmpty", "m", "patchHeader", "matcher", "text", "getFirst", "if", "m", "matches", "throw", "new", "IllegalArgumentException", "text", "getFirst", "patch", "new", "Patch", "patches", "add", "patch", "patch", "start1", "Integer", "parseInt", "m", "group", "if", "m", "group", "length", "patch", "start1", "patch", "length1", "else", "if", "m", "group", "equals", "patch", "length1", "else", "patch", "start1", "patch", "length1", "Integer", "parseInt", "m", "group", "patch", "start2", "Integer", "parseInt", "m", "group", "if", "m", "group", "length", "patch", "start2", "patch", "length2", "else", "if", "m", "group", "equals", "patch", "length2", "else", "patch", "start2", "patch", "length2", "Integer", "parseInt", "m", "group", "text", "removeFirst", "while", "text", "isEmpty", "try", "sign", "text", "getFirst", "charAt", "catch", "IndexOutOfBoundsException", "e", "text", "removeFirst", "continue", "line", "text", "getFirst", "substring", "line", "line", "replace", "try", "line", "URLDecoder", "decode", "line", "catch", "UnsupportedEncodingException", "e", "throw", "new", "Error", "e", "catch", "IllegalArgumentException", "e", "throw", "new", "IllegalArgumentException", "line", "e", "if", "sign", "patch", "diffs", "add", "new", "Diff", "Operation", "DELETE", "line", "else", "if", "sign", "patch", "diffs", "add", "new", "Diff", "Operation", "INSERT", "line", "else", "if", "sign", "patch", "diffs", "add", "new", "Diff", "Operation", "EQUAL", "line", "else", "if", "sign", "break", "else", "throw", "new", "IllegalArgumentException", "sign", "line", "text", "removeFirst", "return", "patches" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 2357,
  "endLine" : 2379,
  "identifiers" : [ "if", "this", "obj", "return", "true", "if", "obj", "null", "return", "false", "if", "getClass", "obj", "getClass", "return", "false", "Diff", "other", "Diff", "obj", "if", "operation", "other", "operation", "return", "false", "if", "text", "null", "if", "other", "text", "null", "return", "false", "else", "if", "text", "equals", "other", "text", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 2406,
  "endLine" : 2447,
  "identifiers" : [ "String", "coords1", "coords2", "if", "this", "length1", "coords1", "this", "start1", "else", "if", "this", "length1", "coords1", "Integer", "toString", "this", "start1", "else", "coords1", "this", "start1", "this", "length1", "if", "this", "length2", "coords2", "this", "start2", "else", "if", "this", "length2", "coords2", "Integer", "toString", "this", "start2", "else", "coords2", "this", "start2", "this", "length2", "StringBuilder", "text", "new", "StringBuilder", "text", "append", "append", "coords1", "append", "append", "coords2", "append", "for", "Diff", "aDiff", "this", "diffs", "switch", "aDiff", "operation", "case", "INSERT", "text", "append", "break", "case", "DELETE", "text", "append", "break", "case", "EQUAL", "text", "append", "break", "try", "text", "append", "URLEncoder", "encode", "aDiff", "text", "replace", "append", "catch", "UnsupportedEncodingException", "e", "throw", "new", "Error", "e", "return", "unescapeForEncodeUriCompatability", "text", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\diff_match_patch.java",
  "startLine" : 2463,
  "endLine" : 2470,
  "identifiers" : [ "return", "str", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\FileUtil.java",
  "startLine" : 19,
  "endLine" : 28,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "List", "String", "lines", "new", "ArrayList", "String", "line", "null", "while", "line", "reader", "readLine", "null", "lines", "add", "line", "reader", "close", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\FileUtil.java",
  "startLine" : 37,
  "endLine" : 43,
  "identifiers" : [ "BufferedWriter", "writer", "new", "BufferedWriter", "new", "OutputStreamWriter", "new", "FileOutputStream", "file", "append", "StandardCharsets", "UTF_8", "writer", "write", "content", "writer", "newLine", "writer", "flush", "writer", "close" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\dangerCheck\\util\\MinimumEditDistanceUtil.java",
  "startLine" : 11,
  "endLine" : 38,
  "identifiers" : [ "int", "sourceLength", "sourceStr", "length", "int", "targetLength", "targetString", "length", "sourceStr", "sourceStr", "toLowerCase", "targetString", "targetString", "toLowerCase", "int", "editMatrix", "new", "int", "sourceLength", "targetLength", "for", "int", "i", "i", "sourceLength", "i", "editMatrix", "i", "i", "for", "int", "j", "j", "targetLength", "j", "editMatrix", "j", "j", "editMatrix", "for", "int", "i", "i", "sourceLength", "i", "for", "int", "j", "j", "targetLength", "j", "if", "sourceStr", "charAt", "i", "targetString", "charAt", "j", "editMatrix", "i", "j", "editMatrix", "i", "j", "else", "editMatrix", "i", "j", "minimumValue", "editMatrix", "i", "j", "editMatrix", "i", "j", "editMatrix", "i", "j", "return", "editMatrix", "sourceLength", "targetLength" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\bean\\DiffInfo.java",
  "startLine" : 22,
  "endLine" : 31,
  "identifiers" : [ "this", "id", "id", "this", "a_sha", "a_sha", "this", "b_sha", "b_sha", "this", "type", "type", "this", "a_path", "a_path", "this", "b_path", "b_path", "this", "a_commit", "a_commit", "this", "b_commit", "b_commit" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\GetIP.java",
  "startLine" : 15,
  "endLine" : 32,
  "identifiers" : [ "Enumeration", "allNetInterfaces", "NetworkInterface", "getNetworkInterfaces", "InetAddress", "ip", "null", "while", "allNetInterfaces", "hasMoreElements", "NetworkInterface", "netInterface", "NetworkInterface", "allNetInterfaces", "nextElement", "System", "out", "println", "netInterface", "getName", "Enumeration", "addresses", "netInterface", "getInetAddresses", "while", "addresses", "hasMoreElements", "ip", "InetAddress", "addresses", "nextElement", "if", "ip", "null", "ip", "instanceof", "Inet4Address", "System", "out", "println", "ip", "getHostAddress" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\idproducer\\MethodNameProducer.java",
  "startLine" : 32,
  "endLine" : 70,
  "identifiers" : [ "String", "methodNameCsvPath", "DbConfig", "resultFolder", "File", "separator", "if", "new", "File", "methodNameCsvPath", "exists", "System", "out", "println", "methodNameCsvPath", "System", "exit", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "methodNameCsvPath", "logger", "info", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "divStr", "str", "split", "String", "blobPath", "divStr", "Integer", "endLine", "Integer", "parseInt", "divStr", "String", "name", "divStr", "if", "name", "length", "name", "name", "substring", "String", "key", "blobPath", "endLine", "bpathel_mname_map", "put", "key", "name", "if", "i", "System", "out", "println", "i", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\idproducer\\UpdateGroupId.java",
  "startLine" : 38,
  "endLine" : 51,
  "identifiers" : [ "DbConfig", "dbConfigLoad", "File", "head_file", "new", "File", "DbConfig", "detectFolder", "File", "separator", "Constants", "MeasureIndexStr", "if", "head_file", "exists", "log", "info", "System", "exit", "File", "group_file", "new", "File", "DbConfig", "detectFolder", "File", "separator", "Constants", "Type123groupStr", "if", "group_file", "exists", "log", "info", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\idproducer\\UpdateGroupId.java",
  "startLine" : 53,
  "endLine" : 82,
  "identifiers" : [ "try", "log", "info", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "DbConfig", "detectFolder", "File", "separator", "Constants", "Type123groupStr", "int", "group_id", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "group_id", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "System", "out", "println", "continue", "for", "String", "mea_id", "ls", "Integer", "meain_id", "Integer", "parseInt", "mea_id", "group_map", "put", "meain_id", "group_id", "if", "group_id", "log", "info", "group_id", "bufferedReader", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\infoProvider\\CsvProvider.java",
  "startLine" : 31,
  "endLine" : 111,
  "identifiers" : [ "String", "sources_sorted", "DbConfig", "blobIdRealPathCsv", "File", "sources_file", "new", "File", "sources_sorted", "if", "sources_file", "exists", "log", "info", "sources_sorted", "System", "exit", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "sources_sorted", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "divStr", "str", "split", "String", "blobId", "divStr", "String", "realPath", "divStr", "Set", "String", "realPathSet", "blobId_realPath_map", "getOrDefault", "blobId", "new", "HashSet", "realPathSet", "add", "realPath", "blobId_realPath_map", "put", "blobId", "realPathSet", "if", "i", "System", "out", "println", "i", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\infoProvider\\CurrentCommitProvider.java",
  "startLine" : 23,
  "endLine" : 59,
  "identifiers" : [ "File", "csvFile", "new", "File", "DbConfig", "CurCommitBlobCsv", "if", "csvFile", "exists", "System", "out", "println", "System", "out", "println", "System", "out", "println", "csvFile", "getAbsolutePath", "System", "out", "println", "int", "i", "BufferedReader", "bufferedReader", "null", "try", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "csvFile", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "split", "if", "ls", "length", "continue", "curCommitBlobRPSet", "add", "str", "catch", "Exception", "e", "e", "printStackTrace", "System", "out", "println", "System", "out", "println", "curCommitBlobRPSet", "size" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\infoProvider\\MethodNameProvider.java",
  "startLine" : 43,
  "endLine" : 58,
  "identifiers" : [ "File", "codeFile", "new", "File", "path", "if", "codeFile", "exists", "sourceStr", "null", "value", "null", "String", "fullStr", "DeleteCAndCplusplusAndJavaNote", "readFile", "path", "sourceStr", "DeleteCAndCplusplusAndJavaNote", "delete_C_Cplusplus_Java_Note", "fullStr", "fullStr", "null", "value", "sourceStr", "toCharArray" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\infoProvider\\MethodNameProvider.java",
  "startLine" : 61,
  "endLine" : 86,
  "identifiers" : [ "String", "encoding", "File", "file", "new", "File", "filePath", "Long", "filelength", "file", "length", "byte", "filecontent", "new", "byte", "filelength", "intValue", "try", "FileInputStream", "in", "new", "FileInputStream", "file", "in", "read", "filecontent", "in", "close", "catch", "FileNotFoundException", "e", "e", "printStackTrace", "return", "null", "catch", "IOException", "e", "e", "printStackTrace", "return", "null", "try", "String", "result", "new", "String", "filecontent", "encoding", "return", "result", "catch", "UnsupportedEncodingException", "e", "System", "err", "println", "encoding", "e", "printStackTrace", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\infoProvider\\MethodNameProvider.java",
  "startLine" : 88,
  "endLine" : 224,
  "identifiers" : [ "int", "startLine", "methodItem", "getStartLine", "String", "methodName", "String", "paras", "String", "fedMName", "List", "String", "filterWord", "Arrays", "asList", "int", "nlcount", "if", "this", "sourceStr", "null", "methodName", "else", "int", "leftBracIdx", "getIndexOfLeftBracket", "startLine", "STATE", "state", "STATE", "One", "Stack", "Character", "braces", "new", "Stack", "Stack", "Character", "nameStack", "new", "Stack", "Stack", "Character", "paraStack", "new", "Stack", "for", "int", "i", "leftBracIdx", "i", "Math", "max", "leftBracIdx", "i", "char", "c", "value", "i", "if", "c", "n", "nlcount", "switch", "state", "case", "One", "if", "c", "braces", "push", "paraStack", "push", "c", "state", "STATE", "Two", "else", "if", "c", "state", "STATE", "Equals", "break", "case", "Equals", "if", "c", "state", "STATE", "RSqB", "nameStack", "push", "c", "if", "isValidChar", "c", "nameStack", "push", "c", "state", "STATE", "Four", "if", "c", "c", "state", "STATE", "Error", "break", "case", "RSqB", "if", "c", "state", "STATE", "LSqB", "nameStack", "push", "c", "if", "c", "c", "state", "STATE", "Error", "break", "case", "LSqB", "if", "isValidChar", "c", "nameStack", "push", "c", "state", "STATE", "Four", "break", "case", "Two", "if", "c", "braces", "push", "else", "if", "c", "braces", "pop", "paraStack", "push", "c", "if", "braces", "empty", "state", "STATE", "Three", "break", "case", "Three", "if", "c", "braces", "push", "state", "STATE", "Two", "else", "if", "isValidChar", "c", "nameStack", "push", "c", "state", "STATE", "Four", "break", "case", "Four", "if", "isValidChar", "c", "nameStack", "push", "c", "else", "state", "STATE", "Exit", "StringBuilder", "stringBuilder", "new", "StringBuilder", "while", "nameStack", "empty", "stringBuilder", "append", "nameStack", "pop", "String", "tmpName", "stringBuilder", "toString", "fedMName", "filterMname", "tmpName", "for", "String", "word", "filterWord", "if", "fedMName", "equals", "word", "paraStack", "clear", "nameStack", "clear", "state", "STATE", "One", "if", "fedMName", "equals", "if", "judgeIndexOfLeftBracket", "startLine", "i", "paraStack", "clear", "nameStack", "clear", "state", "STATE", "One", "int", "newEqualLineCur", "readTextForEqualAndNew", "i", "if", "newEqualLineCur", "nameStack", "clear", "state", "STATE", "Three", "i", "newEqualLineCur", "break", "case", "Exit", "break", "case", "Error", "break", "default", "break", "if", "state", "STATE", "Exit", "state", "STATE", "Error", "break" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\infoProvider\\MethodNameProvider.java",
  "startLine" : 228,
  "endLine" : 236,
  "identifiers" : [ "methodName", "fedMName", "StringBuilder", "paraBuilder", "new", "StringBuilder", "while", "paraStack", "empty", "paraBuilder", "append", "paraStack", "pop", "String", "tmpParas", "paraBuilder", "toString", "paras", "transMParas", "tmpParas" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\infoProvider\\MethodNameProvider.java",
  "startLine" : 287,
  "endLine" : 673,
  "identifiers" : [ "char", "nl", "n", "final", "int", "max", "this", "sourceStr", "length", "int", "match", "int", "i", "for", "i", "i", "max", "i", "if", "value", "i", "nl", "match", "if", "match", "startLine", "break", "if", "i", "max", "return", "char", "target", "for", "i", "i", "i", "if", "value", "i", "nl", "return", "if", "value", "i", "target", "break", "return", "i", "private", "static", "String", "filterMname", "String", "in", "Set", "String", "filterSet", "new", "HashSet", "filterSet", "add", "filterSet", "add", "filterSet", "add", "filterSet", "add", "filterSet", "add", "if", "filterSet", "contains", "in", "return", "else", "return", "in", "private", "static", "boolean", "isValidChar", "char", "c", "if", "c", "c", "c", "c", "c", "c", "c", "c", "_", "c", "return", "true", "else", "return", "false", "public", "void", "getStructNameByStartLine", "MethodItem", "methodItem", "int", "startLine", "methodItem", "getStartLine", "String", "methodName", "int", "nlcount", "if", "this", "sourceStr", "null", "methodName", "else", "int", "leftBracIdx", "getIndexOfLeftBracket", "startLine", "STRUCT_STATE", "struct_state", "STRUCT_STATE", "One", "Stack", "Character", "nameStack", "new", "Stack", "Stack", "Character", "structStack", "new", "Stack", "for", "int", "i", "leftBracIdx", "i", "Math", "max", "leftBracIdx", "i", "char", "c", "value", "i", "if", "c", "n", "nlcount", "switch", "struct_state", "case", "One", "if", "isValidChar", "c", "nameStack", "push", "c", "struct_state", "STRUCT_STATE", "Two", "else", "if", "c", "c", "c", "r", "c", "n", "c", "t", "else", "struct_state", "STRUCT_STATE", "Error", "break", "case", "Two", "if", "isValidChar", "c", "nameStack", "push", "c", "else", "if", "c", "c", "r", "c", "t", "struct_state", "STRUCT_STATE", "Three", "else", "struct_state", "STRUCT_STATE", "Error", "break", "case", "Three", "if", "c", "c", "r", "c", "t", "else", "if", "isValidChar", "c", "structStack", "push", "c", "struct_state", "STRUCT_STATE", "Four", "else", "struct_state", "STRUCT_STATE", "Error", "break", "case", "Four", "if", "isValidChar", "c", "structStack", "push", "c", "else", "struct_state", "STRUCT_STATE", "Exit", "break", "case", "Exit", "break", "case", "Error", "break", "default", "break", "if", "struct_state", "STRUCT_STATE", "Exit", "struct_state", "STRUCT_STATE", "Error", "break", "if", "struct_state", "STRUCT_STATE", "Exit", "methodName", "else", "StringBuilder", "stringBuilder", "new", "StringBuilder", "while", "nameStack", "empty", "stringBuilder", "append", "nameStack", "pop", "String", "tmpName", "stringBuilder", "toString", "stringBuilder", "new", "StringBuilder", "while", "structStack", "empty", "stringBuilder", "append", "structStack", "pop", "String", "structKey", "stringBuilder", "toString", "if", "structKey", "equals", "structKey", "equals", "structKey", "equals", "structKey", "contains", "structKey", "contains", "structKey", "equals", "String", "fedMName", "filterMname", "tmpName", "methodName", "fedMName", "else", "methodName", "if", "methodName", "equals", "methodItem", "setMethodName", "methodName", "else", "methodItem", "setStartLine", "startLine", "nlcount", "methodItem", "setMethodName", "methodName", "public", "void", "getMethodNameByEndLine", "MethodItem", "methodItem", "int", "endLine", "methodItem", "getEndLine", "String", "methodName", "String", "fedMName", "STRUCT_STATE", "state", "STRUCT_STATE", "One", "if", "this", "sourceStr", "null", "return", "else", "int", "rightBracIdx", "getIndexOfRightBracket", "endLine", "if", "rightBracIdx", "return", "Stack", "Character", "nameStruct", "new", "Stack", "char", "c", "for", "int", "i", "rightBracIdx", "i", "Math", "max", "this", "sourceStr", "length", "rightBracIdx", "i", "c", "value", "i", "nameStruct", "push", "c", "if", "value", "i", "value", "i", "n", "continue", "else", "break", "if", "nameStruct", "empty", "Character", "firstpushChar", "nameStruct", "pop", "Character", "tempchar", "StringBuilder", "nameStr", "new", "StringBuilder", "if", "firstpushChar", "while", "nameStruct", "isEmpty", "tempchar", "nameStruct", "pop", "if", "isValidChar", "tempchar", "nameStr", "append", "tempchar", "break", "while", "nameStruct", "isEmpty", "tempchar", "nameStruct", "pop", "if", "isValidChar", "tempchar", "nameStr", "append", "tempchar", "else", "break", "if", "nameStr", "length", "fedMName", "nameStr", "toString", "if", "fedMName", "equals", "methodItem", "setMethodName", "fedMName", "int", "startLine", "getMethodStartLineForEndName", "methodItem", "getStartLine", "if", "startLine", "methodItem", "setStartLine", "startLine", "else", "methodItem", "setMethodName", "else", "methodItem", "setMethodName", "private", "String", "filterEndName", "String", "tmpName", "Set", "String", "filterSet", "new", "HashSet", "filterSet", "add", "if", "filterSet", "contains", "tmpName", "return", "else", "return", "tmpName", "private", "int", "getMethodStartLineForEndName", "Integer", "startLine", "Stack", "Character", "structStack", "new", "Stack", "STRUCT_STATE", "structState", "STRUCT_STATE", "One", "int", "nlCount", "if", "this", "sourceStr", "null", "return", "else", "char", "nl", "n", "char", "c", "int", "leftBracIdx", "getIndexOfLeftBracket", "startLine", "for", "int", "i", "leftBracIdx", "i", "Math", "max", "leftBracIdx", "i", "c", "value", "i", "switch", "structState", "case", "One", "if", "c", "c", "r", "c", "t", "c", "n", "else", "if", "isValidChar", "c", "structStack", "push", "c", "structState", "STRUCT_STATE", "Two", "else", "structState", "STRUCT_STATE", "Error", "break", "case", "Two", "if", "isValidChar", "c", "structStack", "push", "c", "else", "structState", "STRUCT_STATE", "Exit", "case", "Exit", "break", "case", "Error", "break", "default", "break", "if", "structState", "STRUCT_STATE", "Exit", "structState", "STRUCT_STATE", "Error", "break", "if", "c", "nl", "nlCount", "if", "structState", "STRUCT_STATE", "Error", "return", "else", "StringBuilder", "structName", "new", "StringBuilder", "while", "structStack", "empty", "structName", "append", "structStack", "pop", "String", "structKey", "structName", "toString", "if", "structKey", "equals", "structKey", "equals", "structKey", "equals", "structKey", "contains", "structKey", "contains", "structKey", "equals", "return", "startLine", "nlCount", "else", "return", "private", "int", "getIndexOfRightBracket", "int", "endLine", "char", "nl", "n", "final", "int", "max", "this", "sourceStr", "length", "int", "match", "int", "i", "for", "i", "i", "max", "i", "if", "value", "i", "nl", "match", "if", "match", "endLine", "break", "if", "i", "max", "return", "char", "target", "for", "i", "i", "i", "if", "value", "i", "nl", "return", "if", "value", "i", "target", "break", "return", "i", "private", "static", "String", "transMParas", "String", "in", "String", "res", "in", "replaceAll", "res", "res", "replaceAll", "res", "res", "replaceAll", "if", "res", "length", "res", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\infoProvider\\NormalProducer.java",
  "startLine" : 15,
  "endLine" : 27,
  "identifiers" : [ "String", "regex", "if", "File", "separator", "equals", "regex", "else", "regex", "String", "divPath", "blobPath", "split", "regex", "String", "last", "divPath", "divPath", "length", "last", "last", "substring", "last", "length", "String", "first", "divPath", "divPath", "length", "return", "first", "last" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\infoProvider\\TokenView.java",
  "startLine" : 21,
  "endLine" : 30,
  "identifiers" : [ "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "url", "String", "str", "null", "while", "str", "bufferedReader", "readLine", "null", "lines", "add", "str", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\infoProvider\\TokenView.java",
  "startLine" : 31,
  "endLine" : 65,
  "identifiers" : [ "String", "codeSnip", "readSelectedLine", "fromLine", "toLine", "String", "removeCommentCode", "DeleteCAndCplusplusAndJavaNote", "delete_C_Cplusplus_Java_Note", "codeSnip", "int", "indexLeftBracket", "removeCommentCode", "indexOf", "if", "indexLeftBracket", "return", "String", "methodName", "removeCommentCode", "substring", "indexLeftBracket", "return", "methodName", "public", "String", "readSelectedLine", "int", "fromLine", "int", "toLine", "String", "result", "if", "fromLine", "toLine", "fromLine", "lines", "size", "toLine", "lines", "size", "return", "result", "for", "int", "i", "fromLine", "i", "toLine", "i", "if", "i", "toLine", "result", "lines", "get", "i", "else", "result", "lines", "get", "i", "return", "result", "public", "String", "getNoCommentCode", "List", "String", "lines100", "lines", "subList", "Math", "min", "lines", "size", "String", "total", "String", "join", "lines100", "total", "DeleteCAndCplusplusAndJavaNote", "delete_C_Cplusplus_Java_Note", "total", "return", "total" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\InsertByJDBC.java",
  "startLine" : 48,
  "endLine" : 89,
  "identifiers" : [ "try", "logger", "info", "DbConfig", "measureIndexTbName", "String", "sql", "String", "format", "DbConfig", "measureIndexTbName", "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "return", "Statement", "statement", "connection", "createStatement", "statement", "execute", "sql", "statement", "close", "logger", "info", "DbConfig", "measureIndexTbName", "sql", "String", "format", "DbConfig", "measureIndexTbName", "statement", "connection", "createStatement", "statement", "execute", "sql", "statement", "close", "connection", "recycle", "catch", "Exception", "e", "logger", "error", "e", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\InsertByJDBC.java",
  "startLine" : 94,
  "endLine" : 188,
  "identifiers" : [ "logger", "info", "try", "String", "csvPath", "DbConfig", "resultFolder", "File", "separator", "BufferedReader", "reader", "null", "try", "reader", "new", "BufferedReader", "new", "FileReader", "csvPath", "catch", "FileNotFoundException", "e", "e", "printStackTrace", "String", "line", "null", "List", "MethodCloneInfo", "bufferList", "new", "ArrayList", "int", "insertCount", "while", "true", "try", "if", "line", "reader", "readLine", "null", "break", "catch", "IOException", "e", "e", "printStackTrace", "String", "tmp", "line", "split", "if", "tmp", "length", "continue", "int", "k", "Integer", "id", "Integer", "parseInt", "tmp", "k", "Integer", "groupId", "Integer", "parseInt", "tmp", "k", "Integer", "methodId", "Integer", "parseInt", "tmp", "k", "String", "blobPath", "tmp", "k", "String", "realPath", "tmp", "k", "if", "realPath", "length", "realPath", "realPath", "substring", "Integer", "startLine", "Integer", "parseInt", "tmp", "k", "Integer", "endLine", "Integer", "parseInt", "tmp", "k", "String", "methodName", "tmp", "k", "if", "methodName", "length", "methodName", "methodName", "substring", "Integer", "isCurCommitBlob", "Integer", "parseInt", "tmp", "k", "String", "blobId", "tmp", "k", "String", "paras", "tmp", "k", "String", "author", "tmp", "k", "MethodCloneInfo", "methodCloneInfo", "new", "MethodCloneInfo", "id", "groupId", "methodId", "blobPath", "realPath", "startLine", "endLine", "methodName", "isCurCommitBlob", "blobId", "paras", "author", "bufferList", "add", "methodCloneInfo", "if", "bufferList", "size", "DbConfig", "bufferCount", "try", "insertIntoDB", "bufferList", "catch", "SQLException", "throwables", "throwables", "printStackTrace", "insertCount", "bufferList", "size", "logger", "info", "insertCount", "bufferList", "clear", "if", "bufferList", "size", "try", "insertIntoDB", "bufferList", "catch", "SQLException", "throwables", "throwables", "printStackTrace", "insertCount", "bufferList", "size", "logger", "info", "insertCount", "bufferList", "clear", "try", "reader", "close", "catch", "IOException", "e", "e", "printStackTrace", "finally" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\InsertByJDBC.java",
  "startLine" : 190,
  "endLine" : 240,
  "identifiers" : [ "if", "bufferList", "size", "return", "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "PreparedStatement", "statement", "null", "try", "connection", "setAutoCommit", "false", "logger", "info", "statement", "connection", "prepareStatement", "DbConfig", "measureIndexTbName", "for", "MethodCloneInfo", "info", "bufferList", "statement", "setInt", "info", "getId", "statement", "setInt", "info", "getGroupId", "statement", "setInt", "info", "getMethodId", "statement", "setString", "info", "getBlobPath", "statement", "setString", "info", "getRealPath", "statement", "setInt", "info", "getStartLine", "statement", "setInt", "info", "getEndLine", "statement", "setString", "info", "getMethodName", "statement", "setInt", "info", "getIsCurCommit", "statement", "setString", "info", "getBlobId", "statement", "setString", "info", "getParas", "statement", "setString", "info", "getAuthor", "statement", "addBatch", "logger", "info", "statement", "executeBatch", "logger", "info", "connection", "commit", "logger", "info", "catch", "Exception", "e", "logger", "info", "connection", "rollback", "throw", "e", "finally", "try", "statement", "close", "finally", "connection", "recycle" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\Parse.java",
  "startLine" : 66,
  "endLine" : 147,
  "identifiers" : [ "File", "headerFile", "new", "File", "DbConfig", "resultFolder", "File", "separator", "Constants", "MethodNameStr", "if", "headerFile", "exists", "logger", "error", "logger", "error", "headerFile", "getAbsolutePath", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "headerFile", "logger", "info", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "logger", "error", "logger", "error", "str", "Integer", "methodId", "Integer", "parseInt", "ls", "Integer", "groupId", "updateGroupId", "getGroupId", "methodId", "String", "blobPath", "ls", "String", "blobId", "NormalProducer", "getBlobId", "blobPath", "Set", "String", "realPathSet", "csvProvider", "getRealPathSetByBlobId", "blobId", "Integer", "startLine", "Integer", "parseInt", "ls", "Integer", "endLine", "Integer", "parseInt", "ls", "String", "methodName", "ls", "String", "paras", "ls", "if", "methodName", "length", "methodName", "methodName", "substring", "if", "paras", "length", "paras", "paras", "substring", "String", "author", "for", "String", "realPath", "realPathSet", "Integer", "isCurCommit", "currentCommitProvider", "isCurrentCommitBlob", "blobId", "realPath", "MethodCloneInfo", "methodCloneInfo", "new", "MethodCloneInfo", "i", "groupId", "methodId", "blobPath", "realPath", "startLine", "endLine", "methodName", "isCurCommit", "blobId", "paras", "author", "bufferList", "add", "methodCloneInfo", "if", "i", "logger", "info", "i", "if", "bufferList", "size", "writeBufferList", "bufferedReader", "close", "catch", "IOException", "e", "e", "printStackTrace", "writeBufferList", "logger", "info" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\Parse.java",
  "startLine" : 149,
  "endLine" : 168,
  "identifiers" : [ "File", "resultFile", "new", "File", "DbConfig", "resultFolder", "File", "separator", "if", "bufferList", "size", "try", "FileWriter", "fw", "new", "FileWriter", "resultFile", "getAbsoluteFile", "true", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "for", "MethodCloneInfo", "methodCloneInfo", "bufferList", "bw", "write", "methodCloneInfo", "toString", "bw", "flush", "bw", "close", "catch", "Exception", "e", "e", "printStackTrace", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\ParseMNameText.java",
  "startLine" : 44,
  "endLine" : 83,
  "identifiers" : [ "File", "outputFile", "new", "File", "DbConfig", "resultFolder", "File", "separator", "try", "Files", "deleteIfExists", "outputFile", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "BlockingQueue", "List", "Measure", "measuresToParse", "new", "LinkedBlockingQueue", "BlockingQueue", "List", "MethodItem", "methodItemListQueue", "new", "LinkedBlockingQueue", "AtomicInteger", "parseMIcount", "new", "AtomicInteger", "MIProducer", "miProducer", "new", "MIProducer", "measuresToParse", "List", "MIConsumerMethodInfoProducer", "parserList", "new", "ArrayList", "MIConsumerMethodInfoProducer", "tmpParser", "null", "for", "int", "i", "i", "DbConfig", "threadNum", "i", "tmpParser", "new", "MIConsumerMethodInfoProducer", "measuresToParse", "methodItemListQueue", "parseMIcount", "parserList", "add", "tmpParser", "MethodItemConsumerOutputer", "outputer", "new", "MethodItemConsumerOutputer", "methodItemListQueue", "outputFile", "outputer", "setName", "miProducer", "start", "Iterator", "iterator", "parserList", "iterator", "while", "iterator", "hasNext", "tmpParser", "MIConsumerMethodInfoProducer", "iterator", "next", "tmpParser", "start", "outputer", "start", "miProducer", "join", "iterator", "parserList", "iterator", "while", "iterator", "hasNext", "tmpParser", "MIConsumerMethodInfoProducer", "iterator", "next", "tmpParser", "join", "outputer", "join" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\ParseToDB.java",
  "startLine" : 44,
  "endLine" : 74,
  "identifiers" : [ "DbConfig", "dbConfigLoad", "Properties", "prop", "DbConfig", "getProperties", "String", "resource", "try", "InputStream", "inputStream", "Resources", "getResourceAsStream", "resource", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "prop", "session", "sqlSessionFactory", "openSession", "false", "IMethodCloneInfoDao", "methodCloneInfoDao", "session", "getMapper", "IMethodCloneInfoDao", "class", "methodCloneInfoDao", "setName", "methodCloneInfoDao", "setFOREIGN_KEY_CHECKS0", "logger", "info", "DbConfig", "measureIndexTbName", "methodCloneInfoDao", "DropTable", "DbConfig", "measureIndexTbName", "logger", "info", "DbConfig", "measureIndexTbName", "methodCloneInfoDao", "createCrossTable", "DbConfig", "measureIndexTbName", "methodCloneInfoDao", "setFOREIGN_KEY_CHECKS1", "session", "commit", "logger", "info", "DbConfig", "measureIndexTbName", "catch", "Exception", "e", "session", "rollback", "logger", "error", "e", "toString", "logger", "error", "e", "getStackTrace", "toString", "logger", "error", "session", "close", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\ParseToDB.java",
  "startLine" : 76,
  "endLine" : 144,
  "identifiers" : [ "int", "i", "String", "csvPath", "DbConfig", "resultFolder", "File", "separator", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "csvPath", "logger", "info", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "divStr", "str", "split", "if", "divStr", "length", "continue", "int", "k", "Integer", "id", "Integer", "parseInt", "divStr", "k", "Integer", "groupId", "Integer", "parseInt", "divStr", "k", "Integer", "methodId", "Integer", "parseInt", "divStr", "k", "String", "blobPath", "divStr", "k", "String", "realPath", "divStr", "k", "if", "realPath", "length", "realPath", "realPath", "substring", "Integer", "startLine", "Integer", "parseInt", "divStr", "k", "Integer", "endLine", "Integer", "parseInt", "divStr", "k", "String", "methodName", "divStr", "k", "if", "methodName", "length", "methodName", "methodName", "substring", "Integer", "isCurCommitBlob", "Integer", "parseInt", "divStr", "k", "String", "blobId", "divStr", "k", "String", "commitDate", "divStr", "k", "String", "author", "divStr", "k", "MethodCloneInfo", "methodCloneInfo", "new", "MethodCloneInfo", "id", "groupId", "methodId", "blobPath", "realPath", "startLine", "endLine", "methodName", "isCurCommitBlob", "blobId", "commitDate", "author", "bufferList", "add", "methodCloneInfo", "if", "bufferList", "size", "DbConfig", "bufferCount", "insertToDB", "catch", "Exception", "e", "logger", "error", "e", "toString", "if", "session", "null", "session", "close", "insertToDB", "if", "session", "null", "session", "close" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\ParseToDB.java",
  "startLine" : 146,
  "endLine" : 206,
  "identifiers" : [ "if", "bufferList", "size", "int", "errorCount", "while", "true", "logger", "info", "try", "IMethodCloneInfoDao", "methodCloneInfoDao", "session", "getMapper", "IMethodCloneInfoDao", "class", "if", "errorCount", "for", "MethodCloneInfo", "methodCloneInfo", "bufferList", "try", "methodCloneInfoDao", "deleteByPrimaryKey", "methodCloneInfo", "getId", "DbConfig", "measureIndexTbName", "catch", "Exception", "e", "logger", "error", "e", "getMessage", "e", "logger", "error", "logger", "info", "methodCloneInfoDao", "insertInfoList", "bufferList", "DbConfig", "measureIndexTbName", "logger", "info", "session", "commit", "logger", "info", "logger", "info", "break", "catch", "Exception", "e", "logger", "error", "e", "toString", "logger", "info", "try", "session", "rollback", "catch", "Exception", "ex", "try", "session", "close", "catch", "Exception", "ex", "logger", "info", "try", "session", "sqlSessionFactory", "openSession", "logger", "info", "catch", "Exception", "ex", "logger", "error", "logger", "error", "e", "getMessage", "e", "errorCount", "if", "errorCount", "logger", "error", "System", "exit", "break", "insertNum", "bufferList", "size", "logger", "info", "insertNum", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\ParseToDBDruid.java",
  "startLine" : 34,
  "endLine" : 73,
  "identifiers" : [ "DbConfig", "dbConfigLoad", "Properties", "prop", "DbConfig", "getProperties", "String", "resource", "InputStream", "inputStream", "null", "try", "inputStream", "Resources", "getResourceAsStream", "resource", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e", "log", "error", "System", "exit", "try", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "prop", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "log", "error", "System", "exit", "SqlSession", "session", "null", "try", "session", "sqlSessionFactory", "openSession", "false", "log", "info", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "log", "error", "System", "exit", "IMethodCloneInfoDao", "methodCloneInfoDao", "session", "getMapper", "IMethodCloneInfoDao", "class", "String", "res", "methodCloneInfoDao", "selectOne", "if", "res", "null", "log", "info", "DbConfig", "measureIndexTbName", "else", "log", "info", "DbConfig", "measureIndexTbName", "session", "close" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\ParseToDBDruid.java",
  "startLine" : 77,
  "endLine" : 98,
  "identifiers" : [ "SqlSession", "session", "null", "try", "session", "sqlSessionFactory", "openSession", "false", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "log", "error", "System", "exit", "IMethodCloneInfoDao", "methodCloneInfoDao", "session", "getMapper", "IMethodCloneInfoDao", "class", "methodCloneInfoDao", "setName", "methodCloneInfoDao", "setFOREIGN_KEY_CHECKS0", "log", "info", "DbConfig", "measureIndexTbName", "methodCloneInfoDao", "DropTable", "DbConfig", "measureIndexTbName", "log", "info", "DbConfig", "measureIndexTbName", "methodCloneInfoDao", "createCrossTable", "DbConfig", "measureIndexTbName", "methodCloneInfoDao", "setFOREIGN_KEY_CHECKS1", "session", "commit", "session", "close", "log", "info", "DbConfig", "measureIndexTbName" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\ParseToDBDruid.java",
  "startLine" : 100,
  "endLine" : 164,
  "identifiers" : [ "int", "i", "String", "csvPath", "DbConfig", "resultFolder", "File", "separator", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "csvPath", "log", "info", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "divStr", "str", "split", "if", "divStr", "length", "continue", "int", "k", "Integer", "id", "Integer", "parseInt", "divStr", "k", "Integer", "groupId", "Integer", "parseInt", "divStr", "k", "Integer", "methodId", "Integer", "parseInt", "divStr", "k", "String", "blobPath", "divStr", "k", "String", "realPath", "divStr", "k", "if", "realPath", "length", "realPath", "realPath", "substring", "Integer", "startLine", "Integer", "parseInt", "divStr", "k", "Integer", "endLine", "Integer", "parseInt", "divStr", "k", "String", "methodName", "divStr", "k", "if", "methodName", "length", "methodName", "methodName", "substring", "Integer", "isCurCommitBlob", "Integer", "parseInt", "divStr", "k", "String", "blobId", "divStr", "k", "String", "commitDate", "divStr", "k", "String", "author", "divStr", "k", "MethodCloneInfo", "methodCloneInfo", "new", "MethodCloneInfo", "id", "groupId", "methodId", "blobPath", "realPath", "startLine", "endLine", "methodName", "isCurCommitBlob", "blobId", "commitDate", "author", "bufferList", "add", "methodCloneInfo", "if", "bufferList", "size", "DbConfig", "bufferCount", "insertToDB", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e", "insertToDB" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\ParseToDBDruid.java",
  "startLine" : 166,
  "endLine" : 236,
  "identifiers" : [ "if", "bufferList", "size", "int", "errorCount", "while", "true", "log", "info", "SqlSession", "session", "null", "try", "session", "sqlSessionFactory", "openSession", "TransactionIsolationLevel", "READ_COMMITTED", "log", "info", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "log", "error", "System", "exit", "try", "IMethodCloneInfoDao", "methodCloneInfoDao", "session", "getMapper", "IMethodCloneInfoDao", "class", "if", "errorCount", "log", "info", "Set", "Integer", "idSet", "new", "HashSet", "for", "MethodCloneInfo", "methodCloneInfo", "bufferList", "idSet", "add", "methodCloneInfo", "getId", "try", "methodCloneInfoDao", "deleteByPrimaryKeySet", "idSet", "DbConfig", "measureIndexTbName", "log", "info", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "log", "error", "idSet", "clear", "log", "info", "methodCloneInfoDao", "insertInfoList", "bufferList", "DbConfig", "measureIndexTbName", "log", "info", "session", "commit", "log", "info", "log", "info", "if", "session", "null", "session", "close", "break", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "log", "info", "try", "session", "rollback", "catch", "Exception", "ex", "try", "session", "close", "catch", "Exception", "ex", "errorCount", "if", "errorCount", "log", "error", "System", "exit", "break", "if", "session", "null", "session", "close", "insertNum", "bufferList", "size", "log", "info", "insertNum", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 33,
  "endLine" : 136,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "State", "state", "State", "CODE", "for", "int", "i", "i", "strToHandle", "length", "i", "char", "c", "strToHandle", "charAt", "i", "switch", "state", "case", "CODE", "if", "c", "state", "State", "SLASH", "else", "builder", "append", "c", "if", "c", "state", "State", "CODE_CHAR", "else", "if", "c", "r", "n", "r", "n", "r", "n", "state", "State", "CODE", "else", "state", "State", "CODE_STRING", "break", "case", "STRING_ESCAPE_SEQUENCE", "builder", "append", "c", "state", "State", "CODE_STRING", "break", "default", "break", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 144,
  "endLine" : 164,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "try", "FileInputStream", "fis", "new", "FileInputStream", "inputFileName", "InputStreamReader", "dis", "new", "InputStreamReader", "fis", "BufferedReader", "reader", "new", "BufferedReader", "dis", "String", "s", "while", "s", "reader", "readLine", "null", "builder", "append", "s", "builder", "append", "reader", "close", "dis", "close", "fis", "close", "catch", "IOException", "e", "e", "printStackTrace", "return", "null", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 171,
  "endLine" : 184,
  "identifiers" : [ "try", "FileOutputStream", "fos", "new", "FileOutputStream", "outputFileName", "OutputStreamWriter", "dos", "new", "OutputStreamWriter", "fos", "BufferedWriter", "writer", "new", "BufferedWriter", "dos", "writer", "write", "strHandled", "writer", "close", "dos", "close", "fos", "close", "System", "out", "println", "outputFileName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\util\\DruidDataSourceFactory.java",
  "startLine" : 23,
  "endLine" : 53,
  "identifiers" : [ "DruidDataSource", "dds", "new", "DruidDataSource", "dds", "setDriverClassName", "this", "props", "getProperty", "dds", "setUrl", "this", "props", "getProperty", "dds", "setUsername", "this", "props", "getProperty", "dds", "setPassword", "this", "props", "getProperty", "dds", "setValidationQuery", "this", "props", "getProperty", "dds", "setValidationQueryTimeout", "dds", "setTestOnBorrow", "Boolean", "getBoolean", "this", "props", "getProperty", "dds", "setTestOnReturn", "Boolean", "getBoolean", "this", "props", "getProperty", "dds", "setTestWhileIdle", "Boolean", "getBoolean", "this", "props", "getProperty", "dds", "setMaxActive", "Integer", "parseInt", "this", "props", "getProperty", "dds", "setInitialSize", "Integer", "parseInt", "this", "props", "getProperty", "dds", "setMaxWait", "Long", "parseLong", "this", "props", "getProperty", "dds", "setPoolPreparedStatements", "false", "dds", "setLogAbandoned", "true", "dds", "setRemoveAbandoned", "false", "dds", "setRemoveAbandonedTimeout", "dds", "setTimeBetweenEvictionRunsMillis", "try", "dds", "init", "catch", "SQLException", "e", "log", "error", "e", "getMessage", "e", "return", "dds" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\util\\DruidUtil.java",
  "startLine" : 22,
  "endLine" : 39,
  "identifiers" : [ "if", "dataSource", "null", "return", "dataSource", "new", "DruidDataSource", "dataSource", "setDriverClassName", "DbConfig", "DRIVER", "dataSource", "setUrl", "DbConfig", "URL", "dataSource", "setUsername", "DbConfig", "USERNAME", "dataSource", "setPassword", "DbConfig", "PASSWORD", "dataSource", "setInitialSize", "dataSource", "setMaxActive", "dataSource", "setMaxWait", "dataSource", "setTimeBetweenEvictionRunsMillis", "dataSource", "setMinEvictableIdleTimeMillis", "dataSource", "setValidationQuery", "dataSource", "setTestOnBorrow", "true", "dataSource", "init" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\util\\InitTable.java",
  "startLine" : 31,
  "endLine" : 53,
  "identifiers" : [ "DbConfig", "dbConfigLoad", "String", "resource", "try", "InputStream", "inputStream", "Resources", "getResourceAsStream", "resource", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "SqlSession", "session", "sqlSessionFactory", "openSession", "IMethodCloneInfoDao", "methodCloneInfoDao", "session", "getMapper", "IMethodCloneInfoDao", "class", "methodCloneInfoDao", "setName", "methodCloneInfoDao", "setFOREIGN_KEY_CHECKS0", "methodCloneInfoDao", "DropTable", "DbConfig", "measureIndexTbName", "methodCloneInfoDao", "createCrossTable", "DbConfig", "measureIndexTbName", "methodCloneInfoDao", "setFOREIGN_KEY_CHECKS1", "session", "commit", "session", "close", "logger", "info", "DbConfig", "measureIndexTbName", "catch", "Exception", "e", "logger", "info", "e", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\util\\MethodNameUtil.java",
  "startLine" : 15,
  "endLine" : 27,
  "identifiers" : [ "int", "idx", "input", "indexOf", "MethodSign", "result", "if", "idx", "result", "new", "MethodSign", "input", "else", "String", "firstPart", "input", "substring", "idx", "String", "secondPart", "input", "substring", "idx", "result", "new", "MethodSign", "firstPart", "secondPart", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\worker\\FileProducer.java",
  "startLine" : 33,
  "endLine" : 70,
  "identifiers" : [ "ArrayList", "bufferList", "new", "ArrayList", "this", "maxGroupSize", "File", "filesInFirstDir", "blobOfRepoDirFile", "listFiles", "int", "i", "for", "File", "preFixFile", "filesInFirstDir", "if", "preFixFile", "isDirectory", "File", "postFixFileArr", "preFixFile", "listFiles", "for", "File", "postFixFile", "postFixFileArr", "if", "postFixFile", "isFile", "bufferList", "add", "postFixFile", "if", "bufferList", "size", "this", "maxGroupSize", "this", "put", "bufferList", "bufferList", "clear", "i", "if", "i", "logger", "info", "this", "getName", "i", "if", "bufferList", "size", "this", "put", "bufferList", "for", "int", "k", "k", "DbConfig", "threadNum", "k", "this", "put", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\worker\\FileProducer.java",
  "startLine" : 72,
  "endLine" : 86,
  "identifiers" : [ "boolean", "succeed", "false", "ArrayList", "File", "out", "new", "ArrayList", "flist", "size", "out", "addAll", "flist", "do", "try", "this", "outputFileListQueue", "put", "out", "succeed", "true", "catch", "InterruptedException", "var5", "var5", "printStackTrace", "while", "succeed" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\worker\\MethodItemConsumerOutputer.java",
  "startLine" : 27,
  "endLine" : 38,
  "identifiers" : [ "this", "queue", "queue", "this", "numPoisons", "try", "this", "bufferedWriter", "new", "BufferedWriter", "new", "OutputStreamWriter", "new", "FileOutputStream", "outputFile", "catch", "UnsupportedEncodingException", "e", "e", "printStackTrace", "catch", "FileNotFoundException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\worker\\MethodItemConsumerOutputer.java",
  "startLine" : 40,
  "endLine" : 71,
  "identifiers" : [ "List", "b", "null", "while", "true", "while", "true", "try", "b", "this", "queue", "take", "break", "catch", "InterruptedException", "var5", "if", "b", "size", "this", "numPoisons", "if", "this", "numPoisons", "DbConfig", "threadNum", "try", "this", "bufferedWriter", "close", "catch", "IOException", "var3", "var3", "printStackTrace", "return", "else", "try", "this", "writeParseResult", "b", "catch", "IOException", "var4", "var4", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\worker\\MIConsumerMethodInfoProducer.java",
  "startLine" : 32,
  "endLine" : 78,
  "identifiers" : [ "List", "MethodItem", "methodItemList", "new", "LinkedList", "List", "Measure", "mListOfFile", "null", "while", "true", "while", "true", "try", "mListOfFile", "this", "MIListInputQueue", "take", "break", "catch", "InterruptedException", "var7", "if", "mListOfFile", "size", "if", "methodItemList", "size", "this", "put", "methodItemList", "this", "put", "new", "ArrayList", "return", "Iterator", "iterator", "mListOfFile", "iterator", "String", "path", "mListOfFile", "get", "getPath", "MethodNameProvider", "methodNameProvider", "new", "MethodNameProvider", "path", "while", "iterator", "hasNext", "Measure", "measure", "Measure", "iterator", "next", "MethodItem", "methodItem", "new", "MethodItem", "methodItem", "setId", "measure", "getMid", "methodItem", "setBlobPath", "measure", "getPath", "methodItem", "setStartLine", "measure", "getStartLine", "methodItem", "setEndLine", "measure", "getEndLine", "methodNameProvider", "getMethodNameByStartLine", "methodItem", "if", "methodItem", "getMethodName", "equals", "methodNameProvider", "getStructNameByStartLine", "methodItem", "if", "methodItem", "getMethodName", "equals", "methodNameProvider", "getMethodNameByEndLine", "methodItem", "methodItemList", "add", "methodItem", "this", "put", "methodItemList" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\worker\\MIConsumerMethodInfoProducer.java",
  "startLine" : 80,
  "endLine" : 96,
  "identifiers" : [ "List", "MethodItem", "miOutList", "new", "LinkedList", "miOutList", "addAll", "outputMethodItemList", "boolean", "success", "false", "do", "try", "this", "methodItemListOutputQueue", "put", "miOutList", "success", "true", "catch", "InterruptedException", "var4", "var4", "printStackTrace", "while", "success", "outputMethodItemList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\worker\\MIProducer.java",
  "startLine" : 33,
  "endLine" : 106,
  "identifiers" : [ "String", "mipath", "DbConfig", "detectFolder", "File", "separator", "MeasureIndexStr", "File", "mifile", "new", "File", "mipath", "if", "mifile", "exists", "log", "error", "mipath", "ArrayList", "bufferList", "new", "ArrayList", "log", "info", "int", "i", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "mifile", "String", "lastPath", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "log", "error", "log", "error", "str", "continue", "Integer", "methodId", "Integer", "parseInt", "ls", "String", "blobPath", "ls", "Integer", "startLine", "Integer", "parseInt", "ls", "Integer", "endLine", "Integer", "parseInt", "ls", "Measure", "measure", "new", "Measure", "methodId", "blobPath", "startLine", "endLine", "if", "blobPath", "equals", "lastPath", "bufferList", "add", "measure", "else", "if", "lastPath", "equals", "this", "put", "bufferList", "bufferList", "clear", "bufferList", "add", "measure", "lastPath", "blobPath", "else", "bufferList", "add", "measure", "lastPath", "blobPath", "if", "i", "log", "info", "i", "bufferedReader", "close", "log", "info", "i", "catch", "IOException", "e", "e", "printStackTrace", "if", "bufferList", "size", "this", "put", "bufferList", "for", "int", "k", "k", "DbConfig", "threadNum", "k", "this", "put", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\db\\worker\\MIProducer.java",
  "startLine" : 108,
  "endLine" : 122,
  "identifiers" : [ "boolean", "succeed", "false", "ArrayList", "Measure", "out", "new", "ArrayList", "measureList", "size", "out", "addAll", "measureList", "do", "try", "this", "outputMeasureListQueue", "put", "out", "succeed", "true", "catch", "InterruptedException", "var5", "var5", "printStackTrace", "while", "succeed" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\bean\\CommitRecord.java",
  "startLine" : 52,
  "endLine" : 62,
  "identifiers" : [ "this", "id", "id", "this", "groupId", "groupId", "this", "methodId", "methodId", "this", "path", "path", "this", "startLine", "startLine", "this", "endLine", "endLine", "this", "blobId", "blobId", "this", "realPath", "realPath", "this", "methodName", "methodName" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\bean\\CommitRecord.java",
  "startLine" : 64,
  "endLine" : 78,
  "identifiers" : [ "this", "id", "id", "this", "groupId", "groupId", "this", "methodId", "methodId", "this", "path", "path", "this", "startLine", "startLine", "this", "endLine", "endLine", "this", "blobId", "blobId", "this", "commitId", "commitId", "this", "date", "date", "this", "authorDate", "authorDate", "this", "realPath", "realPath", "this", "methodName", "methodName", "this", "submitter", "submitter" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\bean\\CommitRecord.java",
  "startLine" : 248,
  "endLine" : 257,
  "identifiers" : [ "CommitRecord", "other", "new", "CommitRecord", "id", "groupId", "methodId", "path", "startLine", "endLine", "blobId", "commitId", "date", "authorDate", "realPath", "methodName", "submitter", "other", "setPrevMethodId", "prevMethodId", "other", "setNextMethodId", "nextMethodId", "other", "setInstanceNumber", "instanceNumber", "other", "setStatus", "status", "other", "setRepoName", "repoName", "other", "setIsCurCommit", "isCurCommit", "return", "other" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\bean\\RawCommitInfo.java",
  "startLine" : 13,
  "endLine" : 22,
  "identifiers" : [ "this", "commitId", "id", "this", "date", "date", "this", "authorDate", "authorDate", "this", "author", "author", "this", "modifiedFileCount", "modifiedFileCount", "this", "lineNumber", "lineNumber", "this", "commitMessage", "commitMessage", "this", "projectName", "proName" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\Manager\\GroupContentManager.java",
  "startLine" : 21,
  "endLine" : 48,
  "identifiers" : [ "if", "blobId", "null", "blobId", "isEmpty", "return", "if", "groupContentInfo", "contentMap", "containsKey", "blobId", "String", "blobPath", "PathUtil", "getBlobPathByBlobId", "blobId", "repoName", "try", "if", "groupContentInfo", "contentMap", "size", "popElement", "groupContentInfo", "contentMap", "put", "blobId", "FileUtil", "readLines", "blobPath", "catch", "IOException", "e", "e", "printStackTrace", "StringBuilder", "builder", "new", "StringBuilder", "List", "String", "content", "groupContentInfo", "contentMap", "get", "blobId", "for", "int", "i", "i", "content", "size", "i", "if", "i", "endLine", "break", "if", "i", "startLine", "i", "endLine", "builder", "append", "content", "get", "i", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\Manager\\GroupContentManager.java",
  "startLine" : 50,
  "endLine" : 73,
  "identifiers" : [ "if", "blobId", "null", "blobId", "isEmpty", "return", "new", "ArrayList", "if", "groupContentInfo", "contentMap", "containsKey", "blobId", "String", "blobPath", "PathUtil", "getBlobPathByBlobId", "blobId", "repoName", "try", "if", "groupContentInfo", "contentMap", "size", "popElement", "groupContentInfo", "contentMap", "put", "blobId", "FileUtil", "readLines", "blobPath", "catch", "IOException", "e", "e", "printStackTrace", "List", "String", "content", "groupContentInfo", "contentMap", "get", "blobId", "return", "content" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\Manager\\GroupContentManagerMT.java",
  "startLine" : 14,
  "endLine" : 37,
  "identifiers" : [ "if", "blobId", "null", "blobId", "isEmpty", "return", "if", "groupContentInfo", "contentMap", "containsKey", "blobId", "String", "blobPath", "PathUtil", "getBlobPathByBlobId", "blobId", "repoName", "try", "groupContentInfo", "contentMap", "put", "blobId", "FileUtil", "readLines", "blobPath", "catch", "IOException", "e", "e", "printStackTrace", "StringBuilder", "builder", "new", "StringBuilder", "List", "String", "content", "groupContentInfo", "contentMap", "get", "blobId", "for", "int", "i", "i", "content", "size", "i", "if", "i", "endLine", "break", "if", "i", "startLine", "i", "endLine", "builder", "append", "content", "get", "i", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\processor\\InitialProcessor.java",
  "startLine" : 18,
  "endLine" : 28,
  "identifiers" : [ "System", "out", "println", "if", "EvoConfig", "IS_MULTI", "equals", "initSingleProject", "if", "EvoConfig", "IS_MULTI", "equals", "initMultiProject", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\processor\\InitialProcessor.java",
  "startLine" : 30,
  "endLine" : 44,
  "identifiers" : [ "System", "out", "println", "EvoConfig", "COMMIT_INFO", "List", "String", "commitList", "FileUtil", "readLines", "EvoConfig", "COMMIT_INFO", "int", "lineNumber", "String", "latestCommitId", "for", "String", "line", "commitList", "String", "tempList", "line", "split", "if", "lineNumber", "latestCommitId", "tempList", "RawCommitInfo", "info", "new", "RawCommitInfo", "tempList", "tempList", "tempList", "tempList", "lineNumber", "tempList", "tempList", "replaceAll", "RawCommitManager", "rawCommitInfoMap", "put", "tempList", "info", "RawCommitManager", "latestCommitId", "latestCommitId" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\processor\\InitialProcessor.java",
  "startLine" : 46,
  "endLine" : 88,
  "identifiers" : [ "System", "out", "println", "EvoConfig", "COMMIT_INFO", "File", "commitInfoDir", "new", "File", "EvoConfig", "COMMIT_INFO", "if", "commitInfoDir", "exists", "System", "out", "printf", "EvoConfig", "COMMIT_INFO", "System", "exit", "File", "projectsDirs", "commitInfoDir", "listFiles", "if", "projectsDirs", "null", "projectsDirs", "length", "System", "out", "printf", "EvoConfig", "COMMIT_INFO", "System", "exit", "for", "File", "projectDir", "projectsDirs", "String", "projectName", "projectDir", "getName", "File", "files", "projectDir", "listFiles", "if", "files", "null", "files", "length", "continue", "File", "commitInfoFile", "null", "for", "File", "file", "files", "if", "file", "getName", "equals", "commitInfoFile", "file", "break", "if", "commitInfoFile", "null", "continue", "int", "lineNumber", "List", "String", "commitList", "FileUtil", "readLines", "commitInfoFile", "getAbsolutePath", "String", "latestCommitId", "for", "String", "line", "commitList", "String", "tempList", "line", "split", "if", "lineNumber", "latestCommitId", "tempList", "RawCommitInfo", "info", "new", "RawCommitInfo", "tempList", "tempList", "tempList", "tempList", "lineNumber", "tempList", "tempList", "replaceAll", "projectName", "RawCommitManager", "rawCommitInfoMap", "put", "tempList", "info", "RawCommitManager", "latestCommitIdMap", "put", "projectName", "latestCommitId" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\processor\\InitialProcessor.java",
  "startLine" : 90,
  "endLine" : 110,
  "identifiers" : [ "try", "List", "String", "mappedId", "FileUtil", "readLines", "EvoConfig", "BLOB_SNAPSHOT_MAP_RESULT", "String", "groupZero", "for", "String", "line", "mappedId", "if", "line", "contains", "String", "ids", "line", "split", "if", "ids", "length", "continue", "List", "String", "blobGroupIds", "SnapshotToBlobGroupManager", "snapshotBlobGroupIdMapper", "getOrDefault", "ids", "new", "ArrayList", "if", "groupZero", "equals", "ids", "blobGroupIds", "add", "ids", "SnapshotToBlobGroupManager", "snapshotBlobGroupIdMapper", "put", "ids", "blobGroupIds", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\processor\\InitialProcessor.java",
  "startLine" : 113,
  "endLine" : 124,
  "identifiers" : [ "System", "out", "println", "if", "EvoConfig", "IS_MULTI", "equals", "singleProDeletedFile", "if", "EvoConfig", "IS_MULTI", "equals", "multiProDeletedFile", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\processor\\InitialProcessor.java",
  "startLine" : 126,
  "endLine" : 134,
  "identifiers" : [ "System", "out", "println", "EvoConfig", "DELETE_FILE_INFO", "List", "String", "deletedFileList", "FileUtil", "readLines", "EvoConfig", "DELETE_FILE_INFO", "for", "String", "line", "deletedFileList", "String", "tempList", "line", "split", "DeletedFileManager", "deletedFileMapInfo", "dfileMap", "put", "tempList", "tempList" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\processor\\InitialProcessor.java",
  "startLine" : 136,
  "endLine" : 174,
  "identifiers" : [ "System", "out", "println", "EvoConfig", "COMMIT_INFO", "File", "commitInfoDir", "new", "File", "EvoConfig", "COMMIT_INFO", "if", "commitInfoDir", "exists", "System", "out", "printf", "EvoConfig", "COMMIT_INFO", "System", "exit", "File", "projectsDirs", "commitInfoDir", "listFiles", "if", "projectsDirs", "null", "projectsDirs", "length", "System", "out", "printf", "EvoConfig", "COMMIT_INFO", "System", "exit", "for", "File", "projectDir", "projectsDirs", "String", "projectName", "projectDir", "getName", "File", "files", "projectDir", "listFiles", "if", "files", "null", "files", "length", "continue", "File", "deleteInfoFile", "null", "for", "File", "file", "files", "if", "file", "getName", "equals", "deleteInfoFile", "file", "break", "if", "deleteInfoFile", "null", "continue", "List", "String", "deletedFileList", "FileUtil", "readLines", "deleteInfoFile", "getAbsolutePath", "for", "String", "line", "deletedFileList", "String", "tempList", "line", "split", "DeletedFileManager", "deletedFileMapInfo", "dfileMap", "put", "tempList", "tempList" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\CommitInfoUtil.java",
  "startLine" : 23,
  "endLine" : 51,
  "identifiers" : [ "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "String", "sql", "String", "format", "EvoConfig", "TABLE", "PreparedStatement", "statement", "connection", "prepareStatement", "sql", "ResultSet", "resultSet", "statement", "executeQuery", "int", "maxGroupId", "if", "resultSet", "next", "maxGroupId", "resultSet", "getInt", "try", "resultSet", "close", "statement", "close", "finally", "connection", "recycle", "return", "maxGroupId" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\CommitInfoUtil.java",
  "startLine" : 58,
  "endLine" : 111,
  "identifiers" : [ "Map", "String", "CommitInfo", "commitInfoMap", "new", "HashMap", "for", "CommitRecord", "record", "records", "if", "commitInfoMap", "containsKey", "record", "getCommitId", "CommitInfo", "commitInfo", "new", "CommitInfo", "commitInfo", "setCommitId", "record", "getCommitId", "commitInfo", "setDate", "record", "getDate", "commitInfo", "setSubmitter", "record", "getSubmitter", "commitInfo", "setAuthorDate", "record", "getAuthorDate", "commitInfo", "setModifiedFileCount", "RawCommitManager", "rawCommitInfoMap", "get", "record", "getCommitId", "modifiedFileCount", "commitInfoMap", "put", "record", "getCommitId", "commitInfo", "if", "record", "getStatus", "equals", "commitInfoMap", "get", "record", "getCommitId", "getRecords", "add", "record", "String", "latestCommitId", "null", "if", "EvoConfig", "IS_MULTI", "equals", "latestCommitId", "RawCommitManager", "latestCommitId", "else", "if", "records", "size", "String", "repoName", "records", "get", "getRepoName", "latestCommitId", "RawCommitManager", "latestCommitIdMap", "get", "repoName", "CommitInfo", "commitInfo", "new", "CommitInfo", "commitInfo", "setCommitId", "latestCommitId", "commitInfo", "setDate", "RawCommitManager", "rawCommitInfoMap", "get", "latestCommitId", "date", "commitInfo", "setSubmitter", "RawCommitManager", "rawCommitInfoMap", "get", "latestCommitId", "author", "commitInfo", "setAuthorDate", "RawCommitManager", "rawCommitInfoMap", "get", "latestCommitId", "authorDate", "if", "commitInfoMap", "containsKey", "latestCommitId", "commitInfoMap", "put", "latestCommitId", "commitInfo", "List", "CommitInfo", "commitInfoList", "new", "ArrayList", "commitInfoMap", "values", "Collections", "sort", "commitInfoList", "new", "Comparator", "CommitInfo", "Override", "public", "int", "compare", "CommitInfo", "o1", "CommitInfo", "o2", "int", "lineNumber1", "RawCommitManager", "rawCommitInfoMap", "get", "o1", "getCommitId", "lineNumber", "int", "lineNumber2", "RawCommitManager", "rawCommitInfoMap", "get", "o2", "getCommitId", "lineNumber", "if", "lineNumber1", "lineNumber2", "return", "else", "if", "lineNumber1", "lineNumber2", "return", "else", "return", "return", "commitInfoList" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\CommitInfoUtil.java",
  "startLine" : 117,
  "endLine" : 313,
  "identifiers" : [ "if", "commitInfoList", "size", "return", "int", "instanceNumber", "if", "commitInfoList", "size", "CommitInfo", "currentCommitInfo", "commitInfoList", "get", "for", "int", "k", "k", "currentCommitInfo", "getRecords", "size", "k", "currentCommitInfo", "getRecords", "get", "k", "setStatus", "currentCommitInfo", "getRecords", "get", "k", "setInstanceNumber", "instanceNumber", "instanceNumber", "return", "Map", "String", "List", "CommitRecord", "nextRecordMap", "new", "HashMap", "Map", "String", "List", "CommitRecord", "curRecordMap", "new", "HashMap", "int", "listSize", "commitInfoList", "size", "for", "int", "i", "i", "listSize", "i", "CommitInfo", "currentCommitInfo", "commitInfoList", "get", "i", "CommitInfo", "nextCommitInfo", "commitInfoList", "get", "i", "nextRecordMap", "clear", "curRecordMap", "clear", "for", "int", "n", "n", "nextCommitInfo", "getRecords", "size", "n", "String", "pathAndMethodName", "nextCommitInfo", "getRecords", "get", "n", "getRealPath", "nextCommitInfo", "getRecords", "get", "n", "getMethodName", "nextCommitInfo", "getRecords", "get", "n", "getRepoName", "nextCommitInfo", "getRecords", "get", "n", "getParams", "List", "CommitRecord", "curList", "nextRecordMap", "getOrDefault", "pathAndMethodName", "new", "ArrayList", "curList", "add", "nextCommitInfo", "getRecords", "get", "n", "nextRecordMap", "put", "pathAndMethodName", "curList", "for", "int", "k", "k", "currentCommitInfo", "getRecords", "size", "k", "String", "pathAndMethodName", "currentCommitInfo", "getRecords", "get", "k", "getRealPath", "currentCommitInfo", "getRecords", "get", "k", "getMethodName", "currentCommitInfo", "getRecords", "get", "k", "getRepoName", "currentCommitInfo", "getRecords", "get", "k", "getParams", "List", "CommitRecord", "curList", "curRecordMap", "getOrDefault", "pathAndMethodName", "new", "ArrayList", "curList", "add", "currentCommitInfo", "getRecords", "get", "k", "curRecordMap", "put", "pathAndMethodName", "curList", "for", "int", "m", "m", "currentCommitInfo", "getRecords", "size", "m", "CommitRecord", "record1", "currentCommitInfo", "getRecords", "get", "m", "if", "i", "record1", "setInstanceNumber", "instanceNumber", "instanceNumber", "record1", "setStatus", "if", "i", "record1", "getPrevMethodId", "record1", "setInstanceNumber", "instanceNumber", "instanceNumber", "record1", "setStatus", "if", "record1", "getStatus", "equals", "continue", "boolean", "exist", "false", "String", "pathAndMethodName1", "record1", "getRealPath", "record1", "getMethodName", "record1", "getRepoName", "record1", "getParams", "String", "nextCommitInfoCommitId", "nextCommitInfo", "getCommitId", "String", "dCommitId", "DeletedFileManager", "deletedFileMapInfo", "dfileMap", "get", "record1", "getRealPath", "if", "dCommitId", "null", "dCommitId", "equals", "nextCommitInfoCommitId", "CommitRecord", "other", "record1", "clone", "record1", "setNextMethodId", "other", "getMethodId", "other", "setCommitId", "nextCommitInfoCommitId", "other", "setDate", "nextCommitInfo", "getDate", "other", "setSubmitter", "nextCommitInfo", "getSubmitter", "other", "setPrevMethodId", "record1", "getMethodId", "other", "setGroupId", "other", "setStatus", "other", "setRepoName", "record1", "getRepoName", "other", "setParams", "record1", "getParams", "nextCommitInfo", "getRecords", "add", "other", "continue", "if", "nextRecordMap", "containsKey", "pathAndMethodName1", "exist", "true", "List", "CommitRecord", "curList", "curRecordMap", "get", "pathAndMethodName1", "List", "CommitRecord", "nextList", "nextRecordMap", "get", "pathAndMethodName1", "setRelevantStartLine", "curList", "setRelevantStartLine", "nextList", "CommitRecord", "record3", "null", "if", "curList", "size", "nextList", "size", "record3", "nextList", "get", "else", "String", "params", "record1", "getParams", "String", "curPMP", "pathAndMethodName1", "String", "className", "if", "EvoConfig", "LANGUAGE", "equals", "List", "String", "code", "new", "ArrayList", "code", "GroupContentManager", "getFileContentByBlobId", "record1", "getBlobId", "record1", "getRepoName", "className", "getClassName", "code", "record1", "getStartLine", "if", "EvoConfig", "LANGUAGE", "equals", "EvoConfig", "LANGUAGE", "equals", "className", "Integer", "toString", "record1", "getRelevantStartLine", "curPMP", "className", "className", "for", "int", "k", "k", "nextList", "size", "k", "CommitRecord", "tempRecord", "nextList", "get", "k", "String", "params1", "tempRecord", "getParams", "String", "tempPMP", "tempRecord", "getRealPath", "tempRecord", "getMethodName", "tempRecord", "getRepoName", "params1", "if", "EvoConfig", "LANGUAGE", "equals", "List", "String", "code", "new", "ArrayList", "code", "GroupContentManager", "getFileContentByBlobId", "tempRecord", "getBlobId", "tempRecord", "getRepoName", "className", "getClassName", "code", "tempRecord", "getStartLine", "if", "EvoConfig", "LANGUAGE", "equals", "EvoConfig", "LANGUAGE", "equals", "className", "Integer", "toString", "tempRecord", "getRelevantStartLine", "tempPMP", "className", "if", "tempRecord", "getStatus", "equals", "curPMP", "removeParamsAndClassName", "curPMP", "tempPMP", "removeParamsAndClassName", "tempPMP", "if", "curPMP", "equals", "tempPMP", "record3", "tempRecord", "break", "if", "record3", "null", "record1", "setNextMethodId", "record3", "getMethodId", "record3", "setPrevMethodId", "record1", "getMethodId", "record3", "setInstanceNumber", "record1", "getInstanceNumber", "else", "exist", "false", "if", "exist", "Boolean", "nextRecordExist", "CommitRecordUtil", "isNextRecordExist", "record1", "getBlobId", "record1", "getRealPath", "nextCommitInfo", "getCommitId", "record1", "getRepoName", "String", "date", "nextCommitInfo", "getDate", "String", "authorDate", "nextCommitInfo", "getAuthorDate", "String", "commitId", "nextCommitInfo", "getCommitId", "if", "nextRecordExist", "CommitRecord", "nextRecord", "record1", "clone", "nextRecord", "setStatus", "nextRecord", "setDate", "date", "nextRecord", "setAuthorDate", "authorDate", "nextRecord", "setInstanceNumber", "record1", "getInstanceNumber", "nextRecord", "setCommitId", "commitId", "record1", "setNextMethodId", "nextRecord", "getMethodId", "nextRecord", "setPrevMethodId", "record1", "getMethodId", "nextRecord", "setRepoName", "record1", "getRepoName", "nextRecord", "setParams", "record1", "getParams", "nextCommitInfo", "getRecords", "add", "nextRecord", "else", "CommitRecord", "other", "record1", "clone", "record1", "setNextMethodId", "other", "getMethodId", "other", "setCommitId", "nextCommitInfo", "getCommitId", "other", "setDate", "nextCommitInfo", "getDate", "other", "setSubmitter", "nextCommitInfo", "getSubmitter", "other", "setPrevMethodId", "record1", "getMethodId", "other", "setGroupId", "other", "setStatus", "other", "setRepoName", "record1", "getRepoName", "other", "setParams", "record1", "getParams", "nextCommitInfo", "getRecords", "add", "other", "if", "commitInfoList", "size", "for", "int", "m", "m", "nextCommitInfo", "getRecords", "size", "m", "if", "nextCommitInfo", "getRecords", "get", "m", "getPrevMethodId", "nextCommitInfo", "getRecords", "get", "m", "setStatus", "nextCommitInfo", "getRecords", "get", "m", "setInstanceNumber", "instanceNumber", "instanceNumber", "CommitInfo", "lastCommitInfo", "commitInfoList", "get", "listSize", "for", "int", "m", "m", "lastCommitInfo", "getRecords", "size", "m", "if", "lastCommitInfo", "getRecords", "get", "m", "getPrevMethodId", "lastCommitInfo", "getRecords", "get", "m", "setStatus", "lastCommitInfo", "getRecords", "get", "m", "setInstanceNumber", "instanceNumber", "instanceNumber" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\CommitInfoUtil.java",
  "startLine" : 320,
  "endLine" : 336,
  "identifiers" : [ "String", "className", "List", "String", "classNameList", "new", "ArrayList", "classNameList", "add", "int", "lineNum", "for", "String", "line", "code", "lineNum", "if", "line", "contains", "classNameList", "add", "line", "replace", "if", "lineNum", "startLine", "className", "classNameList", "get", "classNameList", "size", "break", "return", "className" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\CommitInfoUtil.java",
  "startLine" : 338,
  "endLine" : 349,
  "identifiers" : [ "String", "params", "String", "codeArr", "code", "split", "String", "param", "codeArr", "split", "methodName", "try", "params", "param", "replaceAll", "replaceAll", "catch", "Exception", "e", "System", "out", "println", "return", "params" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\CommitInfoUtil.java",
  "startLine" : 352,
  "endLine" : 369,
  "identifiers" : [ "int", "minStartLine", "List", "Integer", "tempList", "new", "ArrayList", "for", "CommitRecord", "record", "recordList", "if", "record", "getStartLine", "minStartLine", "minStartLine", "record", "getStartLine", "for", "CommitRecord", "record", "recordList", "record", "setRelevantStartLine", "record", "getStartLine", "minStartLine", "tempList", "add", "record", "getStartLine", "minStartLine", "Collections", "sort", "tempList", "for", "CommitRecord", "record", "recordList", "int", "rl", "record", "getRelevantStartLine", "record", "setRelevantStartLine", "tempList", "indexOf", "rl" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\CommitRecordUtil.java",
  "startLine" : 30,
  "endLine" : 179,
  "identifiers" : [ "List", "CommitRecord", "records", "new", "ArrayList", "DruidPooledConnection", "connection", "null", "PreparedStatement", "statement", "null", "ResultSet", "resultSet", "null", "try", "int", "insCount", "getInstanceCount", "groupId", "int", "filterCount", "Integer", "parseInt", "EvoConfig", "MAX_INSTANCE", "if", "insCount", "filterCount", "filterCount", "try", "FileUtil", "write", "Integer", "toString", "groupId", "true", "catch", "IOException", "e", "e", "printStackTrace", "return", "records", "boolean", "hasSameCommit", "false", "Set", "String", "commitSet", "new", "HashSet", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "String", "sql", "String", "format", "EvoConfig", "TABLE", "groupId", "statement", "connection", "prepareStatement", "sql", "Set", "String", "realPathSet", "new", "HashSet", "resultSet", "statement", "executeQuery", "while", "resultSet", "next", "int", "id", "resultSet", "getInt", "int", "methodId", "resultSet", "getInt", "String", "path", "resultSet", "getString", "int", "startLine", "resultSet", "getInt", "int", "endLine", "resultSet", "getInt", "int", "isCurCommit", "resultSet", "getInt", "String", "realPath", "resultSet", "getString", "String", "blobId", "resultSet", "getString", "String", "methodName", "resultSet", "getString", "String", "params", "resultSet", "getString", "String", "repoName", "EvoConfig", "PROJECT", "substring", "EvoConfig", "PROJECT", "lastIndexOf", "File", "separator", "int", "hashCode", "if", "EvoConfig", "IS_MULTI", "equals", "repoName", "resultSet", "getString", "hashCode", "resultSet", "getInt", "if", "methodName", "equals", "continue", "if", "blobId", "null", "continue", "String", "earlyCommit", "getEarlyCommitId", "blobId", "realPath", "repoName", "hashCode", "if", "earlyCommit", "equals", "continue", "if", "commitSet", "contains", "earlyCommit", "hasSameCommit", "true", "if", "hasSameCommit", "commitSet", "add", "earlyCommit", "realPathSet", "add", "realPath", "methodName", "repoName", "params", "CommitRecord", "commitRecord", "new", "CommitRecord", "id", "groupId", "methodId", "path", "startLine", "endLine", "blobId", "earlyCommit", "RawCommitManager", "rawCommitInfoMap", "get", "earlyCommit", "date", "RawCommitManager", "rawCommitInfoMap", "get", "earlyCommit", "authorDate", "realPath", "methodName", "RawCommitManager", "rawCommitInfoMap", "get", "earlyCommit", "author", "if", "repoName", "null", "commitRecord", "setRepoName", "repoName", "commitRecord", "setIsCurCommit", "isCurCommit", "commitRecord", "setParams", "params", "records", "add", "commitRecord", "if", "realPathSet", "size", "hasSameCommit", "if", "mapType", "equals", "records", "clear", "System", "out", "println", "return", "records", "Set", "String", "extraLoaded", "new", "HashSet", "for", "String", "method", "realPathSet", "String", "infos", "method", "split", "if", "DeletedFileManager", "deletedFileMapInfo", "dfileMap", "containsKey", "infos", "CommitRecord", "deletedRecord", "new", "CommitRecord", "String", "dCommitId", "DeletedFileManager", "deletedFileMapInfo", "dfileMap", "get", "infos", "String", "date", "RawCommitManager", "rawCommitInfoMap", "get", "dCommitId", "date", "String", "authorDate", "RawCommitManager", "rawCommitInfoMap", "get", "dCommitId", "authorDate", "String", "author", "RawCommitManager", "rawCommitInfoMap", "get", "dCommitId", "author", "deletedRecord", "setGroupId", "deletedRecord", "setCommitId", "dCommitId", "deletedRecord", "setDate", "date", "deletedRecord", "setAuthorDate", "authorDate", "deletedRecord", "setSubmitter", "author", "deletedRecord", "setMethodName", "infos", "deletedRecord", "setRealPath", "infos", "deletedRecord", "setRepoName", "infos", "deletedRecord", "setParams", "infos", "deletedRecord", "setStatus", "records", "add", "deletedRecord", "System", "out", "printf", "groupId", "infos", "infos", "String", "pathAndMethod", "infos", "infos", "List", "CommitRecord", "extraRecords", "new", "ArrayList", "if", "extraLoaded", "contains", "pathAndMethod", "continue", "else", "extraRecords", "loadExtraRecords", "infos", "infos", "groupId", "extraLoaded", "add", "pathAndMethod", "if", "extraRecords", "size", "System", "out", "println", "groupId", "records", "addAll", "extraRecords", "catch", "Exception", "e", "e", "printStackTrace", "finally", "if", "resultSet", "null", "try", "resultSet", "close", "statement", "close", "connection", "recycle", "catch", "Exception", "e", "e", "printStackTrace", "return", "records" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\CommitRecordUtil.java",
  "startLine" : 181,
  "endLine" : 201,
  "identifiers" : [ "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "String", "sql", "String", "format", "groupId", "EvoConfig", "TABLE", "PreparedStatement", "statement", "connection", "prepareStatement", "sql", "ResultSet", "resultSet", "statement", "executeQuery", "int", "insCount", "if", "resultSet", "next", "insCount", "resultSet", "getInt", "try", "resultSet", "close", "statement", "close", "finally", "connection", "recycle", "return", "insCount" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\CommitRecordUtil.java",
  "startLine" : 203,
  "endLine" : 235,
  "identifiers" : [ "BlobCommitsetInfo", "curInfo", "new", "BlobCommitsetInfo", "String", "blobCommitPath", "PathUtil", "getBlobCommitPathByTransformedBlobId", "transBlobId", "repoName", "if", "BlobCommitSetManager", "blobCommitSetManagerMap", "containsKey", "transBlobId", "curInfo", "BlobCommitSetManager", "blobCommitSetManagerMap", "get", "transBlobId", "return", "curInfo", "List", "String", "commitList", "new", "ArrayList", "try", "if", "new", "File", "blobCommitPath", "exists", "System", "out", "println", "blobCommitPath", "System", "out", "println", "realPath", "System", "out", "println", "realPath", "hashCode", "else", "commitList", "FileUtil", "readLines", "blobCommitPath", "catch", "IOException", "e", "e", "printStackTrace", "return", "null", "curInfo", "commitSet", "addAll", "commitList", "int", "blobCommitSize", "BlobCommitSetManager", "blobCommitSetManagerMap", "size", "if", "blobCommitSize", "BlobCommitSetManager", "popElement", "else", "BlobCommitSetManager", "blobCommitSetManagerMap", "put", "transBlobId", "curInfo", "return", "curInfo" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\CommitRecordUtil.java",
  "startLine" : 242,
  "endLine" : 264,
  "identifiers" : [ "boolean", "res", "false", "Set", "String", "instances", "new", "HashSet", "for", "CommitRecord", "record", "records", "instances", "add", "record", "getRealPath", "record", "getMethodName", "if", "instances", "size", "res", "true", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\CommitRecordUtil.java",
  "startLine" : 273,
  "endLine" : 290,
  "identifiers" : [ "if", "blobId", "null", "return", "false", "BlobCommitsetInfo", "commitsetInfo", "String", "transformedBlobId", "blobId", "realPath", "hashCode", "if", "BlobCommitSetManager", "blobCommitSetManagerMap", "containsKey", "transformedBlobId", "commitsetInfo", "BlobCommitSetManager", "blobCommitSetManagerMap", "get", "transformedBlobId", "else", "commitsetInfo", "getBlobCommitSetByTransBlobId", "transformedBlobId", "repoName", "realPath", "if", "commitsetInfo", "commitSet", "contains", "commitId", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\CommitRecordUtil.java",
  "startLine" : 375,
  "endLine" : 428,
  "identifiers" : [ "List", "CommitRecord", "extraRecords", "new", "ArrayList", "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "String", "sql", "String", "format", "EvoConfig", "TABLE", "realPath", "methodName", "PreparedStatement", "statement", "connection", "prepareStatement", "sql", "ResultSet", "resultSet", "statement", "executeQuery", "while", "resultSet", "next", "int", "id", "resultSet", "getInt", "int", "methodId", "resultSet", "getInt", "int", "currentGroupId", "resultSet", "getInt", "String", "blobPath", "resultSet", "getString", "int", "startLine", "resultSet", "getInt", "int", "endLine", "resultSet", "getInt", "int", "isCurCommit", "resultSet", "getInt", "String", "blobId", "resultSet", "getString", "String", "params", "resultSet", "getString", "String", "repoName", "EvoConfig", "PROJECT", "substring", "EvoConfig", "PROJECT", "lastIndexOf", "File", "separator", "Integer", "hashCode", "if", "EvoConfig", "IS_MULTI", "equals", "repoName", "resultSet", "getString", "hashCode", "resultSet", "getInt", "String", "earlyCommit", "getEarlyCommitId", "blobId", "realPath", "repoName", "hashCode", "CommitRecord", "commitRecord", "new", "CommitRecord", "id", "currentGroupId", "methodId", "blobPath", "startLine", "endLine", "blobId", "earlyCommit", "RawCommitManager", "rawCommitInfoMap", "get", "earlyCommit", "date", "RawCommitManager", "rawCommitInfoMap", "get", "earlyCommit", "authorDate", "realPath", "methodName", "RawCommitManager", "rawCommitInfoMap", "get", "earlyCommit", "author", "if", "repoName", "null", "commitRecord", "setRepoName", "repoName", "commitRecord", "setIsCurCommit", "isCurCommit", "commitRecord", "setParams", "params", "extraRecords", "add", "commitRecord", "try", "resultSet", "close", "statement", "close", "finally", "connection", "recycle", "extraRecords", "extraRecords", "stream", "filter", "s", "s", "getGroupId", "groupId", "collect", "Collectors", "toList", "return", "extraRecords" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\CommitRecordUtil.java",
  "startLine" : 436,
  "endLine" : 467,
  "identifiers" : [ "if", "hashCode", "hashCode", "realPath", "hashCode", "BlobCommitsetInfo", "commitsetInfo", "String", "transformedBlobId", "blobId", "hashCode", "if", "BlobCommitSetManager", "blobCommitSetManagerMap", "containsKey", "transformedBlobId", "commitsetInfo", "BlobCommitSetManager", "blobCommitSetManagerMap", "get", "transformedBlobId", "else", "commitsetInfo", "getBlobCommitSetByTransBlobId", "transformedBlobId", "repoName", "realPath", "if", "commitsetInfo", "null", "return", "String", "earlyCommit", "for", "String", "commitId", "commitsetInfo", "commitSet", "if", "earlyCommit", "isEmpty", "earlyCommit", "commitId", "continue", "int", "lineNumber1", "RawCommitManager", "rawCommitInfoMap", "get", "commitId", "lineNumber", "int", "lineNumber2", "RawCommitManager", "rawCommitInfoMap", "get", "earlyCommit", "lineNumber", "if", "lineNumber1", "lineNumber2", "earlyCommit", "commitId", "return", "earlyCommit" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\DB.java",
  "startLine" : 18,
  "endLine" : 35,
  "identifiers" : [ "if", "instance", "null", "return", "instance", "try", "Class", "forName", "EvoConfig", "DRIVER", "conn", "DriverManager", "getConnection", "EvoConfig", "URL", "EvoConfig", "USERNAME", "EvoConfig", "PASSWORD", "if", "conn", "null", "instance", "new", "DB", "System", "out", "printf", "EvoConfig", "URL", "else", "System", "out", "println", "catch", "Exception", "e", "e", "printStackTrace", "return", "instance" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 34,
  "endLine" : 137,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "State", "state", "State", "CODE", "for", "int", "i", "i", "strToHandle", "length", "i", "char", "c", "strToHandle", "charAt", "i", "switch", "state", "case", "CODE", "if", "c", "state", "State", "SLASH", "else", "builder", "append", "c", "if", "c", "state", "State", "CODE_CHAR", "else", "if", "c", "r", "n", "r", "n", "r", "n", "state", "State", "CODE", "else", "state", "State", "CODE_STRING", "break", "case", "STRING_ESCAPE_SEQUENCE", "builder", "append", "c", "state", "State", "CODE_STRING", "break", "default", "break", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 145,
  "endLine" : 165,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "try", "FileInputStream", "fis", "new", "FileInputStream", "inputFileName", "InputStreamReader", "dis", "new", "InputStreamReader", "fis", "BufferedReader", "reader", "new", "BufferedReader", "dis", "String", "s", "while", "s", "reader", "readLine", "null", "builder", "append", "s", "builder", "append", "reader", "close", "dis", "close", "fis", "close", "catch", "IOException", "e", "e", "printStackTrace", "System", "exit", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 172,
  "endLine" : 185,
  "identifiers" : [ "try", "FileOutputStream", "fos", "new", "FileOutputStream", "outputFileName", "OutputStreamWriter", "dos", "new", "OutputStreamWriter", "fos", "BufferedWriter", "writer", "new", "BufferedWriter", "dos", "writer", "write", "strHandled", "writer", "close", "dos", "close", "fos", "close", "System", "out", "println", "outputFileName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 191,
  "endLine" : 204,
  "identifiers" : [ "Scanner", "in", "new", "Scanner", "System", "in", "System", "out", "println", "String", "inputFileName", "in", "nextLine", "System", "out", "println", "String", "outputFileName", "in", "nextLine", "String", "strToHandle", "readFile", "inputFileName", "String", "strHandled", "delete_C_Cplusplus_Java_Note", "strToHandle", "writeFile", "outputFileName", "strHandled" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\DruidUtil.java",
  "startLine" : 21,
  "endLine" : 40,
  "identifiers" : [ "if", "dataSource", "null", "return", "dataSource", "new", "DruidDataSource", "dataSource", "setDriverClassName", "EvoConfig", "DRIVER", "dataSource", "setUrl", "EvoConfig", "URL", "dataSource", "setUsername", "EvoConfig", "USERNAME", "dataSource", "setPassword", "EvoConfig", "PASSWORD", "dataSource", "setInitialSize", "EvoConfig", "INITIAL_SIZE", "dataSource", "setMaxActive", "EvoConfig", "MAX_ACTIVE", "dataSource", "setMaxWait", "dataSource", "setMinIdle", "dataSource", "setTimeBetweenEvictionRunsMillis", "dataSource", "setTestWhileIdle", "true", "dataSource", "setValidationQuery", "dataSource", "setTestOnBorrow", "true", "dataSource", "setTestOnReturn", "false", "dataSource", "init" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\FileUtil.java",
  "startLine" : 19,
  "endLine" : 28,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "List", "String", "lines", "new", "ArrayList", "String", "line", "null", "while", "line", "reader", "readLine", "null", "lines", "add", "line", "reader", "close", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\FileUtil.java",
  "startLine" : 36,
  "endLine" : 45,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "StringBuilder", "builder", "new", "StringBuilder", "while", "line", "reader", "readLine", "null", "builder", "append", "line", "reader", "close", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\FileUtil.java",
  "startLine" : 55,
  "endLine" : 72,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "StringBuilder", "builder", "new", "StringBuilder", "int", "lineNumber", "while", "line", "reader", "readLine", "null", "lineNumber", "if", "lineNumber", "startLine", "continue", "if", "lineNumber", "endLine", "break", "builder", "append", "line", "reader", "close", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\FileUtil.java",
  "startLine" : 82,
  "endLine" : 88,
  "identifiers" : [ "BufferedWriter", "writer", "new", "BufferedWriter", "new", "OutputStreamWriter", "new", "FileOutputStream", "file", "append", "StandardCharsets", "UTF_8", "writer", "write", "content", "writer", "newLine", "writer", "flush", "writer", "close" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\GitUtil.java",
  "startLine" : 32,
  "endLine" : 61,
  "identifiers" : [ "if", "EvoConfig", "IS_MULTI", "equals", "repository", "new", "FileRepositoryBuilder", "setGitDir", "new", "File", "repoDir", "File", "separator", "build", "revWalk", "new", "RevWalk", "repository", "treeWalk", "new", "TreeWalk", "repository", "repositoryMap", "new", "HashMap", "if", "EvoConfig", "IS_MULTI", "equals", "File", "projectsDir", "new", "File", "repoDir", "if", "projectsDir", "exists", "System", "out", "printf", "repoDir", "System", "exit", "File", "projects", "projectsDir", "listFiles", "if", "projects", "null", "projects", "length", "System", "out", "printf", "repoDir", "System", "exit", "repositoryMap", "new", "HashMap", "for", "File", "project", "projects", "Repository", "repository", "new", "FileRepositoryBuilder", "setGitDir", "new", "File", "project", "getAbsolutePath", "File", "separator", "build", "repositoryMap", "put", "project", "getName", "repository" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\GitUtil.java",
  "startLine" : 63,
  "endLine" : 76,
  "identifiers" : [ "if", "treeWalk", "null", "treeWalk", "close", "if", "revWalk", "null", "revWalk", "close", "if", "repository", "null", "repository", "close", "for", "Repository", "repository", "repositoryMap", "values", "repository", "close" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\GitUtil.java",
  "startLine" : 84,
  "endLine" : 96,
  "identifiers" : [ "try", "ObjectId", "objectId", "repository", "resolve", "commitId", "RevCommit", "commit", "revWalk", "parseCommit", "objectId", "int", "commitTime", "commit", "getCommitTime", "return", "DateUtil", "convertTime", "commitTime", "catch", "Exception", "e", "e", "printStackTrace", "return", "DateUtil", "format", "new", "Date" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\GitUtil.java",
  "startLine" : 104,
  "endLine" : 131,
  "identifiers" : [ "try", "filePath", "getVersedRelativePath", "filePath", "ObjectId", "lastCommitId", "repository", "resolve", "commitId", "revWalk", "reset", "RevCommit", "commit", "revWalk", "parseCommit", "lastCommitId", "RevTree", "tree", "commit", "getTree", "treeWalk", "reset", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "filePath", "if", "treeWalk", "next", "return", "new", "ArrayList", "ObjectId", "objectId", "treeWalk", "getObjectId", "ObjectLoader", "loader", "repository", "open", "objectId", "ByteArrayOutputStream", "outputStream", "new", "ByteArrayOutputStream", "loader", "copyTo", "outputStream", "String", "content", "outputStream", "toString", "List", "String", "lines", "Arrays", "asList", "content", "split", "outputStream", "close", "return", "lines", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\GitUtil.java",
  "startLine" : 141,
  "endLine" : 149,
  "identifiers" : [ "List", "String", "lines", "getContent", "commitId", "filePath", "if", "lines", "size", "return", "endLine", "Math", "min", "endLine", "lines", "size", "List", "String", "functions", "lines", "subList", "startLine", "endLine", "return", "String", "join", "functions" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\GitUtil.java",
  "startLine" : 157,
  "endLine" : 178,
  "identifiers" : [ "String", "blobId", "null", "try", "realPath", "getVersedRelativePath", "realPath", "ObjectId", "lastCommitId", "repository", "resolve", "commitId", "revWalk", "reset", "RevCommit", "commit", "revWalk", "parseCommit", "lastCommitId", "RevTree", "tree", "commit", "getTree", "treeWalk", "reset", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "realPath", "if", "treeWalk", "next", "return", "null", "ObjectId", "objectId", "treeWalk", "getObjectId", "blobId", "objectId", "getName", "catch", "Exception", "e", "e", "printStackTrace", "return", "blobId" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\GitUtil.java",
  "startLine" : 180,
  "endLine" : 205,
  "identifiers" : [ "String", "blobId", "null", "try", "realPath", "getVersedRelativePath", "realPath", "ObjectId", "lastCommitId", "repositoryMap", "get", "projectName", "resolve", "commitId", "revWalk", "new", "RevWalk", "repositoryMap", "get", "projectName", "RevCommit", "commit", "revWalk", "parseCommit", "lastCommitId", "RevTree", "tree", "commit", "getTree", "treeWalk", "new", "TreeWalk", "repositoryMap", "get", "projectName", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "realPath", "if", "treeWalk", "next", "revWalk", "close", "treeWalk", "close", "return", "null", "ObjectId", "objectId", "treeWalk", "getObjectId", "blobId", "objectId", "getName", "revWalk", "close", "treeWalk", "close", "catch", "Exception", "e", "e", "printStackTrace", "return", "blobId" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\PathUtil.java",
  "startLine" : 10,
  "endLine" : 14,
  "identifiers" : [ "if", "EvoConfig", "IS_MULTI", "equals", "return", "EvoConfig", "BLOB_PREFIX", "File", "separator", "repoName", "File", "separator", "blobId", "substring", "File", "separator", "blobId", "substring", "return", "EvoConfig", "BLOB_PREFIX", "File", "separator", "blobId", "substring", "File", "separator", "blobId", "substring" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\PathUtil.java",
  "startLine" : 16,
  "endLine" : 20,
  "identifiers" : [ "if", "EvoConfig", "IS_MULTI", "equals", "return", "EvoConfig", "BLOB_COMMIT_PREFIX", "File", "separator", "repoName", "File", "separator", "transformedBlobId", "substring", "File", "separator", "transformedBlobId", "substring", "return", "EvoConfig", "BLOB_COMMIT_PREFIX", "File", "separator", "transformedBlobId", "substring", "File", "separator", "transformedBlobId", "substring" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\VisualDataUtil.java",
  "startLine" : 21,
  "endLine" : 128,
  "identifiers" : [ "visualCommitInfoList", "clear", "instanceList", "clear", "commitIdList", "clear", "String", "repoName", "for", "int", "i", "i", "commitInfoList", "size", "i", "List", "CommitRecord", "curRecords", "commitInfoList", "get", "i", "getRecords", "if", "repoName", "equals", "try", "repoName", "curRecords", "get", "getRepoName", "catch", "Exception", "e", "for", "CommitRecord", "record", "curRecords", "int", "instanceNum", "record", "getInstanceNumber", "Map", "String", "CommitRecord", "instanceRecords", "instanceList", "getOrDefault", "instanceNum", "new", "HashMap", "instanceRecords", "put", "record", "getCommitId", "record", "instanceList", "put", "instanceNum", "instanceRecords", "commitIdList", "add", "commitInfoList", "get", "i", "getCommitId", "for", "Map", "Entry", "Integer", "Map", "String", "CommitRecord", "entry", "instanceList", "entrySet", "Map", "String", "CommitRecord", "curInstanceMap", "entry", "getValue", "List", "String", "curCommitIds", "new", "ArrayList", "curInstanceMap", "keySet", "Collections", "sort", "curCommitIds", "new", "Comparator", "String", "Override", "public", "int", "compare", "String", "c1", "String", "c2", "int", "lineNumber1", "RawCommitManager", "rawCommitInfoMap", "get", "c1", "lineNumber", "int", "lineNumber2", "RawCommitManager", "rawCommitInfoMap", "get", "c2", "lineNumber", "if", "lineNumber1", "lineNumber2", "return", "else", "if", "lineNumber1", "lineNumber2", "return", "else", "return", "String", "earliestCommitId", "curCommitIds", "get", "String", "latestCommitId", "curCommitIds", "get", "curCommitIds", "size", "int", "ealiestIndex", "commitIdList", "indexOf", "earliestCommitId", "int", "latestIndex", "commitIdList", "indexOf", "latestCommitId", "CommitRecord", "bornInstance", "curInstanceMap", "get", "earliestCommitId", "CommitRecord", "latestInstance", "curInstanceMap", "get", "latestCommitId", "for", "String", "commitId", "commitIdList", "int", "curIndex", "commitIdList", "indexOf", "commitId", "if", "curIndex", "ealiestIndex", "CommitRecord", "noneRecord", "new", "CommitRecord", "noneRecord", "setRealPath", "bornInstance", "getRealPath", "noneRecord", "setInstanceNumber", "entry", "getKey", "noneRecord", "setRepoName", "repoName", "curInstanceMap", "put", "commitId", "noneRecord", "else", "if", "curIndex", "latestIndex", "latestInstance", "getStatus", "equals", "CommitRecord", "noneRecord", "new", "CommitRecord", "noneRecord", "setRealPath", "bornInstance", "getRealPath", "noneRecord", "setInstanceNumber", "entry", "getKey", "noneRecord", "setRepoName", "repoName", "curInstanceMap", "put", "commitId", "noneRecord", "else", "if", "curIndex", "latestIndex", "latestInstance", "getStatus", "equals", "curIndex", "String", "preCommitId", "commitIdList", "get", "curIndex", "while", "curInstanceMap", "containsKey", "preCommitId", "curIndex", "preCommitId", "commitIdList", "get", "curIndex", "CommitRecord", "insertRecord", "curInstanceMap", "get", "preCommitId", "clone", "insertRecord", "setStatus", "insertRecord", "setRepoName", "repoName", "insertRecord", "setDate", "RawCommitManager", "rawCommitInfoMap", "get", "commitId", "date", "insertRecord", "setAuthorDate", "RawCommitManager", "rawCommitInfoMap", "get", "commitId", "authorDate", "curInstanceMap", "put", "commitId", "insertRecord", "else", "if", "curIndex", "ealiestIndex", "curIndex", "latestIndex", "if", "curInstanceMap", "containsKey", "commitId", "continue", "curIndex", "String", "preCommitId", "commitIdList", "get", "curIndex", "while", "curInstanceMap", "containsKey", "preCommitId", "curIndex", "preCommitId", "commitIdList", "get", "curIndex", "CommitRecord", "insertRecord", "curInstanceMap", "get", "preCommitId", "clone", "insertRecord", "setStatus", "insertRecord", "setRepoName", "repoName", "insertRecord", "setDate", "RawCommitManager", "rawCommitInfoMap", "get", "commitId", "date", "insertRecord", "setAuthorDate", "RawCommitManager", "rawCommitInfoMap", "get", "commitId", "authorDate", "curInstanceMap", "put", "commitId", "insertRecord" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\VisualDataUtil.java",
  "startLine" : 131,
  "endLine" : 174,
  "identifiers" : [ "for", "Map", "Entry", "Integer", "Map", "String", "CommitRecord", "entry", "instanceList", "entrySet", "Map", "String", "CommitRecord", "curInstanceMap", "entry", "getValue", "Boolean", "isBorn", "false", "for", "int", "i", "i", "commitIdList", "size", "i", "CommitRecord", "curRecord", "curInstanceMap", "get", "commitIdList", "get", "i", "if", "curRecord", "getStatus", "equals", "String", "code", "GroupContentManager", "getContentByBlobId", "curRecord", "getBlobId", "curRecord", "getStartLine", "curRecord", "getEndLine", "curRecord", "getRepoName", "curRecord", "setPreCode", "code", "curRecord", "setCurCode", "code", "isBorn", "true", "continue", "if", "isBorn", "continue", "if", "curRecord", "getStatus", "equals", "break", "CommitRecord", "preRecord", "curInstanceMap", "get", "commitIdList", "get", "i", "String", "preCode", "DeleteCAndCplusplusAndJavaNote", "delete_C_Cplusplus_Java_Note", "GroupContentManager", "getContentByBlobId", "preRecord", "getBlobId", "preRecord", "getStartLine", "preRecord", "getEndLine", "preRecord", "getRepoName", "String", "curCode", "DeleteCAndCplusplusAndJavaNote", "delete_C_Cplusplus_Java_Note", "GroupContentManager", "getContentByBlobId", "curRecord", "getBlobId", "curRecord", "getStartLine", "curRecord", "getEndLine", "curRecord", "getRepoName", "String", "preCode1", "getFlatString", "preCode", "String", "curCode1", "getFlatString", "curCode", "if", "curCode1", "equals", "preCode1", "curRecord", "setStatus", "else", "curRecord", "setStatus", "curRecord", "setCurCode", "curCode", "curRecord", "setPreCode", "preCode" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\VisualDataUtil.java",
  "startLine" : 176,
  "endLine" : 192,
  "identifiers" : [ "String", "className", "List", "String", "classNameList", "new", "ArrayList", "classNameList", "add", "int", "lineNum", "for", "String", "line", "code", "lineNum", "if", "line", "contains", "classNameList", "add", "line", "replace", "if", "lineNum", "startLine", "className", "classNameList", "get", "classNameList", "size", "break", "return", "className" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\evolution\\util\\VisualDataUtil.java",
  "startLine" : 203,
  "endLine" : 229,
  "identifiers" : [ "List", "Integer", "instanceNumber", "new", "ArrayList", "instanceList", "keySet", "Collections", "sort", "instanceNumber", "for", "String", "commitId", "commitIdList", "VisualCommitInfo", "curInfo", "new", "VisualCommitInfo", "RawCommitInfo", "rawCommitInfo", "RawCommitManager", "rawCommitInfoMap", "get", "commitId", "curInfo", "setCommitId", "rawCommitInfo", "commitId", "curInfo", "setDate", "rawCommitInfo", "date", "curInfo", "setSubmitter", "rawCommitInfo", "author", "curInfo", "setCommitMessage", "rawCommitInfo", "commitMessage", "curInfo", "setModifiedFileCount", "rawCommitInfo", "modifiedFileCount", "List", "CommitRecord", "curRecords", "new", "ArrayList", "Boolean", "needAdd", "false", "for", "int", "insNumber", "instanceNumber", "CommitRecord", "curInsRecord", "instanceList", "get", "insNumber", "get", "commitId", "curRecords", "add", "curInsRecord", "if", "curInsRecord", "getStatus", "curInsRecord", "getStatus", "curInsRecord", "getStatus", "needAdd", "true", "if", "needAdd", "curInfo", "setCodes", "curRecords", "visualCommitInfoList", "add", "curInfo" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\BlobInfoPipeline.java",
  "startLine" : 42,
  "endLine" : 59,
  "identifiers" : [ "BlobInfoPipeline", "blobInfoPipeline", "new", "BlobInfoPipeline", "blobInfoPipeline", "init", "blobInfoPipeline", "build", "blobInfoPipeline", "dispose", "System", "out", "println", "if", "blobInfoPipeline", "traceCommitValid", "GetCSV", "writeEmptyFile", "else", "GetCSV", "getDeletedFileList" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\BlobInfoPipeline.java",
  "startLine" : 63,
  "endLine" : 84,
  "identifiers" : [ "BlobInfoConfig", "blobInfoConfigLoad", "try", "this", "repository", "new", "FileRepositoryBuilder", "setGitDir", "new", "File", "repoPath", "File", "separator", "setMustExist", "true", "build", "System", "out", "println", "catch", "IOException", "e", "e", "printStackTrace", "System", "out", "println", "System", "exit", "File", "resultFolder", "new", "File", "outputFolder", "File", "separator", "try", "FileUtils", "deleteDirectory", "resultFolder", "resultFolder", "mkdirs", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\BlobInfoPipeline.java",
  "startLine" : 86,
  "endLine" : 262,
  "identifiers" : [ "String", "blobFolder", "outputFolder", "File", "separator", "String", "suffix", "BlobInfoConfig", "suffix", "String", "suffixArray", "suffix", "split", "Set", "String", "suffixSet", "new", "HashSet", "Arrays", "asList", "suffixArray", "RevCommit", "revStartCommit", "null", "RevCommit", "revEndCommit", "null", "RevWalk", "walk", "new", "RevWalk", "repository", "try", "revStartCommit", "walk", "parseCommit", "ObjectId", "fromString", "startCommit", "revEndCommit", "walk", "parseCommit", "ObjectId", "fromString", "endCommit", "catch", "Exception", "e", "e", "printStackTrace", "RevCommit", "traceCommit", "null", "try", "traceCommit", "walk", "parseCommit", "ObjectId", "fromString", "BlobInfoConfig", "traceCommit", "initCurFiles", "traceCommit", "traceCommitValid", "true", "catch", "Exception", "e", "System", "out", "println", "IsCurCommitBlob", "getCurCommitBlob", "repository", "revEndCommit", "suffixSet", "List", "RevCommit", "parentCommitList", "CommitListUtil", "getCommitList", "walk", "revStartCommit", "revEndCommit", "System", "out", "println", "parentCommitList", "size", "TreeWalk", "treeWalk", "new", "TreeWalk", "repository", "repository", "newObjectReader", "treeWalk", "setRecursive", "true", "int", "i", "final", "Long", "startTime", "System", "currentTimeMillis", "String", "mergedMessage", "for", "RevCommit", "commit", "parentCommitList", "PersonIdent", "personIdent", "commit", "getAuthorIdent", "Long", "authorTime", "personIdent", "getWhen", "getTime", "l", "String", "commitTimeStr", "DateUtil", "convertTime", "commit", "getCommitTime", "String", "authorTimeStr", "DateUtil", "convertTime", "authorTime", "String", "commitId", "commit", "getName", "String", "message", "commit", "getFullMessage", "replaceAll", "message", "message", "replaceAll", "message", "message", "replaceAll", "mergedMessage", "message", "List", "DiffEntry", "changedFileList", "getChangedFileList", "commit", "Long", "changeFilesize", "changedFileList", "stream", "filter", "s", "s", "getChangeType", "name", "equals", "count", "if", "changedFileList", "size", "try", "writeChangeFileToCsv", "changedFileList", "commit", "catch", "IOException", "e", "e", "printStackTrace", "String", "commitInfo", "if", "commitInterval", "i", "commitInterval", "commitInfo", "commitId", "commitTimeStr", "authorTimeStr", "personIdent", "getName", "replaceAll", "changeFilesize", "mergedMessage", "else", "commitInfo", "commitId", "commitTimeStr", "authorTimeStr", "personIdent", "getName", "replaceAll", "changeFilesize", "message", "commitInfoList", "add", "commitInfo", "if", "commitInterval", "if", "i", "commitInterval", "i", "i", "parentCommitList", "size", "extraCommitInfoList", "add", "commitInfo", "mergedMessage", "if", "commitInfoList", "size", "writeCommitInfo", "RevTree", "curTree", "commit", "getTree", "try", "treeWalk", "reset", "curTree", "while", "treeWalk", "next", "String", "readPath", "treeWalk", "getPathString", "boolean", "ok", "false", "for", "String", "sufix", "suffixSet", "if", "readPath", "endsWith", "sufix", "ok", "true", "break", "if", "ok", "continue", "if", "involveThisFile", "readPath", "continue", "String", "hashCodeOfRealPath", "String", "valueOf", "readPath", "hashCode", "String", "blobId", "treeWalk", "getObjectId", "getName", "String", "blobIdKey", "blobId", "hashCodeOfRealPath", "List", "String", "commitIdList", "blobId_commitId_Map", "getOrDefault", "blobIdKey", "new", "ArrayList", "commitIdList", "add", "commitId", "blobId_commitId_Map", "put", "blobIdKey", "commitIdList", "Set", "String", "realPathSetOfBlobId", "blobId_RealPath_Map", "getOrDefault", "blobId", "new", "HashSet", "realPathSetOfBlobId", "add", "readPath", "blobId_RealPath_Map", "put", "blobId", "realPathSetOfBlobId", "ObjectId", "blobObjId", "treeWalk", "getObjectId", "if", "extractedPath", "equals", "if", "commitInterval", "if", "i", "commitInterval", "i", "i", "parentCommitList", "size", "writeSourceFile", "blobObjId", "blobId", "blobFolder", "else", "writeSourceFile", "blobObjId", "blobId", "blobFolder", "else", "String", "pathList", "BlobInfoConfig", "extractedPath", "split", "for", "String", "path", "pathList", "if", "readPath", "contains", "path", "if", "commitInterval", "if", "i", "commitInterval", "i", "i", "parentCommitList", "size", "writeSourceFile", "blobObjId", "blobId", "blobFolder", "else", "writeSourceFile", "blobObjId", "blobId", "blobFolder", "break", "catch", "IOException", "e", "e", "printStackTrace", "if", "i", "BlobInfoConfig", "outputInterval", "log", "info", "blobId_commitId_Map", "size", "log", "info", "blobId_commitId_Map", "size", "writeBlobFolder", "log", "info", "if", "i", "Long", "cur", "System", "currentTimeMillis", "Long", "used", "cur", "startTime", "l", "l", "Long", "usedSec", "cur", "startTime", "l", "log", "info", "i", "used", "usedSec", "i", "writeExtraCommitInfo", "writeRealPathList", "writeBlobFolder", "writeCommitInfo", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\BlobInfoPipeline.java",
  "startLine" : 264,
  "endLine" : 296,
  "identifiers" : [ "File", "file", "new", "File", "outputFolder", "File", "separator", "if", "file", "exists", "file", "mkdirs", "String", "name", "commit", "getName", "File", "sourceFile", "new", "File", "outputFolder", "File", "separator", "File", "separator", "name", "if", "sourceFile", "exists", "try", "sourceFile", "createNewFile", "catch", "IOException", "e", "e", "printStackTrace", "else", "return", "FileOutputStream", "fileOutputStream", "new", "FileOutputStream", "sourceFile", "for", "DiffEntry", "entry", "changedFileList", "String", "newPath", "entry", "getNewPath", "String", "changeType", "entry", "getChangeType", "toString", "String", "writeStr", "newPath", "changeType", "fileOutputStream", "write", "writeStr", "getBytes", "String", "huanhang", "System", "getProperty", "fileOutputStream", "write", "huanhang", "getBytes", "fileOutputStream", "flush", "fileOutputStream", "close" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\BlobInfoPipeline.java",
  "startLine" : 298,
  "endLine" : 345,
  "identifiers" : [ "String", "suffix", "BlobInfoConfig", "suffix", "String", "suffixArray", "suffix", "split", "Set", "String", "suffixSet", "new", "HashSet", "Arrays", "asList", "suffixArray", "List", "DiffEntry", "returnDiffs", "null", "boolean", "ok", "RevCommit", "parent", "commit", "getParent", "ObjectId", "head", "commit", "getTree", "getId", "ObjectId", "oldHead", "parent", "getTree", "getId", "try", "ObjectReader", "reader", "repository", "newObjectReader", "CanonicalTreeParser", "oldTreeIter", "new", "CanonicalTreeParser", "oldTreeIter", "reset", "reader", "oldHead", "CanonicalTreeParser", "newTreeIter", "new", "CanonicalTreeParser", "newTreeIter", "reset", "reader", "head", "try", "Git", "git", "new", "Git", "repository", "try", "List", "DiffEntry", "diffs", "git", "diff", "setNewTree", "newTreeIter", "setOldTree", "oldTreeIter", "call", "Iterator", "DiffEntry", "iterator", "diffs", "iterator", "while", "iterator", "hasNext", "DiffEntry", "entry", "iterator", "next", "ok", "false", "for", "String", "sufix", "suffixSet", "if", "entry", "getNewPath", "endsWith", "sufix", "ok", "true", "break", "if", "ok", "false", "iterator", "remove", "returnDiffs", "diffs", "catch", "GitAPIException", "e", "e", "printStackTrace", "catch", "IncorrectObjectTypeException", "e", "e", "printStackTrace", "catch", "IOException", "e", "e", "printStackTrace", "return", "returnDiffs" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\BlobInfoPipeline.java",
  "startLine" : 347,
  "endLine" : 381,
  "identifiers" : [ "if", "blobId_commitId_Map", "size", "try", "for", "Map", "Entry", "String", "List", "String", "entry", "blobId_commitId_Map", "entrySet", "String", "blobId", "entry", "getKey", "List", "String", "commitIdList", "entry", "getValue", "if", "commitIdList", "size", "String", "firstTwo", "blobId", "substring", "String", "rest", "blobId", "substring", "File", "outputFile", "new", "File", "BlobInfoConfig", "outputFolder", "File", "separator", "File", "separator", "firstTwo", "File", "separator", "rest", "outputFile", "getParentFile", "mkdirs", "try", "FileWriter", "fw", "new", "FileWriter", "outputFile", "getAbsoluteFile", "true", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "for", "String", "string", "commitIdList", "bw", "write", "string", "bw", "flush", "bw", "close", "catch", "Exception", "e", "e", "printStackTrace", "catch", "Exception", "e", "e", "printStackTrace", "finally", "blobId_commitId_Map", "clear" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\BlobInfoPipeline.java",
  "startLine" : 385,
  "endLine" : 430,
  "identifiers" : [ "String", "preTwoWord", "blobId", "substring", "String", "leftWord", "blobId", "substring", "File", "file", "new", "File", "outputFolder", "File", "separator", "preTwoWord", "if", "file", "exists", "file", "mkdirs", "File", "sourceFile", "new", "File", "outputFolder", "File", "separator", "preTwoWord", "File", "separator", "leftWord", "if", "sourceFile", "exists", "try", "sourceFile", "createNewFile", "catch", "IOException", "e", "e", "printStackTrace", "else", "return", "ObjectLoader", "loader", "repository", "open", "blobObjId", "FileOutputStream", "fileOutputStream", "new", "FileOutputStream", "sourceFile", "loader", "copyTo", "fileOutputStream", "fileOutputStream", "flush", "fileOutputStream", "close" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\BlobInfoPipeline.java",
  "startLine" : 437,
  "endLine" : 463,
  "identifiers" : [ "File", "resultFile", "new", "File", "BlobInfoConfig", "outputFolder", "File", "separator", "if", "blobId_RealPath_Map", "size", "try", "FileWriter", "fw", "new", "FileWriter", "resultFile", "getAbsoluteFile", "true", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "for", "Map", "Entry", "String", "Set", "String", "entry", "blobId_RealPath_Map", "entrySet", "String", "blobId", "entry", "getKey", "Set", "String", "realPathSet", "entry", "getValue", "for", "String", "realPath", "realPathSet", "bw", "write", "blobId", "realPath", "bw", "flush", "bw", "close", "catch", "Exception", "e", "e", "printStackTrace", "finally", "blobId_RealPath_Map", "clear" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\BlobInfoPipeline.java",
  "startLine" : 465,
  "endLine" : 483,
  "identifiers" : [ "File", "resultFile", "new", "File", "BlobInfoConfig", "outputFolder", "File", "separator", "if", "commitInfoList", "size", "try", "FileWriter", "fw", "new", "FileWriter", "resultFile", "getAbsoluteFile", "true", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "for", "String", "line", "commitInfoList", "bw", "write", "line", "bw", "flush", "bw", "close", "catch", "Exception", "e", "e", "printStackTrace", "commitInfoList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\BlobInfoPipeline.java",
  "startLine" : 488,
  "endLine" : 506,
  "identifiers" : [ "File", "resultFile", "new", "File", "BlobInfoConfig", "outputFolder", "File", "separator", "if", "extraCommitInfoList", "size", "return", "try", "FileWriter", "fw", "new", "FileWriter", "resultFile", "getAbsoluteFile", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "for", "String", "line", "extraCommitInfoList", "bw", "write", "line", "bw", "flush", "bw", "close", "catch", "Exception", "e", "e", "printStackTrace", "extraCommitInfoList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\BlobInfoPipeline.java",
  "startLine" : 508,
  "endLine" : 538,
  "identifiers" : [ "TreeWalk", "treeWalk", "new", "TreeWalk", "repository", "repository", "newObjectReader", "treeWalk", "setRecursive", "true", "RevTree", "curTree", "revCommit", "getTree", "String", "suffix", "BlobInfoConfig", "suffix", "String", "suffixArray", "suffix", "split", "Set", "String", "suffixSet", "new", "HashSet", "Arrays", "asList", "suffixArray", "try", "treeWalk", "reset", "curTree", "while", "treeWalk", "next", "String", "readPath", "treeWalk", "getPathString", "boolean", "ok", "false", "for", "String", "sufix", "suffixSet", "if", "readPath", "endsWith", "sufix", "ok", "true", "break", "if", "ok", "continue", "lastFiles", "add", "readPath", "catch", "IOException", "e", "e", "printStackTrace", "treeWalk", "close", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\CloneEvoPipeLine.java",
  "startLine" : 43,
  "endLine" : 81,
  "identifiers" : [ "log", "info", "Long", "startTime", "System", "currentTimeMillis", "checkArgs", "arg", "System", "out", "println", "EvoConfig", "evoConfigLoad", "try", "System", "out", "println", "InitialProcessor", "initRawcommitList", "InitialProcessor", "initDeletedFileList", "InitialProcessor", "initSnapshotBlobMapper", "catch", "IOException", "e", "e", "printStackTrace", "try", "System", "out", "println", "DruidUtil", "initDataSource", "catch", "SQLException", "e", "e", "printStackTrace", "System", "exit", "if", "EvoConfig", "IS_MULTI", "equals", "link", "arg", "else", "linkMulti", "RawCommitManager", "destroy", "DeletedFileManager", "destroy", "SnapshotToBlobGroupManager", "destroy", "DruidUtil", "close", "log", "info", "System", "currentTimeMillis", "startTime" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\CloneEvoPipeLine.java",
  "startLine" : 88,
  "endLine" : 173,
  "identifiers" : [ "try", "System", "out", "println", "GitUtil", "initRepository", "EvoConfig", "PROJECT", "File", "resultsDir", "new", "File", "LINK_OUTPUT_DIR", "if", "resultsDir", "exists", "resultsDir", "mkdir", "System", "out", "println", "GroupContentManager", "initGroupContent", "if", "mapType", "equals", "int", "maxGroupId", "if", "EvoConfig", "END_GROUP_ID", "System", "out", "println", "maxGroupId", "CommitInfoUtil", "findMaxGroupId", "if", "maxGroupId", "System", "out", "println", "System", "exit", "System", "out", "printf", "maxGroupId", "else", "maxGroupId", "EvoConfig", "END_GROUP_ID", "for", "int", "groupId", "EvoConfig", "START_GROUP_ID", "groupId", "maxGroupId", "groupId", "try", "System", "out", "printf", "groupId", "List", "CommitRecord", "commitRecords", "CommitRecordUtil", "load", "groupId", "mapType", "if", "commitRecords", "size", "System", "out", "printf", "groupId", "continue", "transformToMappingToJson", "commitRecords", "Integer", "toString", "groupId", "catch", "Exception", "e", "e", "printStackTrace", "if", "mapType", "equals", "System", "out", "println", "SnapshotToBlobGroupManager", "snapshotBlobGroupIdMapper", "size", "for", "Map", "Entry", "String", "List", "String", "entry", "SnapshotToBlobGroupManager", "snapshotBlobGroupIdMapper", "entrySet", "List", "String", "blobGroupIds", "entry", "getValue", "if", "blobGroupIds", "size", "continue", "String", "finalGroupId", "blobGroupIds", "get", "List", "CommitRecord", "totalRecords", "new", "ArrayList", "for", "String", "groupId", "blobGroupIds", "List", "CommitRecord", "commitRecords", "CommitRecordUtil", "load", "Integer", "parseInt", "groupId", "mapType", "if", "groupId", "equals", "finalGroupId", "for", "CommitRecord", "instance", "commitRecords", "if", "instance", "getGroupId", "Integer", "parseInt", "groupId", "instance", "setGroupId", "Integer", "parseInt", "finalGroupId", "totalRecords", "addAll", "commitRecords", "if", "totalRecords", "size", "System", "out", "printf", "finalGroupId", "continue", "transformToMappingToJson", "totalRecords", "finalGroupId", "GroupContentManager", "clear", "System", "out", "println", "GitUtil", "close", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\CloneEvoPipeLine.java",
  "startLine" : 175,
  "endLine" : 194,
  "identifiers" : [ "List", "CommitInfo", "commitInfos", "CommitInfoUtil", "transform", "recordsLoadFromDB", "try", "CommitInfoUtil", "mapping", "commitInfos", "catch", "SQLException", "e", "e", "printStackTrace", "VisualDataUtil", "transformData", "commitInfos", "VisualDataUtil", "checkCodeStatus", "VisualDataUtil", "generateVisualData", "String", "outputFile1", "String", "format", "LINK_OUTPUT_DIR", "groupId", "try", "FileUtil", "write", "outputFile1", "JSONObject", "toJSONString", "VisualDataUtil", "visualCommitInfoList", "false", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\CloneEvoPipeLine.java",
  "startLine" : 199,
  "endLine" : 416,
  "identifiers" : [ "try", "System", "out", "println", "GitUtil", "initRepository", "EvoConfig", "PROJECT", "File", "resultsDir", "new", "File", "LINK_OUTPUT_DIR", "if", "resultsDir", "exists", "resultsDir", "mkdir", "int", "maxGroupId", "if", "EvoConfig", "END_GROUP_ID", "System", "out", "println", "maxGroupId", "CommitInfoUtil", "findMaxGroupId", "if", "maxGroupId", "System", "out", "println", "System", "exit", "System", "out", "printf", "maxGroupId", "else", "maxGroupId", "EvoConfig", "END_GROUP_ID", "System", "out", "println", "GroupContentManager", "initGroupContent", "for", "int", "groupId", "EvoConfig", "START_GROUP_ID", "groupId", "maxGroupId", "groupId", "try", "System", "out", "printf", "groupId", "List", "CommitRecord", "totalRecords", "CommitRecordUtil", "load", "groupId", "if", "totalRecords", "size", "System", "out", "printf", "groupId", "continue", "Map", "String", "List", "CommitRecord", "repoMap", "new", "HashMap", "for", "CommitRecord", "record", "totalRecords", "String", "repoName", "record", "getRepoName", "if", "repoMap", "containsKey", "repoName", "repoMap", "put", "repoName", "new", "ArrayList", "repoMap", "get", "repoName", "add", "record", "System", "out", "println", "repoMap", "size", "Map", "String", "List", "VisualCommitInfo", "resultMap", "new", "HashMap", "for", "String", "repo", "repoMap", "keySet", "List", "CommitRecord", "records", "repoMap", "get", "repo", "List", "CommitInfo", "commitInfos", "CommitInfoUtil", "transform", "records", "CommitInfoUtil", "mapping", "commitInfos", "VisualDataUtil", "transformData", "commitInfos", "VisualDataUtil", "checkCodeStatus", "VisualDataUtil", "generateVisualData", "resultMap", "put", "repo", "new", "ArrayList", "VisualDataUtil", "visualCommitInfoList", "Map", "String", "Integer", "instanceNumMap", "new", "HashMap", "for", "String", "repo", "resultMap", "keySet", "List", "VisualCommitInfo", "commitInfos", "resultMap", "get", "repo", "if", "commitInfos", "size", "continue", "int", "instanceNum", "commitInfos", "get", "getCodes", "size", "instanceNumMap", "put", "repo", "instanceNum", "int", "mergedInstanceNum", "instanceNumMap", "values", "stream", "mapToInt", "Integer", "intValue", "sum", "List", "VisualCommitInfo", "resultCommitInfos", "null", "int", "blankCounter", "for", "String", "repo", "instanceNumMap", "keySet", "if", "resultCommitInfos", "null", "resultCommitInfos", "resultMap", "get", "repo", "blankCounter", "instanceNumMap", "get", "repo", "for", "VisualCommitInfo", "commitInfo", "resultCommitInfos", "for", "int", "i", "i", "mergedInstanceNum", "blankCounter", "i", "CommitRecord", "record", "new", "CommitRecord", "record", "setStatus", "commitInfo", "getCodes", "add", "record", "continue", "List", "VisualCommitInfo", "currentCommitInfos", "resultMap", "get", "repo", "for", "VisualCommitInfo", "commitInfo", "currentCommitInfos", "List", "CommitRecord", "codes", "commitInfo", "getCodes", "for", "int", "i", "i", "blankCounter", "i", "CommitRecord", "record", "new", "CommitRecord", "record", "setStatus", "codes", "add", "record", "blankCounter", "instanceNumMap", "get", "repo", "for", "VisualCommitInfo", "commitInfo", "currentCommitInfos", "for", "int", "i", "i", "mergedInstanceNum", "blankCounter", "i", "CommitRecord", "record", "new", "CommitRecord", "record", "setStatus", "commitInfo", "getCodes", "add", "record", "resultCommitInfos", "addAll", "currentCommitInfos", "if", "resultCommitInfos", "null", "resultCommitInfos", "size", "continue", "resultCommitInfos", "sort", "new", "Comparator", "VisualCommitInfo", "Override", "public", "int", "compare", "VisualCommitInfo", "o1", "VisualCommitInfo", "o2", "return", "DateUtil", "compare", "o1", "getDate", "o2", "getDate", "for", "VisualCommitInfo", "commitInfo", "resultCommitInfos", "List", "CommitRecord", "records", "commitInfo", "getCodes", "int", "insNum", "for", "CommitRecord", "commitRecord", "records", "commitRecord", "setInstanceNumber", "insNum", "Map", "Integer", "Integer", "insBornMap", "new", "HashMap", "Map", "Integer", "Integer", "insDeleteMap", "new", "HashMap", "Map", "Integer", "Integer", "insPreGropuIdMap", "new", "HashMap", "for", "int", "i", "i", "mergedInstanceNum", "i", "insBornMap", "put", "i", "insDeleteMap", "put", "i", "insPreGropuIdMap", "put", "i", "for", "VisualCommitInfo", "commitInfo", "resultCommitInfos", "List", "CommitRecord", "records", "commitInfo", "getCodes", "for", "CommitRecord", "re", "records", "int", "instanceNumber", "re", "getInstanceNumber", "if", "re", "getStatus", "equals", "insBornMap", "put", "instanceNumber", "if", "re", "getStatus", "equals", "insDeleteMap", "put", "instanceNumber", "if", "insBornMap", "get", "instanceNumber", "insDeleteMap", "get", "instanceNumber", "if", "re", "getStatus", "equals", "re", "setGroupId", "insPreGropuIdMap", "get", "instanceNumber", "insPreGropuIdMap", "put", "instanceNumber", "re", "getGroupId", "Map", "Integer", "String", "realPathMap", "new", "HashMap", "Map", "Integer", "String", "repoNameMap", "new", "HashMap", "for", "VisualCommitInfo", "commitInfo", "resultCommitInfos", "List", "CommitRecord", "records", "commitInfo", "getCodes", "for", "CommitRecord", "record", "records", "if", "record", "getRealPath", "null", "realPathMap", "containsKey", "record", "getInstanceNumber", "realPathMap", "put", "record", "getInstanceNumber", "record", "getRealPath", "if", "record", "getRepoName", "equals", "repoNameMap", "containsKey", "record", "getInstanceNumber", "repoNameMap", "put", "record", "getInstanceNumber", "record", "getRepoName", "for", "VisualCommitInfo", "commitInfo", "resultCommitInfos", "List", "CommitRecord", "records", "commitInfo", "getCodes", "for", "CommitRecord", "record", "records", "if", "record", "getRepoName", "equals", "record", "setRepoName", "repoNameMap", "get", "record", "getInstanceNumber", "if", "record", "getRealPath", "null", "record", "setRealPath", "realPathMap", "get", "record", "getInstanceNumber", "String", "outputFile", "String", "format", "LINK_OUTPUT_DIR", "groupId", "FileUtil", "write", "outputFile", "JSONObject", "toJSONString", "resultCommitInfos", "false", "catch", "Exception", "e", "e", "printStackTrace", "GroupContentManager", "clear", "System", "out", "println", "GitUtil", "close", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\ConfigPipeline.java",
  "startLine" : 19,
  "endLine" : 47,
  "identifiers" : [ "BlobInfoConfig", "blobInfoConfig", "new", "BlobInfoConfig", "blobInfoConfig", "blobInfoConfigInit", "singleToolDTO", "DetectConfig", "detectConfig", "new", "DetectConfig", "detectConfig", "configInit", "singleToolDTO", "DbConfig", "dbConfig", "new", "DbConfig", "dbConfig", "dbConfigInit", "singleToolDTO", "SnapshotConfig", "snapshotConfig", "new", "SnapshotConfig", "snapshotConfig", "configInit", "singleToolDTO", "EvoConfig", "evoConfig", "new", "EvoConfig", "evoConfig", "evoConfigInit", "singleToolDTO", "DangerConfig", "dangerConfig", "new", "DangerConfig", "dangerConfig", "dangerConfigInit", "singleToolDTO", "log", "info" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\DangerCheckPipeLine.java",
  "startLine" : 19,
  "endLine" : 52,
  "identifiers" : [ "log", "info", "Long", "startTime", "System", "currentTimeMillis", "DangerConfig", "dangerConfigLoad", "File", "dir", "new", "File", "DangerConfig", "inputJsonFolder", "File", "jsonFiles", "dir", "listFiles", "try", "InitialProcessor", "initRawcommitList", "System", "out", "println", "File", "extractJsonFolder", "new", "File", "DangerConfig", "extractedJsonFolder", "if", "extractJsonFolder", "exists", "extractJsonFolder", "mkdir", "File", "consisResultFolder", "new", "File", "DangerConfig", "consisResultFolder", "if", "consisResultFolder", "exists", "consisResultFolder", "mkdir", "CloneInfoExtractor", "generateInfo", "DangerConfig", "inputJsonFolder", "DangerConfig", "outputPairFolder", "catch", "IOException", "e", "e", "printStackTrace", "long", "endTime", "System", "currentTimeMillis", "startTime", "log", "info", "endTime" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\DBPipeline.java",
  "startLine" : 27,
  "endLine" : 51,
  "identifiers" : [ "log", "info", "long", "time", "System", "currentTimeMillis", "DbConfig", "dbConfigLoad", "File", "resultFolderFile", "new", "File", "DbConfig", "resultFolder", "File", "separator", "resultFolderFile", "mkdirs", "File", "resultFile1", "new", "File", "DbConfig", "resultFolder", "File", "separator", "File", "resultFile2", "new", "File", "DbConfig", "resultFolder", "File", "separator", "try", "Files", "deleteIfExists", "resultFile1", "toPath", "Files", "deleteIfExists", "resultFile2", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "ParseMNameText", "main", "Parse", "main", "InsertByJDBC", "main", "log", "info", "System", "currentTimeMillis", "time" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\DetectService.java",
  "startLine" : 23,
  "endLine" : 93,
  "identifiers" : [ "log", "info", "fileName", "long", "time", "System", "currentTimeMillis", "if", "fileName", "equals", "config", "new", "DetectConfig", "else", "config", "new", "SnapshotConfig", "config", "configLoad", "log", "info", "fileName", "FileUtil", "delete", "File", "separator", "File", "separator", "fileName", "File", "separator", "SAGA_TOKEN_DATA_FOLDER", "FileUtil", "delete", "File", "separator", "File", "separator", "fileName", "File", "separator", "SAGA_RESULT_FOLDER", "FileUtil", "delete", "File", "separator", "File", "separator", "fileName", "File", "separator", "SAGA_CONFIG_FILE", "log", "info", "try", "config", "getProperties", "store", "new", "FileWriter", "File", "separator", "File", "separator", "fileName", "File", "separator", "SAGA_CONFIG_FILE", "catch", "IOException", "e", "e", "printStackTrace", "log", "info", "Process", "process", "null", "File", "pathToExecutable", "new", "File", "File", "separator", "File", "separator", "File", "separator", "ProcessBuilder", "builder", "builder", "new", "ProcessBuilder", "pathToExecutable", "getAbsolutePath", "config", "getRepoPath", "builder", "directory", "new", "File", "File", "separator", "File", "separator", "fileName", "getAbsoluteFile", "builder", "redirectErrorStream", "true", "try", "process", "builder", "start", "catch", "IOException", "e", "e", "printStackTrace", "Scanner", "s", "new", "Scanner", "process", "getInputStream", "StringBuilder", "text", "new", "StringBuilder", "while", "s", "hasNextLine", "text", "append", "s", "nextLine", "text", "append", "log", "error", "text", "toString", "s", "close", "try", "process", "waitFor", "catch", "InterruptedException", "e", "e", "printStackTrace", "if", "FileUtil", "exists", "File", "separator", "File", "separator", "fileName", "File", "separator", "SAGA_RESULT_FOLDER", "File", "separator", "CloneDetectConstants", "SAGA_CLONE_GROUP_FILE", "log", "error", "fileName", "log", "info", "System", "currentTimeMillis", "time" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\PipeLineService.java",
  "startLine" : 39,
  "endLine" : 85,
  "identifiers" : [ "configPipeline", "configMain", "singleToolDTO", "blobInfoPipeline", "main", "detectService", "detectStart", "dbPipeline", "DBMain", "detectService", "detectStart", "pythonProducerService", "groupMapStart", "singleToolDTO", "cloneEvoPipeLine", "main", "dangerCheckPipeLine", "main", "String", "projectName", "singleToolDTO", "getProjectName", "String", "command1", "FileName", "CLONE_VALIDATION", "projectName", "File", "separator", "File", "separator", "pythonProducerService", "finalResult", "projectName", "command1", "String", "command2", "FileName", "START_END_TYPE", "projectName", "File", "separator", "File", "separator", "projectName", "pythonProducerService", "finalResult", "projectName", "command2", "String", "command3", "FileName", "MODIFY_TYPE", "projectName", "pythonProducerService", "finalResult", "projectName", "command1" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\PythonProducerService.java",
  "startLine" : 17,
  "endLine" : 54,
  "identifiers" : [ "log", "info", "File", "pathToExecutable", "new", "File", "File", "separator", "Process", "process", "null", "ProcessBuilder", "builder", "builder", "new", "ProcessBuilder", "pathToExecutable", "getAbsolutePath", "singleToolDTO", "getRepoPath", "builder", "redirectErrorStream", "true", "try", "process", "builder", "start", "catch", "IOException", "e", "e", "printStackTrace", "Scanner", "s", "new", "Scanner", "process", "getInputStream", "StringBuilder", "text", "new", "StringBuilder", "while", "s", "hasNextLine", "text", "append", "s", "nextLine", "text", "append", "s", "close", "try", "process", "waitFor", "catch", "InterruptedException", "e", "e", "printStackTrace", "if", "FileUtil", "exists", "File", "separator", "log", "error", "log", "info" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\PythonProducerService.java",
  "startLine" : 56,
  "endLine" : 90,
  "identifiers" : [ "log", "info", "Arrays", "toString", "command", "Process", "process", "null", "ProcessBuilder", "builder", "builder", "new", "ProcessBuilder", "command", "builder", "directory", "new", "File", "File", "separator", "File", "separator", "getAbsoluteFile", "builder", "redirectErrorStream", "true", "try", "process", "builder", "start", "catch", "IOException", "e", "e", "printStackTrace", "Scanner", "s", "new", "Scanner", "process", "getInputStream", "StringBuilder", "text", "new", "StringBuilder", "while", "s", "hasNextLine", "text", "append", "s", "nextLine", "text", "append", "s", "close", "try", "process", "waitFor", "catch", "InterruptedException", "e", "e", "printStackTrace", "log", "info", "Arrays", "toString", "command" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\ViewService.java",
  "startLine" : 18,
  "endLine" : 31,
  "identifiers" : [ "if", "FileUtil", "exists", "singleToolDTO", "getRepoPath", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "String", "format", "singleToolDTO", "getRepoPath", "if", "StringUtils", "isBlank", "singleToolDTO", "getRepoPath", "StringUtils", "isBlank", "singleToolDTO", "getStartCommit", "StringUtils", "isBlank", "singleToolDTO", "getEndCommit", "StringUtils", "isBlank", "singleToolDTO", "getTraceCommit", "StringUtils", "isBlank", "singleToolDTO", "getThreadNum", "StringUtils", "isBlank", "singleToolDTO", "getProjectName", "StringUtils", "isBlank", "singleToolDTO", "getLanguage", "StringUtils", "isBlank", "singleToolDTO", "getSuffix", "StringUtils", "isBlank", "singleToolDTO", "getIp", "StringUtils", "isBlank", "singleToolDTO", "getDatabase", "StringUtils", "isBlank", "singleToolDTO", "getUsername", "StringUtils", "isBlank", "singleToolDTO", "getPassword", "StringUtils", "isBlank", "singleToolDTO", "getSepNum", "StringUtils", "isBlank", "singleToolDTO", "getKeyWordList", "StringUtils", "isBlank", "singleToolDTO", "getExeName", "StringUtils", "isBlank", "singleToolDTO", "getCommitInterval", "StringUtils", "isBlank", "singleToolDTO", "getBlobSnapshotMapResult", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "return", "new", "JsonResult", "JsonResult", "CODE_OK" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\clonedangeranalysis\\service\\ViewService.java",
  "startLine" : 33,
  "endLine" : 55,
  "identifiers" : [ "SingleToolDTO", "singleToolDTO", "new", "SingleToolDTO", "singleToolDTO", "setRepoPath", "viewDTO", "getRepoPath", "singleToolDTO", "setStartCommit", "viewDTO", "getStartCommit", "singleToolDTO", "setEndCommit", "viewDTO", "getEndCommit", "singleToolDTO", "setTraceCommit", "singleToolDTO", "setThreadNum", "singleToolDTO", "setProjectName", "viewDTO", "getProjectName", "singleToolDTO", "setLanguage", "viewDTO", "getLanguage", "singleToolDTO", "setSuffix", "viewDTO", "getExtensions", "singleToolDTO", "setIp", "viewDTO", "getIpAdress", "singleToolDTO", "setDatabase", "viewDTO", "getDataBase", "singleToolDTO", "setUsername", "viewDTO", "getJdbcUserName", "singleToolDTO", "setPassword", "viewDTO", "getJdbcPassWord", "singleToolDTO", "setSepNum", "viewDTO", "getSepNum", "singleToolDTO", "setKeyWordList", "viewDTO", "getKeyWordList", "singleToolDTO", "setIgnoreWordList", "viewDTO", "getIgnoreWordList", "singleToolDTO", "setExeName", "viewDTO", "getProcessor", "viewDTO", "getPlatform", "singleToolDTO", "setCommitInterval", "viewDTO", "getCommitInterval", "singleToolDTO", "setBlobSnapshotMapResult", "File", "separator", "singleToolDTO", "setExtractedPath", "return", "singleToolDTO" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\common\\CloneDetectConstants.java",
  "startLine" : 32,
  "endLine" : 53,
  "identifiers" : [ "SAGA_DETECT_LANGUAGE", "new", "HashMap", "SAGA_DETECT_LANGUAGE", "put", "true", "SAGA_DETECT_LANGUAGE", "put", "true", "SAGA_DETECT_LANGUAGE", "put", "true", "SAGA_DETECT_LANGUAGE", "put", "true", "SAGA_DETECT_LANGUAGE", "put", "true", "SAGA_DETECT_LANGUAGE", "put", "true", "SAGA_DETECT_GRANULARITY", "new", "HashMap", "SAGA_DETECT_GRANULARITY", "put", "true", "SAGA_DETECT_GRANULARITY", "put", "true", "SAGA_DETECT_PLATFORM", "new", "HashMap", "SAGA_DETECT_PLATFORM", "put", "true", "SAGA_DETECT_PLATFORM", "put", "true", "SAGA_DETECT_PLATFORM", "put", "true", "SAGA_DETECT_PROCESSOR", "new", "HashMap", "SAGA_DETECT_PROCESSOR", "put", "true", "SAGA_DETECT_PROCESSOR", "put", "true" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\config\\Config.java",
  "startLine" : 32,
  "endLine" : 46,
  "identifiers" : [ "File", "configFile", "new", "File", "CONFIG_FILE", "if", "configFile", "exists", "save", "log", "error", "CONFIG_FILE", "System", "exit", "properties", "load", "new", "FileReader", "configFile", "jdbcTableName", "properties", "getProperty", "jdbcDriver", "properties", "getProperty", "jdbcUrl", "properties", "getProperty", "jdbcUsername", "properties", "getProperty", "jdbcPassword", "properties", "getProperty", "sagaPath", "properties", "getProperty" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\config\\Config.java",
  "startLine" : 52,
  "endLine" : 61,
  "identifiers" : [ "File", "configFile", "new", "File", "CONFIG_FILE", "properties", "setProperty", "jdbcTableName", "properties", "setProperty", "jdbcDriver", "properties", "setProperty", "jdbcUrl", "properties", "setProperty", "jdbcUsername", "properties", "setProperty", "jdbcPassword", "properties", "setProperty", "sagaPath", "properties", "store", "new", "FileWriter", "configFile" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\controller\\CloneDetectController.java",
  "startLine" : 59,
  "endLine" : 133,
  "identifiers" : [ "log", "info", "long", "time", "System", "currentTimeMillis", "if", "FileUtil", "exists", "repoPath", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "String", "format", "repoPath", "if", "minLine", "mlc", "mlcc", "sepNum", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "if", "CloneDetectConstants", "SAGA_DETECT_LANGUAGE", "containsKey", "language", "toLowerCase", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "String", "format", "language", "if", "threshold", "threshold", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "if", "openStringHash", "openStringHash", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "if", "CloneDetectConstants", "SAGA_DETECT_GRANULARITY", "containsKey", "granularity", "toLowerCase", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "if", "extensions", "isEmpty", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "if", "CloneDetectConstants", "SAGA_DETECT_PLATFORM", "containsKey", "platform", "toLowerCase", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "if", "CloneDetectConstants", "SAGA_DETECT_PROCESSOR", "containsKey", "processor", "toLowerCase", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "log", "info", "FileUtil", "delete", "CloneDetectConstants", "SAGA_TOKEN_DATA_FOLDER", "FileUtil", "delete", "CloneDetectConstants", "SAGA_RESULT_FOLDER", "FileUtil", "delete", "CloneDetectConstants", "SAGA_CONFIG_FILE", "log", "info", "Properties", "properties", "new", "Properties", "properties", "setProperty", "CloneDetectConstants", "SagaConfig", "MIN_LINE", "minLine", "toString", "properties", "setProperty", "CloneDetectConstants", "SagaConfig", "MLCC", "mlcc", "toString", "properties", "setProperty", "CloneDetectConstants", "SagaConfig", "USE_GPU", "properties", "setProperty", "CloneDetectConstants", "SagaConfig", "LANGUAGE", "language", "properties", "setProperty", "CloneDetectConstants", "SagaConfig", "THRESHOLD", "String", "format", "threshold", "f", "properties", "setProperty", "CloneDetectConstants", "SagaConfig", "OPEN_STRING_HASH", "openStringHash", "toString", "properties", "setProperty", "CloneDetectConstants", "SagaConfig", "GRANULARITY", "granularity", "properties", "setProperty", "CloneDetectConstants", "SagaConfig", "ONLY_TOKENIZE", "properties", "setProperty", "CloneDetectConstants", "SagaConfig", "USE_LONG_TYPE", "properties", "setProperty", "CloneDetectConstants", "SagaConfig", "EXTENSIONS", "extensions", "properties", "setProperty", "CloneDetectConstants", "SagaConfig", "TOKENIZE", "properties", "setProperty", "CloneDetectConstants", "SagaConfig", "SEP_NUM", "sepNum", "toString", "properties", "setProperty", "CloneDetectConstants", "SagaConfig", "MLC", "mlc", "toString", "String", "exe", "if", "platform", "equals", "exe", "String", "format", "processor", "platform", "else", "exe", "String", "format", "processor", "platform", "properties", "setProperty", "CloneDetectConstants", "SagaConfig", "EXE", "CloneDetectConstants", "SAGA_EXECUTABLE_FOLDER", "File", "separator", "exe", "properties", "store", "new", "FileWriter", "CloneDetectConstants", "SAGA_CONFIG_FILE", "log", "info", "Process", "process", "Runtime", "getRuntime", "exec", "new", "String", "Config", "sagaPath", "repoPath", "process", "waitFor", "if", "FileUtil", "exists", "CloneDetectConstants", "SAGA_RESULT_FOLDER", "File", "separator", "CloneDetectConstants", "SAGA_CLONE_GROUP_FILE", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "log", "info", "System", "currentTimeMillis", "time", "return", "new", "JsonResult", "JsonResult", "CODE_OK" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\controller\\CloneDetectController.java",
  "startLine" : 140,
  "endLine" : 168,
  "identifiers" : [ "log", "info", "long", "time", "System", "currentTimeMillis", "String", "logPath", "CloneDetectConstants", "SAGA_LOG_FOLDER", "File", "separator", "CloneDetectConstants", "SAGA_LOG_FILE", "File", "logFile", "new", "File", "logPath", "if", "logFile", "exists", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "List", "String", "lines", "FileUtil", "readLines", "logPath", "int", "startLine", "for", "int", "i", "lines", "size", "i", "i", "String", "line", "lines", "get", "i", "if", "line", "contains", "startLine", "i", "break", "lines", "lines", "subList", "startLine", "lines", "size", "String", "content", "String", "join", "lines", "DataJsonResult", "result", "new", "DataJsonResult", "result", "setCode", "JsonResult", "CODE_OK", "result", "setMsg", "result", "setData", "content", "log", "info", "System", "currentTimeMillis", "time", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\controller\\CloneDetectController.java",
  "startLine" : 182,
  "endLine" : 281,
  "identifiers" : [ "log", "info", "long", "time", "System", "currentTimeMillis", "if", "FileUtil", "exists", "repoPath", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "String", "format", "repoPath", "if", "CloneDetectConstants", "SAGA_DETECT_LANGUAGE", "containsKey", "language", "toLowerCase", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "String", "format", "language", "if", "CloneDetectConstants", "SAGA_DETECT_GRANULARITY", "containsKey", "granularity", "toLowerCase", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "String", "measureIndexPath", "CloneDetectConstants", "SAGA_RESULT_FOLDER", "File", "separator", "CloneDetectConstants", "SAGA_MEASURE_INDEX_FILE", "String", "cloneGroupPath", "CloneDetectConstants", "SAGA_RESULT_FOLDER", "File", "separator", "CloneDetectConstants", "SAGA_CLONE_GROUP_FILE", "if", "FileUtil", "exists", "measureIndexPath", "FileUtil", "exists", "cloneGroupPath", "return", "new", "JsonResult", "JsonResult", "CODE_FAIL", "String", "tableName", "String", "format", "language", "granularity", "log", "info", "tableName", "methodInfoService", "dropTable", "tableName", "methodInfoService", "createTable", "tableName", "log", "info", "int", "groupId", "Map", "String", "Integer", "mid2gid", "new", "HashMap", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "cloneGroupPath", "String", "line", "null", "while", "line", "reader", "readLine", "null", "groupId", "String", "mids", "line", "trim", "split", "for", "String", "mid", "mids", "mid2gid", "put", "mid", "groupId", "reader", "close", "log", "info", "List", "MethodInfo", "methodInfoList", "new", "ArrayList", "int", "bufferCount", "int", "totalCount", "reader", "new", "BufferedReader", "new", "FileReader", "measureIndexPath", "while", "line", "reader", "readLine", "null", "String", "info", "line", "trim", "split", "if", "info", "length", "log", "info", "line", "continue", "String", "id", "info", "String", "path", "info", "int", "startLine", "Integer", "parseInt", "info", "int", "endLine", "Integer", "parseInt", "info", "int", "gId", "mid2gid", "getOrDefault", "id", "String", "project", "String", "separator", "path", "contains", "if", "multiRepos", "String", "tmp", "repoPath", "split", "separator", "project", "tmp", "tmp", "length", "else", "String", "path2", "path", "substring", "repoPath", "length", "String", "tmp", "path2", "split", "separator", "project", "tmp", "String", "realPath", "path", "substring", "String", "format", "repoPath", "project", "length", "String", "packageName", "CodeUtil", "getPackage", "path", "language", "String", "methodName", "String", "methodParams", "if", "granularity", "equals", "String", "methodNameAndParam", "CodeUtil", "getMethodNameAndParam", "path", "language", "startLine", "methodName", "methodNameAndParam", "methodParams", "methodNameAndParam", "MethodInfo", "methodInfo", "new", "MethodInfo", "Integer", "parseInt", "id", "project", "realPath", "packageName", "startLine", "endLine", "methodName", "methodParams", "gId", "methodInfoList", "add", "methodInfo", "if", "methodInfoList", "size", "bufferCount", "methodInfoService", "batchInsert", "methodInfoList", "tableName", "totalCount", "methodInfoList", "size", "log", "info", "totalCount", "methodInfoList", "clear", "reader", "close", "if", "methodInfoList", "size", "methodInfoService", "batchInsert", "methodInfoList", "tableName", "totalCount", "methodInfoList", "size", "log", "info", "totalCount", "methodInfoList", "clear", "log", "info", "System", "currentTimeMillis", "time", "return", "new", "JsonResult", "JsonResult", "CODE_OK" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\entity\\MethodInfo.java",
  "startLine" : 22,
  "endLine" : 32,
  "identifiers" : [ "this", "id", "id", "this", "project", "project", "this", "path", "path", "this", "packageName", "packageName", "this", "startLine", "startLine", "this", "endLine", "endLine", "this", "methodName", "methodName", "this", "params", "params", "this", "groupId", "groupId" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\util\\CodeUtil.java",
  "startLine" : 24,
  "endLine" : 50,
  "identifiers" : [ "String", "packageName", "if", "language", "equals", "CloneDetectConstants", "SagaDetectLanguage", "JAVA", "return", "packageName", "File", "file", "new", "File", "path", "if", "file", "exists", "return", "packageName", "String", "packageKeyword", "try", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "path", "String", "line", "null", "while", "line", "reader", "readLine", "null", "if", "line", "contains", "packageKeyword", "line", "contains", "String", "tmp", "line", "substring", "line", "indexOf", "packageKeyword", "packageKeyword", "length", "tmp", "tmp", "replaceAll", "packageName", "tmp", "trim", "break", "catch", "Exception", "e", "e", "printStackTrace", "return", "packageName" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\util\\CodeUtil.java",
  "startLine" : 59,
  "endLine" : 148,
  "identifiers" : [ "String", "info", "String", "defaultInfo", "File", "file", "new", "File", "path", "if", "file", "exists", "return", "defaultInfo", "try", "if", "language", "equals", "CloneDetectConstants", "SagaDetectLanguage", "JAVA", "language", "equals", "CloneDetectConstants", "SagaDetectLanguage", "C", "language", "equals", "CloneDetectConstants", "SagaDetectLanguage", "CPP", "List", "String", "lines", "FileUtil", "readFrontLines", "path", "anchorLine", "String", "content", "String", "join", "lines", "int", "index", "content", "lastIndexOf", "char", "c", "content", "charAt", "index", "while", "Character", "isSpaceChar", "c", "index", "if", "index", "return", "defaultInfo", "c", "content", "charAt", "index", "if", "c", "return", "defaultInfo", "String", "tmp", "while", "c", "tmp", "c", "index", "if", "index", "return", "defaultInfo", "c", "content", "charAt", "index", "tmp", "new", "StringBuilder", "tmp", "reverse", "toString", "tmp", "tmp", "replaceAll", "if", "tmp", "length", "tmp", "contains", "tmp", "contains", "return", "defaultInfo", "int", "rightParen", "info", "c", "while", "rightParen", "index", "if", "index", "return", "defaultInfo", "c", "content", "charAt", "index", "if", "c", "rightParen", "else", "if", "c", "rightParen", "info", "c", "info", "new", "StringBuilder", "info", "reverse", "toString", "index", "c", "content", "charAt", "index", "while", "Character", "isSpaceChar", "c", "index", "if", "index", "return", "defaultInfo", "c", "content", "charAt", "index", "while", "Character", "isSpaceChar", "c", "info", "c", "index", "if", "index", "return", "defaultInfo", "c", "content", "charAt", "index", "info", "new", "StringBuilder", "info", "reverse", "toString", "else", "if", "language", "equals", "CloneDetectConstants", "SagaDetectLanguage", "JAVASCRIPT", "else", "if", "language", "equals", "CloneDetectConstants", "SagaDetectLanguage", "PYTHON", "else", "if", "language", "equals", "CloneDetectConstants", "SagaDetectLanguage", "GOLANG", "catch", "Exception", "e", "log", "error", "path", "anchorLine", "return", "info" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\util\\FileUtil.java",
  "startLine" : 16,
  "endLine" : 33,
  "identifiers" : [ "File", "file", "new", "File", "path", "if", "file", "exists", "return", "if", "file", "isFile", "file", "delete", "else", "File", "subFiles", "file", "listFiles", "if", "subFiles", "null", "for", "File", "f", "subFiles", "delete", "f", "getAbsolutePath", "file", "delete" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\util\\FileUtil.java",
  "startLine" : 51,
  "endLine" : 62,
  "identifiers" : [ "List", "String", "lines", "new", "ArrayList", "try", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "path", "String", "line", "null", "while", "line", "reader", "readLine", "null", "lines", "add", "line", "catch", "Exception", "e", "e", "printStackTrace", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\util\\FileUtil.java",
  "startLine" : 64,
  "endLine" : 80,
  "identifiers" : [ "List", "String", "lines", "new", "ArrayList", "int", "lineCount", "try", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "path", "String", "line", "null", "while", "line", "reader", "readLine", "null", "lineCount", "if", "lineCount", "endLine", "break", "lines", "add", "line", "catch", "Exception", "e", "e", "printStackTrace", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\main\\java\\com\\fdse\\clone\\clonemanagementserver\\util\\MybatisUtil.java",
  "startLine" : 33,
  "endLine" : 41,
  "identifiers" : [ "Properties", "properties", "new", "Properties", "properties", "setProperty", "DRIVER", "jdbcDriver", "properties", "setProperty", "URL", "jdbcUrl", "properties", "setProperty", "USERNAME", "jdbcUser", "properties", "setProperty", "PASSWORD", "jdbcPassword", "InputStream", "res", "Resources", "getResourceAsStream", "MYBATIS_CONFIG_FILE", "factory", "new", "SqlSessionFactoryBuilder", "build", "res", "properties" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\test\\java\\com\\fdse\\clone\\clonemanagementserver\\ClonemanagementserverApplicationTests.java",
  "startLine" : 31,
  "endLine" : 58,
  "identifiers" : [ "MethodInfo", "methodInfo1", "new", "MethodInfo", "methodInfo1", "setProject", "methodInfo1", "setPath", "methodInfo1", "setPackageName", "methodInfo1", "setStartLine", "methodInfo1", "setEndLine", "methodInfo1", "setMethodName", "methodInfo1", "setParams", "methodInfo1", "setGroupId", "MethodInfo", "methodInfo2", "new", "MethodInfo", "methodInfo2", "setProject", "methodInfo2", "setPath", "methodInfo2", "setPackageName", "methodInfo2", "setStartLine", "methodInfo2", "setEndLine", "methodInfo2", "setMethodName", "methodInfo2", "setParams", "methodInfo2", "setGroupId", "List", "MethodInfo", "methodInfos", "new", "ArrayList", "methodInfos", "add", "methodInfo1", "methodInfos", "add", "methodInfo2", "int", "res", "mapper", "batchInsert", "Config", "jdbcTableName", "methodInfos", "System", "out", "println", "res" ]
}, {
  "path" : "d:\\GitRepo\\CloneManagementServer\\src\\test\\java\\com\\fdse\\clone\\clonemanagementserver\\util\\MybatisUtilTests.java",
  "startLine" : 39,
  "endLine" : 67,
  "identifiers" : [ "SqlSession", "session", "MybatisUtil", "openSession", "true", "MethodInfoMapper", "mapper", "session", "getMapper", "MethodInfoMapper", "class", "MethodInfo", "methodInfo1", "new", "MethodInfo", "methodInfo1", "setProject", "methodInfo1", "setPath", "methodInfo1", "setPackageName", "methodInfo1", "setStartLine", "methodInfo1", "setEndLine", "methodInfo1", "setMethodName", "methodInfo1", "setParams", "methodInfo1", "setGroupId", "MethodInfo", "methodInfo2", "new", "MethodInfo", "methodInfo2", "setProject", "methodInfo2", "setPath", "methodInfo2", "setPackageName", "methodInfo2", "setStartLine", "methodInfo2", "setEndLine", "methodInfo2", "setMethodName", "methodInfo2", "setParams", "methodInfo2", "setGroupId", "List", "MethodInfo", "methodInfos", "new", "ArrayList", "methodInfos", "add", "methodInfo1", "methodInfos", "add", "methodInfo2", "int", "res", "mapper", "batchInsert", "Config", "jdbcTableName", "methodInfos", "System", "out", "println", "res" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\clone\\Config.java",
  "startLine" : 36,
  "endLine" : 56,
  "identifiers" : [ "properties", "setProperty", "inputJsonFolder", "properties", "setProperty", "outputPairFolder", "properties", "setProperty", "maxCloneInstanceNum", "toString", "properties", "setProperty", "extractedJsonFolder", "properties", "setProperty", "consisResultFolder", "properties", "setProperty", "CPI", "toString", "properties", "setProperty", "lowCCP", "properties", "setProperty", "highCCP", "properties", "setProperty", "lowCCD", "toString", "properties", "setProperty", "highCCD", "toString", "properties", "setProperty", "useBugInfo", "toString", "properties", "setProperty", "keyWordList", "properties", "store", "new", "FileWriter", "CONFIG_FILE", "COMMENT", "File", "keyWordListFile", "new", "File", "keyWordListFile", "createNewFile", "FileUtil", "write", "keyWordListFile", "getAbsolutePath", "false" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\clone\\Config.java",
  "startLine" : 61,
  "endLine" : 97,
  "identifiers" : [ "try", "if", "new", "File", "CONFIG_FILE", "exists", "properties", "load", "new", "FileReader", "CONFIG_FILE", "inputJsonFolder", "properties", "getProperty", "outputPairFolder", "properties", "getProperty", "maxCloneInstanceNum", "Integer", "parseInt", "properties", "getProperty", "trim", "extractedJsonFolder", "properties", "getProperty", "consisResultFolder", "properties", "getProperty", "CPI", "Integer", "parseInt", "properties", "getProperty", "trim", "lowCCP", "Double", "valueOf", "properties", "getProperty", "trim", "highCCP", "Double", "valueOf", "properties", "getProperty", "trim", "lowCCD", "Integer", "parseInt", "properties", "getProperty", "trim", "highCCD", "Integer", "parseInt", "properties", "getProperty", "trim", "useBugInfo", "Integer", "parseInt", "properties", "getProperty", "trim", "keyWordList", "properties", "getProperty", "else", "save", "System", "out", "println", "System", "exit", "catch", "IOException", "e", "System", "exit", "catch", "NumberFormatException", "e", "System", "out", "println", "System", "exit", "try", "List", "String", "content", "FileUtil", "readLines", "keyWordList", "keyWordList", "content", "get", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\Analyser.java",
  "startLine" : 89,
  "endLine" : 240,
  "identifiers" : [ "reset", "String", "groupId", "new", "File", "file", "getName", "replace", "System", "out", "println", "groupId", "try", "List", "EvolutionMergeResult", "data", "loadData", "file", "if", "data", "size", "return", "List", "List", "EvolutionMergeResult", "EvolutionRecord", "records", "new", "ArrayList", "int", "size", "data", "size", "records", "getInstances", "data", "size", "List", "EvolutionMergeResult", "EvolutionRecord", "latestGroup", "records", "get", "records", "size", "Set", "Integer", "instanceIds", "new", "HashSet", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "latestGroup", "if", "instance", "status", "equals", "instance", "status", "equals", "instance", "groupId", "equals", "groupId", "instanceIds", "add", "instance", "instanceNumber", "insNumber", "instanceIds", "size", "if", "insNumber", "return", "Map", "Integer", "String", "insBornCodeMap", "new", "HashMap", "for", "EvolutionMergeResult", "commitInfo", "data", "Map", "String", "Integer", "groupIdCountMap", "new", "HashMap", "List", "EvolutionMergeResult", "EvolutionRecord", "curGroup", "commitInfo", "getCodes", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "curGroup", "if", "instance", "groupId", "equals", "continue", "int", "count", "groupIdCountMap", "getOrDefault", "instance", "groupId", "count", "groupIdCountMap", "put", "instance", "groupId", "count", "if", "instance", "status", "equals", "insBornCodeMap", "put", "instance", "instanceNumber", "instance", "curCode", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "curGroup", "if", "instance", "groupId", "equals", "continue", "if", "instanceIds", "contains", "instance", "instanceNumber", "if", "groupIdCountMap", "get", "instance", "groupId", "insBornMap", "containsKey", "instance", "instanceNumber", "insBornMap", "put", "instance", "instanceNumber", "commitInfo", "date", "System", "out", "println", "instance", "groupId", "commitInfo", "date", "curGroupEvolutionInfo", "new", "ArrayList", "boolean", "cloneGroupCreated", "false", "Set", "String", "groupIds", "new", "HashSet", "for", "EvolutionMergeResult", "commitInfo", "data", "List", "EvolutionMergeResult", "EvolutionRecord", "codes", "commitInfo", "getCodes", "List", "EvolutionMergeResult", "EvolutionRecord", "extractCodes", "new", "ArrayList", "EvolutionMergeResult", "extractCommit", "new", "EvolutionMergeResult", "Set", "String", "statusSet", "new", "HashSet", "String", "authorTime", "groupIds", "clear", "int", "notZeroGroupIdInstanceNum", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "codes", "if", "instance", "status", "equals", "instance", "status", "equals", "instanceIds", "contains", "instance", "instanceNumber", "statusSet", "add", "instance", "status", "authorTime", "instance", "authorDate", "if", "instanceIds", "contains", "instance", "instanceNumber", "EvolutionMergeResult", "EvolutionRecord", "newins", "getNewInstance", "instance", "commitInfo", "date", "insBornCodeMap", "get", "instance", "instanceNumber", "extractCodes", "add", "newins", "if", "instance", "groupId", "equals", "instanceIds", "contains", "instance", "instanceNumber", "groupIds", "add", "instance", "groupId", "notZeroGroupIdInstanceNum", "if", "groupIds", "size", "notZeroGroupIdInstanceNum", "cloneGroupCreated", "true", "String", "status", "if", "statusSet", "size", "statusSet", "contains", "status", "else", "status", "if", "statusSet", "size", "statusSet", "contains", "continue", "if", "cloneGroupCreated", "extractCommit", "setCodes", "extractCodes", "extractCommit", "setCommitId", "commitInfo", "commitId", "extractCommit", "setStatus", "status", "extractCommit", "setSubmitter", "commitInfo", "submitter", "extractCommit", "setDate", "commitInfo", "date", "extractCommit", "setAuthorTime", "authorTime", "extractCommit", "setCommitMessage", "commitInfo", "commitMessage", "curGroupEvolutionInfo", "add", "extractCommit", "List", "List", "EvolutionMergeResult", "EvolutionRecord", "instanceList", "new", "ArrayList", "size", "curGroupEvolutionInfo", "size", "records", "clear", "records", "getInstances", "curGroupEvolutionInfo", "size", "instanceList", "getArrangedInstances", "records", "ConsistAnalyser", "consistAnalyser", "new", "ConsistAnalyser", "consistAnalyser", "startAnalyse", "instanceList", "consistAnalyser", "outputResult", "consistResult", "consistAnalyser", "consistResult", "extractCloneInformation", "extractConsistTimeInterval", "getCommitBugsNum", "getConsistBugsNum", "String", "outputFile1", "String", "format", "Config", "extractedJsonFolder", "groupId", "FileUtil", "write", "outputFile1", "JSONObject", "toJSONString", "curGroupEvolutionInfo", "false", "String", "outputFile", "String", "format", "Config", "consisResultFolder", "groupId", "FileUtil", "write", "outputFile", "JSONObject", "toJSONString", "consistResult", "false", "String", "outputFile2", "String", "format", "Config", "consisResultFolder", "groupId", "FileUtil", "write", "outputFile2", "JSONObject", "toJSONString", "consistResultForTest", "false", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\Analyser.java",
  "startLine" : 242,
  "endLine" : 274,
  "identifiers" : [ "EvolutionMergeResult", "EvolutionRecord", "newIns", "instance", "if", "instance", "status", "equals", "return", "newIns", "long", "time", "l", "try", "System", "out", "println", "instance", "instanceNumber", "String", "bornTime", "insBornMap", "get", "instance", "instanceNumber", "System", "out", "println", "commitDate", "bornTime", "time", "DateUtil", "getTimestamp", "commitDate", "DateUtil", "getTimestamp", "bornTime", "catch", "ParseException", "e", "e", "printStackTrace", "if", "time", "l", "if", "newIns", "status", "equals", "newIns", "status", "newIns", "preCode", "code", "newIns", "curCode", "code", "else", "newIns", "status", "newIns", "preCode", "newIns", "curCode", "else", "if", "time", "l", "if", "newIns", "status", "equals", "newIns", "status", "newIns", "preCode", "newIns", "curCode", "return", "newIns" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\Analyser.java",
  "startLine" : 283,
  "endLine" : 319,
  "identifiers" : [ "Set", "String", "judgedMessage", "new", "HashSet", "for", "EvolutionMergeResult", "commitInfo", "curGroupEvolutionInfo", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "commitInfo", "getCodes", "insMessageMap", "put", "instance", "id", "commitInfo", "commitMessage", "for", "String", "ids", "consistResult", "String", "idPair", "ids", "split", "if", "instanceMap", "get", "Integer", "parseInt", "idPair", "date", "equals", "instanceMap", "get", "Integer", "parseInt", "idPair", "date", "double", "messageSim", "try", "messageSim", "MinimumEditDistanceUtil", "stringSimilarity", "insMessageMap", "get", "Integer", "parseInt", "idPair", "insMessageMap", "get", "Integer", "parseInt", "idPair", "catch", "Exception", "e", "if", "messageSim", "intervalMessageSimNumber", "String", "message1", "insMessageMap", "get", "Integer", "parseInt", "idPair", "toLowerCase", "String", "message2", "insMessageMap", "get", "Integer", "parseInt", "idPair", "toLowerCase", "if", "isBugsRelated", "message1", "judgedMessage", "contains", "message1", "bugsConsistCommitCount", "judgedMessage", "add", "message1", "if", "isBugsRelated", "message2", "judgedMessage", "contains", "message2", "bugsConsistCommitCount", "judgedMessage", "add", "message2" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\Analyser.java",
  "startLine" : 336,
  "endLine" : 379,
  "identifiers" : [ "Map", "Integer", "Integer", "modifyMap", "new", "HashMap", "int", "totalModifyTimes", "for", "int", "i", "i", "records", "size", "i", "int", "year", "List", "EvolutionMergeResult", "EvolutionRecord", "curList", "records", "get", "i", "int", "insNumber", "for", "int", "j", "j", "curList", "size", "j", "EvolutionMergeResult", "EvolutionRecord", "curRe", "curList", "get", "j", "if", "curRe", "status", "equals", "curRe", "status", "equals", "year", "Integer", "parseInt", "curList", "get", "j", "date", "split", "insNumber", "if", "insNumber", "totalModifyTimes", "int", "modifyTimes", "modifyMap", "getOrDefault", "year", "modifyMap", "put", "year", "modifyTimes", "int", "bornYear", "for", "Map", "Entry", "Integer", "Integer", "entry", "modifyMap", "entrySet", "if", "entry", "getKey", "bornYear", "bornYear", "entry", "getKey", "double", "activity", "String", "strNow", "new", "SimpleDateFormat", "format", "new", "Date", "toString", "split", "Integer", "curYear", "Integer", "parseInt", "strNow", "int", "sum", "for", "int", "i", "i", "curYear", "bornYear", "i", "sum", "i", "for", "Map", "Entry", "Integer", "Integer", "entry", "modifyMap", "entrySet", "if", "entry", "getKey", "bornYear", "continue", "activity", "Double", "valueOf", "entry", "getKey", "bornYear", "sum", "Double", "valueOf", "entry", "getValue", "totalModifyTimes", "return", "activity" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\Analyser.java",
  "startLine" : 381,
  "endLine" : 398,
  "identifiers" : [ "Collections", "sort", "timeStampList", "Collections", "sort", "allTimestampList", "if", "timeStampList", "size", "timeStampList", "add", "l", "if", "allTimestampList", "size", "allTimestampList", "add", "l", "maxConsisTimeInterval", "timeStampList", "get", "timeStampList", "size", "midConsisTimeInterval", "median", "timeStampList", "quaterTimeInterval", "timeStampList", "get", "timeStampList", "size", "averageConsisTimeInterval", "computeAverageTimeStamp", "timeStampList", "maxConsisTimeInterval1", "allTimestampList", "get", "allTimestampList", "size", "midConsisTimeInterval1", "median", "allTimestampList", "quaterTimeInterval1", "allTimestampList", "get", "allTimestampList", "size", "averageConsisTimeInterval1", "computeAverageTimeStamp", "allTimestampList" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\Analyser.java",
  "startLine" : 400,
  "endLine" : 409,
  "identifiers" : [ "long", "j", "int", "size", "total", "size", "if", "size", "j", "total", "get", "size", "else", "j", "total", "get", "size", "total", "get", "size", "l", "return", "j" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\Analyser.java",
  "startLine" : 419,
  "endLine" : 484,
  "identifiers" : [ "Set", "String", "fileSet", "new", "HashSet", "List", "String", "functionList", "new", "ArrayList", "Set", "String", "authors", "new", "HashSet", "Set", "String", "consistAuthors", "new", "HashSet", "int", "totalLine", "groupModifyNum", "curGroupEvolutionInfo", "size", "boolean", "firstCommitModify", "false", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "curGroupEvolutionInfo", "get", "getCodes", "if", "instance", "status", "equals", "firstCommitModify", "true", "repoSet", "add", "instance", "repoName", "for", "String", "name", "repoSet", "repoNameConcatenate", "name", "if", "firstCommitModify", "groupModifyNum", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "curGroupEvolutionInfo", "get", "curGroupEvolutionInfo", "size", "getCodes", "fileSet", "add", "instance", "repoName", "instance", "realPath", "String", "funcPath", "instance", "realPath", "replaceAll", "instance", "startLine", "instance", "endLine", "functionList", "add", "funcPath", "totalLine", "instance", "endLine", "instance", "startLine", "for", "EvolutionMergeResult", "commitInfo", "curGroupEvolutionInfo", "authors", "add", "commitInfo", "submitter", "for", "EvolutionMergeResult", "EvolutionRecord", "ins", "commitInfo", "getCodes", "if", "ins", "status", "equals", "insModifyNum", "fileNumber", "fileSet", "size", "distance", "ComputeDistanceUtil", "computeDistance", "functionList", "averageLine", "totalLine", "insNumber", "authorNum", "authors", "size", "Long", "curTime", "null", "try", "curTime", "DateUtil", "getTimestamp", "DateUtil", "format", "new", "Date", "Long", "bornTime", "DateUtil", "getTimestamp", "curGroupEvolutionInfo", "get", "date", "cloneGroupAge", "Math", "abs", "curTime", "bornTime", "catch", "ParseException", "e", "e", "printStackTrace", "latestModifyTime", "curGroupEvolutionInfo", "get", "curGroupEvolutionInfo", "size", "date", "if", "insModifyNum", "consistRatio", "else", "consistRatio", "Double", "valueOf", "matchedIds", "size", "insModifyNum", "consistModifyNum", "matchedIds", "size", "for", "EvolutionMergeResult", "commitInfo", "curGroupEvolutionInfo", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "commitInfo", "getCodes", "if", "matchedIds", "contains", "instance", "id", "consistAuthors", "add", "commitInfo", "submitter", "if", "instance", "status", "equals", "latestInstanceBornTime", "commitInfo", "date", "if", "latestInstanceBornTime", "equals", "latestInstanceBornTime", "curGroupEvolutionInfo", "get", "date", "consistAuthorNum", "consistAuthors", "size" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\Analyser.java",
  "startLine" : 486,
  "endLine" : 516,
  "identifiers" : [ "int", "evoRow", "List", "List", "EvolutionMergeResult", "EvolutionRecord", "records", "new", "ArrayList", "for", "int", "i", "i", "size", "i", "records", "add", "new", "ArrayList", "int", "id", "for", "EvolutionMergeResult", "result", "evoInfo", "List", "EvolutionMergeResult", "EvolutionRecord", "curCodes", "result", "getCodes", "for", "int", "i", "i", "curCodes", "size", "i", "curCodes", "get", "i", "id", "id", "try", "curCodes", "get", "i", "curCode", "DeleteCAndCplusplusAndJavaNote", "delete_C_Cplusplus_Java_Note", "curCodes", "get", "i", "curCode", "catch", "Exception", "e", "System", "out", "println", "try", "curCodes", "get", "i", "preCode", "DeleteCAndCplusplusAndJavaNote", "delete_C_Cplusplus_Java_Note", "curCodes", "get", "i", "preCode", "catch", "Exception", "e", "System", "out", "println", "EvolutionMergeResult", "EvolutionRecord", "curRecord", "curCodes", "get", "i", "records", "get", "evoRow", "add", "curRecord", "id", "evoRow", "return", "records" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\Analyser.java",
  "startLine" : 519,
  "endLine" : 534,
  "identifiers" : [ "List", "List", "EvolutionMergeResult", "EvolutionRecord", "arrangedList", "new", "ArrayList", "for", "int", "i", "i", "records", "get", "size", "i", "arrangedList", "add", "new", "ArrayList", "for", "int", "j", "j", "records", "size", "j", "for", "int", "k", "k", "records", "get", "j", "size", "k", "arrangedList", "get", "k", "add", "records", "get", "j", "get", "k", "instanceMap", "put", "records", "get", "j", "get", "k", "id", "records", "get", "j", "get", "k", "return", "arrangedList" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\Analyser.java",
  "startLine" : 536,
  "endLine" : 546,
  "identifiers" : [ "List", "String", "lines", "FileUtil", "readLines", "file", "String", "content", "String", "join", "lines", "List", "EvolutionMergeResult", "extractedContent", "new", "ArrayList", "try", "extractedContent", "JSONArray", "parseArray", "content", "EvolutionMergeResult", "class", "catch", "Exception", "e", "System", "out", "println", "return", "extractedContent" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\Analyser.java",
  "startLine" : 548,
  "endLine" : 588,
  "identifiers" : [ "timeStampList", "clear", "cloneGroupAge", "l", "consistRatio", "matchedIds", "clear", "activity", "consistResult", "clear", "instanceMap", "clear", "curGroupEvolutionInfo", "clear", "insNumber", "fileNumber", "distance", "insModifyNum", "groupModifyNum", "averageLine", "authorNum", "latestModifyTime", "maxConsisTimeInterval", "l", "averageConsisTimeInterval", "l", "midConsisTimeInterval", "l", "quaterTimeInterval", "l", "maxConsisTimeInterval1", "l", "averageConsisTimeInterval1", "l", "midConsisTimeInterval1", "l", "quaterTimeInterval1", "l", "consistModifyNum", "consistAuthorNum", "latestInstanceBornTime", "allTimestampList", "clear", "allConsistPair", "clear", "bugsCommitCount", "bugsConsistCommitCount", "insBornMap", "clear", "consistResultForTest", "clear", "insMessageMap", "clear", "intervalMessageSimNumber", "repoSet", "clear", "repoNameConcatenate" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 25,
  "endLine" : 34,
  "identifiers" : [ "int", "instanceNum", "instanceList", "size", "for", "int", "i", "i", "instanceNum", "i", "List", "EvolutionMergeResult", "EvolutionRecord", "instancesOne", "instanceList", "get", "i", "for", "int", "j", "i", "j", "instanceNum", "j", "List", "EvolutionMergeResult", "EvolutionRecord", "instancesTwo", "instanceList", "get", "j", "resultList", "add", "analyseBetweenInstances", "instancesOne", "instancesTwo" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 36,
  "endLine" : 58,
  "identifiers" : [ "Map", "Integer", "Map", "Integer", "Double", "result", "new", "HashMap", "for", "EvolutionMergeResult", "EvolutionRecord", "instanceLeft", "instancesOne", "for", "EvolutionMergeResult", "EvolutionRecord", "instanceRight", "instancesTwo", "if", "instanceLeft", "status", "equals", "instanceRight", "status", "equals", "continue", "double", "similarity", "computeEditBehaviorSimilarity", "instanceLeft", "instanceRight", "if", "similarity", "Map", "Integer", "Double", "leftResult", "result", "getOrDefault", "instanceLeft", "id", "new", "HashMap", "leftResult", "put", "instanceRight", "id", "similarity", "result", "put", "instanceLeft", "id", "leftResult", "Map", "Integer", "Double", "rightResult", "result", "getOrDefault", "instanceRight", "id", "new", "HashMap", "rightResult", "put", "instanceLeft", "id", "similarity", "result", "put", "instanceRight", "id", "rightResult", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 60,
  "endLine" : 77,
  "identifiers" : [ "double", "similarity", "String", "leftPreCode", "formatCode", "instanceLeft", "preCode", "String", "leftCurCode", "formatCode", "instanceLeft", "curCode", "String", "rightPreCode", "formatCode", "instanceRight", "preCode", "String", "rightCurCode", "formatCode", "instanceRight", "curCode", "LinkedList", "diff_match_patch", "Diff", "leftModifyList", "generateModifyInfo", "leftPreCode", "leftCurCode", "LinkedList", "diff_match_patch", "Diff", "rightModifyList", "generateModifyInfo", "rightPreCode", "rightCurCode", "cleanupOperation", "leftModifyList", "diff_match_patch", "Operation", "EQUAL", "cleanupOperation", "rightModifyList", "diff_match_patch", "Operation", "EQUAL", "similarity", "computeSimilarity", "leftModifyList", "rightModifyList", "return", "similarity" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 79,
  "endLine" : 87,
  "identifiers" : [ "String", "code", "code", "codeText", "replaceAll", "code", "code", "replaceAll", "code", "code", "replaceAll", "code", "code", "replaceAll", "code", "code", "replaceAll", "return", "code" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 89,
  "endLine" : 134,
  "identifiers" : [ "leftDiff", "processDiffList", "leftDiff", "rightDiff", "processDiffList", "rightDiff", "int", "sizeLeft", "leftDiff", "size", "int", "sizeRight", "rightDiff", "size", "List", "diff_match_patch", "Diff", "matchedDiffList", "new", "ArrayList", "int", "maxEditSize", "LinkedList", "diff_match_patch", "Diff", "outterDiffList", "LinkedList", "diff_match_patch", "Diff", "innerDiffList", "if", "sizeLeft", "sizeRight", "outterDiffList", "leftDiff", "innerDiffList", "rightDiff", "maxEditSize", "leftDiff", "size", "else", "outterDiffList", "rightDiff", "innerDiffList", "leftDiff", "maxEditSize", "rightDiff", "size", "for", "int", "i", "i", "outterDiffList", "size", "i", "boolean", "matched", "false", "for", "int", "j", "j", "innerDiffList", "size", "j", "if", "outterDiffList", "get", "i", "operation", "equals", "innerDiffList", "get", "j", "operation", "String", "outterEditString", "processEditText", "outterDiffList", "get", "i", "text", "String", "innerEditString", "processEditText", "innerDiffList", "get", "j", "text", "if", "outterEditString", "replaceAll", "equals", "innerEditString", "replaceAll", "equals", "continue", "if", "MinimumEditDistanceUtil", "stringSimilarity", "outterEditString", "innerEditString", "matchedDiffList", "add", "outterDiffList", "get", "i", "innerDiffList", "remove", "j", "matched", "true", "break", "if", "matched", "outterDiffList", "remove", "i", "i", "return", "double", "matchedDiffList", "size", "maxEditSize" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 136,
  "endLine" : 145,
  "identifiers" : [ "String", "result", "String", "IDENTIFIER", "result", "text", "replaceAll", "IDENTIFIER", "result", "result", "replaceAll", "result", "result", "replaceAll", "result", "result", "replaceAll", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 147,
  "endLine" : 164,
  "identifiers" : [ "LinkedList", "diff_match_patch", "Diff", "editList", "new", "LinkedList", "for", "diff_match_patch", "Diff", "diff", "diffList", "diff_match_patch", "Operation", "operation", "diff", "operation", "String", "textList", "diff", "text", "split", "for", "String", "text", "textList", "text", "text", "replace", "text", "text", "replace", "if", "text", "equals", "continue", "diff_match_patch", "Diff", "edit", "new", "diff_match_patch", "Diff", "operation", "text", "editList", "add", "edit", "return", "editList" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 166,
  "endLine" : 177,
  "identifiers" : [ "Set", "diff_match_patch", "Diff", "leftSet", "new", "HashSet", "leftDiff", "Set", "diff_match_patch", "Diff", "rightSet", "new", "HashSet", "rightDiff", "Set", "diff_match_patch", "Diff", "crossSet", "new", "HashSet", "crossSet", "addAll", "leftDiff", "crossSet", "retainAll", "rightDiff", "int", "biggerSize", "leftDiff", "size", "rightDiff", "size", "leftDiff", "size", "rightDiff", "size", "return", "double", "crossSet", "size", "biggerSize" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 201,
  "endLine" : 254,
  "identifiers" : [ "for", "Map", "Integer", "Map", "Integer", "Double", "result", "resultList", "for", "Map", "Entry", "Integer", "Map", "Integer", "Double", "entry", "result", "entrySet", "int", "outterKey", "entry", "getKey", "Map", "Integer", "Double", "innerMap", "entry", "getValue", "Set", "Integer", "exactSimilarity", "new", "HashSet", "for", "Map", "Entry", "Integer", "Double", "innerEntry", "innerMap", "entrySet", "Analyser", "consistResultForTest", "add", "outterKey", "innerEntry", "getKey", "innerEntry", "getValue", "if", "innerEntry", "getValue", "exactSimilarity", "add", "innerEntry", "getKey", "if", "exactSimilarity", "size", "Long", "maxTime", "l", "Long", "interval", "l", "int", "matchedId", "for", "Integer", "id", "exactSimilarity", "try", "interval", "Math", "abs", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "outterKey", "date", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "id", "date", "if", "interval", "maxTime", "matchedId", "id", "maxTime", "interval", "catch", "ParseException", "e", "e", "printStackTrace", "if", "isTwoInstanceMatched", "outterKey", "matchedId", "continue", "if", "Analyser", "matchedIds", "contains", "outterKey", "Analyser", "matchedIds", "contains", "matchedId", "continue", "addAllTimeInterval", "outterKey", "matchedId", "String", "resultString", "outterKey", "matchedId", "outterKey", "matchedId", "matchedId", "outterKey", "consistResult", "add", "resultString", "Analyser", "matchedIds", "add", "outterKey", "Analyser", "matchedIds", "add", "matchedId", "exactMatchedIds", "add", "outterKey", "exactMatchedIds", "add", "matchedId", "Analyser", "timeStampList", "add", "maxTime", "List", "Integer", "curList1", "idMatchedInstance", "getOrDefault", "outterKey", "new", "ArrayList", "List", "Integer", "curList2", "idMatchedInstance", "getOrDefault", "matchedId", "new", "ArrayList", "curList1", "add", "Analyser", "instanceMap", "get", "matchedId", "instanceNumber", "curList2", "add", "Analyser", "instanceMap", "get", "outterKey", "instanceNumber", "idMatchedInstance", "put", "outterKey", "curList1", "idMatchedInstance", "put", "matchedId", "curList2" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 256,
  "endLine" : 263,
  "identifiers" : [ "if", "idMatchedInstance", "getOrDefault", "instanceId1", "new", "ArrayList", "contains", "Analyser", "instanceMap", "get", "instanceId2", "instanceNumber", "return", "true", "if", "idMatchedInstance", "getOrDefault", "instanceId2", "new", "ArrayList", "contains", "Analyser", "instanceMap", "get", "instanceId1", "instanceNumber", "return", "true", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 265,
  "endLine" : 353,
  "identifiers" : [ "for", "Map", "Integer", "Map", "Integer", "Double", "result", "resultList", "for", "Map", "Entry", "Integer", "Map", "Integer", "Double", "entry", "result", "entrySet", "int", "outterKey", "entry", "getKey", "Map", "Integer", "Double", "innerMap", "entry", "getValue", "long", "outterTime", "l", "try", "outterTime", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "outterKey", "date", "catch", "ParseException", "e", "e", "printStackTrace", "Set", "Integer", "nearSimilarity", "new", "HashSet", "double", "consistSim", "for", "Map", "Entry", "Integer", "Double", "innerEntry", "innerMap", "entrySet", "if", "innerEntry", "getValue", "nearSimilarity", "add", "innerEntry", "getKey", "if", "nearSimilarity", "size", "for", "Integer", "id", "nearSimilarity", "double", "timeInterval", "double", "getTimeIntervalById", "outterKey", "id", "double", "twoYear", "if", "timeInterval", "twoYear", "continue", "long", "curTime", "l", "try", "curTime", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "id", "date", "catch", "ParseException", "e", "e", "printStackTrace", "if", "curTime", "outterTime", "continue", "consistSim", "innerMap", "get", "id", "try", "for", "Integer", "id", "nearSimilarity", "if", "consistSim", "innerMap", "get", "id", "nearSimilarity", "remove", "id", "consistSim", "catch", "Exception", "e", "System", "out", "println", "if", "consistSim", "consistSim", "for", "Integer", "id", "nearSimilarity", "double", "timeInterval", "double", "getTimeIntervalById", "outterKey", "id", "double", "twoYear", "if", "timeInterval", "twoYear", "continue", "long", "curTime", "l", "try", "curTime", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "id", "date", "catch", "ParseException", "e", "e", "printStackTrace", "if", "curTime", "outterTime", "continue", "if", "exactMatchedIds", "contains", "outterKey", "exactMatchedIds", "contains", "id", "continue", "if", "Analyser", "matchedIds", "contains", "outterKey", "Analyser", "matchedIds", "contains", "id", "continue", "String", "resultString", "outterKey", "id", "outterKey", "id", "id", "outterKey", "consistResult", "add", "resultString", "innerMap", "get", "id", "Analyser", "matchedIds", "add", "outterKey", "Analyser", "matchedIds", "add", "id", "try", "long", "consistTimeInterval", "Math", "abs", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "outterKey", "date", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "id", "date", "Analyser", "timeStampList", "add", "consistTimeInterval", "Analyser", "allTimestampList", "add", "consistTimeInterval", "catch", "ParseException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 355,
  "endLine" : 399,
  "identifiers" : [ "for", "Map", "Integer", "Map", "Integer", "Double", "result", "resultList", "for", "Map", "Entry", "Integer", "Map", "Integer", "Double", "entry", "result", "entrySet", "int", "outterKey", "entry", "getKey", "Map", "Integer", "Double", "innerMap", "entry", "getValue", "Set", "Integer", "similarity", "new", "HashSet", "for", "Map", "Entry", "Integer", "Double", "innerEntry", "innerMap", "entrySet", "Analyser", "consistResultForTest", "add", "outterKey", "innerEntry", "getKey", "innerEntry", "getValue", "if", "innerEntry", "getValue", "innerEntry", "getValue", "similarity", "add", "innerEntry", "getKey", "double", "matchSim", "if", "similarity", "size", "Long", "maxTime", "l", "Long", "interval", "l", "int", "matchedId", "for", "Integer", "id", "similarity", "try", "interval", "Math", "abs", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "outterKey", "date", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "id", "date", "if", "interval", "maxTime", "matchedId", "id", "maxTime", "interval", "matchSim", "innerMap", "get", "id", "catch", "ParseException", "e", "e", "printStackTrace", "addAllTimeInterval", "outterKey", "matchedId", "if", "Analyser", "matchedIds", "contains", "outterKey", "Analyser", "matchedIds", "contains", "matchedId", "continue", "String", "resultString", "outterKey", "matchedId", "outterKey", "matchedId", "matchedId", "outterKey", "consistResult", "add", "resultString", "matchSim", "Analyser", "matchedIds", "add", "outterKey", "Analyser", "matchedIds", "add", "matchedId", "exactMatchedIds", "add", "outterKey", "exactMatchedIds", "add", "matchedId", "Analyser", "timeStampList", "add", "maxTime" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 401,
  "endLine" : 409,
  "identifiers" : [ "Long", "timeInterval", "l", "try", "timeInterval", "Math", "abs", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "cloneId1", "date", "DateUtil", "getTimestamp", "Analyser", "instanceMap", "get", "cloneId2", "date", "catch", "ParseException", "e", "e", "printStackTrace", "return", "timeInterval" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\consistencyModify\\ConsistAnalyser.java",
  "startLine" : 411,
  "endLine" : 417,
  "identifiers" : [ "String", "clonePair", "cloneId1", "cloneId2", "cloneId1", "cloneId2", "cloneId2", "cloneId1", "if", "Analyser", "allConsistPair", "contains", "clonePair", "Analyser", "allConsistPair", "add", "clonePair", "Analyser", "allTimestampList", "add", "getTimeIntervalById", "cloneId1", "cloneId2" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\extractor\\CloneInfoExtractor.java",
  "startLine" : 18,
  "endLine" : 80,
  "identifiers" : [ "File", "outFolder", "new", "File", "outputDirPath", "if", "outFolder", "exists", "outFolder", "mkdir", "FileWriter", "fw", "new", "FileWriter", "outputDirPath", "File", "separator", "type", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "bw", "write", "bw", "newLine", "FileWriter", "fw1", "new", "FileWriter", "outputDirPath", "File", "separator", "type", "BufferedWriter", "bw1", "new", "BufferedWriter", "fw1", "bw1", "write", "bw1", "newLine", "File", "dir", "new", "File", "inputDirPath", "File", "files", "dir", "listFiles", "assert", "files", "null", "for", "File", "file", "files", "if", "file", "isFile", "String", "curGroupId", "file", "getName", "replace", "Analyser", "analyse", "file", "getPath", "type", "if", "Analyser", "insNumber", "continue", "int", "dangerDegree", "String", "info", "curGroupId", "Analyser", "insNumber", "Analyser", "fileNumber", "Analyser", "averageLine", "Analyser", "repoSet", "size", "Analyser", "distance", "Analyser", "groupModifyNum", "Analyser", "insModifyNum", "Analyser", "consistModifyNum", "Analyser", "consistRatio", "Analyser", "authorNum", "Analyser", "consistAuthorNum", "Analyser", "maxConsisTimeInterval", "Analyser", "maxConsisTimeInterval1", "Analyser", "averageConsisTimeInterval", "Analyser", "averageConsisTimeInterval1", "Analyser", "midConsisTimeInterval", "Analyser", "midConsisTimeInterval1", "Analyser", "quaterTimeInterval", "Analyser", "quaterTimeInterval1", "Analyser", "bugsCommitCount", "Analyser", "bugsConsistCommitCount", "Analyser", "cloneGroupAge", "Analyser", "latestInstanceBornTime", "Analyser", "latestModifyTime", "Analyser", "intervalMessageSimNumber", "dangerDegree", "bw", "write", "info", "System", "out", "println", "info", "bw", "newLine", "bw1", "write", "curGroupId", "Analyser", "repoNameConcatenate", "bw1", "newLine", "bw", "close", "bw1", "close" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\extractor\\CloneInfoExtractor.java",
  "startLine" : 82,
  "endLine" : 100,
  "identifiers" : [ "int", "dangerDegree", "double", "changePerInstance", "Double", "valueOf", "Analyser", "insModifyNum", "Analyser", "insNumber", "if", "changePerInstance", "Config", "CPI", "dangerDegree", "else", "if", "Analyser", "consistRatio", "Config", "lowCCP", "dangerDegree", "else", "if", "Analyser", "averageConsisTimeInterval", "Config", "lowCCD", "l", "dangerDegree", "else", "if", "Config", "lowCCD", "l", "Analyser", "averageConsisTimeInterval", "Analyser", "averageConsisTimeInterval", "Config", "highCCD", "l", "dangerDegree", "else", "if", "Analyser", "averageConsisTimeInterval", "Config", "highCCD", "l", "dangerDegree", "if", "Analyser", "bugsConsistCommitCount", "Config", "useBugInfo", "dangerDegree", "return", "dangerDegree" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\extractor\\InfoExtractor.java",
  "startLine" : 15,
  "endLine" : 191,
  "identifiers" : [ "File", "outFolder", "new", "File", "outputDirPath", "if", "outFolder", "exists", "outFolder", "mkdir", "FileWriter", "fw", "new", "FileWriter", "outputDirPath", "File", "separator", "type", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "bw", "write", "bw", "newLine", "File", "dir", "new", "File", "inputDirPath", "File", "files", "dir", "listFiles", "assert", "files", "null", "for", "File", "file", "files", "if", "file", "isFile", "String", "curGroupId", "file", "getName", "replace", "System", "out", "println", "curGroupId", "type", "List", "EvolutionMergeResult", "data", "loadData", "file", "getPath", "EvolutionMergeResult", "currentResult", "new", "EvolutionMergeResult", "if", "data", "size", "continue", "if", "type", "equals", "currentResult", "data", "get", "data", "size", "else", "if", "type", "equals", "currentResult", "data", "get", "else", "System", "out", "println", "int", "insNum", "Set", "String", "fileSet", "new", "HashSet", "List", "String", "functionSet", "new", "ArrayList", "int", "inSameGroupInstanceNumber", "for", "EvolutionMergeResult", "EvolutionRecord", "record", "currentResult", "getCodes", "if", "record", "status", "equals", "record", "status", "equals", "insNum", "fileSet", "add", "record", "realPath", "replaceAll", "String", "funcPath", "record", "realPath", "replaceAll", "File", "separator", "record", "startLine", "record", "endLine", "functionSet", "add", "funcPath", "if", "record", "groupId", "equals", "curGroupId", "inSameGroupInstanceNumber", "if", "insNum", "inSameGroupInstanceNumber", "continue", "int", "distance", "ComputeDistanceUtil", "computeDistance", "functionSet", "Set", "String", "equalMergePair", "Analyser", "analyse", "file", "getPath", "type", "int", "insModifyCount", "int", "cloneModifyCount", "int", "instanceCount", "int", "totalLineCount", "Set", "String", "authorSet", "new", "HashSet", "if", "type", "equals", "for", "int", "i", "data", "size", "i", "i", "EvolutionMergeResult", "result", "data", "get", "i", "int", "intNotNullCount", "int", "modifyThisLineCount", "for", "EvolutionMergeResult", "EvolutionRecord", "record", "result", "getCodes", "if", "record", "status", "equals", "intNotNullCount", "if", "record", "status", "equals", "modifyThisLineCount", "if", "record", "status", "equals", "record", "status", "equals", "instanceCount", "totalLineCount", "record", "endLine", "record", "startLine", "if", "intNotNullCount", "break", "insModifyCount", "modifyThisLineCount", "if", "result", "getStatus", "null", "result", "getStatus", "equals", "modifyThisLineCount", "cloneModifyCount", "authorSet", "add", "result", "getSubmitter", "else", "if", "type", "equals", "for", "int", "i", "i", "data", "size", "i", "EvolutionMergeResult", "result", "data", "get", "i", "int", "intNotNullCount", "int", "modifyThisLineCount", "for", "EvolutionMergeResult", "EvolutionRecord", "record", "result", "getCodes", "if", "record", "status", "equals", "intNotNullCount", "if", "record", "status", "equals", "modifyThisLineCount", "if", "record", "status", "equals", "record", "status", "equals", "instanceCount", "totalLineCount", "record", "endLine", "record", "startLine", "if", "intNotNullCount", "break", "insModifyCount", "modifyThisLineCount", "if", "result", "getStatus", "null", "result", "getStatus", "equals", "modifyThisLineCount", "cloneModifyCount", "authorSet", "add", "result", "getSubmitter", "else", "System", "out", "println", "Set", "String", "consistInstanceIds", "new", "HashSet", "for", "String", "line", "equalMergePair", "String", "ids", "line", "split", "consistInstanceIds", "add", "ids", "consistInstanceIds", "add", "ids", "double", "averageLine", "Double", "valueOf", "totalLineCount", "instanceCount", "double", "consistRatio", "if", "insModifyCount", "consistRatio", "Double", "valueOf", "consistInstanceIds", "size", "insModifyCount", "int", "dangerDegree", "if", "cloneModifyCount", "consistRatio", "dangerDegree", "else", "if", "consistRatio", "distance", "Analyser", "maxTimeStamp", "dangerDegree", "else", "if", "consistRatio", "distance", "Analyser", "maxTimeStamp", "dangerDegree", "else", "dangerDegree", "Collections", "sort", "Analyser", "timeStampList", "String", "info", "if", "Analyser", "timeStampList", "size", "info", "file", "getName", "replace", "insNum", "fileSet", "size", "distance", "averageLine", "consistRatio", "insModifyCount", "Analyser", "maxTimeStamp", "computeAverageTimeStamp", "Analyser", "timeStampList", "Analyser", "timeStampList", "get", "Analyser", "timeStampList", "size", "Analyser", "timeStampList", "get", "Analyser", "timeStampList", "size", "cloneModifyCount", "authorSet", "size", "Analyser", "cloneGroupAge", "Analyser", "activity", "dangerDegree", "else", "info", "file", "getName", "replace", "insNum", "fileSet", "size", "distance", "averageLine", "consistRatio", "insModifyCount", "cloneModifyCount", "authorSet", "size", "Analyser", "cloneGroupAge", "Analyser", "activity", "dangerDegree", "Analyser", "maxTimeStamp", "L", "Analyser", "activity", "Analyser", "cloneGroupAge", "l", "Analyser", "timeStampList", "clear", "System", "out", "println", "info", "bw", "write", "info", "bw", "newLine", "bw", "close" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\processor\\MainProcessor.java",
  "startLine" : 23,
  "endLine" : 41,
  "identifiers" : [ "try", "List", "EvolutionMergeResult", "data", "loadData", "file", "String", "groupName", "name", "for", "EvolutionMergeResult", "ele", "data", "System", "out", "println", "ele", "toString", "String", "commitId", "ele", "commitId", "List", "EvolutionMergeResult", "EvolutionRecord", "codes", "ele", "getCodes", "List", "InstanceInfo", "insInfoList", "new", "ArrayList", "for", "EvolutionMergeResult", "EvolutionRecord", "record", "codes", "InstanceInfo", "info", "new", "InstanceInfo", "Integer", "toString", "record", "id", "commitId", "record", "status", "insInfoList", "add", "info", "tempInfo", "add", "insInfoList", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\processor\\MainProcessor.java",
  "startLine" : 43,
  "endLine" : 57,
  "identifiers" : [ "process", "file", "groupName", "EvolutionInfo", "evolutionInfo", "new", "EvolutionInfo", "groupName", "for", "int", "i", "i", "tempInfo", "size", "i", "List", "InstanceInfo", "curInsList", "tempInfo", "get", "i", "List", "InstanceInfo", "nextInsList", "tempInfo", "get", "i", "for", "int", "j", "j", "curInsList", "size", "j", "curInsList", "get", "j", "children", "add", "nextInsList", "get", "j", "evolutionInfo", "children", "tempInfo", "get", "return", "evolutionInfo" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\Analyser.java",
  "startLine" : 34,
  "endLine" : 129,
  "identifiers" : [ "try", "List", "EvolutionMergeResult", "data", "loadData", "file", "List", "List", "EvolutionMergeResult", "EvolutionRecord", "records", "new", "ArrayList", "List", "List", "EvolutionMergeResult", "EvolutionRecord", "reversedRecords", "new", "ArrayList", "int", "size", "data", "size", "for", "int", "i", "i", "size", "i", "records", "add", "new", "ArrayList", "int", "evoRow", "for", "EvolutionMergeResult", "result", "data", "List", "EvolutionMergeResult", "EvolutionRecord", "curCodes", "result", "getCodes", "for", "int", "i", "i", "curCodes", "size", "i", "EvolutionMergeResult", "EvolutionRecord", "curRecord", "curCodes", "get", "i", "records", "get", "evoRow", "add", "curRecord", "evoRow", "if", "type", "equals", "for", "int", "k", "records", "size", "k", "k", "reversedRecords", "add", "records", "get", "k", "records", "clear", "records", "addAll", "reversedRecords", "getCloneGroupAge", "records", "activity", "getCloneGroupActivety", "records", "Set", "String", "pairs", "new", "HashSet", "int", "row", "records", "size", "int", "column", "records", "get", "size", "for", "int", "i", "i", "row", "i", "for", "int", "j", "j", "column", "j", "EvolutionMergeResult", "EvolutionRecord", "leftRecord", "records", "get", "i", "get", "j", "if", "leftRecord", "status", "equals", "continue", "for", "int", "n", "n", "column", "n", "if", "n", "j", "continue", "for", "int", "m", "i", "m", "row", "m", "List", "EvolutionMergeResult", "EvolutionRecord", "curCommitInstanceList", "records", "get", "m", "int", "curInstanceNumber", "for", "EvolutionMergeResult", "EvolutionRecord", "instance", "curCommitInstanceList", "if", "instance", "status", "equals", "type", "equals", "curInstanceNumber", "if", "instance", "status", "equals", "instance", "status", "equals", "type", "equals", "curInstanceNumber", "if", "curInstanceNumber", "continue", "EvolutionMergeResult", "EvolutionRecord", "rightRecord", "records", "get", "m", "get", "n", "if", "rightRecord", "status", "equals", "continue", "String", "pair", "judgeConsistencyModify", "leftRecord", "rightRecord", "if", "pair", "equals", "pairs", "add", "pair", "break", "return", "pairs", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "HashSet" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\Analyser.java",
  "startLine" : 131,
  "endLine" : 174,
  "identifiers" : [ "Map", "Integer", "Integer", "modifyMap", "new", "HashMap", "int", "totalModifyTimes", "for", "int", "i", "i", "records", "size", "i", "int", "year", "List", "EvolutionMergeResult", "EvolutionRecord", "curList", "records", "get", "i", "int", "insNumber", "for", "int", "j", "j", "curList", "size", "j", "EvolutionMergeResult", "EvolutionRecord", "curRe", "curList", "get", "j", "if", "curRe", "status", "equals", "curRe", "status", "equals", "year", "Integer", "parseInt", "curList", "get", "j", "date", "split", "insNumber", "if", "insNumber", "totalModifyTimes", "int", "modifyTimes", "modifyMap", "getOrDefault", "year", "modifyMap", "put", "year", "modifyTimes", "int", "bornYear", "for", "Map", "Entry", "Integer", "Integer", "entry", "modifyMap", "entrySet", "if", "entry", "getKey", "bornYear", "bornYear", "entry", "getKey", "double", "activity", "String", "strNow", "new", "SimpleDateFormat", "format", "new", "Date", "toString", "split", "Integer", "curYear", "Integer", "parseInt", "strNow", "int", "sum", "for", "int", "i", "i", "curYear", "bornYear", "i", "sum", "i", "for", "Map", "Entry", "Integer", "Integer", "entry", "modifyMap", "entrySet", "if", "entry", "getKey", "bornYear", "continue", "activity", "Double", "valueOf", "entry", "getKey", "bornYear", "sum", "Double", "valueOf", "entry", "getValue", "totalModifyTimes", "return", "activity" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\Analyser.java",
  "startLine" : 176,
  "endLine" : 200,
  "identifiers" : [ "Long", "age", "l", "String", "time", "for", "int", "i", "i", "records", "size", "i", "int", "insNumber", "List", "EvolutionMergeResult", "EvolutionRecord", "curList", "records", "get", "i", "for", "int", "j", "j", "curList", "size", "j", "EvolutionMergeResult", "EvolutionRecord", "curRe", "curList", "get", "j", "if", "curRe", "status", "equals", "curRe", "status", "equals", "insNumber", "if", "insNumber", "curRe", "date", "equals", "time", "curRe", "date", "if", "insNumber", "try", "Long", "curTime", "DateUtil", "getTimestamp", "DateUtil", "format", "new", "Date", "Long", "bornTime", "DateUtil", "getTimestamp", "time", "cloneGroupAge", "Math", "abs", "curTime", "bornTime", "catch", "ParseException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\Analyser.java",
  "startLine" : 202,
  "endLine" : 248,
  "identifiers" : [ "String", "curResult", "if", "matchedIds", "contains", "leftRecord", "id", "matchedIds", "contains", "rightRecord", "id", "return", "curResult", "String", "leftPreCode", "leftRecord", "preCode", "String", "leftCurCode", "leftRecord", "curCode", "String", "rightPreCode", "rightRecord", "preCode", "String", "rightCurCode", "rightRecord", "curCode", "LinkedList", "diff_match_patch", "Diff", "leftModifyList", "generateModifyInfo", "leftPreCode", "leftCurCode", "LinkedList", "diff_match_patch", "Diff", "rightModifyList", "generateModifyInfo", "rightPreCode", "rightCurCode", "cleanupOperation", "leftModifyList", "diff_match_patch", "Operation", "EQUAL", "cleanupOperation", "rightModifyList", "diff_match_patch", "Operation", "EQUAL", "boolean", "isEquals", "isModifyEqual", "leftModifyList", "rightModifyList", "if", "isEquals", "matchedIds", "add", "leftRecord", "id", "matchedIds", "add", "rightRecord", "id", "curResult", "leftRecord", "instanceNumber", "rightRecord", "instanceNumber", "leftRecord", "id", "rightRecord", "id", "rightRecord", "id", "leftRecord", "id", "Long", "interval", "Math", "abs", "DateUtil", "getTimestamp", "leftRecord", "date", "DateUtil", "getTimestamp", "rightRecord", "date", "timeStampList", "add", "interval", "if", "interval", "maxTimeStamp", "maxTimeStamp", "interval", "curResult", "consistencyModifyDegree", "consistencyModifyDegree", "return", "curResult" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\Analyser.java",
  "startLine" : 261,
  "endLine" : 295,
  "identifiers" : [ "int", "sizeLeft", "leftDiff", "size", "int", "sizeRight", "rightDiff", "size", "LinkedList", "diff_match_patch", "Diff", "matchedDiffList", "new", "LinkedList", "LinkedList", "diff_match_patch", "Diff", "outterDiffList", "LinkedList", "diff_match_patch", "Diff", "innerDiffList", "String", "IDENTIFIER", "if", "sizeLeft", "sizeRight", "outterDiffList", "leftDiff", "innerDiffList", "rightDiff", "else", "outterDiffList", "rightDiff", "innerDiffList", "leftDiff", "for", "int", "i", "i", "outterDiffList", "size", "i", "for", "int", "j", "j", "innerDiffList", "size", "j", "if", "outterDiffList", "get", "i", "operation", "equals", "innerDiffList", "get", "j", "operation", "String", "outterEditString", "outterDiffList", "get", "i", "text", "replaceAll", "IDENTIFIER", "String", "innerEditString", "innerDiffList", "get", "j", "text", "replaceAll", "IDENTIFIER", "outterEditString", "outterEditString", "replaceAll", "innerEditString", "innerEditString", "replaceAll", "if", "outterEditString", "replaceAll", "equals", "innerEditString", "replaceAll", "equals", "continue", "if", "MinimumEditDistanceUtil", "stringSimilarity", "outterEditString", "innerEditString", "matchedDiffList", "add", "outterDiffList", "get", "i", "consistencyModifyDegree", "double", "matchedDiffList", "size", "outterDiffList", "size", "return", "matchedDiffList", "size" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\ComputeDistanceUtil.java",
  "startLine" : 16,
  "endLine" : 41,
  "identifiers" : [ "HashMap", "String", "Integer", "fileMap", "initFileMap", "fileList", "List", "String", "noSame_fileList", "new", "ArrayList", "fileMap", "keySet", "List", "String", "fileFragList", "new", "ArrayList", "int", "size_MIN", "for", "String", "fileString", "noSame_fileList", "String", "fileFrag", "fileString", "split", "if", "fileFrag", "length", "size_MIN", "size_MIN", "fileFrag", "length", "fileFragList", "add", "fileFrag", "int", "fatherNodeIndex", "computeFatherNodeIndex", "fileFragList", "size_MIN", "int", "distance", "for", "String", "fileFrag", "fileFragList", "int", "dist", "fileFrag", "length", "fatherNodeIndex", "distance", "dist", "return", "distance" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\ComputeDistanceUtil.java",
  "startLine" : 45,
  "endLine" : 59,
  "identifiers" : [ "HashMap", "String", "Integer", "fileMap", "new", "HashMap", "for", "String", "fileString", "fileList", "int", "index", "fileString", "lastIndexOf", "if", "index", "index", "fileString", "fileString", "substring", "index", "if", "fileMap", "containsKey", "fileString", "fileMap", "put", "fileString", "fileMap", "get", "fileString", "else", "fileMap", "put", "fileString", "return", "fileMap" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\ComputeDistanceUtil.java",
  "startLine" : 62,
  "endLine" : 76,
  "identifiers" : [ "int", "fatherNodeIndex", "for", "int", "i", "i", "size_MIN", "i", "String", "temp", "fileFragList", "get", "i", "for", "int", "j", "j", "fileFragList", "size", "j", "if", "fileFragList", "get", "j", "i", "equals", "temp", "return", "fatherNodeIndex", "fatherNodeIndex", "i", "return", "fatherNodeIndex" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\ComputeDistanceUtil.java",
  "startLine" : 81,
  "endLine" : 101,
  "identifiers" : [ "List", "String", "fileList", "new", "ArrayList", "fileList", "add", "fileList", "add", "fileList", "add", "fileList", "add", "fileList", "add", "fileList", "add", "List", "String", "fileList2", "new", "ArrayList", "fileList2", "add", "fileList2", "add", "System", "out", "println", "ComputeDistanceUtil", "computeDistance", "fileList2" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 42,
  "endLine" : 145,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "State", "state", "State", "CODE", "for", "int", "i", "i", "strToHandle", "length", "i", "char", "c", "strToHandle", "charAt", "i", "switch", "state", "case", "CODE", "if", "c", "state", "State", "SLASH", "else", "builder", "append", "c", "if", "c", "state", "State", "CODE_CHAR", "else", "if", "c", "r", "n", "r", "n", "r", "n", "state", "State", "CODE", "else", "state", "State", "CODE_STRING", "break", "case", "STRING_ESCAPE_SEQUENCE", "builder", "append", "c", "state", "State", "CODE_STRING", "break", "default", "break", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 153,
  "endLine" : 173,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "try", "FileInputStream", "fis", "new", "FileInputStream", "inputFileName", "InputStreamReader", "dis", "new", "InputStreamReader", "fis", "BufferedReader", "reader", "new", "BufferedReader", "dis", "String", "s", "while", "s", "reader", "readLine", "null", "builder", "append", "s", "builder", "append", "reader", "close", "dis", "close", "fis", "close", "catch", "IOException", "e", "e", "printStackTrace", "System", "exit", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 180,
  "endLine" : 193,
  "identifiers" : [ "try", "FileOutputStream", "fos", "new", "FileOutputStream", "outputFileName", "OutputStreamWriter", "dos", "new", "OutputStreamWriter", "fos", "BufferedWriter", "writer", "new", "BufferedWriter", "dos", "writer", "write", "strHandled", "writer", "close", "dos", "close", "fos", "close", "System", "out", "println", "outputFileName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 199,
  "endLine" : 212,
  "identifiers" : [ "Scanner", "in", "new", "Scanner", "System", "in", "System", "out", "println", "String", "inputFileName", "in", "nextLine", "System", "out", "println", "String", "outputFileName", "in", "nextLine", "String", "strToHandle", "readFile", "inputFileName", "String", "strHandled", "delete_C_Cplusplus_Java_Note", "strToHandle", "writeFile", "outputFileName", "strHandled" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 158,
  "endLine" : 199,
  "identifiers" : [ "if", "text1", "null", "text2", "null", "throw", "new", "IllegalArgumentException", "LinkedList", "Diff", "diffs", "if", "text1", "equals", "text2", "diffs", "new", "LinkedList", "Diff", "if", "text1", "length", "diffs", "add", "new", "Diff", "Operation", "EQUAL", "text1", "return", "diffs", "int", "commonlength", "diff_commonPrefix", "text1", "text2", "String", "commonprefix", "text1", "substring", "commonlength", "text1", "text1", "substring", "commonlength", "text2", "text2", "substring", "commonlength", "commonlength", "diff_commonSuffix", "text1", "text2", "String", "commonsuffix", "text1", "substring", "text1", "length", "commonlength", "text1", "text1", "substring", "text1", "length", "commonlength", "text2", "text2", "substring", "text2", "length", "commonlength", "diffs", "diff_compute", "text1", "text2", "checklines", "deadline", "if", "commonprefix", "length", "diffs", "addFirst", "new", "Diff", "Operation", "EQUAL", "commonprefix", "if", "commonsuffix", "length", "diffs", "addLast", "new", "Diff", "Operation", "EQUAL", "commonsuffix", "diff_cleanupMerge", "diffs", "return", "diffs" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 213,
  "endLine" : 275,
  "identifiers" : [ "LinkedList", "Diff", "diffs", "new", "LinkedList", "Diff", "if", "text1", "length", "diffs", "add", "new", "Diff", "Operation", "INSERT", "text2", "return", "diffs", "if", "text2", "length", "diffs", "add", "new", "Diff", "Operation", "DELETE", "text1", "return", "diffs", "String", "longtext", "text1", "length", "text2", "length", "text1", "text2", "String", "shorttext", "text1", "length", "text2", "length", "text2", "text1", "int", "i", "longtext", "indexOf", "shorttext", "if", "i", "Operation", "op", "text1", "length", "text2", "length", "Operation", "DELETE", "Operation", "INSERT", "diffs", "add", "new", "Diff", "op", "longtext", "substring", "i", "diffs", "add", "new", "Diff", "Operation", "EQUAL", "shorttext", "diffs", "add", "new", "Diff", "op", "longtext", "substring", "i", "shorttext", "length", "return", "diffs", "if", "shorttext", "length", "diffs", "add", "new", "Diff", "Operation", "DELETE", "text1", "diffs", "add", "new", "Diff", "Operation", "INSERT", "text2", "return", "diffs", "String", "hm", "diff_halfMatch", "text1", "text2", "if", "hm", "null", "String", "text1_a", "hm", "String", "text1_b", "hm", "String", "text2_a", "hm", "String", "text2_b", "hm", "String", "mid_common", "hm", "LinkedList", "Diff", "diffs_a", "diff_main", "text1_a", "text2_a", "checklines", "deadline", "LinkedList", "Diff", "diffs_b", "diff_main", "text1_b", "text2_b", "checklines", "deadline", "diffs", "diffs_a", "diffs", "add", "new", "Diff", "Operation", "EQUAL", "mid_common", "diffs", "addAll", "diffs_b", "return", "diffs", "if", "checklines", "text1", "length", "text2", "length", "return", "diff_lineMode", "text1", "text2", "deadline", "return", "diff_bisect", "text1", "text2", "deadline" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 287,
  "endLine" : 345,
  "identifiers" : [ "LinesToCharsResult", "a", "diff_linesToChars", "text1", "text2", "text1", "a", "chars1", "text2", "a", "chars2", "List", "String", "linearray", "a", "lineArray", "LinkedList", "Diff", "diffs", "diff_main", "text1", "text2", "false", "deadline", "diff_charsToLines", "diffs", "linearray", "diff_cleanupSemantic", "diffs", "diffs", "add", "new", "Diff", "Operation", "EQUAL", "int", "count_delete", "int", "count_insert", "String", "text_delete", "String", "text_insert", "ListIterator", "Diff", "pointer", "diffs", "listIterator", "Diff", "thisDiff", "pointer", "next", "while", "thisDiff", "null", "switch", "thisDiff", "operation", "case", "INSERT", "count_insert", "text_insert", "thisDiff", "text", "break", "case", "DELETE", "count_delete", "text_delete", "thisDiff", "text", "break", "case", "EQUAL", "if", "count_delete", "count_insert", "pointer", "previous", "for", "int", "j", "j", "count_delete", "count_insert", "j", "pointer", "previous", "pointer", "remove", "for", "Diff", "subDiff", "diff_main", "text_delete", "text_insert", "false", "deadline", "pointer", "add", "subDiff", "count_insert", "count_delete", "text_delete", "text_insert", "break", "thisDiff", "pointer", "hasNext", "pointer", "next", "null", "diffs", "removeLast", "return", "diffs" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 357,
  "endLine" : 467,
  "identifiers" : [ "int", "text1_length", "text1", "length", "int", "text2_length", "text2", "length", "int", "max_d", "text1_length", "text2_length", "int", "v_offset", "max_d", "int", "v_length", "max_d", "int", "v1", "new", "int", "v_length", "int", "v2", "new", "int", "v_length", "for", "int", "x", "x", "v_length", "x", "v1", "x", "v2", "x", "v1", "v_offset", "v2", "v_offset", "int", "delta", "text1_length", "text2_length", "boolean", "front", "delta", "int", "k1start", "int", "k1end", "int", "k2start", "int", "k2end", "for", "int", "d", "d", "max_d", "d", "if", "System", "currentTimeMillis", "deadline", "break", "for", "int", "k1", "d", "k1start", "k1", "d", "k1end", "k1", "int", "k1_offset", "v_offset", "k1", "int", "x1", "if", "k1", "d", "k1", "d", "v1", "k1_offset", "v1", "k1_offset", "x1", "v1", "k1_offset", "else", "x1", "v1", "k1_offset", "int", "y1", "x1", "k1", "while", "x1", "text1_length", "y1", "text2_length", "text1", "charAt", "x1", "text2", "charAt", "y1", "x1", "y1", "v1", "k1_offset", "x1", "if", "x1", "text1_length", "k1end", "else", "if", "y1", "text2_length", "k1start", "else", "if", "front", "int", "k2_offset", "v_offset", "delta", "k1", "if", "k2_offset", "k2_offset", "v_length", "v2", "k2_offset", "int", "x2", "text1_length", "v2", "k2_offset", "if", "x1", "x2", "return", "diff_bisectSplit", "text1", "text2", "x1", "y1", "deadline", "for", "int", "k2", "d", "k2start", "k2", "d", "k2end", "k2", "int", "k2_offset", "v_offset", "k2", "int", "x2", "if", "k2", "d", "k2", "d", "v2", "k2_offset", "v2", "k2_offset", "x2", "v2", "k2_offset", "else", "x2", "v2", "k2_offset", "int", "y2", "x2", "k2", "while", "x2", "text1_length", "y2", "text2_length", "text1", "charAt", "text1_length", "x2", "text2", "charAt", "text2_length", "y2", "x2", "y2", "v2", "k2_offset", "x2", "if", "x2", "text1_length", "k2end", "else", "if", "y2", "text2_length", "k2start", "else", "if", "front", "int", "k1_offset", "v_offset", "delta", "k2", "if", "k1_offset", "k1_offset", "v_length", "v1", "k1_offset", "int", "x1", "v1", "k1_offset", "int", "y1", "v_offset", "x1", "k1_offset", "x2", "text1_length", "x2", "if", "x1", "x2", "return", "diff_bisectSplit", "text1", "text2", "x1", "y1", "deadline", "LinkedList", "Diff", "diffs", "new", "LinkedList", "Diff", "diffs", "add", "new", "Diff", "Operation", "DELETE", "text1", "diffs", "add", "new", "Diff", "Operation", "INSERT", "text2", "return", "diffs" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 480,
  "endLine" : 492,
  "identifiers" : [ "String", "text1a", "text1", "substring", "x", "String", "text2a", "text2", "substring", "y", "String", "text1b", "text1", "substring", "x", "String", "text2b", "text2", "substring", "y", "LinkedList", "Diff", "diffs", "diff_main", "text1a", "text2a", "false", "deadline", "LinkedList", "Diff", "diffsb", "diff_main", "text1b", "text2b", "false", "deadline", "diffs", "addAll", "diffsb", "return", "diffs" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 503,
  "endLine" : 517,
  "identifiers" : [ "List", "String", "lineArray", "new", "ArrayList", "String", "Map", "String", "Integer", "lineHash", "new", "HashMap", "String", "Integer", "lineArray", "add", "String", "chars1", "diff_linesToCharsMunge", "text1", "lineArray", "lineHash", "String", "chars2", "diff_linesToCharsMunge", "text2", "lineArray", "lineHash", "return", "new", "LinesToCharsResult", "chars1", "chars2", "lineArray" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 529,
  "endLine" : 560,
  "identifiers" : [ "int", "lineStart", "int", "lineEnd", "String", "line", "StringBuilder", "chars", "new", "StringBuilder", "while", "lineEnd", "text", "length", "lineEnd", "text", "indexOf", "n", "lineStart", "if", "lineEnd", "lineEnd", "text", "length", "line", "text", "substring", "lineStart", "lineEnd", "if", "lineHash", "containsKey", "line", "chars", "append", "String", "valueOf", "char", "int", "lineHash", "get", "line", "else", "if", "lineArray", "size", "maxLines", "line", "text", "substring", "lineStart", "lineEnd", "text", "length", "lineArray", "add", "line", "lineHash", "put", "line", "lineArray", "size", "chars", "append", "String", "valueOf", "char", "lineArray", "size", "lineStart", "lineEnd", "return", "chars", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 569,
  "endLine" : 578,
  "identifiers" : [ "StringBuilder", "text", "for", "Diff", "diff", "diffs", "text", "new", "StringBuilder", "for", "int", "j", "j", "diff", "text", "length", "j", "text", "append", "lineArray", "get", "diff", "text", "charAt", "j", "diff", "text", "text", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 586,
  "endLine" : 595,
  "identifiers" : [ "int", "n", "Math", "min", "text1", "length", "text2", "length", "for", "int", "i", "i", "n", "i", "if", "text1", "charAt", "i", "text2", "charAt", "i", "return", "i", "return", "n" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 603,
  "endLine" : 614,
  "identifiers" : [ "int", "text1_length", "text1", "length", "int", "text2_length", "text2", "length", "int", "n", "Math", "min", "text1_length", "text2_length", "for", "int", "i", "i", "n", "i", "if", "text1", "charAt", "text1_length", "i", "text2", "charAt", "text2_length", "i", "return", "i", "return", "n" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 623,
  "endLine" : 661,
  "identifiers" : [ "int", "text1_length", "text1", "length", "int", "text2_length", "text2", "length", "if", "text1_length", "text2_length", "return", "if", "text1_length", "text2_length", "text1", "text1", "substring", "text1_length", "text2_length", "else", "if", "text1_length", "text2_length", "text2", "text2", "substring", "text1_length", "int", "text_length", "Math", "min", "text1_length", "text2_length", "if", "text1", "equals", "text2", "return", "text_length", "int", "best", "int", "length", "while", "true", "String", "pattern", "text1", "substring", "text_length", "length", "int", "found", "text2", "indexOf", "pattern", "if", "found", "return", "best", "length", "found", "if", "found", "text1", "substring", "text_length", "length", "equals", "text2", "substring", "length", "best", "length", "length" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 673,
  "endLine" : 709,
  "identifiers" : [ "if", "Diff_Timeout", "return", "null", "String", "longtext", "text1", "length", "text2", "length", "text1", "text2", "String", "shorttext", "text1", "length", "text2", "length", "text2", "text1", "if", "longtext", "length", "shorttext", "length", "longtext", "length", "return", "null", "String", "hm1", "diff_halfMatchI", "longtext", "shorttext", "longtext", "length", "String", "hm2", "diff_halfMatchI", "longtext", "shorttext", "longtext", "length", "String", "hm", "if", "hm1", "null", "hm2", "null", "return", "null", "else", "if", "hm2", "null", "hm", "hm1", "else", "if", "hm1", "null", "hm", "hm2", "else", "hm", "hm1", "length", "hm2", "length", "hm1", "hm2", "if", "text1", "length", "text2", "length", "return", "hm", "else", "return", "new", "String", "hm", "hm", "hm", "hm", "hm" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 721,
  "endLine" : 748,
  "identifiers" : [ "String", "seed", "longtext", "substring", "i", "i", "longtext", "length", "int", "j", "String", "best_common", "String", "best_longtext_a", "best_longtext_b", "String", "best_shorttext_a", "best_shorttext_b", "while", "j", "shorttext", "indexOf", "seed", "j", "int", "prefixLength", "diff_commonPrefix", "longtext", "substring", "i", "shorttext", "substring", "j", "int", "suffixLength", "diff_commonSuffix", "longtext", "substring", "i", "shorttext", "substring", "j", "if", "best_common", "length", "suffixLength", "prefixLength", "best_common", "shorttext", "substring", "j", "suffixLength", "j", "shorttext", "substring", "j", "j", "prefixLength", "best_longtext_a", "longtext", "substring", "i", "suffixLength", "best_longtext_b", "longtext", "substring", "i", "prefixLength", "best_shorttext_a", "shorttext", "substring", "j", "suffixLength", "best_shorttext_b", "shorttext", "substring", "j", "prefixLength", "if", "best_common", "length", "longtext", "length", "return", "new", "String", "best_longtext_a", "best_longtext_b", "best_shorttext_a", "best_shorttext_b", "best_common", "else", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 754,
  "endLine" : 895,
  "identifiers" : [ "if", "diffs", "isEmpty", "return", "boolean", "changes", "false", "Deque", "Diff", "equalities", "new", "ArrayDeque", "Diff", "String", "lastEquality", "null", "ListIterator", "Diff", "pointer", "diffs", "listIterator", "int", "length_insertions1", "int", "length_deletions1", "int", "length_insertions2", "int", "length_deletions2", "Diff", "thisDiff", "pointer", "next", "while", "thisDiff", "null", "if", "thisDiff", "operation", "Operation", "EQUAL", "equalities", "push", "thisDiff", "length_insertions1", "length_insertions2", "length_deletions1", "length_deletions2", "length_insertions2", "length_deletions2", "lastEquality", "thisDiff", "text", "else", "if", "thisDiff", "operation", "Operation", "INSERT", "length_insertions2", "thisDiff", "text", "length", "else", "length_deletions2", "thisDiff", "text", "length", "if", "lastEquality", "null", "lastEquality", "length", "Math", "max", "length_insertions1", "length_deletions1", "lastEquality", "length", "Math", "max", "length_insertions2", "length_deletions2", "while", "thisDiff", "equalities", "peek", "thisDiff", "pointer", "previous", "pointer", "next", "pointer", "set", "new", "Diff", "Operation", "DELETE", "lastEquality", "pointer", "add", "new", "Diff", "Operation", "INSERT", "lastEquality", "equalities", "pop", "if", "equalities", "isEmpty", "equalities", "pop", "if", "equalities", "isEmpty", "while", "pointer", "hasPrevious", "pointer", "previous", "else", "thisDiff", "equalities", "peek", "while", "thisDiff", "pointer", "previous", "length_insertions1", "length_insertions2", "length_deletions1", "length_deletions2", "lastEquality", "null", "changes", "true", "thisDiff", "pointer", "hasNext", "pointer", "next", "null", "if", "changes", "diff_cleanupMerge", "diffs", "diff_cleanupSemanticLossless", "diffs", "pointer", "diffs", "listIterator", "Diff", "prevDiff", "null", "thisDiff", "null", "if", "pointer", "hasNext", "prevDiff", "pointer", "next", "if", "pointer", "hasNext", "thisDiff", "pointer", "next", "while", "thisDiff", "null", "if", "prevDiff", "operation", "Operation", "DELETE", "thisDiff", "operation", "Operation", "INSERT", "String", "deletion", "prevDiff", "text", "String", "insertion", "thisDiff", "text", "int", "overlap_length1", "this", "diff_commonOverlap", "deletion", "insertion", "int", "overlap_length2", "this", "diff_commonOverlap", "insertion", "deletion", "if", "overlap_length1", "overlap_length2", "if", "overlap_length1", "deletion", "length", "overlap_length1", "insertion", "length", "pointer", "previous", "pointer", "add", "new", "Diff", "Operation", "EQUAL", "insertion", "substring", "overlap_length1", "prevDiff", "text", "deletion", "substring", "deletion", "length", "overlap_length1", "thisDiff", "text", "insertion", "substring", "overlap_length1", "else", "if", "overlap_length2", "deletion", "length", "overlap_length2", "insertion", "length", "pointer", "previous", "pointer", "add", "new", "Diff", "Operation", "EQUAL", "deletion", "substring", "overlap_length2", "prevDiff", "operation", "Operation", "INSERT", "prevDiff", "text", "insertion", "substring", "insertion", "length", "overlap_length2", "thisDiff", "operation", "Operation", "DELETE", "thisDiff", "text", "deletion", "substring", "overlap_length2", "thisDiff", "pointer", "hasNext", "pointer", "next", "null", "prevDiff", "thisDiff", "thisDiff", "pointer", "hasNext", "pointer", "next", "null" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 903,
  "endLine" : 980,
  "identifiers" : [ "String", "equality1", "edit", "equality2", "String", "commonString", "int", "commonOffset", "int", "score", "bestScore", "String", "bestEquality1", "bestEdit", "bestEquality2", "ListIterator", "Diff", "pointer", "diffs", "listIterator", "Diff", "prevDiff", "pointer", "hasNext", "pointer", "next", "null", "Diff", "thisDiff", "pointer", "hasNext", "pointer", "next", "null", "Diff", "nextDiff", "pointer", "hasNext", "pointer", "next", "null", "while", "nextDiff", "null", "if", "prevDiff", "operation", "Operation", "EQUAL", "nextDiff", "operation", "Operation", "EQUAL", "equality1", "prevDiff", "text", "edit", "thisDiff", "text", "equality2", "nextDiff", "text", "commonOffset", "diff_commonSuffix", "equality1", "edit", "if", "commonOffset", "commonString", "edit", "substring", "edit", "length", "commonOffset", "equality1", "equality1", "substring", "equality1", "length", "commonOffset", "edit", "commonString", "edit", "substring", "edit", "length", "commonOffset", "equality2", "commonString", "equality2", "bestEquality1", "equality1", "bestEdit", "edit", "bestEquality2", "equality2", "bestScore", "diff_cleanupSemanticScore", "equality1", "edit", "diff_cleanupSemanticScore", "edit", "equality2", "while", "edit", "length", "equality2", "length", "edit", "charAt", "equality2", "charAt", "equality1", "edit", "charAt", "edit", "edit", "substring", "equality2", "charAt", "equality2", "equality2", "substring", "score", "diff_cleanupSemanticScore", "equality1", "edit", "diff_cleanupSemanticScore", "edit", "equality2", "if", "score", "bestScore", "bestScore", "score", "bestEquality1", "equality1", "bestEdit", "edit", "bestEquality2", "equality2", "if", "prevDiff", "text", "equals", "bestEquality1", "if", "bestEquality1", "length", "prevDiff", "text", "bestEquality1", "else", "pointer", "previous", "pointer", "previous", "pointer", "previous", "pointer", "remove", "pointer", "next", "pointer", "next", "thisDiff", "text", "bestEdit", "if", "bestEquality2", "length", "nextDiff", "text", "bestEquality2", "else", "pointer", "remove", "nextDiff", "thisDiff", "thisDiff", "prevDiff", "prevDiff", "thisDiff", "thisDiff", "nextDiff", "nextDiff", "pointer", "hasNext", "pointer", "next", "null" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 990,
  "endLine" : 1031,
  "identifiers" : [ "if", "one", "length", "two", "length", "return", "char", "char1", "one", "charAt", "one", "length", "char", "char2", "two", "charAt", "boolean", "nonAlphaNumeric1", "Character", "isLetterOrDigit", "char1", "boolean", "nonAlphaNumeric2", "Character", "isLetterOrDigit", "char2", "boolean", "whitespace1", "nonAlphaNumeric1", "Character", "isWhitespace", "char1", "boolean", "whitespace2", "nonAlphaNumeric2", "Character", "isWhitespace", "char2", "boolean", "lineBreak1", "whitespace1", "Character", "getType", "char1", "Character", "CONTROL", "boolean", "lineBreak2", "whitespace2", "Character", "getType", "char2", "Character", "CONTROL", "boolean", "blankLine1", "lineBreak1", "BLANKLINEEND", "matcher", "one", "find", "boolean", "blankLine2", "lineBreak2", "BLANKLINESTART", "matcher", "two", "find", "if", "blankLine1", "blankLine2", "return", "else", "if", "lineBreak1", "lineBreak2", "return", "else", "if", "nonAlphaNumeric1", "whitespace1", "whitespace2", "return", "else", "if", "whitespace1", "whitespace2", "return", "else", "if", "nonAlphaNumeric1", "nonAlphaNumeric2", "return", "return" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 1043,
  "endLine" : 1144,
  "identifiers" : [ "if", "diffs", "isEmpty", "return", "boolean", "changes", "false", "Deque", "Diff", "equalities", "new", "ArrayDeque", "Diff", "String", "lastEquality", "null", "ListIterator", "Diff", "pointer", "diffs", "listIterator", "boolean", "pre_ins", "false", "boolean", "pre_del", "false", "boolean", "post_ins", "false", "boolean", "post_del", "false", "Diff", "thisDiff", "pointer", "next", "Diff", "safeDiff", "thisDiff", "while", "thisDiff", "null", "if", "thisDiff", "operation", "Operation", "EQUAL", "if", "thisDiff", "text", "length", "Diff_EditCost", "post_ins", "post_del", "equalities", "push", "thisDiff", "pre_ins", "post_ins", "pre_del", "post_del", "lastEquality", "thisDiff", "text", "else", "equalities", "clear", "lastEquality", "null", "safeDiff", "thisDiff", "post_ins", "post_del", "false", "else", "if", "thisDiff", "operation", "Operation", "DELETE", "post_del", "true", "else", "post_ins", "true", "if", "lastEquality", "null", "pre_ins", "pre_del", "post_ins", "post_del", "lastEquality", "length", "Diff_EditCost", "pre_ins", "pre_del", "post_ins", "post_del", "while", "thisDiff", "equalities", "peek", "thisDiff", "pointer", "previous", "pointer", "next", "pointer", "set", "new", "Diff", "Operation", "DELETE", "lastEquality", "pointer", "add", "thisDiff", "new", "Diff", "Operation", "INSERT", "lastEquality", "equalities", "pop", "lastEquality", "null", "if", "pre_ins", "pre_del", "post_ins", "post_del", "true", "equalities", "clear", "safeDiff", "thisDiff", "else", "if", "equalities", "isEmpty", "equalities", "pop", "if", "equalities", "isEmpty", "thisDiff", "safeDiff", "else", "thisDiff", "equalities", "peek", "while", "thisDiff", "pointer", "previous", "post_ins", "post_del", "false", "changes", "true", "thisDiff", "pointer", "hasNext", "pointer", "next", "null", "if", "changes", "diff_cleanupMerge", "diffs" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 1151,
  "endLine" : 1294,
  "identifiers" : [ "diffs", "add", "new", "Diff", "Operation", "EQUAL", "ListIterator", "Diff", "pointer", "diffs", "listIterator", "int", "count_delete", "int", "count_insert", "String", "text_delete", "String", "text_insert", "Diff", "thisDiff", "pointer", "next", "Diff", "prevEqual", "null", "int", "commonlength", "while", "thisDiff", "null", "switch", "thisDiff", "operation", "case", "INSERT", "count_insert", "text_insert", "thisDiff", "text", "prevEqual", "null", "break", "case", "DELETE", "count_delete", "text_delete", "thisDiff", "text", "prevEqual", "null", "break", "case", "EQUAL", "if", "count_delete", "count_insert", "boolean", "both_types", "count_delete", "count_insert", "pointer", "previous", "while", "count_delete", "pointer", "previous", "pointer", "remove", "while", "count_insert", "pointer", "previous", "pointer", "remove", "if", "both_types", "commonlength", "diff_commonPrefix", "text_insert", "text_delete", "if", "commonlength", "if", "pointer", "hasPrevious", "thisDiff", "pointer", "previous", "assert", "thisDiff", "operation", "Operation", "EQUAL", "thisDiff", "text", "text_insert", "substring", "commonlength", "pointer", "next", "else", "pointer", "add", "new", "Diff", "Operation", "EQUAL", "text_insert", "substring", "commonlength", "text_insert", "text_insert", "substring", "commonlength", "text_delete", "text_delete", "substring", "commonlength", "commonlength", "diff_commonSuffix", "text_insert", "text_delete", "if", "commonlength", "thisDiff", "pointer", "next", "thisDiff", "text", "text_insert", "substring", "text_insert", "length", "commonlength", "thisDiff", "text", "text_insert", "text_insert", "substring", "text_insert", "length", "commonlength", "text_delete", "text_delete", "substring", "text_delete", "length", "commonlength", "pointer", "previous", "if", "text_delete", "length", "pointer", "add", "new", "Diff", "Operation", "DELETE", "text_delete", "if", "text_insert", "length", "pointer", "add", "new", "Diff", "Operation", "INSERT", "text_insert", "thisDiff", "pointer", "hasNext", "pointer", "next", "null", "else", "if", "prevEqual", "null", "prevEqual", "text", "thisDiff", "text", "pointer", "remove", "thisDiff", "pointer", "previous", "pointer", "next", "count_insert", "count_delete", "text_delete", "text_insert", "prevEqual", "thisDiff", "break", "thisDiff", "pointer", "hasNext", "pointer", "next", "null", "if", "diffs", "getLast", "text", "length", "diffs", "removeLast", "boolean", "changes", "false", "pointer", "diffs", "listIterator", "Diff", "prevDiff", "pointer", "hasNext", "pointer", "next", "null", "thisDiff", "pointer", "hasNext", "pointer", "next", "null", "Diff", "nextDiff", "pointer", "hasNext", "pointer", "next", "null", "while", "nextDiff", "null", "if", "prevDiff", "operation", "Operation", "EQUAL", "nextDiff", "operation", "Operation", "EQUAL", "if", "thisDiff", "text", "endsWith", "prevDiff", "text", "thisDiff", "text", "prevDiff", "text", "thisDiff", "text", "substring", "thisDiff", "text", "length", "prevDiff", "text", "length", "nextDiff", "text", "prevDiff", "text", "nextDiff", "text", "pointer", "previous", "pointer", "previous", "pointer", "previous", "pointer", "remove", "pointer", "next", "thisDiff", "pointer", "next", "nextDiff", "pointer", "hasNext", "pointer", "next", "null", "changes", "true", "else", "if", "thisDiff", "text", "startsWith", "nextDiff", "text", "prevDiff", "text", "nextDiff", "text", "thisDiff", "text", "thisDiff", "text", "substring", "nextDiff", "text", "length", "nextDiff", "text", "pointer", "remove", "nextDiff", "pointer", "hasNext", "pointer", "next", "null", "changes", "true", "prevDiff", "thisDiff", "thisDiff", "nextDiff", "nextDiff", "pointer", "hasNext", "pointer", "next", "null", "if", "changes", "diff_cleanupMerge", "diffs" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 1304,
  "endLine" : 1333,
  "identifiers" : [ "int", "chars1", "int", "chars2", "int", "last_chars1", "int", "last_chars2", "Diff", "lastDiff", "null", "for", "Diff", "aDiff", "diffs", "if", "aDiff", "operation", "Operation", "INSERT", "chars1", "aDiff", "text", "length", "if", "aDiff", "operation", "Operation", "DELETE", "chars2", "aDiff", "text", "length", "if", "chars1", "loc", "lastDiff", "aDiff", "break", "last_chars1", "chars1", "last_chars2", "chars2", "if", "lastDiff", "null", "lastDiff", "operation", "Operation", "DELETE", "return", "last_chars2", "return", "last_chars2", "loc", "last_chars1" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 1340,
  "endLine" : 1360,
  "identifiers" : [ "StringBuilder", "html", "new", "StringBuilder", "for", "Diff", "aDiff", "diffs", "String", "text", "aDiff", "text", "replace", "replace", "replace", "replace", "switch", "aDiff", "operation", "case", "INSERT", "html", "append", "background", "e6ffe6", "append", "text", "append", "break", "case", "DELETE", "html", "append", "background", "ffe6e6", "append", "text", "append", "break", "case", "EQUAL", "html", "append", "append", "text", "append", "break", "return", "html", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 1398,
  "endLine" : 1420,
  "identifiers" : [ "int", "levenshtein", "int", "insertions", "int", "deletions", "for", "Diff", "aDiff", "diffs", "switch", "aDiff", "operation", "case", "INSERT", "insertions", "aDiff", "text", "length", "break", "case", "DELETE", "deletions", "aDiff", "text", "length", "break", "case", "EQUAL", "levenshtein", "Math", "max", "insertions", "deletions", "insertions", "deletions", "break", "levenshtein", "Math", "max", "insertions", "deletions", "return", "levenshtein" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 1430,
  "endLine" : 1458,
  "identifiers" : [ "StringBuilder", "text", "new", "StringBuilder", "for", "Diff", "aDiff", "diffs", "switch", "aDiff", "operation", "case", "INSERT", "try", "text", "append", "append", "URLEncoder", "encode", "aDiff", "text", "replace", "append", "catch", "UnsupportedEncodingException", "e", "throw", "new", "Error", "e", "break", "case", "DELETE", "text", "append", "append", "aDiff", "text", "length", "append", "break", "case", "EQUAL", "text", "append", "append", "aDiff", "text", "length", "append", "break", "String", "delta", "text", "toString", "if", "delta", "length", "delta", "delta", "substring", "delta", "length", "delta", "unescapeForEncodeUriCompatability", "delta", "return", "delta" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 1469,
  "endLine" : 1536,
  "identifiers" : [ "LinkedList", "Diff", "diffs", "new", "LinkedList", "Diff", "int", "pointer", "String", "tokens", "delta", "split", "for", "String", "token", "tokens", "if", "token", "length", "continue", "String", "param", "token", "substring", "switch", "token", "charAt", "case", "param", "param", "replace", "try", "param", "URLDecoder", "decode", "param", "catch", "UnsupportedEncodingException", "e", "throw", "new", "Error", "e", "catch", "IllegalArgumentException", "e", "throw", "new", "IllegalArgumentException", "param", "e", "diffs", "add", "new", "Diff", "Operation", "INSERT", "param", "break", "case", "case", "int", "n", "try", "n", "Integer", "parseInt", "param", "catch", "NumberFormatException", "e", "throw", "new", "IllegalArgumentException", "param", "e", "if", "n", "throw", "new", "IllegalArgumentException", "param", "String", "text", "try", "text", "text1", "substring", "pointer", "pointer", "n", "catch", "StringIndexOutOfBoundsException", "e", "throw", "new", "IllegalArgumentException", "pointer", "text1", "length", "e", "if", "token", "charAt", "diffs", "add", "new", "Diff", "Operation", "EQUAL", "text", "else", "diffs", "add", "new", "Diff", "Operation", "DELETE", "text", "break", "default", "throw", "new", "IllegalArgumentException", "token", "charAt", "if", "pointer", "text1", "length", "throw", "new", "IllegalArgumentException", "pointer", "text1", "length", "return", "diffs" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 1550,
  "endLine" : 1571,
  "identifiers" : [ "if", "text", "null", "pattern", "null", "throw", "new", "IllegalArgumentException", "loc", "Math", "max", "Math", "min", "loc", "text", "length", "if", "text", "equals", "pattern", "return", "else", "if", "text", "length", "return", "else", "if", "loc", "pattern", "length", "text", "length", "text", "substring", "loc", "loc", "pattern", "length", "equals", "pattern", "return", "loc", "else", "return", "match_bitap", "text", "pattern", "loc" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 1581,
  "endLine" : 1674,
  "identifiers" : [ "assert", "Match_MaxBits", "pattern", "length", "Match_MaxBits", "Map", "Character", "Integer", "s", "match_alphabet", "pattern", "double", "score_threshold", "Match_Threshold", "int", "best_loc", "text", "indexOf", "pattern", "loc", "if", "best_loc", "score_threshold", "Math", "min", "match_bitapScore", "best_loc", "loc", "pattern", "score_threshold", "best_loc", "text", "lastIndexOf", "pattern", "loc", "pattern", "length", "if", "best_loc", "score_threshold", "Math", "min", "match_bitapScore", "best_loc", "loc", "pattern", "score_threshold", "int", "matchmask", "pattern", "length", "best_loc", "int", "bin_min", "bin_mid", "int", "bin_max", "pattern", "length", "text", "length", "int", "last_rd", "new", "int", "for", "int", "d", "d", "pattern", "length", "d", "bin_min", "bin_mid", "bin_max", "while", "bin_min", "bin_mid", "if", "match_bitapScore", "d", "loc", "bin_mid", "loc", "pattern", "score_threshold", "bin_min", "bin_mid", "else", "bin_max", "bin_mid", "bin_mid", "bin_max", "bin_min", "bin_min", "bin_max", "bin_mid", "int", "start", "Math", "max", "loc", "bin_mid", "int", "finish", "Math", "min", "loc", "bin_mid", "text", "length", "pattern", "length", "int", "rd", "new", "int", "finish", "rd", "finish", "d", "for", "int", "j", "finish", "j", "start", "j", "int", "charMatch", "if", "text", "length", "j", "s", "containsKey", "text", "charAt", "j", "charMatch", "else", "charMatch", "s", "get", "text", "charAt", "j", "if", "d", "rd", "j", "rd", "j", "charMatch", "else", "rd", "j", "rd", "j", "charMatch", "last_rd", "j", "last_rd", "j", "last_rd", "j", "if", "rd", "j", "matchmask", "double", "score", "match_bitapScore", "d", "j", "loc", "pattern", "if", "score", "score_threshold", "score_threshold", "score", "best_loc", "j", "if", "best_loc", "loc", "start", "Math", "max", "loc", "best_loc", "else", "break", "if", "match_bitapScore", "d", "loc", "loc", "pattern", "score_threshold", "break", "last_rd", "rd", "return", "best_loc" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 1684,
  "endLine" : 1692,
  "identifiers" : [ "float", "accuracy", "float", "e", "pattern", "length", "int", "proximity", "Math", "abs", "loc", "x", "if", "Match_Distance", "return", "proximity", "accuracy", "return", "accuracy", "proximity", "float", "Match_Distance" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 1699,
  "endLine" : 1711,
  "identifiers" : [ "Map", "Character", "Integer", "s", "new", "HashMap", "Character", "Integer", "char", "char_pattern", "pattern", "toCharArray", "for", "char", "c", "char_pattern", "s", "put", "c", "int", "i", "for", "char", "c", "char_pattern", "s", "put", "c", "s", "get", "c", "pattern", "length", "i", "i", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 1723,
  "endLine" : 1760,
  "identifiers" : [ "if", "text", "length", "return", "String", "pattern", "text", "substring", "patch", "start2", "patch", "start2", "patch", "length1", "int", "padding", "while", "text", "indexOf", "pattern", "text", "lastIndexOf", "pattern", "pattern", "length", "Match_MaxBits", "Patch_Margin", "Patch_Margin", "padding", "Patch_Margin", "pattern", "text", "substring", "Math", "max", "patch", "start2", "padding", "Math", "min", "text", "length", "patch", "start2", "patch", "length1", "padding", "padding", "Patch_Margin", "String", "prefix", "text", "substring", "Math", "max", "patch", "start2", "padding", "patch", "start2", "if", "prefix", "length", "patch", "diffs", "addFirst", "new", "Diff", "Operation", "EQUAL", "prefix", "String", "suffix", "text", "substring", "patch", "start2", "patch", "length1", "Math", "min", "text", "length", "patch", "start2", "patch", "length1", "padding", "if", "suffix", "length", "patch", "diffs", "addLast", "new", "Diff", "Operation", "EQUAL", "suffix", "patch", "start1", "prefix", "length", "patch", "start2", "prefix", "length", "patch", "length1", "prefix", "length", "suffix", "length", "patch", "length2", "prefix", "length", "suffix", "length" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 1769,
  "endLine" : 1780,
  "identifiers" : [ "if", "text1", "null", "text2", "null", "throw", "new", "IllegalArgumentException", "LinkedList", "Diff", "diffs", "diff_main", "text1", "text2", "true", "if", "diffs", "size", "diff_cleanupSemantic", "diffs", "diff_cleanupEfficiency", "diffs", "return", "patch_make", "text1", "diffs" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 1818,
  "endLine" : 1896,
  "identifiers" : [ "if", "text1", "null", "diffs", "null", "throw", "new", "IllegalArgumentException", "LinkedList", "Patch", "patches", "new", "LinkedList", "Patch", "if", "diffs", "isEmpty", "return", "patches", "Patch", "patch", "new", "Patch", "int", "char_count1", "int", "char_count2", "String", "prepatch_text", "text1", "String", "postpatch_text", "text1", "for", "Diff", "aDiff", "diffs", "if", "patch", "diffs", "isEmpty", "aDiff", "operation", "Operation", "EQUAL", "patch", "start1", "char_count1", "patch", "start2", "char_count2", "switch", "aDiff", "operation", "case", "INSERT", "patch", "diffs", "add", "aDiff", "patch", "length2", "aDiff", "text", "length", "postpatch_text", "postpatch_text", "substring", "char_count2", "aDiff", "text", "postpatch_text", "substring", "char_count2", "break", "case", "DELETE", "patch", "length1", "aDiff", "text", "length", "patch", "diffs", "add", "aDiff", "postpatch_text", "postpatch_text", "substring", "char_count2", "postpatch_text", "substring", "char_count2", "aDiff", "text", "length", "break", "case", "EQUAL", "if", "aDiff", "text", "length", "Patch_Margin", "patch", "diffs", "isEmpty", "aDiff", "diffs", "getLast", "patch", "diffs", "add", "aDiff", "patch", "length1", "aDiff", "text", "length", "patch", "length2", "aDiff", "text", "length", "if", "aDiff", "text", "length", "Patch_Margin", "patch", "diffs", "isEmpty", "if", "patch", "diffs", "isEmpty", "patch_addContext", "patch", "prepatch_text", "patches", "add", "patch", "patch", "new", "Patch", "prepatch_text", "postpatch_text", "char_count1", "char_count2", "break", "if", "aDiff", "operation", "Operation", "INSERT", "char_count1", "aDiff", "text", "length", "if", "aDiff", "operation", "Operation", "DELETE", "char_count2", "aDiff", "text", "length", "if", "patch", "diffs", "isEmpty", "patch_addContext", "patch", "prepatch_text", "patches", "add", "patch", "return", "patches" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 1903,
  "endLine" : 1918,
  "identifiers" : [ "LinkedList", "Patch", "patchesCopy", "new", "LinkedList", "Patch", "for", "Patch", "aPatch", "patches", "Patch", "patchCopy", "new", "Patch", "for", "Diff", "aDiff", "aPatch", "diffs", "Diff", "diffCopy", "new", "Diff", "aDiff", "operation", "aDiff", "text", "patchCopy", "diffs", "add", "diffCopy", "patchCopy", "start1", "aPatch", "start1", "patchCopy", "start2", "aPatch", "start2", "patchCopy", "length1", "aPatch", "length1", "patchCopy", "length2", "aPatch", "length2", "patchesCopy", "add", "patchCopy", "return", "patchesCopy" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 1928,
  "endLine" : 2029,
  "identifiers" : [ "if", "patches", "isEmpty", "return", "new", "Object", "text", "new", "boolean", "patches", "patch_deepCopy", "patches", "String", "nullPadding", "patch_addPadding", "patches", "text", "nullPadding", "text", "nullPadding", "patch_splitMax", "patches", "int", "x", "int", "delta", "boolean", "results", "new", "boolean", "patches", "size", "for", "Patch", "aPatch", "patches", "int", "expected_loc", "aPatch", "start2", "delta", "String", "text1", "diff_text1", "aPatch", "diffs", "int", "start_loc", "int", "end_loc", "if", "text1", "length", "this", "Match_MaxBits", "start_loc", "match_main", "text", "text1", "substring", "this", "Match_MaxBits", "expected_loc", "if", "start_loc", "end_loc", "match_main", "text", "text1", "substring", "text1", "length", "this", "Match_MaxBits", "expected_loc", "text1", "length", "this", "Match_MaxBits", "if", "end_loc", "start_loc", "end_loc", "start_loc", "else", "start_loc", "match_main", "text", "text1", "expected_loc", "if", "start_loc", "results", "x", "false", "delta", "aPatch", "length2", "aPatch", "length1", "else", "results", "x", "true", "delta", "start_loc", "expected_loc", "String", "text2", "if", "end_loc", "text2", "text", "substring", "start_loc", "Math", "min", "start_loc", "text1", "length", "text", "length", "else", "text2", "text", "substring", "start_loc", "Math", "min", "end_loc", "this", "Match_MaxBits", "text", "length", "if", "text1", "equals", "text2", "text", "text", "substring", "start_loc", "diff_text2", "aPatch", "diffs", "text", "substring", "start_loc", "text1", "length", "else", "LinkedList", "Diff", "diffs", "diff_main", "text1", "text2", "false", "if", "text1", "length", "this", "Match_MaxBits", "diff_levenshtein", "diffs", "float", "text1", "length", "this", "Patch_DeleteThreshold", "results", "x", "false", "else", "diff_cleanupSemanticLossless", "diffs", "int", "index1", "for", "Diff", "aDiff", "aPatch", "diffs", "if", "aDiff", "operation", "Operation", "EQUAL", "int", "index2", "diff_xIndex", "diffs", "index1", "if", "aDiff", "operation", "Operation", "INSERT", "text", "text", "substring", "start_loc", "index2", "aDiff", "text", "text", "substring", "start_loc", "index2", "else", "if", "aDiff", "operation", "Operation", "DELETE", "text", "text", "substring", "start_loc", "index2", "text", "substring", "start_loc", "diff_xIndex", "diffs", "index1", "aDiff", "text", "length", "if", "aDiff", "operation", "Operation", "DELETE", "index1", "aDiff", "text", "length", "x", "text", "text", "substring", "nullPadding", "length", "text", "length", "nullPadding", "length", "return", "new", "Object", "text", "results" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 2037,
  "endLine" : 2090,
  "identifiers" : [ "short", "paddingLength", "this", "Patch_Margin", "String", "nullPadding", "for", "short", "x", "x", "paddingLength", "x", "nullPadding", "String", "valueOf", "char", "x", "for", "Patch", "aPatch", "patches", "aPatch", "start1", "paddingLength", "aPatch", "start2", "paddingLength", "Patch", "patch", "patches", "getFirst", "LinkedList", "Diff", "diffs", "patch", "diffs", "if", "diffs", "isEmpty", "diffs", "getFirst", "operation", "Operation", "EQUAL", "diffs", "addFirst", "new", "Diff", "Operation", "EQUAL", "nullPadding", "patch", "start1", "paddingLength", "patch", "start2", "paddingLength", "patch", "length1", "paddingLength", "patch", "length2", "paddingLength", "else", "if", "paddingLength", "diffs", "getFirst", "text", "length", "Diff", "firstDiff", "diffs", "getFirst", "int", "extraLength", "paddingLength", "firstDiff", "text", "length", "firstDiff", "text", "nullPadding", "substring", "firstDiff", "text", "length", "firstDiff", "text", "patch", "start1", "extraLength", "patch", "start2", "extraLength", "patch", "length1", "extraLength", "patch", "length2", "extraLength", "patch", "patches", "getLast", "diffs", "patch", "diffs", "if", "diffs", "isEmpty", "diffs", "getLast", "operation", "Operation", "EQUAL", "diffs", "addLast", "new", "Diff", "Operation", "EQUAL", "nullPadding", "patch", "length1", "paddingLength", "patch", "length2", "paddingLength", "else", "if", "paddingLength", "diffs", "getLast", "text", "length", "Diff", "lastDiff", "diffs", "getLast", "int", "extraLength", "paddingLength", "lastDiff", "text", "length", "lastDiff", "text", "nullPadding", "substring", "extraLength", "patch", "length1", "extraLength", "patch", "length2", "extraLength", "return", "nullPadding" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 2098,
  "endLine" : 2194,
  "identifiers" : [ "short", "patch_size", "Match_MaxBits", "String", "precontext", "postcontext", "Patch", "patch", "int", "start1", "start2", "boolean", "empty", "Operation", "diff_type", "String", "diff_text", "ListIterator", "Patch", "pointer", "patches", "listIterator", "Patch", "bigpatch", "pointer", "hasNext", "pointer", "next", "null", "while", "bigpatch", "null", "if", "bigpatch", "length1", "Match_MaxBits", "bigpatch", "pointer", "hasNext", "pointer", "next", "null", "continue", "pointer", "remove", "start1", "bigpatch", "start1", "start2", "bigpatch", "start2", "precontext", "while", "bigpatch", "diffs", "isEmpty", "patch", "new", "Patch", "empty", "true", "patch", "start1", "start1", "precontext", "length", "patch", "start2", "start2", "precontext", "length", "if", "precontext", "length", "patch", "length1", "patch", "length2", "precontext", "length", "patch", "diffs", "add", "new", "Diff", "Operation", "EQUAL", "precontext", "while", "bigpatch", "diffs", "isEmpty", "patch", "length1", "patch_size", "Patch_Margin", "diff_type", "bigpatch", "diffs", "getFirst", "operation", "diff_text", "bigpatch", "diffs", "getFirst", "text", "if", "diff_type", "Operation", "INSERT", "patch", "length2", "diff_text", "length", "start2", "diff_text", "length", "patch", "diffs", "addLast", "bigpatch", "diffs", "removeFirst", "empty", "false", "else", "if", "diff_type", "Operation", "DELETE", "patch", "diffs", "size", "patch", "diffs", "getFirst", "operation", "Operation", "EQUAL", "diff_text", "length", "patch_size", "patch", "length1", "diff_text", "length", "start1", "diff_text", "length", "empty", "false", "patch", "diffs", "add", "new", "Diff", "diff_type", "diff_text", "bigpatch", "diffs", "removeFirst", "else", "diff_text", "diff_text", "substring", "Math", "min", "diff_text", "length", "patch_size", "patch", "length1", "Patch_Margin", "patch", "length1", "diff_text", "length", "start1", "diff_text", "length", "if", "diff_type", "Operation", "EQUAL", "patch", "length2", "diff_text", "length", "start2", "diff_text", "length", "else", "empty", "false", "patch", "diffs", "add", "new", "Diff", "diff_type", "diff_text", "if", "diff_text", "equals", "bigpatch", "diffs", "getFirst", "text", "bigpatch", "diffs", "removeFirst", "else", "bigpatch", "diffs", "getFirst", "text", "bigpatch", "diffs", "getFirst", "text", "substring", "diff_text", "length", "precontext", "diff_text2", "patch", "diffs", "precontext", "precontext", "substring", "Math", "max", "precontext", "length", "Patch_Margin", "if", "diff_text1", "bigpatch", "diffs", "length", "Patch_Margin", "postcontext", "diff_text1", "bigpatch", "diffs", "substring", "Patch_Margin", "else", "postcontext", "diff_text1", "bigpatch", "diffs", "if", "postcontext", "length", "patch", "length1", "postcontext", "length", "patch", "length2", "postcontext", "length", "if", "patch", "diffs", "isEmpty", "patch", "diffs", "getLast", "operation", "Operation", "EQUAL", "patch", "diffs", "getLast", "text", "postcontext", "else", "patch", "diffs", "add", "new", "Diff", "Operation", "EQUAL", "postcontext", "if", "empty", "pointer", "add", "patch", "bigpatch", "pointer", "hasNext", "pointer", "next", "null" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 2217,
  "endLine" : 2302,
  "identifiers" : [ "List", "Patch", "patches", "new", "LinkedList", "Patch", "if", "textline", "length", "return", "patches", "List", "String", "textList", "Arrays", "asList", "textline", "split", "LinkedList", "String", "text", "new", "LinkedList", "String", "textList", "Patch", "patch", "Pattern", "patchHeader", "Pattern", "compile", "Matcher", "m", "char", "sign", "String", "line", "while", "text", "isEmpty", "m", "patchHeader", "matcher", "text", "getFirst", "if", "m", "matches", "throw", "new", "IllegalArgumentException", "text", "getFirst", "patch", "new", "Patch", "patches", "add", "patch", "patch", "start1", "Integer", "parseInt", "m", "group", "if", "m", "group", "length", "patch", "start1", "patch", "length1", "else", "if", "m", "group", "equals", "patch", "length1", "else", "patch", "start1", "patch", "length1", "Integer", "parseInt", "m", "group", "patch", "start2", "Integer", "parseInt", "m", "group", "if", "m", "group", "length", "patch", "start2", "patch", "length2", "else", "if", "m", "group", "equals", "patch", "length2", "else", "patch", "start2", "patch", "length2", "Integer", "parseInt", "m", "group", "text", "removeFirst", "while", "text", "isEmpty", "try", "sign", "text", "getFirst", "charAt", "catch", "IndexOutOfBoundsException", "e", "text", "removeFirst", "continue", "line", "text", "getFirst", "substring", "line", "line", "replace", "try", "line", "URLDecoder", "decode", "line", "catch", "UnsupportedEncodingException", "e", "throw", "new", "Error", "e", "catch", "IllegalArgumentException", "e", "throw", "new", "IllegalArgumentException", "line", "e", "if", "sign", "patch", "diffs", "add", "new", "Diff", "Operation", "DELETE", "line", "else", "if", "sign", "patch", "diffs", "add", "new", "Diff", "Operation", "INSERT", "line", "else", "if", "sign", "patch", "diffs", "add", "new", "Diff", "Operation", "EQUAL", "line", "else", "if", "sign", "break", "else", "throw", "new", "IllegalArgumentException", "sign", "line", "text", "removeFirst", "return", "patches" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 2357,
  "endLine" : 2379,
  "identifiers" : [ "if", "this", "obj", "return", "true", "if", "obj", "null", "return", "false", "if", "getClass", "obj", "getClass", "return", "false", "Diff", "other", "Diff", "obj", "if", "operation", "other", "operation", "return", "false", "if", "text", "null", "if", "other", "text", "null", "return", "false", "else", "if", "text", "equals", "other", "text", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 2406,
  "endLine" : 2447,
  "identifiers" : [ "String", "coords1", "coords2", "if", "this", "length1", "coords1", "this", "start1", "else", "if", "this", "length1", "coords1", "Integer", "toString", "this", "start1", "else", "coords1", "this", "start1", "this", "length1", "if", "this", "length2", "coords2", "this", "start2", "else", "if", "this", "length2", "coords2", "Integer", "toString", "this", "start2", "else", "coords2", "this", "start2", "this", "length2", "StringBuilder", "text", "new", "StringBuilder", "text", "append", "append", "coords1", "append", "append", "coords2", "append", "for", "Diff", "aDiff", "this", "diffs", "switch", "aDiff", "operation", "case", "INSERT", "text", "append", "break", "case", "DELETE", "text", "append", "break", "case", "EQUAL", "text", "append", "break", "try", "text", "append", "URLEncoder", "encode", "aDiff", "text", "replace", "append", "catch", "UnsupportedEncodingException", "e", "throw", "new", "Error", "e", "return", "unescapeForEncodeUriCompatability", "text", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\diff_match_patch.java",
  "startLine" : 2463,
  "endLine" : 2470,
  "identifiers" : [ "return", "str", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace", "replace" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 19,
  "endLine" : 28,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "List", "String", "lines", "new", "ArrayList", "String", "line", "null", "while", "line", "reader", "readLine", "null", "lines", "add", "line", "reader", "close", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 37,
  "endLine" : 43,
  "identifiers" : [ "BufferedWriter", "writer", "new", "BufferedWriter", "new", "OutputStreamWriter", "new", "FileOutputStream", "file", "append", "StandardCharsets", "UTF_8", "writer", "write", "content", "writer", "newLine", "writer", "flush", "writer", "close" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\com\\fudan\\util\\MinimumEditDistanceUtil.java",
  "startLine" : 11,
  "endLine" : 38,
  "identifiers" : [ "int", "sourceLength", "sourceStr", "length", "int", "targetLength", "targetString", "length", "sourceStr", "sourceStr", "toLowerCase", "targetString", "targetString", "toLowerCase", "int", "editMatrix", "new", "int", "sourceLength", "targetLength", "for", "int", "i", "i", "sourceLength", "i", "editMatrix", "i", "i", "for", "int", "j", "j", "targetLength", "j", "editMatrix", "j", "j", "editMatrix", "for", "int", "i", "i", "sourceLength", "i", "for", "int", "j", "j", "targetLength", "j", "if", "sourceStr", "charAt", "i", "targetString", "charAt", "j", "editMatrix", "i", "j", "editMatrix", "i", "j", "else", "editMatrix", "i", "j", "minimumValue", "editMatrix", "i", "j", "editMatrix", "i", "j", "editMatrix", "i", "j", "return", "editMatrix", "sourceLength", "targetLength" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\main\\java\\Main.java",
  "startLine" : 15,
  "endLine" : 43,
  "identifiers" : [ "Config", "load", "File", "dir", "new", "File", "Config", "inputJsonFolder", "File", "jsonFiles", "dir", "listFiles", "try", "System", "out", "println", "File", "extractJsonFolder", "new", "File", "Config", "extractedJsonFolder", "if", "extractJsonFolder", "exists", "extractJsonFolder", "mkdir", "File", "consisResultFolder", "new", "File", "Config", "consisResultFolder", "if", "consisResultFolder", "exists", "consisResultFolder", "mkdir", "CloneInfoExtractor", "generateInfo", "Config", "inputJsonFolder", "Config", "outputPairFolder", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CloneTrackInfoSummary\\src\\test\\java\\Test.java",
  "startLine" : 7,
  "endLine" : 25,
  "identifiers" : [ "String", "test", "asdfsaf", "hello", "world", "String", "IDENTIFIER", "System", "out", "println", "test", "System", "out", "println", "test", "replaceAll", "IDENTIFIER", "List", "Integer", "numbers", "new", "ArrayList", "numbers", "add", "numbers", "add", "numbers", "add", "for", "int", "i", "i", "numbers", "size", "i", "System", "out", "println", "numbers", "get", "i", "numbers", "remove", "i", "i", "System", "out", "println", "numbers", "size" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\common\\CloneType.java",
  "startLine" : 17,
  "endLine" : 25,
  "identifiers" : [ "CLONE_TYPE_MAP", "put", "TYPE1", "true", "CLONE_TYPE_MAP", "put", "TYPE2", "true", "CLONE_TYPE_MAP", "put", "TYPE3", "true", "CLONE_TYPE_MAP", "put", "TYPE12", "true", "CLONE_TYPE_MAP", "put", "TYPE13", "true", "CLONE_TYPE_MAP", "put", "TYPE23", "true", "CLONE_TYPE_MAP", "put", "TYPE123", "true" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\common\\ProgrammingLanguage.java",
  "startLine" : 18,
  "endLine" : 25,
  "identifiers" : [ "PROGRAMMING_LANGUAGE_MAP", "put", "JAVA", "true", "PROGRAMMING_LANGUAGE_MAP", "put", "C", "true", "PROGRAMMING_LANGUAGE_MAP", "put", "CPP", "true", "PROGRAMMING_LANGUAGE_MAP", "put", "JAVASCRIPT", "true", "PROGRAMMING_LANGUAGE_MAP", "put", "PYTHON", "true", "PROGRAMMING_LANGUAGE_MAP", "put", "GOLANG", "true" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\Main.java",
  "startLine" : 12,
  "endLine" : 43,
  "identifiers" : [ "long", "start", "System", "currentTimeMillis", "log", "info", "CommandManager", "commandManager", "new", "CommandManager", "args", "commandManager", "parse", "log", "info", "ArgsCheckManager", "argsCheckManager", "new", "ArgsCheckManager", "commandManager", "argsCheckManager", "check", "log", "info", "CloneDetectManager", "cloneDetectManager", "new", "CloneDetectManager", "commandManager", "cloneDetectManager", "detect", "log", "info", "MeasureIndexManager", "measureIndexManager", "new", "MeasureIndexManager", "commandManager", "measureIndexManager", "process", "log", "info", "ICloneGroupManager", "cloneGroupManager", "commandManager", "getGranularity", "equals", "DetectGranularity", "SNIPPET", "new", "SnippetCloneGroupManager", "commandManager", "measureIndexManager", "new", "MethodCloneGroupManager", "commandManager", "measureIndexManager", "cloneGroupManager", "load", "cloneGroupManager", "filterTargetFileCloneGroups", "cloneGroupManager", "filterSameNameMethodCloneGroups", "cloneGroupManager", "filterNonFunctionalDifferenceCloneGroups", "cloneGroupManager", "filterTargetCloneTypeCloneGroups", "cloneGroupManager", "calculateClonePairSimilarity", "cloneGroupManager", "output", "long", "end", "System", "currentTimeMillis", "log", "info", "Duration", "ofMillis", "end", "start", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\ArgsCheckManager.java",
  "startLine" : 24,
  "endLine" : 118,
  "identifiers" : [ "if", "commandManager", "getFile", "isEmpty", "File", "f", "new", "File", "commandManager", "getFile", "if", "f", "exists", "log", "error", "commandManager", "getFile", "System", "exit", "File", "dataset", "new", "File", "commandManager", "getDataset", "if", "dataset", "exists", "dataset", "isFile", "log", "error", "commandManager", "getDataset", "System", "exit", "if", "CloneType", "CLONE_TYPE_MAP", "containsKey", "commandManager", "getCloneType", "log", "error", "System", "exit", "File", "cloneDetectTool", "new", "File", "commandManager", "getCloneDetectToolPath", "if", "cloneDetectTool", "exists", "log", "error", "commandManager", "getCloneDetectToolPath", "System", "exit", "commandManager", "setCloneDetectToolPath", "cloneDetectTool", "getAbsolutePath", "if", "commandManager", "getLanguage", "isEmpty", "if", "ProgrammingLanguage", "PROGRAMMING_LANGUAGE_MAP", "containsKey", "commandManager", "getLanguage", "toLowerCase", "log", "error", "commandManager", "getLanguage", "System", "exit", "if", "commandManager", "getGranularity", "isEmpty", "if", "DetectGranularity", "DETECT_GRANULARITY_MAP", "containsKey", "commandManager", "getGranularity", "toLowerCase", "log", "error", "commandManager", "getGranularity", "System", "exit", "if", "commandManager", "getSepNum", "isEmpty", "if", "StringUtils", "isNumeric", "commandManager", "getSepNum", "log", "error", "commandManager", "getSepNum", "System", "exit", "if", "commandManager", "getMinLine", "isEmpty", "if", "StringUtils", "isNumeric", "commandManager", "getMinLine", "log", "error", "commandManager", "getMinLine", "System", "exit", "if", "commandManager", "getMlcc", "isEmpty", "if", "StringUtils", "isNumeric", "commandManager", "getMlcc", "log", "error", "commandManager", "getMlcc", "System", "exit", "if", "commandManager", "getMlc", "isEmpty", "if", "StringUtils", "isNumeric", "commandManager", "getMlc", "log", "error", "commandManager", "getMlc", "System", "exit", "if", "commandManager", "getUseGpu", "isEmpty", "if", "commandManager", "getUseGpu", "equals", "commandManager", "getUseGpu", "equals", "log", "error", "commandManager", "getUseGpu", "System", "exit", "if", "commandManager", "getThreshold", "isEmpty", "if", "NumberUtils", "isCreatable", "commandManager", "getThreshold", "log", "error", "commandManager", "getThreshold", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\CloneDetectManager.java",
  "startLine" : 26,
  "endLine" : 100,
  "identifiers" : [ "File", "userDir", "new", "File", "System", "getProperty", "POSIX", "posix", "POSIXFactory", "getPOSIX", "try", "if", "commandManager", "getFile", "isEmpty", "File", "tempDir", "new", "File", "commandManager", "getDataset", "File", "separator", "FilePath", "DATASET_TEMP_FOLDER", "FileUtils", "copyFileToDirectory", "new", "File", "commandManager", "getFile", "tempDir", "File", "cloneDetectToolDir", "new", "File", "new", "File", "commandManager", "getCloneDetectToolPath", "getParent", "if", "userDir", "compareTo", "cloneDetectToolDir", "posix", "chdir", "cloneDetectToolDir", "getAbsolutePath", "File", "cloneDetectToolConfigFile", "new", "File", "FilePath", "CLONE_DETECT_TOOL_CONFIG_PATH", "if", "cloneDetectToolConfigFile", "exists", "Properties", "properties", "new", "Properties", "properties", "load", "new", "FileReader", "FilePath", "CLONE_DETECT_TOOL_CONFIG_PATH", "if", "commandManager", "getLanguage", "isEmpty", "properties", "setProperty", "SagaConfigKey", "LANGUAGE", "commandManager", "getLanguage", "else", "commandManager", "setLanguage", "properties", "getProperty", "SagaConfigKey", "LANGUAGE", "if", "commandManager", "getGranularity", "isEmpty", "properties", "setProperty", "SagaConfigKey", "GRANULARITY", "commandManager", "getGranularity", "else", "commandManager", "setGranularity", "properties", "getProperty", "SagaConfigKey", "GRANULARITY", "if", "commandManager", "getSepNum", "isEmpty", "properties", "setProperty", "SagaConfigKey", "SEP_NUM", "commandManager", "getSepNum", "if", "commandManager", "getMinLine", "isEmpty", "properties", "setProperty", "SagaConfigKey", "MIN_LINE", "commandManager", "getMinLine", "if", "commandManager", "getMlcc", "isEmpty", "properties", "setProperty", "SagaConfigKey", "MLCC", "commandManager", "getMlcc", "if", "commandManager", "getMlc", "isEmpty", "properties", "setProperty", "SagaConfigKey", "MLC", "commandManager", "getMlc", "if", "commandManager", "getUseGpu", "isEmpty", "properties", "setProperty", "SagaConfigKey", "USE_GPU", "commandManager", "getUseGpu", "if", "commandManager", "getThreshold", "isEmpty", "properties", "setProperty", "SagaConfigKey", "THRESHOLD", "commandManager", "getThreshold", "if", "commandManager", "getExtensions", "isEmpty", "properties", "setProperty", "SagaConfigKey", "EXTENSIONS", "commandManager", "getExtensions", "properties", "store", "new", "FileWriter", "FilePath", "CLONE_DETECT_TOOL_CONFIG_PATH", "SagaConfigKey", "COMMENT", "Process", "process", "Runtime", "getRuntime", "exec", "new", "String", "commandManager", "getCloneDetectToolPath", "commandManager", "getDataset", "InputStream", "inputStream", "process", "getInputStream", "BufferedReader", "reader", "new", "BufferedReader", "new", "InputStreamReader", "inputStream", "StandardCharsets", "UTF_8", "String", "line", "null", "while", "line", "reader", "readLine", "null", "log", "info", "line", "reader", "close", "process", "waitFor", "catch", "IOException", "InterruptedException", "e", "log", "error", "e", "toString", "System", "exit", "finally", "posix", "chdir", "userDir", "getAbsolutePath" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\CommandManager.java",
  "startLine" : 37,
  "endLine" : 95,
  "identifiers" : [ "CommandLineParser", "commandLineParser", "new", "DefaultParser", "Options", "options", "new", "Options", "options", "addOption", "true", "options", "addOption", "true", "options", "addOption", "false", "options", "addOption", "false", "options", "addOption", "true", "options", "addOption", "true", "options", "addOption", "true", "options", "addOption", "true", "options", "addOption", "true", "options", "addOption", "true", "options", "addOption", "true", "options", "addOption", "true", "options", "addOption", "true", "options", "addOption", "true", "options", "addOption", "true", "options", "addOption", "true", "options", "addOption", "false", "try", "CommandLine", "commandLine", "commandLineParser", "parse", "options", "args", "if", "commandLine", "hasOption", "System", "out", "println", "System", "out", "println", "for", "Option", "option", "options", "getOptions", "System", "out", "printf", "option", "getOpt", "option", "getLongOpt", "option", "getDescription", "System", "exit", "if", "commandLine", "hasOption", "log", "info", "System", "exit", "if", "commandLine", "hasOption", "log", "info", "System", "exit", "file", "commandLine", "getOptionValue", "dataset", "commandLine", "getOptionValue", "keepSameMethodNameClone", "commandLine", "hasOption", "keepNonFunctionalDifferenceClone", "commandLine", "hasOption", "cloneType", "commandLine", "getOptionValue", "cloneDetectToolPath", "commandLine", "getOptionValue", "language", "commandLine", "getOptionValue", "granularity", "commandLine", "getOptionValue", "sepNum", "commandLine", "getOptionValue", "minLine", "commandLine", "getOptionValue", "mlcc", "commandLine", "getOptionValue", "mlc", "commandLine", "getOptionValue", "useGpu", "commandLine", "getOptionValue", "threshold", "commandLine", "getOptionValue", "extensions", "commandLine", "getOptionValue", "outputFolder", "commandLine", "getOptionValue", "FilePath", "OUTPUT_FOLDER", "catch", "ParseException", "e", "log", "error", "e", "toString", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\MeasureIndexManager.java",
  "startLine" : 38,
  "endLine" : 127,
  "identifiers" : [ "try", "log", "info", "File", "cloneDetectDir", "new", "File", "commandManager", "getCloneDetectToolPath", "getParentFile", "File", "measureIndexFile", "new", "File", "cloneDetectDir", "getAbsolutePath", "File", "separator", "FilePath", "CLONE_DETECT_TOOL_MEASURE_INDEX_PATH", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "measureIndexFile", "String", "line", "null", "while", "line", "reader", "readLine", "null", "String", "tmp", "line", "split", "String", "id", "tmp", "String", "path", "line", "substring", "line", "indexOf", "line", "lastIndexOf", "path", "path", "substring", "path", "lastIndexOf", "String", "startLine", "tmp", "tmp", "length", "String", "endLine", "tmp", "tmp", "length", "List", "Integer", "ids", "pathMap", "getOrDefault", "path", "new", "ArrayList", "ids", "add", "Integer", "parseInt", "id", "pathMap", "put", "path", "ids", "if", "DetectGranularity", "FILE", "equals", "commandManager", "getGranularity", "CodeFile", "codeFile", "new", "CodeFile", "Integer", "parseInt", "id", "path", "Integer", "parseInt", "startLine", "Integer", "parseInt", "endLine", "codeFileMap", "put", "codeFile", "getId", "codeFile", "else", "CodeMethod", "codeMethod", "new", "CodeMethod", "Integer", "parseInt", "id", "path", "Integer", "parseInt", "startLine", "Integer", "parseInt", "endLine", "Constants", "UNKNOWN", "codeMethodMap", "put", "codeMethod", "getId", "codeMethod", "reader", "close", "if", "DetectGranularity", "FILE", "equals", "commandManager", "getGranularity", "log", "info", "codeMethodMap", "values", "parallelStream", "forEach", "new", "Consumer", "CodeMethod", "Override", "public", "void", "accept", "CodeMethod", "codeMethod", "String", "methodName", "switch", "commandManager", "getLanguage", "case", "ProgrammingLanguage", "JAVA", "methodName", "CodeUtil", "getJavaMethodNameAndLine", "codeMethod", "getPath", "codeMethod", "getStartLine", "break", "case", "ProgrammingLanguage", "C", "case", "ProgrammingLanguage", "CPP", "methodName", "CodeUtil", "getCppMethodNameAndLine", "codeMethod", "getPath", "codeMethod", "getStartLine", "break", "case", "ProgrammingLanguage", "JAVASCRIPT", "methodName", "CodeUtil", "getJavaScriptMethodNameAndLine", "codeMethod", "getPath", "codeMethod", "getStartLine", "break", "case", "ProgrammingLanguage", "PYTHON", "methodName", "CodeUtil", "getPythonMethodNameAndLine", "codeMethod", "getPath", "codeMethod", "getStartLine", "break", "case", "ProgrammingLanguage", "GOLANG", "methodName", "CodeUtil", "getGolangMethodNameAndLine", "codeMethod", "getPath", "codeMethod", "getStartLine", "break", "if", "methodName", "isEmpty", "String", "info", "methodName", "split", "codeMethod", "setName", "info", "codeMethod", "setStartLine", "Integer", "parseInt", "info", "String", "outputMeasureIndexPath", "commandManager", "getOutputFolder", "File", "separator", "FilePath", "MEASURE_INDEX_PATH", "log", "info", "outputMeasureIndexPath", "File", "outputFolder", "new", "File", "commandManager", "getOutputFolder", "if", "outputFolder", "exists", "outputFolder", "mkdirs", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "outputMeasureIndexPath", "if", "codeFileMap", "size", "FileUtils", "copyFile", "measureIndexFile", "new", "File", "outputMeasureIndexPath", "else", "codeMethodMap", "values", "forEach", "new", "Consumer", "CodeMethod", "SneakyThrows", "Override", "public", "void", "accept", "CodeMethod", "codeMethod", "writer", "write", "String", "format", "codeMethod", "getId", "codeMethod", "getPath", "codeMethod", "getStartLine", "codeMethod", "getEndLine", "codeMethod", "getName", "writer", "newLine", "writer", "flush", "writer", "close", "catch", "Exception", "e", "log", "error", "e", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\MethodCloneGroupManager.java",
  "startLine" : 41,
  "endLine" : 83,
  "identifiers" : [ "try", "log", "info", "File", "cloneDetectDir", "new", "File", "commandManager", "getCloneDetectToolPath", "getParentFile", "File", "cloneGroupFile", "new", "File", "cloneDetectDir", "getAbsolutePath", "File", "separator", "FilePath", "CLONE_DETECT_TOOL_CLONE_GROUP_PATH", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "cloneGroupFile", "String", "line", "null", "int", "groupId", "while", "line", "reader", "readLine", "null", "groupId", "String", "ids", "line", "split", "for", "String", "id", "ids", "int", "measureId", "Integer", "parseInt", "id", "measureId2GroupId", "put", "measureId", "groupId", "List", "ClonePair", "clonePairs", "new", "ArrayList", "for", "int", "i", "i", "ids", "length", "i", "for", "int", "j", "i", "j", "ids", "length", "j", "ClonePair", "clonePair", "new", "ClonePair", "clonePair", "setId1", "Integer", "parseInt", "ids", "i", "clonePair", "setId2", "Integer", "parseInt", "ids", "j", "clonePair", "setGroupId", "groupId", "clonePairs", "add", "clonePair", "cloneGroups", "put", "groupId", "clonePairs", "reader", "close", "String", "statePath", "cloneDetectDir", "getAbsolutePath", "File", "separator", "FilePath", "CLONE_DETECT_TOOL_STATE_PATH", "state", "CodeUtil", "loadState", "statePath", "tokenDataPath", "cloneDetectDir", "getAbsolutePath", "File", "separator", "FilePath", "CLONE_DETECT_TOOL_TOKEN_DATA_FOLDER", "measureListNums", "CodeUtil", "calcMeasureListNums", "tokenDataPath", "catch", "Exception", "e", "log", "error", "e", "toString", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\MethodCloneGroupManager.java",
  "startLine" : 89,
  "endLine" : 121,
  "identifiers" : [ "if", "commandManager", "getFile", "isEmpty", "return", "log", "info", "String", "targetFilePath", "commandManager", "getDataset", "File", "separator", "FilePath", "DATASET_TEMP_FOLDER", "File", "separator", "FilenameUtils", "getName", "commandManager", "getFile", "List", "Integer", "measureIds", "measureIndexManager", "getPathMap", "get", "targetFilePath", "if", "measureIds", "null", "measureIds", "size", "log", "info", "targetFilePath", "return", "Map", "Integer", "List", "ClonePair", "finalGroups", "new", "HashMap", "measureIds", "parallelStream", "forEach", "new", "Consumer", "Integer", "Override", "public", "void", "accept", "Integer", "id", "int", "groupId", "measureId2GroupId", "getOrDefault", "id", "if", "groupId", "return", "lock", "lock", "if", "finalGroups", "containsKey", "groupId", "finalGroups", "put", "groupId", "cloneGroups", "get", "groupId", "lock", "unlock", "cloneGroups", "finalGroups" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\MethodCloneGroupManager.java",
  "startLine" : 127,
  "endLine" : 156,
  "identifiers" : [ "if", "commandManager", "getGranularity", "equals", "DetectGranularity", "FILE", "return", "if", "commandManager", "isKeepSameMethodNameClone", "return", "log", "info", "cloneGroups", "values", "parallelStream", "forEach", "new", "Consumer", "List", "ClonePair", "Override", "public", "void", "accept", "List", "ClonePair", "clonePairs", "Iterator", "ClonePair", "iterator", "clonePairs", "iterator", "while", "iterator", "hasNext", "ClonePair", "clonePair", "iterator", "next", "String", "name1", "measureIndexManager", "getCodeMethodMap", "get", "clonePair", "getId1", "getName", "String", "name2", "measureIndexManager", "getCodeMethodMap", "get", "clonePair", "getId2", "getName", "if", "name1", "equals", "Constants", "UNKNOWN", "name2", "equals", "Constants", "UNKNOWN", "continue", "if", "name1", "equals", "name2", "iterator", "remove" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\MethodCloneGroupManager.java",
  "startLine" : 162,
  "endLine" : 213,
  "identifiers" : [ "if", "commandManager", "isKeepNonFunctionalDifferenceClone", "return", "log", "info", "cloneGroups", "values", "parallelStream", "forEach", "new", "Consumer", "List", "ClonePair", "Override", "public", "void", "accept", "List", "ClonePair", "clonePairs", "Iterator", "ClonePair", "iterator", "clonePairs", "iterator", "while", "iterator", "hasNext", "ClonePair", "clonePair", "iterator", "next", "long", "offset1", "CodeUtil", "calcMeasureOffset", "clonePair", "getId1", "measureListNums", "state", "tokenDataPath", "long", "offset2", "CodeUtil", "calcMeasureOffset", "clonePair", "getId2", "measureListNums", "state", "tokenDataPath", "byte", "tokens1", "CodeUtil", "loadTokens", "offset1", "tokenDataPath", "byte", "tokens2", "CodeUtil", "loadTokens", "offset2", "tokenDataPath", "if", "tokens1", "null", "tokens2", "null", "continue", "if", "tokens1", "length", "tokens2", "length", "continue", "if", "Arrays", "equals", "tokens1", "tokens2", "iterator", "remove", "continue", "int", "lastNum", "boolean", "nonFunctionalType2", "true", "for", "int", "i", "i", "tokens1", "length", "i", "int", "num", "tokens1", "i", "tokens2", "i", "if", "num", "lastNum", "lastNum", "num", "continue", "if", "num", "num", "lastNum", "nonFunctionalType2", "false", "break", "if", "nonFunctionalType2", "iterator", "remove" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\MethodCloneGroupManager.java",
  "startLine" : 219,
  "endLine" : 262,
  "identifiers" : [ "log", "info", "commandManager", "getCloneType", "cloneGroups", "values", "parallelStream", "forEach", "new", "Consumer", "List", "ClonePair", "Override", "public", "void", "accept", "List", "ClonePair", "clonePairs", "Iterator", "ClonePair", "iterator", "clonePairs", "iterator", "while", "iterator", "hasNext", "ClonePair", "clonePair", "iterator", "next", "long", "offset1", "CodeUtil", "calcMeasureOffset", "clonePair", "getId1", "measureListNums", "state", "tokenDataPath", "long", "offset2", "CodeUtil", "calcMeasureOffset", "clonePair", "getId2", "measureListNums", "state", "tokenDataPath", "byte", "tokens1", "CodeUtil", "loadTokens", "offset1", "tokenDataPath", "byte", "tokens2", "CodeUtil", "loadTokens", "offset2", "tokenDataPath", "if", "tokens1", "null", "tokens2", "null", "continue", "if", "tokens1", "length", "tokens2", "length", "clonePair", "setType", "if", "commandManager", "getCloneType", "contains", "iterator", "remove", "continue", "if", "Arrays", "equals", "tokens1", "tokens2", "clonePair", "setType", "if", "commandManager", "getCloneType", "contains", "iterator", "remove", "continue", "clonePair", "setType", "if", "commandManager", "getCloneType", "contains", "iterator", "remove" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\MethodCloneGroupManager.java",
  "startLine" : 268,
  "endLine" : 284,
  "identifiers" : [ "log", "info", "for", "int", "groupId", "cloneGroups", "keySet", "List", "ClonePair", "clonePairs", "cloneGroups", "get", "groupId", "if", "clonePairs", "size", "continue", "finalGroupId", "clonePairs", "parallelStream", "forEach", "new", "Consumer", "ClonePair", "Override", "public", "void", "accept", "ClonePair", "clonePair", "clonePair", "setGroupId", "finalGroupId", "clonePair", "setScore", "CodeUtil", "calcSimilarity", "clonePair", "getId1", "clonePair", "getId2", "state", "measureListNums", "tokenDataPath" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\MethodCloneGroupManager.java",
  "startLine" : 290,
  "endLine" : 308,
  "identifiers" : [ "String", "cloneGroupPath", "commandManager", "getOutputFolder", "File", "separator", "FilePath", "CLONE_GROUP_PATH", "log", "info", "cloneGroupPath", "try", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "cloneGroupPath", "writer", "write", "writer", "newLine", "for", "int", "groupId", "cloneGroups", "keySet", "List", "ClonePair", "clonePairs", "cloneGroups", "get", "groupId", "for", "ClonePair", "clonePair", "clonePairs", "String", "line", "String", "format", "clonePair", "getId1", "clonePair", "getId2", "clonePair", "getScore", "clonePair", "getType", "clonePair", "getGroupId", "writer", "write", "line", "writer", "newLine", "writer", "flush", "catch", "Exception", "e", "log", "error", "e", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\SnippetCloneGroupManager.java",
  "startLine" : 42,
  "endLine" : 62,
  "identifiers" : [ "try", "log", "info", "File", "cloneDetectDir", "new", "File", "commandManager", "getCloneDetectToolPath", "getParentFile", "File", "type12CloneGroupFile", "new", "File", "cloneDetectDir", "getAbsolutePath", "File", "separator", "FilePath", "CLONE_DETECT_TOOL_SNIPPET_TYPE12_CLONE_GROUP_PATH", "File", "type3CloneGroupFile", "new", "File", "cloneDetectDir", "getAbsolutePath", "File", "separator", "FilePath", "CLONE_DETECT_TOOL_SNIPPET_TYPE3_CLONE_GROUP_PATH", "loadGroups", "type12CloneGroupFile", "getAbsolutePath", "loadGroups", "type3CloneGroupFile", "getAbsolutePath", "String", "statePath", "cloneDetectDir", "getAbsolutePath", "File", "separator", "FilePath", "CLONE_DETECT_TOOL_STATE_PATH", "state", "CodeUtil", "loadState", "statePath", "tokenDataPath", "cloneDetectDir", "getAbsolutePath", "File", "separator", "FilePath", "CLONE_DETECT_TOOL_TOKEN_DATA_FOLDER", "measureListNums", "CodeUtil", "calcMeasureListNums", "tokenDataPath", "catch", "Exception", "e", "log", "error", "e", "toString", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\SnippetCloneGroupManager.java",
  "startLine" : 65,
  "endLine" : 88,
  "identifiers" : [ "if", "commandManager", "getFile", "isEmpty", "return", "log", "info", "String", "targetFilePath", "commandManager", "getDataset", "File", "separator", "FilePath", "DATASET_TEMP_FOLDER", "File", "separator", "FilenameUtils", "getName", "commandManager", "getFile", "List", "Integer", "snippetIds", "pathMap", "get", "targetFilePath", "if", "snippetIds", "null", "snippetIds", "size", "log", "info", "targetFilePath", "return", "Map", "Integer", "ClonePair", "finalGroups", "new", "HashMap", "for", "int", "snippetId", "snippetIds", "int", "groupId", "codeSnippetMap", "get", "snippetId", "getGroupId", "if", "finalGroups", "containsKey", "groupId", "finalGroups", "put", "groupId", "cloneGroups", "get", "groupId", "cloneGroups", "finalGroups" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\SnippetCloneGroupManager.java",
  "startLine" : 91,
  "endLine" : 124,
  "identifiers" : [ "if", "commandManager", "isKeepSameMethodNameClone", "return", "log", "info", "Map", "Integer", "ClonePair", "finalGroup", "new", "HashMap", "cloneGroups", "values", "parallelStream", "forEach", "new", "Consumer", "ClonePair", "Override", "public", "void", "accept", "ClonePair", "clonePair", "CodeSnippet", "codeSnippet1", "codeSnippetMap", "get", "clonePair", "getId1", "CodeSnippet", "codeSnippet2", "codeSnippetMap", "get", "clonePair", "getId2", "if", "codeSnippet1", "getMeasureId", "codeSnippet2", "getMeasureId", "lock", "lock", "finalGroup", "put", "clonePair", "getGroupId", "clonePair", "lock", "unlock", "return", "String", "methodName1", "measureIndexManager", "getCodeMethodMap", "get", "codeSnippet1", "getMeasureId", "getName", "String", "methodName2", "measureIndexManager", "getCodeMethodMap", "get", "codeSnippet2", "getMeasureId", "getName", "if", "methodName1", "equals", "Constants", "UNKNOWN", "methodName2", "equals", "Constants", "UNKNOWN", "return", "if", "methodName1", "equals", "methodName2", "lock", "lock", "finalGroup", "put", "clonePair", "getGroupId", "clonePair", "lock", "unlock", "cloneGroups", "finalGroup" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\SnippetCloneGroupManager.java",
  "startLine" : 131,
  "endLine" : 190,
  "identifiers" : [ "log", "info", "commandManager", "getCloneType", "Map", "Integer", "ClonePair", "finalGroup", "new", "HashMap", "cloneGroups", "values", "stream", "forEach", "new", "Consumer", "ClonePair", "Override", "public", "void", "accept", "ClonePair", "clonePair", "CodeSnippet", "codeSnippet1", "codeSnippetMap", "get", "clonePair", "getId1", "CodeSnippet", "codeSnippet2", "codeSnippetMap", "get", "clonePair", "getId2", "long", "offset1", "CodeUtil", "calcMeasureOffset", "codeSnippet1", "getMeasureId", "measureListNums", "state", "tokenDataPath", "byte", "tokens1", "CodeUtil", "loadTokens", "offset1", "tokenDataPath", "long", "offset2", "null", "byte", "tokens2", "null", "if", "codeSnippet1", "getMeasureId", "codeSnippet2", "getMeasureId", "offset2", "offset1", "tokens2", "tokens1", "else", "offset2", "CodeUtil", "calcMeasureOffset", "codeSnippet2", "getMeasureId", "measureListNums", "state", "tokenDataPath", "tokens2", "CodeUtil", "loadTokens", "offset2", "tokenDataPath", "if", "tokens1", "null", "tokens2", "null", "return", "byte", "snippetTokens1", "Arrays", "copyOfRange", "tokens1", "codeSnippet1", "getSnippetStartToken", "codeSnippet1", "getSnippetEndToken", "byte", "snippetTokens2", "Arrays", "copyOfRange", "tokens2", "codeSnippet2", "getSnippetStartToken", "codeSnippet2", "getSnippetEndToken", "if", "snippetTokens1", "length", "snippetTokens2", "length", "clonePair", "setType", "if", "commandManager", "getCloneType", "contains", "lock", "lock", "finalGroup", "put", "clonePair", "getGroupId", "clonePair", "lock", "unlock", "return", "if", "Arrays", "equals", "snippetTokens1", "snippetTokens2", "clonePair", "setType", "if", "commandManager", "getCloneType", "contains", "lock", "lock", "finalGroup", "put", "clonePair", "getGroupId", "clonePair", "lock", "unlock", "return", "clonePair", "setType", "if", "commandManager", "getCloneType", "contains", "lock", "lock", "finalGroup", "put", "clonePair", "getGroupId", "clonePair", "lock", "unlock", "cloneGroups", "finalGroup" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\SnippetCloneGroupManager.java",
  "startLine" : 193,
  "endLine" : 211,
  "identifiers" : [ "log", "info", "cloneGroups", "values", "parallelStream", "forEach", "new", "Consumer", "ClonePair", "Override", "public", "void", "accept", "ClonePair", "clonePair", "CodeSnippet", "codeSnippet1", "codeSnippetMap", "get", "clonePair", "getId1", "CodeSnippet", "codeSnippet2", "codeSnippetMap", "get", "clonePair", "getId2", "clonePair", "setScore", "CodeUtil", "calcSimilarity", "codeSnippet1", "getMeasureId", "codeSnippet2", "getMeasureId", "codeSnippet1", "getSnippetStartToken", "codeSnippet1", "getSnippetEndToken", "codeSnippet2", "getSnippetStartToken", "codeSnippet2", "getSnippetEndToken", "state", "measureListNums", "tokenDataPath" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\SnippetCloneGroupManager.java",
  "startLine" : 214,
  "endLine" : 241,
  "identifiers" : [ "String", "cloneGroupPath", "commandManager", "getOutputFolder", "File", "separator", "FilePath", "CLONE_GROUP_PATH", "log", "info", "cloneGroupPath", "try", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "cloneGroupPath", "writer", "write", "writer", "newLine", "for", "ClonePair", "clonePair", "cloneGroups", "values", "CodeSnippet", "codeSnippet1", "codeSnippetMap", "get", "clonePair", "getId1", "CodeSnippet", "codeSnippet2", "codeSnippetMap", "get", "clonePair", "getId2", "writer", "write", "String", "format", "codeSnippet1", "getId", "codeSnippet1", "getMeasureId", "codeSnippet1", "getSnippetStartLine", "codeSnippet1", "getSnippetEndLine", "codeSnippet2", "getId", "codeSnippet2", "getMeasureId", "codeSnippet2", "getSnippetStartLine", "codeSnippet2", "getSnippetEndLine", "clonePair", "getScore", "clonePair", "getType", "finalGroupId", "writer", "newLine", "writer", "flush", "catch", "Exception", "e", "log", "error", "e", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\manager\\SnippetCloneGroupManager.java",
  "startLine" : 243,
  "endLine" : 292,
  "identifiers" : [ "try", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "cloneGroupPath", "String", "line", "null", "List", "Integer", "lastSnippetIds", "new", "ArrayList", "int", "lastGroupId", "while", "line", "reader", "readLine", "null", "if", "line", "isEmpty", "continue", "snippetId", "String", "info", "line", "split", "int", "groupId", "Integer", "parseInt", "info", "if", "lastGroupId", "groupId", "lastSnippetIds", "size", "ClonePair", "clonePair", "new", "ClonePair", "clonePair", "setId1", "lastSnippetIds", "get", "clonePair", "setId2", "lastSnippetIds", "get", "clonePair", "setGroupId", "lastGroupId", "cloneGroups", "put", "lastGroupId", "clonePair", "lastSnippetIds", "clear", "int", "measureId", "Integer", "parseInt", "info", "String", "path", "info", "int", "methodStartLine", "Integer", "parseInt", "info", "info", "length", "int", "methodEndLine", "Integer", "parseInt", "info", "info", "length", "int", "snippetStartToken", "Integer", "parseInt", "info", "info", "length", "int", "snippetEndToken", "Integer", "parseInt", "info", "info", "length", "int", "snippetStartLine", "Integer", "parseInt", "info", "info", "length", "int", "snippetEndLine", "Integer", "parseInt", "info", "info", "length", "CodeSnippet", "codeSnippet", "new", "CodeSnippet", "snippetId", "measureId", "path", "methodStartLine", "methodEndLine", "snippetStartToken", "snippetEndToken", "snippetStartLine", "snippetEndLine", "groupId", "codeSnippetMap", "put", "snippetId", "codeSnippet", "List", "Integer", "snippetIds", "pathMap", "getOrDefault", "path", "new", "ArrayList", "snippetIds", "add", "snippetId", "pathMap", "put", "path", "snippetIds", "lastGroupId", "groupId", "lastSnippetIds", "add", "snippetId", "if", "lastSnippetIds", "size", "ClonePair", "clonePair", "new", "ClonePair", "clonePair", "setId1", "lastSnippetIds", "get", "clonePair", "setId2", "lastSnippetIds", "get", "clonePair", "setGroupId", "lastGroupId", "cloneGroups", "put", "lastGroupId", "clonePair", "lastSnippetIds", "clear", "catch", "Exception", "e", "log", "error", "e", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\util\\CodeUtil.java",
  "startLine" : 26,
  "endLine" : 138,
  "identifiers" : [ "String", "methodName", "int", "methodLine", "startLine", "File", "file", "new", "File", "path", "if", "file", "exists", "return", "methodName", "try", "List", "String", "lines", "FileUtil", "readFrontLines", "path", "startLine", "if", "lines", "size", "return", "String", "content", "String", "join", "lines", "int", "index", "content", "lastIndexOf", "if", "index", "return", "char", "c", "content", "charAt", "index", "while", "Character", "isWhitespace", "c", "index", "if", "index", "return", "c", "content", "charAt", "index", "if", "c", "n", "methodLine", "if", "c", "return", "String", "tmp", "while", "c", "tmp", "c", "index", "if", "index", "return", "c", "content", "charAt", "index", "if", "c", "n", "methodLine", "tmp", "new", "StringBuilder", "tmp", "reverse", "toString", "tmp", "tmp", "replaceAll", "if", "tmp", "length", "tmp", "contains", "JavaKeyword", "THROWS", "return", "int", "rightParen", "while", "rightParen", "index", "if", "index", "return", "c", "content", "charAt", "index", "if", "c", "rightParen", "else", "if", "c", "rightParen", "else", "if", "c", "n", "methodLine", "index", "c", "content", "charAt", "index", "if", "c", "n", "methodLine", "while", "Character", "isWhitespace", "c", "index", "if", "index", "return", "c", "content", "charAt", "index", "if", "c", "n", "methodLine", "while", "Character", "isWhitespace", "c", "methodName", "c", "index", "if", "index", "return", "c", "content", "charAt", "index", "if", "c", "n", "methodLine", "methodName", "new", "StringBuilder", "methodName", "reverse", "toString", "catch", "Exception", "e", "e", "printStackTrace", "return", "String", "format", "methodName", "methodLine" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\util\\CodeUtil.java",
  "startLine" : 146,
  "endLine" : 251,
  "identifiers" : [ "String", "methodName", "int", "methodLine", "startLine", "File", "file", "new", "File", "path", "if", "file", "exists", "return", "methodName", "try", "List", "String", "lines", "FileUtil", "readFrontLines", "path", "startLine", "if", "lines", "size", "return", "String", "content", "String", "join", "lines", "int", "index", "content", "lastIndexOf", "char", "c", "content", "charAt", "index", "if", "c", "n", "methodLine", "while", "Character", "isWhitespace", "c", "index", "if", "index", "return", "c", "content", "charAt", "index", "if", "c", "n", "methodLine", "String", "tmp", "while", "c", "tmp", "c", "index", "if", "index", "return", "c", "content", "charAt", "index", "if", "c", "n", "methodLine", "tmp", "new", "StringBuilder", "tmp", "reverse", "toString", "tmp", "tmp", "replaceAll", "if", "tmp", "length", "tmp", "contains", "CppKeyword", "CONST", "return", "int", "rightParen", "while", "rightParen", "index", "if", "index", "return", "c", "content", "charAt", "index", "if", "c", "rightParen", "else", "if", "c", "rightParen", "else", "if", "c", "n", "methodLine", "index", "c", "content", "charAt", "index", "if", "c", "n", "methodLine", "while", "Character", "isWhitespace", "c", "index", "if", "index", "return", "c", "content", "charAt", "index", "if", "c", "n", "methodLine", "while", "Character", "isWhitespace", "c", "c", "methodName", "c", "index", "if", "index", "return", "c", "content", "charAt", "index", "if", "c", "n", "methodLine", "methodName", "new", "StringBuilder", "methodName", "reverse", "toString", "catch", "Exception", "e", "e", "printStackTrace", "return", "String", "format", "methodName", "methodLine" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\util\\CodeUtil.java",
  "startLine" : 259,
  "endLine" : 353,
  "identifiers" : [ "String", "methodName", "int", "methodLine", "startLine", "File", "file", "new", "File", "path", "if", "file", "exists", "return", "methodName", "try", "List", "String", "lines", "FileUtil", "readFrontLines", "path", "startLine", "if", "lines", "size", "return", "String", "content", "String", "join", "lines", "int", "index", "content", "lastIndexOf", "char", "c", "content", "charAt", "index", "while", "Character", "isWhitespace", "c", "index", "if", "index", "return", "c", "content", "charAt", "index", "if", "c", "n", "methodLine", "while", "c", "index", "if", "index", "return", "c", "content", "charAt", "index", "if", "c", "n", "methodLine", "int", "rightParen", "while", "rightParen", "index", "if", "index", "return", "c", "content", "charAt", "index", "if", "c", "rightParen", "else", "if", "c", "rightParen", "else", "if", "c", "n", "methodLine", "index", "c", "content", "charAt", "index", "if", "c", "n", "methodLine", "while", "Character", "isWhitespace", "c", "index", "if", "index", "return", "c", "content", "charAt", "index", "if", "c", "n", "methodLine", "while", "Character", "isWhitespace", "c", "methodName", "c", "index", "if", "index", "return", "c", "content", "charAt", "index", "if", "c", "n", "methodLine", "methodName", "new", "StringBuilder", "methodName", "reverse", "toString", "catch", "Exception", "e", "e", "printStackTrace", "return", "String", "format", "methodName", "methodLine" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\util\\CodeUtil.java",
  "startLine" : 361,
  "endLine" : 410,
  "identifiers" : [ "String", "methodName", "int", "methodLine", "startLine", "File", "file", "new", "File", "path", "if", "file", "exists", "return", "methodName", "try", "List", "String", "lines", "FileUtil", "readFrontLines", "path", "startLine", "if", "lines", "size", "return", "String", "content", "String", "join", "lines", "int", "index", "content", "lastIndexOf", "PythonKeyword", "DEF", "if", "index", "return", "index", "char", "c", "content", "charAt", "index", "while", "Character", "isWhitespace", "c", "index", "if", "index", "content", "length", "return", "c", "content", "charAt", "index", "methodName", "c", "while", "c", "index", "if", "index", "content", "length", "return", "c", "content", "charAt", "index", "if", "Character", "isWhitespace", "c", "c", "methodName", "c", "catch", "Exception", "e", "e", "printStackTrace", "return", "String", "format", "methodName", "methodLine" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\util\\CodeUtil.java",
  "startLine" : 418,
  "endLine" : 502,
  "identifiers" : [ "String", "methodName", "int", "methodLine", "startLine", "File", "file", "new", "File", "path", "if", "file", "exists", "return", "methodName", "try", "List", "String", "lines", "FileUtil", "readFrontLines", "path", "startLine", "if", "lines", "size", "return", "for", "int", "i", "startLine", "i", "i", "if", "lines", "get", "i", "contains", "GolangKeyword", "FUNC", "methodLine", "i", "break", "String", "content", "String", "join", "lines", "int", "index", "content", "lastIndexOf", "GolangKeyword", "FUNC", "if", "index", "return", "index", "char", "c", "content", "charAt", "index", "while", "Character", "isWhitespace", "c", "index", "if", "index", "content", "length", "return", "c", "content", "charAt", "index", "if", "c", "int", "leftParen", "while", "leftParen", "index", "if", "index", "content", "length", "return", "c", "content", "charAt", "index", "if", "c", "leftParen", "else", "if", "c", "leftParen", "index", "c", "content", "charAt", "index", "while", "Character", "isWhitespace", "c", "index", "if", "index", "content", "length", "return", "c", "content", "charAt", "index", "methodName", "c", "while", "c", "index", "if", "index", "content", "length", "return", "c", "content", "charAt", "index", "if", "Character", "isWhitespace", "c", "c", "methodName", "c", "catch", "Exception", "e", "e", "printStackTrace", "return", "String", "format", "methodName", "methodLine" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\util\\CodeUtil.java",
  "startLine" : 526,
  "endLine" : 557,
  "identifiers" : [ "File", "tokenDataDir", "new", "File", "tokenDataPath", "if", "tokenDataDir", "exists", "return", "null", "File", "files", "tokenDataDir", "listFiles", "if", "files", "null", "files", "length", "return", "null", "return", "Arrays", "stream", "files", "filter", "new", "Predicate", "File", "Override", "public", "boolean", "test", "File", "file", "return", "file", "getName", "startsWith", "FilePath", "CLONE_DETECT_TOOL_MEASURE_LIST_PREFIX", "sorted", "new", "Comparator", "File", "Override", "public", "int", "compare", "File", "o1", "File", "o2", "String", "name1", "o1", "getName", "String", "name2", "o2", "getName", "int", "id1", "Integer", "parseInt", "name1", "substring", "FilePath", "CLONE_DETECT_TOOL_MEASURE_LIST_PREFIX", "length", "name1", "lastIndexOf", "int", "id2", "Integer", "parseInt", "name2", "substring", "FilePath", "CLONE_DETECT_TOOL_MEASURE_LIST_PREFIX", "length", "name2", "lastIndexOf", "if", "id1", "id2", "return", "else", "if", "id1", "id2", "return", "return", "mapToInt", "s", "FileUtil", "getFileLineNum", "s", "getAbsolutePath", "toArray" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\util\\CodeUtil.java",
  "startLine" : 566,
  "endLine" : 586,
  "identifiers" : [ "long", "offset", "new", "long", "int", "sum", "int", "targetLine", "for", "int", "i", "i", "measureListNums", "length", "i", "targetLine", "measureId", "sum", "sum", "measureListNums", "i", "if", "measureId", "sum", "offset", "i", "break", "String", "measureListPath", "String", "format", "tokenDataPath", "FilePath", "CLONE_DETECT_TOOL_MEASURE_LIST_PREFIX", "offset", "String", "line", "FileUtil", "readLine", "measureListPath", "targetLine", "String", "info", "line", "split", "long", "startToken", "Long", "parseLong", "info", "long", "endToken", "Long", "parseLong", "info", "offset", "startToken", "state", "getTokenIndexList", "get", "int", "offset", "offset", "endToken", "startToken", "return", "offset" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\util\\CodeUtil.java",
  "startLine" : 594,
  "endLine" : 608,
  "identifiers" : [ "try", "byte", "tokens", "new", "byte", "int", "offset", "String", "path", "String", "format", "tokenDataPath", "FilePath", "CLONE_DETECT_TOOL_TOKEN_PREFIX", "offset", "InputStream", "inputStream", "new", "FileInputStream", "path", "inputStream", "skip", "offset", "inputStream", "read", "tokens", "inputStream", "close", "return", "tokens", "catch", "IOException", "e", "e", "printStackTrace", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\util\\CodeUtil.java",
  "startLine" : 618,
  "endLine" : 656,
  "identifiers" : [ "long", "offset1", "calcMeasureOffset", "measureId1", "measureListNums", "state", "tokenDataFolder", "long", "offset2", "calcMeasureOffset", "measureId2", "measureListNums", "state", "tokenDataFolder", "byte", "tokens1", "loadTokens", "offset1", "tokenDataFolder", "byte", "tokens2", "loadTokens", "offset2", "tokenDataFolder", "if", "tokens1", "null", "tokens2", "null", "return", "f", "int", "measures", "new", "int", "measures", "new", "int", "tokens1", "length", "measures", "new", "int", "tokens1", "length", "tokens1", "length", "tokens2", "length", "byte", "tokens", "new", "byte", "tokens1", "length", "tokens2", "length", "System", "arraycopy", "tokens1", "tokens", "tokens1", "length", "System", "arraycopy", "tokens2", "tokens", "tokens1", "length", "tokens2", "length", "SuffixArray", "suffixArray", "new", "SuffixArray", "tokens", "suffixArray", "buildSuffixArray", "List", "Integer", "results", "suffixArray", "calcHeight", "List", "int", "snippets", "new", "ArrayList", "for", "int", "i", "i", "results", "size", "i", "int", "x1", "results", "get", "i", "int", "x2", "results", "get", "i", "int", "len", "results", "get", "i", "int", "firstFrom", "searchIndex", "measures", "x1", "int", "firstTo", "searchIndex", "measures", "x1", "len", "int", "secondFrom", "searchIndex", "measures", "x2", "int", "secondTo", "searchIndex", "measures", "x2", "len", "if", "firstFrom", "secondFrom", "continue", "if", "firstFrom", "firstTo", "secondFrom", "secondTo", "continue", "snippets", "add", "new", "int", "Math", "min", "x1", "x2", "Math", "max", "x1", "x2", "len", "int", "coverSize", "calcCoverLength", "snippets", "return", "coverSize", "f", "Math", "max", "tokens1", "length", "tokens2", "length" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\util\\CodeUtil.java",
  "startLine" : 674,
  "endLine" : 714,
  "identifiers" : [ "long", "offset1", "calcMeasureOffset", "measureId1", "measureListNums", "state", "tokenDataFolder", "long", "offset2", "calcMeasureOffset", "measureId2", "measureListNums", "state", "tokenDataFolder", "byte", "tokens1", "loadTokens", "offset1", "tokenDataFolder", "byte", "tokens2", "loadTokens", "offset2", "tokenDataFolder", "if", "tokens1", "null", "tokens2", "null", "return", "f", "byte", "snippetTokens1", "Arrays", "copyOfRange", "tokens1", "snippet1StartToken", "snippet1EndToken", "byte", "snippetTokens2", "Arrays", "copyOfRange", "tokens2", "snippet2StartToken", "snippet2EndToken", "int", "measures", "new", "int", "measures", "new", "int", "snippetTokens1", "length", "measures", "new", "int", "snippetTokens1", "length", "snippetTokens1", "length", "snippetTokens2", "length", "byte", "tokens", "new", "byte", "snippetTokens1", "length", "snippetTokens2", "length", "System", "arraycopy", "snippetTokens1", "tokens", "snippetTokens1", "length", "System", "arraycopy", "snippetTokens2", "tokens", "snippetTokens1", "length", "snippetTokens2", "length", "SuffixArray", "suffixArray", "new", "SuffixArray", "tokens", "suffixArray", "buildSuffixArray", "List", "Integer", "results", "suffixArray", "calcHeight", "List", "int", "snippets", "new", "ArrayList", "for", "int", "i", "i", "results", "size", "i", "int", "x1", "results", "get", "i", "int", "x2", "results", "get", "i", "int", "len", "results", "get", "i", "int", "firstFrom", "searchIndex", "measures", "x1", "int", "firstTo", "searchIndex", "measures", "x1", "len", "int", "secondFrom", "searchIndex", "measures", "x2", "int", "secondTo", "searchIndex", "measures", "x2", "len", "if", "firstFrom", "secondFrom", "continue", "if", "firstFrom", "firstTo", "secondFrom", "secondTo", "continue", "snippets", "add", "new", "int", "Math", "min", "x1", "x2", "Math", "max", "x1", "x2", "len", "int", "coverSize", "calcCoverLength", "snippets", "return", "coverSize", "f", "Math", "max", "snippetTokens1", "length", "snippetTokens2", "length" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\util\\CodeUtil.java",
  "startLine" : 722,
  "endLine" : 731,
  "identifiers" : [ "int", "index", "for", "int", "i", "i", "measures", "length", "i", "if", "pos", "measures", "i", "pos", "measures", "i", "index", "i", "break", "return", "index" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\util\\CodeUtil.java",
  "startLine" : 733,
  "endLine" : 774,
  "identifiers" : [ "snippets", "snippets", "parallelStream", "sorted", "new", "Comparator", "int", "Override", "public", "int", "compare", "int", "o1", "int", "o2", "if", "o1", "o2", "return", "else", "if", "o1", "o2", "return", "return", "collect", "Collectors", "toList", "int", "index", "int", "totalSize", "int", "startToken", "int", "size", "while", "index", "snippets", "size", "int", "snippetFirst", "snippets", "get", "index", "int", "snippetSize", "snippets", "get", "index", "if", "index", "startToken", "snippetFirst", "size", "snippetSize", "index", "continue", "if", "startToken", "size", "snippetFirst", "if", "startToken", "size", "snippetFirst", "snippetSize", "else", "size", "snippetFirst", "startToken", "snippetSize", "index", "else", "totalSize", "size", "startToken", "snippetFirst", "size", "snippetSize", "index", "totalSize", "size", "return", "totalSize" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\util\\FileUtil.java",
  "startLine" : 18,
  "endLine" : 34,
  "identifiers" : [ "List", "String", "lines", "new", "ArrayList", "int", "lineCount", "try", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "path", "String", "line", "null", "while", "line", "reader", "readLine", "null", "lineCount", "if", "lineCount", "endLine", "break", "lines", "add", "line", "catch", "Exception", "e", "e", "printStackTrace", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\util\\FileUtil.java",
  "startLine" : 58,
  "endLine" : 71,
  "identifiers" : [ "try", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "path", "int", "lineCnt", "String", "line", "null", "while", "line", "reader", "readLine", "null", "if", "lineCnt", "lineNum", "return", "line", "catch", "IOException", "e", "e", "printStackTrace", "return" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\util\\SuffixArray.java",
  "startLine" : 28,
  "endLine" : 54,
  "identifiers" : [ "for", "int", "i", "i", "sa", "length", "i", "sa", "i", "i", "Arrays", "parallelSort", "sa", "new", "Comparator", "Integer", "Override", "public", "int", "compare", "Integer", "o1", "Integer", "o2", "byte", "suffix1", "Arrays", "copyOfRange", "tokens", "o1", "tokens", "length", "byte", "suffix2", "Arrays", "copyOfRange", "tokens", "o2", "tokens", "length", "int", "size1", "suffix1", "length", "int", "size2", "suffix2", "length", "int", "size", "Math", "min", "size1", "size2", "int", "result", "for", "int", "i", "i", "size", "i", "if", "suffix1", "i", "suffix2", "i", "result", "break", "else", "if", "suffix1", "i", "suffix2", "i", "result", "break", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\main\\java\\com\\fudan\\codeclone\\util\\SuffixArray.java",
  "startLine" : 59,
  "endLine" : 80,
  "identifiers" : [ "List", "Integer", "results", "new", "ArrayList", "for", "int", "i", "i", "sa", "length", "i", "byte", "suffix1", "Arrays", "copyOfRange", "tokens", "sa", "i", "tokens", "length", "byte", "suffix2", "Arrays", "copyOfRange", "tokens", "sa", "i", "tokens", "length", "int", "cnt", "int", "size", "Math", "min", "suffix1", "length", "suffix2", "length", "for", "int", "j", "j", "size", "j", "if", "suffix1", "j", "suffix2", "j", "break", "cnt", "height", "i", "cnt", "if", "height", "i", "minHeight", "results", "add", "sa", "i", "results", "add", "sa", "i", "results", "add", "height", "i", "return", "results" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\test\\java\\com\\fudan\\codeclone\\util\\CodeUtilTest.java",
  "startLine" : 54,
  "endLine" : 64,
  "identifiers" : [ "String", "path", "int", "startLine", "String", "info", "CodeUtil", "getGolangMethodNameAndLine", "path", "startLine", "System", "out", "println", "info", "CodeMethod", "codeMethod", "new", "CodeMethod", "System", "out", "println", "codeMethod" ]
}, {
  "path" : "d:\\GitRepo\\CodeCloneHelper\\src\\test\\java\\com\\fudan\\codeclone\\util\\SuffixArrayTest.java",
  "startLine" : 18,
  "endLine" : 27,
  "identifiers" : [ "byte", "tokens", "new", "byte", "long", "start", "System", "currentTimeMillis", "SuffixArray", "suffixArray", "new", "SuffixArray", "Arrays", "copyOfRange", "tokens", "suffixArray", "buildSuffixArray", "System", "out", "println", "Duration", "ofMillis", "System", "currentTimeMillis", "start", "toString", "List", "Integer", "results", "suffixArray", "calcHeight", "System", "out", "println", "Duration", "ofMillis", "System", "currentTimeMillis", "start", "toString" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\config\\Config.java",
  "startLine" : 35,
  "endLine" : 48,
  "identifiers" : [ "properties", "setProperty", "suffix", "properties", "setProperty", "repoPath", "properties", "setProperty", "outputFolder", "properties", "setProperty", "startCommit", "properties", "setProperty", "endCommit", "properties", "setProperty", "commitInterval", "toString", "properties", "setProperty", "outputInterval", "toString", "properties", "setProperty", "traceCommit", "properties", "setProperty", "extractedPath", "properties", "store", "new", "FileWriter", "CONFIG_FILE", "COMMENT" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\config\\Config.java",
  "startLine" : 53,
  "endLine" : 78,
  "identifiers" : [ "try", "if", "new", "File", "CONFIG_FILE", "exists", "properties", "load", "new", "FileReader", "CONFIG_FILE", "suffix", "properties", "getProperty", "repoPath", "properties", "getProperty", "outputFolder", "properties", "getProperty", "startCommit", "properties", "getProperty", "endCommit", "properties", "getProperty", "commitInterval", "Integer", "parseInt", "properties", "getProperty", "outputInterval", "Integer", "parseInt", "properties", "getProperty", "trim", "traceCommit", "properties", "getProperty", "extractedPath", "properties", "getProperty", "else", "save", "System", "out", "println", "System", "exit", "catch", "IOException", "e", "System", "exit", "catch", "NumberFormatException", "e", "System", "out", "println", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\controller\\DiffManager.java",
  "startLine" : 37,
  "endLine" : 63,
  "identifiers" : [ "List", "RevCommit", "cutRevCommitList", "new", "ArrayList", "for", "RevCommit", "revCommit", "logRevCommitList", "if", "revCommit", "getCommitTime", "startRevCommit", "getCommitTime", "cutRevCommitList", "add", "revCommit", "else", "break", "if", "cutRevCommitList", "size", "cutRevCommitList", "add", "startRevCommit", "else", "if", "cutRevCommitList", "get", "cutRevCommitList", "size", "getCommitTime", "startRevCommit", "getCommitTime", "else", "if", "cutRevCommitList", "get", "cutRevCommitList", "size", "getCommitTime", "startRevCommit", "getCommitTime", "cutRevCommitList", "add", "startRevCommit", "return", "cutRevCommitList" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\controller\\MappingManager.java",
  "startLine" : 67,
  "endLine" : 84,
  "identifiers" : [ "if", "left", "getAddStringList", "size", "right", "getAddStringList", "size", "left", "getRemoveStringList", "size", "right", "getRemoveStringList", "size", "return", "false", "else", "if", "isTwoStringListEquals", "left", "getAddStringList", "right", "getAddStringList", "isTwoStringListEquals", "left", "getRemoveStringList", "right", "getRemoveStringList", "return", "true", "else", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\controller\\MappingManager.java",
  "startLine" : 85,
  "endLine" : 102,
  "identifiers" : [ "boolean", "result", "true", "for", "int", "i", "i", "leftStringList", "size", "i", "String", "leftString", "leftStringList", "get", "i", "String", "rightString", "rightStringList", "get", "i", "String", "pattern_whitespace", "String", "nows_leftString", "leftString", "replaceAll", "pattern_whitespace", "String", "nows_rightString", "rightString", "replaceAll", "pattern_whitespace", "if", "nows_leftString", "equals", "nows_rightString", "return", "false", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\controller\\ShowFileDiff.java",
  "startLine" : 46,
  "endLine" : 102,
  "identifiers" : [ "DiffInfo", "diffInfo", "null", "try", "AbstractTreeIterator", "oldTreeParser", "prepareTreeParser", "repository", "oldCommit", "getId", "getName", "AbstractTreeIterator", "newTreeParser", "prepareTreeParser", "repository", "newCommit", "getId", "getName", "List", "DiffEntry", "diffEntryList", "git", "diff", "setOldTree", "oldTreeParser", "setNewTree", "newTreeParser", "setPathFilter", "PathFilter", "create", "getVersedRelativePath", "cloneInstance", "getPath", "setContextLines", "call", "if", "diffEntryList", "size", "System", "out", "println", "return", "null", "DiffEntry", "diffEntry", "diffEntryList", "get", "EditList", "editList", "getEditListFromDiffEntry", "repository", "diffEntry", "CloneInstanceWithStatus", "cloneInstanceInNewCommitWithStatus", "getNewCloneInstanceWithStatus", "editList", "cloneInstance", "if", "cloneInstanceInNewCommitWithStatus", "getStatus", "Status", "D", "boolean", "fileExist", "FileExistUtil", "isFileExist", "repository", "newCommit", "cloneInstanceInNewCommitWithStatus", "getPath", "if", "fileExist", "cloneInstanceInNewCommitWithStatus", "setStatus", "Status", "Q", "CloneInstance", "newCloneInstance", "new", "CloneInstance", "cloneInstanceInNewCommitWithStatus", "getPath", "cloneInstanceInNewCommitWithStatus", "getStartLine", "cloneInstanceInNewCommitWithStatus", "getEndLine", "diffInfo", "new", "DiffInfo", "newCommit", "newCloneInstance", "cloneInstanceInNewCommitWithStatus", "getStatus", "catch", "Exception", "e", "e", "printStackTrace", "return", "diffInfo" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\controller\\ShowFileDiff.java",
  "startLine" : 106,
  "endLine" : 122,
  "identifiers" : [ "try", "RevWalk", "walk", "new", "RevWalk", "repository", "RevCommit", "commit", "walk", "parseCommit", "ObjectId", "fromString", "objectId", "RevTree", "tree", "walk", "parseTree", "commit", "getTree", "getId", "CanonicalTreeParser", "treeParser", "new", "CanonicalTreeParser", "try", "ObjectReader", "reader", "repository", "newObjectReader", "treeParser", "reset", "reader", "tree", "getId", "walk", "dispose", "return", "treeParser" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\controller\\ShowFileDiff.java",
  "startLine" : 123,
  "endLine" : 153,
  "identifiers" : [ "if", "edits", "isEmpty", "return", "a", "for", "int", "i", "i", "edits", "size", "i", "final", "Edit", "e", "edits", "get", "i", "if", "a", "e", "getBeginA", "if", "i", "return", "a", "return", "e", "getBeginB", "e", "getBeginA", "a", "if", "e", "getBeginA", "a", "return", "e", "getBeginB", "if", "e", "getEndA", "a", "return", "e", "getEndB", "if", "e", "getBeginA", "a", "a", "e", "getEndA", "return", "final", "Edit", "last", "edits", "get", "edits", "size", "return", "last", "getEndB", "a", "last", "getEndA" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\controller\\ShowFileDiff.java",
  "startLine" : 170,
  "endLine" : 182,
  "identifiers" : [ "boolean", "isModified", "false", "for", "Edit", "edit", "editList", "int", "beginA", "edit", "getBeginA", "int", "endA", "edit", "getEndA", "if", "oldCloneInstance", "getStartLine", "beginA", "oldCloneInstance", "getEndLine", "endA", "isModified", "true", "return", "isModified" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\controller\\ShowFileDiff.java",
  "startLine" : 183,
  "endLine" : 199,
  "identifiers" : [ "DiffFormatter", "formatter", "new", "DiffFormatter", "NullOutputStream", "INSTANCE", "formatter", "setRepository", "repository", "formatter", "setContext", "formatter", "setDiffComparator", "RawTextComparator", "WS_IGNORE_ALL", "EditList", "editList", "new", "EditList", "String", "diffLogText", "null", "try", "formatter", "format", "diffEntry", "editList", "formatter", "toFileHeader", "diffEntry", "toEditList", "catch", "IOException", "e", "e", "printStackTrace", "return", "editList" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\controller\\ShowFileDiff.java",
  "startLine" : 201,
  "endLine" : 223,
  "identifiers" : [ "ByteArrayOutputStream", "byteArrayOutputStream", "new", "ByteArrayOutputStream", "DiffFormatter", "formatter", "new", "DiffFormatter", "byteArrayOutputStream", "formatter", "setRepository", "repository", "formatter", "setContext", "formatter", "setDiffComparator", "RawTextComparator", "WS_IGNORE_ALL", "EditList", "editList", "null", "String", "diffLogText", "null", "try", "formatter", "format", "diffEntry", "diffLogText", "byteArrayOutputStream", "toString", "byteArrayOutputStream", "close", "editList", "formatter", "toFileHeader", "diffEntry", "toEditList", "catch", "IOException", "e", "e", "printStackTrace", "Pair", "String", "EditList", "diffTextEditListPair", "new", "Pair", "diffLogText", "editList", "return", "diffTextEditListPair" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\controller\\ShowFileDiff.java",
  "startLine" : 225,
  "endLine" : 259,
  "identifiers" : [ "Status", "statusInNewCommit", "Status", "N", "int", "newStartLine", "int", "newEndLine", "newStartLine", "mapA2B", "oldCloneInstance", "getStartLine", "editList", "newEndLine", "mapA2B", "oldCloneInstance", "getEndLine", "editList", "if", "newStartLine", "newEndLine", "statusInNewCommit", "Status", "D", "else", "if", "newStartLine", "newStartLine", "getNewStartLine", "oldCloneInstance", "getStartLine", "editList", "statusInNewCommit", "Status", "E", "else", "if", "newEndLine", "newEndLine", "getNewEndLine", "oldCloneInstance", "getEndLine", "editList", "statusInNewCommit", "Status", "E", "else", "if", "newStartLine", "newEndLine", "statusInNewCommit", "Status", "D", "else", "if", "isModified", "oldCloneInstance", "editList", "statusInNewCommit", "Status", "M", "CloneInstanceWithStatus", "cloneInstanceWithStatus", "new", "CloneInstanceWithStatus", "oldCloneInstance", "getPath", "newStartLine", "newEndLine", "statusInNewCommit", "return", "cloneInstanceWithStatus" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\controller\\ShowFileDiff.java",
  "startLine" : 261,
  "endLine" : 294,
  "identifiers" : [ "List", "EditContent", "editContentListAfterCut", "new", "ArrayList", "int", "startLine", "oldCloneInstance", "getStartLine", "int", "endLine", "oldCloneInstance", "getEndLine", "for", "EditContent", "editContent", "fullEditContentList", "int", "beginA", "editContent", "getEdit", "getBeginA", "int", "endA", "editContent", "getEdit", "getEndA", "if", "startLine", "beginA", "endA", "endLine", "editContentListAfterCut", "add", "editContent", "else", "if", "beginA", "startLine", "startLine", "endA", "endA", "endLine", "Edit", "Type", "type", "editContent", "getEdit", "getType", "if", "type", "Edit", "Type", "INSERT", "editContentListAfterCut", "add", "editContent", "else", "if", "type", "Edit", "Type", "REPLACE", "int", "interval", "endA", "startLine", "Edit", "newEdit", "new", "Edit", "startLine", "endA", "editContent", "getEdit", "getEndB", "interval", "editContent", "getEdit", "getEndB", "else", "if", "beginA", "endLine", "endLine", "endA", "beginA", "startLine", "return", "editContentListAfterCut" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\controller\\ShowFileDiff.java",
  "startLine" : 296,
  "endLine" : 321,
  "identifiers" : [ "List", "EditContent", "editContentListAfterCut", "new", "ArrayList", "int", "startLine", "oldCloneInstance", "getStartLine", "int", "endLine", "oldCloneInstance", "getEndLine", "for", "EditContent", "editContent", "fullEditContentList", "int", "beginA", "editContent", "getEdit", "getBeginA", "int", "endA", "editContent", "getEdit", "getEndA", "if", "startLine", "beginA", "endA", "endLine", "editContentListAfterCut", "add", "editContent", "continue", "else", "if", "beginA", "startLine", "startLine", "endA", "editContentListAfterCut", "add", "editContent", "continue", "else", "if", "beginA", "endLine", "endLine", "endA", "editContentListAfterCut", "add", "editContent", "continue", "return", "editContentListAfterCut" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\CurCommit.java",
  "startLine" : 35,
  "endLine" : 50,
  "identifiers" : [ "Config", "load", "try", "this", "repository", "new", "FileRepositoryBuilder", "setGitDir", "new", "File", "repoPath", "File", "separator", "setMustExist", "true", "build", "System", "out", "println", "catch", "IOException", "e", "e", "printStackTrace", "System", "out", "println", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\CurCommit.java",
  "startLine" : 51,
  "endLine" : 64,
  "identifiers" : [ "String", "blobFolder", "Config", "outputFolder", "File", "separator", "String", "suffix", "Config", "suffix", "String", "suffixArray", "suffix", "split", "Set", "String", "suffixSet", "new", "HashSet", "Arrays", "asList", "suffixArray", "RevCommit", "revEndCommit", "null", "RevWalk", "walk", "new", "RevWalk", "repository", "try", "revEndCommit", "walk", "parseCommit", "ObjectId", "fromString", "endCommit", "catch", "Exception", "e", "e", "printStackTrace", "IsCurCommitBlob", "getCurCommitBlob", "repository", "revEndCommit", "suffixSet" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\GetCSV.java",
  "startLine" : 48,
  "endLine" : 65,
  "identifiers" : [ "Config", "load", "try", "this", "repository", "new", "FileRepositoryBuilder", "setGitDir", "new", "File", "repoPath", "File", "separator", "setMustExist", "true", "build", "System", "out", "println", "catch", "IOException", "e", "e", "printStackTrace", "System", "out", "println", "System", "exit", "File", "resultFolder", "new", "File", "Config", "outputFolder", "File", "separator", "resultFolder", "mkdirs" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\GetCSV.java",
  "startLine" : 67,
  "endLine" : 140,
  "identifiers" : [ "String", "blobFolder", "Config", "outputFolder", "File", "separator", "String", "suffix", "Config", "suffix", "String", "suffixArray", "suffix", "split", "Set", "String", "suffixSet", "new", "HashSet", "Arrays", "asList", "suffixArray", "RevCommit", "revStartCommit", "null", "RevCommit", "revEndCommit", "null", "RevWalk", "walk", "new", "RevWalk", "repository", "try", "revStartCommit", "walk", "parseCommit", "ObjectId", "fromString", "Config", "startCommit", "revEndCommit", "walk", "parseCommit", "ObjectId", "fromString", "endCommit", "catch", "Exception", "e", "e", "printStackTrace", "List", "RevCommit", "parentCommitList", "CommitListUtil", "getCommitList", "walk", "revStartCommit", "revEndCommit", "System", "out", "println", "parentCommitList", "size", "TreeWalk", "treeWalk", "new", "TreeWalk", "repository", "repository", "newObjectReader", "treeWalk", "setRecursive", "true", "int", "i", "final", "Long", "startTime", "System", "currentTimeMillis", "Set", "String", "lastCommitPathSet", "new", "HashSet", "for", "int", "idx", "parentCommitList", "size", "idx", "idx", "RevCommit", "commit", "parentCommitList", "get", "idx", "PersonIdent", "personIdent", "commit", "getAuthorIdent", "Long", "authorTime", "personIdent", "getWhen", "getTime", "L", "String", "commitTimeStr", "util", "DateUtil", "convertTime", "commit", "getCommitTime", "String", "authorTimeStr", "util", "DateUtil", "convertTime", "authorTime", "String", "commitId", "commit", "getName", "if", "idx", "parentCommitList", "size", "lastCommitPathSet", "getRealPathSet", "treeWalk", "commit", "suffixSet", "continue", "Set", "String", "curPathSet", "getRealPathSet", "treeWalk", "commit", "suffixSet", "Set", "String", "delPathSet", "getDelSet", "curPathSet", "lastCommitPathSet", "for", "String", "realPath", "delPathSet", "removeInfoList", "add", "realPath", "commitId", "lastCommitPathSet", "clear", "lastCommitPathSet", "curPathSet", "curPathSet", "null", "if", "i", "Config", "outputInterval", "writeRemoveInfo", "System", "out", "println", "if", "i", "Long", "cur", "System", "currentTimeMillis", "Long", "used", "cur", "startTime", "L", "L", "Long", "usedSec", "cur", "startTime", "L", "System", "out", "println", "i", "used", "usedSec", "i", "writeRemoveInfo", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\GetCSV.java",
  "startLine" : 147,
  "endLine" : 171,
  "identifiers" : [ "Set", "String", "pathSet", "new", "HashSet", "RevTree", "curTree", "commit", "getTree", "try", "treeWalk", "reset", "curTree", "while", "treeWalk", "next", "String", "readPath", "treeWalk", "getPathString", "boolean", "ok", "false", "for", "String", "sufix", "suffixSet", "if", "readPath", "endsWith", "sufix", "ok", "true", "break", "if", "ok", "continue", "pathSet", "add", "readPath", "catch", "IOException", "e", "e", "printStackTrace", "return", "pathSet" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\GetCSV.java",
  "startLine" : 181,
  "endLine" : 200,
  "identifiers" : [ "File", "resultFile", "new", "File", "Config", "outputFolder", "File", "separator", "if", "removeInfoList", "size", "try", "FileWriter", "fw", "new", "FileWriter", "resultFile", "getAbsoluteFile", "true", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "for", "String", "line", "removeInfoList", "bw", "write", "line", "bw", "flush", "bw", "close", "catch", "Exception", "e", "e", "printStackTrace", "removeInfoList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\GetCSV.java",
  "startLine" : 202,
  "endLine" : 218,
  "identifiers" : [ "File", "resultFile", "new", "File", "Config", "outputFolder", "File", "separator", "try", "Files", "deleteIfExists", "resultFile", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "try", "resultFile", "createNewFile", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\Pipeline.java",
  "startLine" : 32,
  "endLine" : 49,
  "identifiers" : [ "Pipeline", "pipeline", "new", "Pipeline", "pipeline", "init", "pipeline", "build", "pipeline", "dispose", "System", "out", "println", "if", "pipeline", "traceCommitValid", "GetCSV", "writeEmptyFile", "else", "GetCSV", "getDeletedFileList" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\Pipeline.java",
  "startLine" : 53,
  "endLine" : 74,
  "identifiers" : [ "Config", "load", "try", "this", "repository", "new", "FileRepositoryBuilder", "setGitDir", "new", "File", "repoPath", "File", "separator", "setMustExist", "true", "build", "System", "out", "println", "catch", "IOException", "e", "e", "printStackTrace", "System", "out", "println", "System", "exit", "File", "resultFolder", "new", "File", "Config", "outputFolder", "File", "separator", "try", "FileUtils", "deleteDirectory", "resultFolder", "resultFolder", "mkdirs", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\Pipeline.java",
  "startLine" : 76,
  "endLine" : 227,
  "identifiers" : [ "String", "blobFolder", "Config", "outputFolder", "File", "separator", "String", "suffix", "Config", "suffix", "String", "suffixArray", "suffix", "split", "Set", "String", "suffixSet", "new", "HashSet", "Arrays", "asList", "suffixArray", "RevCommit", "revStartCommit", "null", "RevCommit", "revEndCommit", "null", "RevWalk", "walk", "new", "RevWalk", "repository", "try", "revStartCommit", "walk", "parseCommit", "ObjectId", "fromString", "Config", "startCommit", "revEndCommit", "walk", "parseCommit", "ObjectId", "fromString", "endCommit", "catch", "Exception", "e", "e", "printStackTrace", "RevCommit", "traceCommit", "null", "try", "traceCommit", "walk", "parseCommit", "ObjectId", "fromString", "Config", "traceCommit", "initCurFiles", "traceCommit", "traceCommitValid", "true", "catch", "Exception", "e", "System", "out", "println", "IsCurCommitBlob", "getCurCommitBlob", "repository", "revEndCommit", "suffixSet", "List", "RevCommit", "parentCommitList", "CommitListUtil", "getCommitList", "walk", "revStartCommit", "revEndCommit", "System", "out", "println", "parentCommitList", "size", "TreeWalk", "treeWalk", "new", "TreeWalk", "repository", "repository", "newObjectReader", "treeWalk", "setRecursive", "true", "int", "i", "final", "Long", "startTime", "System", "currentTimeMillis", "String", "lastCommitTime", "String", "mergedMessage", "for", "RevCommit", "commit", "parentCommitList", "PersonIdent", "personIdent", "commit", "getAuthorIdent", "Long", "authorTime", "personIdent", "getWhen", "getTime", "l", "String", "commitTimeStr", "util", "DateUtil", "convertTime", "commit", "getCommitTime", "String", "authorTimeStr", "util", "DateUtil", "convertTime", "authorTime", "String", "commitId", "commit", "getName", "String", "message", "commit", "getFullMessage", "replaceAll", "message", "message", "replaceAll", "message", "message", "replaceAll", "mergedMessage", "message", "String", "commitInfo", "if", "i", "commitInterval", "commitInfo", "commitId", "commitTimeStr", "authorTimeStr", "personIdent", "getName", "mergedMessage", "else", "commitInfo", "commitId", "commitTimeStr", "authorTimeStr", "personIdent", "getName", "message", "commitInfoList", "add", "commitInfo", "if", "i", "commitInterval", "i", "i", "commitInfoList", "size", "extraCommitInfoList", "add", "commitInfo", "mergedMessage", "if", "commitInfoList", "size", "writeCommitInfo", "RevTree", "curTree", "commit", "getTree", "try", "treeWalk", "reset", "curTree", "while", "treeWalk", "next", "String", "readPath", "treeWalk", "getPathString", "boolean", "ok", "false", "for", "String", "sufix", "suffixSet", "if", "readPath", "endsWith", "sufix", "ok", "true", "break", "if", "ok", "continue", "if", "involveThisFile", "readPath", "continue", "String", "hashCodeOfRealPath", "String", "valueOf", "readPath", "hashCode", "String", "blobId", "treeWalk", "getObjectId", "getName", "String", "blobIdKey", "blobId", "hashCodeOfRealPath", "List", "String", "commitIdList", "blobId_commitId_Map", "getOrDefault", "blobIdKey", "new", "ArrayList", "commitIdList", "add", "commitId", "blobId_commitId_Map", "put", "blobIdKey", "commitIdList", "Set", "String", "realPathSetOfBlobId", "blobId_RealPath_Map", "getOrDefault", "blobId", "new", "HashSet", "realPathSetOfBlobId", "add", "readPath", "blobId_RealPath_Map", "put", "blobId", "realPathSetOfBlobId", "ObjectId", "blobObjId", "treeWalk", "getObjectId", "if", "i", "commitInterval", "i", "i", "commitInfoList", "size", "writeSourceFile", "blobObjId", "blobId", "blobFolder", "catch", "IOException", "e", "e", "printStackTrace", "if", "i", "Config", "outputInterval", "System", "out", "println", "blobId_commitId_Map", "size", "System", "out", "println", "blobId_commitId_Map", "size", "writeBlobFolder", "System", "out", "println", "if", "i", "Long", "cur", "System", "currentTimeMillis", "Long", "used", "cur", "startTime", "l", "l", "Long", "usedSec", "cur", "startTime", "l", "System", "out", "println", "i", "used", "usedSec", "i", "writeExtraCommitInfo", "writeRealPathList", "writeBlobFolder", "writeCommitInfo", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\Pipeline.java",
  "startLine" : 229,
  "endLine" : 263,
  "identifiers" : [ "if", "blobId_commitId_Map", "size", "try", "for", "Map", "Entry", "String", "List", "String", "entry", "blobId_commitId_Map", "entrySet", "String", "blobId", "entry", "getKey", "List", "String", "commitIdList", "entry", "getValue", "if", "commitIdList", "size", "String", "firstTwo", "blobId", "substring", "String", "rest", "blobId", "substring", "File", "outputFile", "new", "File", "Config", "outputFolder", "File", "separator", "File", "separator", "firstTwo", "File", "separator", "rest", "outputFile", "getParentFile", "mkdirs", "try", "FileWriter", "fw", "new", "FileWriter", "outputFile", "getAbsoluteFile", "true", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "for", "String", "string", "commitIdList", "bw", "write", "string", "bw", "flush", "bw", "close", "catch", "Exception", "e", "e", "printStackTrace", "catch", "Exception", "e", "e", "printStackTrace", "finally", "blobId_commitId_Map", "clear" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\Pipeline.java",
  "startLine" : 267,
  "endLine" : 312,
  "identifiers" : [ "String", "preTwoWord", "blobId", "substring", "String", "leftWord", "blobId", "substring", "File", "file", "new", "File", "outputFolder", "File", "separator", "preTwoWord", "if", "file", "exists", "file", "mkdirs", "File", "sourceFile", "new", "File", "outputFolder", "File", "separator", "preTwoWord", "File", "separator", "leftWord", "if", "sourceFile", "exists", "try", "sourceFile", "createNewFile", "catch", "IOException", "e", "e", "printStackTrace", "else", "return", "ObjectLoader", "loader", "repository", "open", "blobObjId", "FileOutputStream", "fileOutputStream", "new", "FileOutputStream", "sourceFile", "loader", "copyTo", "fileOutputStream", "fileOutputStream", "flush", "fileOutputStream", "close" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\Pipeline.java",
  "startLine" : 319,
  "endLine" : 345,
  "identifiers" : [ "File", "resultFile", "new", "File", "Config", "outputFolder", "File", "separator", "if", "blobId_RealPath_Map", "size", "try", "FileWriter", "fw", "new", "FileWriter", "resultFile", "getAbsoluteFile", "true", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "for", "Map", "Entry", "String", "Set", "String", "entry", "blobId_RealPath_Map", "entrySet", "String", "blobId", "entry", "getKey", "Set", "String", "realPathSet", "entry", "getValue", "for", "String", "realPath", "realPathSet", "bw", "write", "blobId", "realPath", "bw", "flush", "bw", "close", "catch", "Exception", "e", "e", "printStackTrace", "finally", "blobId_RealPath_Map", "clear" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\Pipeline.java",
  "startLine" : 347,
  "endLine" : 365,
  "identifiers" : [ "File", "resultFile", "new", "File", "Config", "outputFolder", "File", "separator", "if", "commitInfoList", "size", "try", "FileWriter", "fw", "new", "FileWriter", "resultFile", "getAbsoluteFile", "true", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "for", "String", "line", "commitInfoList", "bw", "write", "line", "bw", "flush", "bw", "close", "catch", "Exception", "e", "e", "printStackTrace", "commitInfoList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\Pipeline.java",
  "startLine" : 370,
  "endLine" : 388,
  "identifiers" : [ "File", "resultFile", "new", "File", "Config", "outputFolder", "File", "separator", "if", "extraCommitInfoList", "size", "return", "try", "FileWriter", "fw", "new", "FileWriter", "resultFile", "getAbsoluteFile", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "for", "String", "line", "extraCommitInfoList", "bw", "write", "line", "bw", "flush", "bw", "close", "catch", "Exception", "e", "e", "printStackTrace", "extraCommitInfoList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\Pipeline.java",
  "startLine" : 390,
  "endLine" : 420,
  "identifiers" : [ "TreeWalk", "treeWalk", "new", "TreeWalk", "repository", "repository", "newObjectReader", "treeWalk", "setRecursive", "true", "RevTree", "curTree", "revCommit", "getTree", "String", "suffix", "Config", "suffix", "String", "suffixArray", "suffix", "split", "Set", "String", "suffixSet", "new", "HashSet", "Arrays", "asList", "suffixArray", "try", "treeWalk", "reset", "curTree", "while", "treeWalk", "next", "String", "readPath", "treeWalk", "getPathString", "boolean", "ok", "false", "for", "String", "sufix", "suffixSet", "if", "readPath", "endsWith", "sufix", "ok", "true", "break", "if", "ok", "continue", "lastFiles", "add", "readPath", "catch", "IOException", "e", "e", "printStackTrace", "treeWalk", "close", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\printer\\OutputPrinter.java",
  "startLine" : 25,
  "endLine" : 47,
  "identifiers" : [ "List", "String", "itemList", "new", "ArrayList", "itemList", "add", "diffInfo", "getNewRevCommit", "getName", "int", "timestamp", "diffInfo", "getNewRevCommit", "getCommitTime", "String", "date", "TimeUtil", "getTime", "timestamp", "itemList", "add", "date", "itemList", "add", "diffInfo", "getNewCloneInstance", "getPath", "itemList", "add", "diffInfo", "getNewCloneInstance", "getStartLine", "toString", "itemList", "add", "diffInfo", "getNewCloneInstance", "getEndLine", "toString", "itemList", "add", "diffInfo", "getNewRevCommit", "getAuthorIdent", "getName", "itemList", "add", "diffInfo", "getStatus", "name", "String", "result", "String", "join", "itemList", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\util\\CodeUtil.java",
  "startLine" : 33,
  "endLine" : 59,
  "identifiers" : [ "try", "TreeWalk", "treeWalk", "new", "TreeWalk", "repository", "RevTree", "tree", "revCommit", "getTree", "treeWalk", "reset", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "filePath", "if", "treeWalk", "next", "return", "new", "ArrayList", "ObjectId", "objectId", "treeWalk", "getObjectId", "ObjectLoader", "loader", "repository", "open", "objectId", "ByteArrayOutputStream", "outputStream", "new", "ByteArrayOutputStream", "loader", "copyTo", "outputStream", "String", "content", "outputStream", "toString", "List", "String", "lines", "Arrays", "asList", "content", "split", "outputStream", "close", "treeWalk", "close", "return", "lines", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\util\\CommitListUtil.java",
  "startLine" : 24,
  "endLine" : 51,
  "identifiers" : [ "List", "RevCommit", "revCommitList", "new", "ArrayList", "RevCommit", "curCommit", "endRevCommit", "if", "endRevCommit", "getName", "equals", "startRevCommit", "getName", "revCommitList", "add", "endRevCommit", "return", "revCommitList", "while", "curCommit", "getParentCount", "revCommitList", "add", "curCommit", "String", "parentCommitStr", "curCommit", "getParent", "getName", "try", "curCommit", "revWalk", "parseCommit", "ObjectId", "fromString", "parentCommitStr", "catch", "IOException", "e", "e", "printStackTrace", "break", "if", "startRevCommit", "getName", "equals", "curCommit", "getName", "break", "if", "curCommit", "getCommitTime", "startRevCommit", "getCommitTime", "break", "return", "revCommitList" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\util\\CommitListUtil.java",
  "startLine" : 53,
  "endLine" : 75,
  "identifiers" : [ "List", "RevCommit", "cutRevCommitList", "new", "ArrayList", "int", "i", "for", "RevCommit", "revCommit", "logRevCommitList", "i", "if", "revCommit", "getCommitTime", "startRevCommit", "getCommitTime", "revCommit", "getCommitTime", "endRevCommit", "getCommitTime", "cutRevCommitList", "add", "revCommit", "else", "continue", "System", "out", "println", "i", "return", "cutRevCommitList" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\util\\ComputeDistanceUtil.java",
  "startLine" : 16,
  "endLine" : 41,
  "identifiers" : [ "HashMap", "String", "Integer", "fileMap", "initFileMap", "fileList", "List", "String", "noSame_fileList", "new", "ArrayList", "fileMap", "keySet", "List", "String", "fileFragList", "new", "ArrayList", "int", "size_MIN", "for", "String", "fileString", "noSame_fileList", "String", "fileFrag", "fileString", "split", "if", "fileFrag", "length", "size_MIN", "size_MIN", "fileFrag", "length", "fileFragList", "add", "fileFrag", "int", "fatherNodeIndex", "computeFatherNodeIndex", "fileFragList", "size_MIN", "int", "distance", "for", "String", "fileFrag", "fileFragList", "int", "dist", "fileFrag", "length", "fatherNodeIndex", "distance", "dist", "return", "distance" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\util\\ComputeDistanceUtil.java",
  "startLine" : 45,
  "endLine" : 56,
  "identifiers" : [ "HashMap", "String", "Integer", "fileMap", "new", "HashMap", "for", "String", "fileString", "fileList", "fileString", "fileString", "substring", "fileString", "lastIndexOf", "if", "fileMap", "containsKey", "fileString", "fileMap", "put", "fileString", "fileMap", "get", "fileString", "else", "fileMap", "put", "fileString", "return", "fileMap" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\util\\ComputeDistanceUtil.java",
  "startLine" : 59,
  "endLine" : 73,
  "identifiers" : [ "int", "fatherNodeIndex", "for", "int", "i", "i", "size_MIN", "i", "String", "temp", "fileFragList", "get", "i", "for", "int", "j", "j", "fileFragList", "size", "j", "if", "fileFragList", "get", "j", "i", "equals", "temp", "return", "fatherNodeIndex", "fatherNodeIndex", "i", "return", "fatherNodeIndex" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\util\\DateUtil.java",
  "startLine" : 38,
  "endLine" : 44,
  "identifiers" : [ "SimpleDateFormat", "formatter", "new", "SimpleDateFormat", "formatter", "setTimeZone", "TimeZone", "getTimeZone", "String", "timestampString", "String", "valueOf", "commitTime", "Long", "timestamp", "Long", "parseLong", "timestampString", "return", "formatter", "format", "new", "Date", "timestamp" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\util\\DateUtil.java",
  "startLine" : 68,
  "endLine" : 78,
  "identifiers" : [ "try", "Date", "date1", "dateFormat", "parse", "time1", "Date", "date2", "dateFormat", "parse", "time2", "Duration", "dura", "Duration", "between", "date1", "toInstant", "date2", "toInstant", "return", "dura", "toHours", "catch", "Exception", "e", "e", "printStackTrace", "return" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\util\\FileExistUtil.java",
  "startLine" : 15,
  "endLine" : 41,
  "identifiers" : [ "boolean", "isFileExist", "true", "try", "RevTree", "tree", "curRevCommit", "getTree", "try", "TreeWalk", "treeWalk", "new", "TreeWalk", "repository", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "getVersedRelativePath", "relativePath", "if", "treeWalk", "next", "isFileExist", "false", "catch", "Exception", "e", "e", "printStackTrace", "return", "isFileExist" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\util\\IsCurCommitBlob.java",
  "startLine" : 29,
  "endLine" : 93,
  "identifiers" : [ "List", "String", "commitBlobList", "new", "ArrayList", "RevTree", "tree", "commit", "getTree", "try", "TreeWalk", "treeWalk", "new", "TreeWalk", "repository", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "MutableObjectId", "id", "new", "MutableObjectId", "while", "treeWalk", "next", "treeWalk", "getObjectId", "id", "String", "readPath", "treeWalk", "getPathString", "boolean", "ok", "false", "for", "String", "sufix", "suffixSet", "if", "readPath", "endsWith", "sufix", "ok", "true", "break", "if", "ok", "continue", "String", "blobId", "id", "getName", "commitBlobList", "add", "blobId", "readPath", "catch", "IOException", "e", "e", "printStackTrace", "writeCommitInfo", "commitBlobList" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\util\\IsCurCommitBlob.java",
  "startLine" : 95,
  "endLine" : 107,
  "identifiers" : [ "File", "CurCommitBlobFile", "new", "File", "Config", "outputFolder", "File", "separator", "try", "FileWriter", "fw", "new", "FileWriter", "CurCommitBlobFile", "getAbsoluteFile", "false", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "bw", "write", "bw", "flush", "bw", "close", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\util\\IsCurCommitBlob.java",
  "startLine" : 109,
  "endLine" : 127,
  "identifiers" : [ "File", "CurCommitBlobFile", "new", "File", "Config", "outputFolder", "File", "separator", "if", "commitBlobList", "size", "try", "FileWriter", "fw", "new", "FileWriter", "CurCommitBlobFile", "getAbsoluteFile", "false", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "for", "String", "line", "commitBlobList", "bw", "write", "line", "bw", "flush", "bw", "close", "catch", "Exception", "e", "e", "printStackTrace", "commitBlobList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\util\\ParseGitDiffUtil.java",
  "startLine" : 11,
  "endLine" : 65,
  "identifiers" : [ "List", "EditContent", "editContentList", "new", "ArrayList", "List", "Integer", "atIndexList", "new", "ArrayList", "String", "divDiffLog", "diffLog", "split", "for", "int", "i", "i", "divDiffLog", "length", "i", "String", "line", "divDiffLog", "i", "if", "line", "startsWith", "atIndexList", "add", "i", "for", "int", "i", "i", "atIndexList", "size", "i", "List", "String", "addStringList", "new", "ArrayList", "List", "String", "removeStringList", "new", "ArrayList", "int", "lineNum", "atIndexList", "get", "i", "int", "bound", "if", "i", "atIndexList", "size", "bound", "divDiffLog", "length", "else", "bound", "atIndexList", "get", "i", "for", "int", "j", "lineNum", "j", "bound", "j", "String", "line", "divDiffLog", "j", "String", "subLine", "line", "substring", "if", "line", "startsWith", "addStringList", "add", "subLine", "else", "if", "line", "startsWith", "removeStringList", "add", "subLine", "EditContent", "editContent", "new", "EditContent", "editList", "get", "i", "addStringList", "removeStringList", "editContentList", "add", "editContent", "return", "editContentList" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\util\\PathUtil.java",
  "startLine" : 13,
  "endLine" : 19,
  "identifiers" : [ "String", "relativePathStr", "String", "repoPathStr", "new", "File", "Config", "repoPath", "getAbsolutePath", "String", "fullPathStr", "new", "File", "fullPath", "getAbsolutePath", "relativePathStr", "fullPathStr", "substring", "repoPathStr", "length", "return", "relativePathStr" ]
}, {
  "path" : "d:\\GitRepo\\CommitBlobMapper\\src\\main\\java\\util\\TimeUtil.java",
  "startLine" : 7,
  "endLine" : 13,
  "identifiers" : [ "SimpleDateFormat", "formatter", "new", "SimpleDateFormat", "String", "timestampString", "String", "valueOf", "commitTime", "Long", "timestamp", "Long", "parseLong", "timestampString", "String", "date", "formatter", "format", "new", "Date", "timestamp", "return", "date" ]
}, {
  "path" : "d:\\GitRepo\\CommitExtractor\\src\\main\\java\\com\\fudan\\config\\Config.java",
  "startLine" : 37,
  "endLine" : 43,
  "identifiers" : [ "properties", "setProperty", "REPO_FOLDER", "properties", "setProperty", "FILE_EXTENSIONS", "properties", "setProperty", "LAST_COMMIT_FILE", "properties", "setProperty", "OUTPUT_SNAPSHOTS", "toString", "properties", "store", "new", "FileWriter", "CONFIG_FILE" ]
}, {
  "path" : "d:\\GitRepo\\CommitExtractor\\src\\main\\java\\com\\fudan\\config\\Config.java",
  "startLine" : 45,
  "endLine" : 69,
  "identifiers" : [ "if", "new", "File", "CONFIG_FILE", "exists", "save", "System", "out", "printf", "CONFIG_FILE", "System", "exit", "properties", "load", "new", "FileReader", "CONFIG_FILE", "REPO_FOLDER", "properties", "getProperty", "LAST_COMMIT_FILE", "properties", "getProperty", "OUTPUT_SNAPSHOTS", "Integer", "parseInt", "properties", "getProperty", "OUTPUT_FOLDER", "DateUtil", "format", "new", "Date", "COMMIT_FILE", "OUTPUT_FOLDER", "File", "separator", "UPDATE_FILE", "OUTPUT_FOLDER", "File", "separator", "NEW_FILE", "OUTPUT_FOLDER", "File", "separator", "DELETED_FILE", "OUTPUT_FOLDER", "File", "separator", "DELETED_REPO", "OUTPUT_FOLDER", "File", "separator", "FILE_EXTENSIONS", "properties", "getProperty", "FILE_EXTENSIONS_MAP", "new", "HashMap", "String", "extensions", "FILE_EXTENSIONS", "split", "for", "String", "extension", "extensions", "FILE_EXTENSIONS_MAP", "put", "extension" ]
}, {
  "path" : "d:\\GitRepo\\CommitExtractor\\src\\main\\java\\com\\fudan\\Main.java",
  "startLine" : 17,
  "endLine" : 43,
  "identifiers" : [ "checkArgs", "args", "long", "timeStart", "System", "currentTimeMillis", "try", "System", "out", "println", "Config", "load", "catch", "IOException", "e", "e", "printStackTrace", "System", "exit", "List", "String", "repos", "getRepos", "if", "repos", "size", "System", "out", "println", "System", "exit", "if", "args", "equals", "Constant", "COMMAND_ARGS_COMMIT", "CommitProcessor", "commitProcessor", "new", "CommitProcessor", "commitProcessor", "process", "repos", "else", "FileProcessor", "fileProcessor", "new", "FileProcessor", "fileProcessor", "process", "repos", "long", "timeEnd", "System", "currentTimeMillis", "System", "out", "printf", "DateUtil", "convert", "timeEnd", "timeStart" ]
}, {
  "path" : "d:\\GitRepo\\CommitExtractor\\src\\main\\java\\com\\fudan\\Main.java",
  "startLine" : 50,
  "endLine" : 59,
  "identifiers" : [ "if", "args", "length", "System", "out", "println", "Constant", "USAGE_INFO", "System", "exit", "if", "args", "equals", "Constant", "COMMAND_ARGS_COMMIT", "args", "equals", "Constant", "COMMAND_ARGS_FILE", "System", "out", "println", "Constant", "USAGE_INFO", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\CommitExtractor\\src\\main\\java\\com\\fudan\\Main.java",
  "startLine" : 66,
  "endLine" : 80,
  "identifiers" : [ "List", "String", "repos", "new", "ArrayList", "File", "repoFolder", "new", "File", "Config", "REPO_FOLDER", "if", "repoFolder", "exists", "repoFolder", "isDirectory", "File", "repoFiles", "repoFolder", "listFiles", "if", "repoFiles", "null", "repoFiles", "length", "for", "File", "repo", "repoFiles", "if", "repo", "isDirectory", "repos", "add", "repo", "getAbsolutePath", "return", "repos" ]
}, {
  "path" : "d:\\GitRepo\\CommitExtractor\\src\\main\\java\\com\\fudan\\processor\\CommitProcessor.java",
  "startLine" : 22,
  "endLine" : 55,
  "identifiers" : [ "try", "File", "outputFolder", "new", "File", "Config", "OUTPUT_FOLDER", "if", "outputFolder", "exists", "outputFolder", "mkdirs", "catch", "Exception", "e", "e", "printStackTrace", "try", "System", "out", "println", "GitManager", "init", "repos", "catch", "Exception", "e", "e", "printStackTrace", "System", "exit", "try", "System", "out", "println", "Map", "String", "String", "commits", "GitManager", "getLatestCommit", "String", "json", "JSONObject", "toJSONString", "commits", "FileUtil", "write", "Config", "COMMIT_FILE", "json", "false", "catch", "Exception", "e", "e", "printStackTrace", "System", "out", "println", "GitManager", "release", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\CommitExtractor\\src\\main\\java\\com\\fudan\\processor\\FileProcessor.java",
  "startLine" : 22,
  "endLine" : 198,
  "identifiers" : [ "try", "File", "outputFolder", "new", "File", "Config", "OUTPUT_FOLDER", "if", "outputFolder", "exists", "outputFolder", "mkdirs", "catch", "Exception", "e", "e", "printStackTrace", "try", "System", "out", "println", "GitManager", "init", "repos", "catch", "Exception", "e", "e", "printStackTrace", "System", "exit", "try", "System", "out", "println", "String", "json", "new", "String", "Files", "readAllBytes", "Paths", "get", "Config", "LAST_COMMIT_FILE", "Map", "lastCommits", "JSONObject", "parseObject", "json", "Map", "class", "System", "out", "println", "Map", "String", "String", "currentCommits", "GitManager", "getLatestCommit", "List", "String", "newFiles", "new", "ArrayList", "Map", "String", "String", "updateFiles", "new", "HashMap", "List", "String", "deletedFiles", "new", "ArrayList", "System", "out", "println", "int", "cnt", "int", "size", "currentCommits", "size", "for", "String", "repo", "currentCommits", "keySet", "cnt", "System", "out", "printf", "cnt", "size", "if", "lastCommits", "containsKey", "repo", "List", "String", "files", "FileUtil", "listAllFiles", "repo", "Config", "FILE_EXTENSIONS_MAP", "for", "String", "file", "files", "String", "realPath", "file", "substring", "repo", "length", "newFiles", "add", "String", "format", "repo", "realPath", "else", "String", "lastCommit", "String", "lastCommits", "get", "repo", "String", "currentCommit", "currentCommits", "get", "repo", "if", "lastCommit", "equals", "currentCommit", "continue", "Map", "String", "String", "files", "GitManager", "getUpdateFiles", "repo", "lastCommit", "currentCommit", "for", "String", "newPath", "files", "keySet", "String", "oldPath", "files", "get", "newPath", "if", "newPath", "contains", "oldPath", "contains", "continue", "String", "extension", "null", "if", "newPath", "contains", "extension", "newPath", "substring", "newPath", "lastIndexOf", "else", "extension", "oldPath", "substring", "oldPath", "lastIndexOf", "if", "Config", "FILE_EXTENSIONS_MAP", "containsKey", "extension", "String", "absoluteNewPath", "repo", "newPath", "String", "absoluteOldPath", "repo", "files", "get", "newPath", "if", "newPath", "equals", "Constant", "NULL_FILE", "files", "get", "newPath", "equals", "Constant", "NULL_FILE", "deletedFiles", "add", "absoluteOldPath", "else", "if", "files", "get", "newPath", "equals", "Constant", "NULL_FILE", "newPath", "equals", "Constant", "NULL_FILE", "newFiles", "add", "absoluteNewPath", "else", "updateFiles", "put", "absoluteNewPath", "absoluteOldPath", "System", "out", "println", "Set", "String", "oldRepoSet", "new", "HashSet", "lastCommits", "keySet", "Set", "String", "newRepoSet", "currentCommits", "keySet", "oldRepoSet", "removeAll", "newRepoSet", "try", "System", "out", "println", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "Config", "UPDATE_FILE", "for", "String", "path", "updateFiles", "keySet", "writer", "write", "path", "writer", "newLine", "writer", "flush", "writer", "close", "System", "out", "println", "writer", "new", "BufferedWriter", "new", "FileWriter", "Config", "NEW_FILE", "for", "String", "path", "newFiles", "writer", "write", "path", "writer", "newLine", "writer", "flush", "writer", "close", "System", "out", "println", "writer", "new", "BufferedWriter", "new", "FileWriter", "Config", "DELETED_FILE", "for", "String", "path", "deletedFiles", "writer", "write", "path", "writer", "newLine", "writer", "flush", "writer", "close", "System", "out", "println", "writer", "new", "BufferedWriter", "new", "FileWriter", "Config", "DELETED_REPO", "for", "String", "path", "oldRepoSet", "writer", "write", "path", "writer", "newLine", "writer", "flush", "writer", "close", "if", "Config", "OUTPUT_SNAPSHOTS", "System", "out", "println", "newFiles", "addAll", "updateFiles", "keySet", "for", "String", "path", "newFiles", "String", "tmp", "path", "split", "String", "src", "tmp", "File", "separator", "tmp", "String", "realPath", "tmp", "String", "repoName", "tmp", "substring", "tmp", "lastIndexOf", "File", "separator", "String", "dst", "String", "format", "Config", "OUTPUT_FOLDER", "repoName", "realPath", "File", "dstFile", "new", "File", "dst", "dstFile", "getParentFile", "mkdirs", "OutputStream", "outputStream", "new", "FileOutputStream", "dstFile", "Files", "copy", "Paths", "get", "src", "outputStream", "outputStream", "close", "json", "JSONObject", "toJSONString", "currentCommits", "FileUtil", "write", "Config", "COMMIT_FILE", "json", "false", "catch", "IOException", "e", "e", "printStackTrace", "catch", "Exception", "e", "e", "printStackTrace", "System", "out", "println", "GitManager", "release", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\DateUtil.java",
  "startLine" : 31,
  "endLine" : 37,
  "identifiers" : [ "int", "seconds", "int", "timeMillis", "e3", "int", "hour", "seconds", "int", "minute", "seconds", "hour", "int", "second", "seconds", "hour", "minute", "return", "String", "format", "hour", "minute", "second" ]
}, {
  "path" : "d:\\GitRepo\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 20,
  "endLine" : 42,
  "identifiers" : [ "List", "String", "files", "new", "ArrayList", "File", "root", "new", "File", "path", "File", "subs", "root", "listFiles", "if", "subs", "null", "subs", "length", "return", "files", "for", "File", "f", "subs", "if", "f", "isFile", "if", "f", "getName", "contains", "continue", "String", "extension", "f", "getName", "substring", "f", "getName", "lastIndexOf", "if", "fileExtensionsMap", "containsKey", "extension", "files", "add", "f", "getAbsolutePath", "else", "List", "String", "tmp", "listAllFiles", "f", "getAbsolutePath", "fileExtensionsMap", "files", "addAll", "tmp", "return", "files" ]
}, {
  "path" : "d:\\GitRepo\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 51,
  "endLine" : 60,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "List", "String", "lines", "new", "ArrayList", "String", "line", "null", "while", "line", "reader", "readLine", "null", "lines", "add", "line", "reader", "close", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\GitManager.java",
  "startLine" : 36,
  "endLine" : 46,
  "identifiers" : [ "for", "String", "repo", "repos", "try", "Git", "git", "Git", "open", "new", "File", "repo", "repoMap", "put", "repo", "git", "repoWalkMap", "put", "repo", "new", "RevWalk", "git", "getRepository", "repoTreeMap", "put", "repo", "new", "TreeWalk", "git", "getRepository", "git", "getRepository", "newObjectReader", "catch", "Exception", "e" ]
}, {
  "path" : "d:\\GitRepo\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\GitManager.java",
  "startLine" : 51,
  "endLine" : 60,
  "identifiers" : [ "if", "repoMap", "null", "return", "for", "String", "repo", "repoMap", "keySet", "repoMap", "get", "repo", "close", "repoWalkMap", "get", "repo", "close", "repoTreeMap", "get", "repo", "close" ]
}, {
  "path" : "d:\\GitRepo\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\GitManager.java",
  "startLine" : 67,
  "endLine" : 81,
  "identifiers" : [ "Map", "String", "String", "latestCommits", "new", "HashMap", "for", "String", "repo", "repoMap", "keySet", "String", "commit", "try", "Git", "git", "repoMap", "get", "repo", "Iterator", "RevCommit", "commits", "git", "log", "call", "iterator", "commit", "commits", "next", "name", "catch", "Exception", "e", "e", "printStackTrace", "latestCommits", "put", "repo", "commit", "return", "latestCommits" ]
}, {
  "path" : "d:\\GitRepo\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\GitManager.java",
  "startLine" : 91,
  "endLine" : 107,
  "identifiers" : [ "Map", "String", "String", "updateFiles", "new", "HashMap", "try", "Git", "git", "repoMap", "get", "repo", "RevCommit", "early", "searchCommit", "repo", "earlyCommit", "RevCommit", "current", "searchCommit", "repo", "currentCommit", "AbstractTreeIterator", "earlyTree", "getAbstractTreeIterator", "early", "git", "getRepository", "AbstractTreeIterator", "currentTree", "getAbstractTreeIterator", "current", "git", "getRepository", "List", "DiffEntry", "diffEntries", "git", "diff", "setOldTree", "earlyTree", "setNewTree", "currentTree", "call", "for", "DiffEntry", "diffEntry", "diffEntries", "updateFiles", "put", "diffEntry", "getNewPath", "diffEntry", "getOldPath", "catch", "Exception", "e", "e", "printStackTrace", "return", "updateFiles" ]
}, {
  "path" : "d:\\GitRepo\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\GitManager.java",
  "startLine" : 116,
  "endLine" : 132,
  "identifiers" : [ "Git", "git", "repoMap", "get", "repo", "RevCommit", "target", "null", "RevWalk", "revWalk", "null", "try", "Repository", "repository", "git", "getRepository", "revWalk", "new", "RevWalk", "repository", "target", "revWalk", "parseCommit", "ObjectId", "fromString", "commit", "catch", "Exception", "e", "e", "printStackTrace", "finally", "if", "revWalk", "null", "revWalk", "close", "return", "target" ]
}, {
  "path" : "d:\\GitRepo\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\GitManager.java",
  "startLine" : 142,
  "endLine" : 155,
  "identifiers" : [ "RevWalk", "revWalk", "new", "RevWalk", "repository", "CanonicalTreeParser", "treeParser", "null", "try", "RevTree", "revTree", "revWalk", "parseTree", "commit", "getTree", "getId", "treeParser", "new", "CanonicalTreeParser", "treeParser", "reset", "repository", "newObjectReader", "revTree", "getId", "catch", "IOException", "e", "e", "printStackTrace", "finally", "revWalk", "dispose", "return", "treeParser" ]
}, {
  "path" : "d:\\GitRepo\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\GitManager.java",
  "startLine" : 157,
  "endLine" : 182,
  "identifiers" : [ "try", "Git", "git", "repoMap", "get", "repo", "RevWalk", "revWalk", "repoWalkMap", "get", "repo", "TreeWalk", "treeWalk", "repoTreeMap", "get", "repo", "realPath", "getVersedRelativePath", "realPath", "ObjectId", "lastCommitId", "git", "getRepository", "resolve", "commit", "revWalk", "reset", "RevCommit", "revCommit", "revWalk", "parseCommit", "lastCommitId", "treeWalk", "reset", "treeWalk", "addTree", "revCommit", "getTree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "realPath", "if", "treeWalk", "next", "return", "ObjectId", "objectId", "treeWalk", "getObjectId", "ObjectLoader", "loader", "git", "getRepository", "open", "objectId", "FileOutputStream", "outputStream", "new", "FileOutputStream", "outputFile", "loader", "copyTo", "outputStream", "outputStream", "flush", "outputStream", "close", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\MultiProjConfMaker\\src\\main\\java\\config\\Config.java",
  "startLine" : 57,
  "endLine" : 79,
  "identifiers" : [ "properties", "setProperty", "threadNum", "toString", "properties", "setProperty", "organizationName", "properties", "setProperty", "repoPath", "properties", "setProperty", "startDate", "properties", "setProperty", "endDate", "properties", "setProperty", "suffix", "properties", "setProperty", "language", "properties", "setProperty", "properties", "setProperty", "username", "properties", "setProperty", "password", "properties", "setProperty", "exeName", "properties", "setProperty", "keyWordList", "properties", "setProperty", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "OutputStreamWriter", "new", "FileOutputStream", "CONFIG_FILE", "false", "writer", "write", "COMMENT", "properties", "store", "writer", "writer", "close" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\MultiProjConfMaker\\src\\main\\java\\config\\Config.java",
  "startLine" : 84,
  "endLine" : 120,
  "identifiers" : [ "try", "if", "new", "File", "CONFIG_FILE", "exists", "properties", "load", "new", "FileReader", "CONFIG_FILE", "threadNum", "Integer", "parseInt", "properties", "getProperty", "organizationName", "properties", "getProperty", "repoPath", "properties", "getProperty", "startDate", "properties", "getProperty", "endDate", "properties", "getProperty", "suffix", "properties", "getProperty", "language", "properties", "getProperty", "url", "properties", "getProperty", "username", "properties", "getProperty", "password", "properties", "getProperty", "exeName", "properties", "getProperty", "keyWordList", "properties", "getProperty", "traceCurFiles", "properties", "getProperty", "MITbName", "organizationName", "URL", "url", "exePath", "File", "separator", "File", "separator", "exeName", "else", "save", "System", "out", "println", "System", "exit", "catch", "IOException", "e", "System", "exit", "catch", "Exception", "e", "System", "out", "println", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\MultiProjConfMaker\\src\\main\\java\\Pipeline.java",
  "startLine" : 22,
  "endLine" : 53,
  "identifiers" : [ "CommitBlobMapperProcess", "commitBlobMapperProcess", "new", "CommitBlobMapperProcess", "commitBlobMapperProcess", "process", "DetectProcess", "detectProcess", "new", "DetectProcess", "detectProcess", "process", "DBProcess", "dbProcess", "new", "DBProcess", "dbProcess", "process", "Evo2Process", "evo2Process", "new", "Evo2Process", "evo2Process", "process", "DangerProcess", "dangerProcess", "new", "DangerProcess", "dangerProcess", "process" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\MultiProjConfMaker\\src\\main\\java\\process\\CommitBlobMapperProcess.java",
  "startLine" : 25,
  "endLine" : 55,
  "identifiers" : [ "String", "jarPath", "this", "getClass", "getProtectionDomain", "getCodeSource", "getLocation", "getPath", "File", "jarFile", "new", "File", "jarPath", "String", "curPath", "jarFile", "getParentFile", "getAbsolutePath", "log", "info", "String", "blobFolderPath", "curPath", "File", "separator", "File", "blobFolderFile", "new", "File", "blobFolderPath", "if", "blobFolderFile", "exists", "log", "error", "log", "error", "blobFolderFile", "getAbsolutePath", "return", "String", "blobPropPath", "blobFolderFile", "getAbsolutePath", "File", "separator", "File", "blobPropFile", "new", "File", "blobPropPath", "try", "Files", "deleteIfExists", "blobPropFile", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "Properties", "properties", "new", "Properties", "setProperties", "properties", "try", "properties", "store", "new", "FileWriter", "blobPropFile", "COMMENT", "log", "info", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\MultiProjConfMaker\\src\\main\\java\\process\\CommitBlobMapperProcess.java",
  "startLine" : 57,
  "endLine" : 65,
  "identifiers" : [ "properties", "setProperty", "Config", "suffix", "properties", "setProperty", "Config", "repoPath", "properties", "setProperty", "File", "separator", "properties", "setProperty", "Config", "startDate", "properties", "setProperty", "Config", "endDate", "properties", "setProperty", "properties", "setProperty", "Config", "traceCurFiles" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\MultiProjConfMaker\\src\\main\\java\\process\\DangerProcess.java",
  "startLine" : 27,
  "endLine" : 57,
  "identifiers" : [ "String", "jarPath", "this", "getClass", "getProtectionDomain", "getCodeSource", "getLocation", "getPath", "File", "jarFile", "new", "File", "jarPath", "String", "curPath", "jarFile", "getParentFile", "getAbsolutePath", "log", "info", "String", "format", "JarName", "String", "blobFolderPath", "curPath", "File", "separator", "folderName", "File", "blobFolderFile", "new", "File", "blobFolderPath", "if", "blobFolderFile", "exists", "log", "error", "folderName", "log", "error", "blobFolderFile", "getAbsolutePath", "return", "String", "propPath", "blobFolderFile", "getAbsolutePath", "File", "separator", "propName", "File", "propFile", "new", "File", "propPath", "try", "Files", "deleteIfExists", "propFile", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "Properties", "properties", "new", "Properties", "setProperties", "properties", "try", "properties", "store", "new", "FileWriter", "propFile", "COMMENT", "log", "info", "propName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\MultiProjConfMaker\\src\\main\\java\\process\\DangerProcess.java",
  "startLine" : 59,
  "endLine" : 74,
  "identifiers" : [ "properties", "setProperty", "properties", "setProperty", "File", "separator", "File", "separator", "properties", "setProperty", "File", "separator", "properties", "setProperty", "File", "separator", "properties", "setProperty", "File", "separator", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "Config", "keyWordList" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\MultiProjConfMaker\\src\\main\\java\\process\\DBProcess.java",
  "startLine" : 27,
  "endLine" : 57,
  "identifiers" : [ "String", "jarPath", "this", "getClass", "getProtectionDomain", "getCodeSource", "getLocation", "getPath", "File", "jarFile", "new", "File", "jarPath", "String", "curPath", "jarFile", "getParentFile", "getAbsolutePath", "log", "info", "String", "format", "JarName", "String", "blobFolderPath", "curPath", "File", "separator", "folderName", "File", "blobFolderFile", "new", "File", "blobFolderPath", "if", "blobFolderFile", "exists", "log", "error", "folderName", "log", "error", "blobFolderFile", "getAbsolutePath", "return", "String", "propPath", "blobFolderFile", "getAbsolutePath", "File", "separator", "propName", "File", "propFile", "new", "File", "propPath", "try", "Files", "deleteIfExists", "propFile", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "Properties", "properties", "new", "Properties", "setProperties", "properties", "try", "properties", "store", "new", "FileWriter", "propFile", "COMMENT", "log", "info", "propName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\MultiProjConfMaker\\src\\main\\java\\process\\DBProcess.java",
  "startLine" : 59,
  "endLine" : 70,
  "identifiers" : [ "properties", "setProperty", "String", "valueOf", "Config", "threadNum", "properties", "setProperty", "File", "separator", "properties", "setProperty", "File", "separator", "File", "separator", "properties", "setProperty", "Config", "MITbName", "properties", "setProperty", "File", "separator", "File", "separator", "properties", "setProperty", "Config", "DRIVER", "properties", "setProperty", "Config", "URL", "properties", "setProperty", "Config", "username", "properties", "setProperty", "Config", "password" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\MultiProjConfMaker\\src\\main\\java\\process\\DetectProcess.java",
  "startLine" : 27,
  "endLine" : 57,
  "identifiers" : [ "String", "jarPath", "this", "getClass", "getProtectionDomain", "getCodeSource", "getLocation", "getPath", "File", "jarFile", "new", "File", "jarPath", "String", "curPath", "jarFile", "getParentFile", "getAbsolutePath", "log", "info", "String", "format", "JarName", "String", "blobFolderPath", "curPath", "File", "separator", "folderName", "File", "blobFolderFile", "new", "File", "blobFolderPath", "if", "blobFolderFile", "exists", "log", "error", "folderName", "log", "error", "blobFolderFile", "getAbsolutePath", "return", "String", "blobPropPath", "blobFolderFile", "getAbsolutePath", "File", "separator", "propName", "File", "blobPropFile", "new", "File", "blobPropPath", "try", "Files", "deleteIfExists", "blobPropFile", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "Properties", "properties", "new", "Properties", "setProperties", "properties", "try", "properties", "store", "new", "FileWriter", "blobPropFile", "COMMENT", "log", "info", "propName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\MultiProjConfMaker\\src\\main\\java\\process\\DetectProcess.java",
  "startLine" : 59,
  "endLine" : 72,
  "identifiers" : [ "properties", "setProperty", "Config", "language", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "Config", "exePath", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\MultiProjConfMaker\\src\\main\\java\\process\\Evo2Process.java",
  "startLine" : 27,
  "endLine" : 57,
  "identifiers" : [ "String", "jarPath", "this", "getClass", "getProtectionDomain", "getCodeSource", "getLocation", "getPath", "File", "jarFile", "new", "File", "jarPath", "String", "curPath", "jarFile", "getParentFile", "getAbsolutePath", "log", "info", "String", "format", "JarName", "String", "blobFolderPath", "curPath", "File", "separator", "folderName", "File", "blobFolderFile", "new", "File", "blobFolderPath", "if", "blobFolderFile", "exists", "log", "error", "folderName", "log", "error", "blobFolderFile", "getAbsolutePath", "return", "String", "propPath", "blobFolderFile", "getAbsolutePath", "File", "separator", "propName", "File", "propFile", "new", "File", "propPath", "try", "Files", "deleteIfExists", "propFile", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "Properties", "properties", "new", "Properties", "setProperties", "properties", "try", "properties", "store", "new", "FileWriter", "propFile", "COMMENT", "log", "info", "propName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\MultiProjConfMaker\\src\\main\\java\\process\\Evo2Process.java",
  "startLine" : 59,
  "endLine" : 78,
  "identifiers" : [ "properties", "setProperty", "Config", "URL", "properties", "setProperty", "Config", "DRIVER", "properties", "setProperty", "Config", "username", "properties", "setProperty", "Config", "password", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "Config", "MITbName", "properties", "setProperty", "Config", "repoPath", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "properties", "setProperty", "Config", "threadNum", "toString", "properties", "setProperty", "Config", "language", "properties", "setProperty" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\MultiProjConfMaker\\src\\main\\java\\process\\EvoProcess.java",
  "startLine" : 28,
  "endLine" : 58,
  "identifiers" : [ "String", "jarPath", "this", "getClass", "getProtectionDomain", "getCodeSource", "getLocation", "getPath", "File", "jarFile", "new", "File", "jarPath", "String", "curPath", "jarFile", "getParentFile", "getAbsolutePath", "log", "info", "String", "format", "JarName", "String", "blobFolderPath", "curPath", "File", "separator", "folderName", "File", "blobFolderFile", "new", "File", "blobFolderPath", "if", "blobFolderFile", "exists", "log", "error", "folderName", "log", "error", "blobFolderFile", "getAbsolutePath", "return", "String", "propPath", "blobFolderFile", "getAbsolutePath", "File", "separator", "propName", "File", "propFile", "new", "File", "propPath", "try", "Files", "deleteIfExists", "propFile", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "Properties", "properties", "new", "Properties", "setProperties", "properties", "try", "properties", "store", "new", "FileWriter", "propFile", "COMMENT", "log", "info", "propName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\MultiProjConfMaker\\src\\main\\java\\process\\EvoProcess.java",
  "startLine" : 60,
  "endLine" : 65,
  "identifiers" : [ "properties", "setProperty", "File", "separator", "properties", "setProperty", "Config", "repoPath", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "properties", "setProperty" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\MultiProjConfMaker\\src\\main\\java\\process\\SnapshotProcess.java",
  "startLine" : 28,
  "endLine" : 58,
  "identifiers" : [ "String", "jarPath", "this", "getClass", "getProtectionDomain", "getCodeSource", "getLocation", "getPath", "File", "jarFile", "new", "File", "jarPath", "String", "curPath", "jarFile", "getParentFile", "getAbsolutePath", "log", "info", "String", "format", "JarName", "String", "blobFolderPath", "curPath", "File", "separator", "folderName", "File", "blobFolderFile", "new", "File", "blobFolderPath", "if", "blobFolderFile", "exists", "log", "error", "folderName", "log", "error", "blobFolderFile", "getAbsolutePath", "return", "String", "blobPropPath", "blobFolderFile", "getAbsolutePath", "File", "separator", "propName", "File", "blobPropFile", "new", "File", "blobPropPath", "try", "Files", "deleteIfExists", "blobPropFile", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "Properties", "properties", "new", "Properties", "setProperties", "properties", "try", "properties", "store", "new", "FileWriter", "blobPropFile", "COMMENT", "log", "info", "propName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\MultiProjConfMaker\\src\\main\\java\\process\\SnapshotProcess.java",
  "startLine" : 60,
  "endLine" : 71,
  "identifiers" : [ "properties", "setProperty", "Config", "language", "properties", "setProperty", "Config", "suffix", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "File", "separator", "properties", "setProperty", "properties", "setProperty" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\SingleProjConfMaker\\src\\main\\java\\config\\Config.java",
  "startLine" : 67,
  "endLine" : 90,
  "identifiers" : [ "properties", "setProperty", "threadNum", "toString", "properties", "setProperty", "projectName", "properties", "setProperty", "repoPath", "properties", "setProperty", "startCommit", "properties", "setProperty", "endCommit", "properties", "setProperty", "suffix", "properties", "setProperty", "language", "properties", "setProperty", "ip", "properties", "setProperty", "database", "properties", "setProperty", "username", "properties", "setProperty", "password", "properties", "setProperty", "exeName", "properties", "setProperty", "traceCommit", "properties", "setProperty", "sepNum", "properties", "setProperty", "keyWordList", "properties", "setProperty", "urlParams", "properties", "setProperty", "commitInterval", "toString", "properties", "setProperty", "extractedPath", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "OutputStreamWriter", "new", "FileOutputStream", "CONFIG_FILE", "false", "writer", "write", "COMMENT", "properties", "store", "writer" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\SingleProjConfMaker\\src\\main\\java\\config\\Config.java",
  "startLine" : 95,
  "endLine" : 135,
  "identifiers" : [ "try", "if", "new", "File", "CONFIG_FILE", "exists", "properties", "load", "new", "FileReader", "CONFIG_FILE", "threadNum", "Integer", "parseInt", "properties", "getProperty", "projectName", "properties", "getProperty", "repoPath", "properties", "getProperty", "startCommit", "properties", "getProperty", "endCommit", "properties", "getProperty", "traceCommit", "properties", "getProperty", "suffix", "properties", "getProperty", "language", "properties", "getProperty", "ip", "properties", "getProperty", "database", "properties", "getProperty", "username", "properties", "getProperty", "password", "properties", "getProperty", "exeName", "properties", "getProperty", "sepNum", "properties", "getProperty", "keyWordList", "properties", "getProperty", "urlParams", "properties", "getProperty", "extractedPath", "properties", "getProperty", "commitInterval", "Integer", "parseInt", "properties", "getProperty", "MITbName", "projectName", "URL", "executable请修改配置文件configMaker", "properties", "您使用的是旧版的配置文件", "请删除配置文件并重新运行程序", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\SingleProjConfMaker\\src\\main\\java\\Pipeline.java",
  "startLine" : 22,
  "endLine" : 47,
  "identifiers" : [ "CommitBlobMapperProcess", "commitBlobMapperProcess", "new", "CommitBlobMapperProcess", "commitBlobMapperProcess", "process", "DetectProcess", "detectProcess", "new", "DetectProcess", "detectProcess", "process", "DBProcess", "dbProcess", "new", "DBProcess", "dbProcess", "process", "EvoProcess", "evoProcess", "new", "EvoProcess", "evoProcess", "process", "DangerProcess", "dangerProcess", "new", "DangerProcess", "dangerProcess", "process" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\SingleProjConfMaker\\src\\main\\java\\process\\CommitBlobMapperProcess.java",
  "startLine" : 25,
  "endLine" : 55,
  "identifiers" : [ "String", "jarPath", "this", "getClass", "getProtectionDomain", "getCodeSource", "getLocation", "getPath", "File", "jarFile", "new", "File", "jarPath", "String", "curPath", "jarFile", "getParentFile", "getAbsolutePath", "log", "info", "String", "blobFolderPath", "curPath", "File", "separator", "File", "blobFolderFile", "new", "File", "blobFolderPath", "if", "blobFolderFile", "exists", "log", "error", "log", "error", "blobFolderFile", "getAbsolutePath", "return", "String", "blobPropPath", "blobFolderFile", "getAbsolutePath", "File", "separator", "File", "blobPropFile", "new", "File", "blobPropPath", "try", "Files", "deleteIfExists", "blobPropFile", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "Properties", "properties", "new", "Properties", "setProperties", "properties", "try", "properties", "store", "new", "FileWriter", "blobPropFile", "COMMENT", "log", "info", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\SingleProjConfMaker\\src\\main\\java\\process\\CommitBlobMapperProcess.java",
  "startLine" : 57,
  "endLine" : 67,
  "identifiers" : [ "properties", "setProperty", "Config", "suffix", "properties", "setProperty", "Config", "repoPath", "properties", "setProperty", "File", "separator", "properties", "setProperty", "Config", "startCommit", "properties", "setProperty", "Config", "endCommit", "properties", "setProperty", "properties", "setProperty", "Config", "traceCommit", "properties", "setProperty", "Config", "extractedPath", "properties", "setProperty", "String", "valueOf", "Config", "commitInterval" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\SingleProjConfMaker\\src\\main\\java\\process\\DangerProcess.java",
  "startLine" : 27,
  "endLine" : 57,
  "identifiers" : [ "String", "jarPath", "this", "getClass", "getProtectionDomain", "getCodeSource", "getLocation", "getPath", "File", "jarFile", "new", "File", "jarPath", "String", "curPath", "jarFile", "getParentFile", "getAbsolutePath", "log", "info", "String", "format", "JarName", "String", "blobFolderPath", "curPath", "File", "separator", "folderName", "File", "blobFolderFile", "new", "File", "blobFolderPath", "if", "blobFolderFile", "exists", "log", "error", "folderName", "log", "error", "blobFolderFile", "getAbsolutePath", "return", "String", "propPath", "blobFolderFile", "getAbsolutePath", "File", "separator", "propName", "File", "propFile", "new", "File", "propPath", "try", "Files", "deleteIfExists", "propFile", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "Properties", "properties", "new", "Properties", "setProperties", "properties", "try", "properties", "store", "new", "FileWriter", "propFile", "COMMENT", "log", "info", "propName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\SingleProjConfMaker\\src\\main\\java\\process\\DangerProcess.java",
  "startLine" : 59,
  "endLine" : 73,
  "identifiers" : [ "properties", "setProperty", "properties", "setProperty", "File", "separator", "File", "separator", "properties", "setProperty", "File", "separator", "properties", "setProperty", "File", "separator", "properties", "setProperty", "File", "separator", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "Config", "keyWordList" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\SingleProjConfMaker\\src\\main\\java\\process\\DBProcess.java",
  "startLine" : 27,
  "endLine" : 57,
  "identifiers" : [ "String", "jarPath", "this", "getClass", "getProtectionDomain", "getCodeSource", "getLocation", "getPath", "File", "jarFile", "new", "File", "jarPath", "String", "curPath", "jarFile", "getParentFile", "getAbsolutePath", "log", "info", "String", "format", "JarName", "String", "blobFolderPath", "curPath", "File", "separator", "folderName", "File", "blobFolderFile", "new", "File", "blobFolderPath", "if", "blobFolderFile", "exists", "log", "error", "folderName", "log", "error", "blobFolderFile", "getAbsolutePath", "return", "String", "propPath", "blobFolderFile", "getAbsolutePath", "File", "separator", "propName", "File", "propFile", "new", "File", "propPath", "try", "Files", "deleteIfExists", "propFile", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "Properties", "properties", "new", "Properties", "setProperties", "properties", "try", "properties", "store", "new", "FileWriter", "propFile", "COMMENT", "log", "info", "propName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\SingleProjConfMaker\\src\\main\\java\\process\\DBProcess.java",
  "startLine" : 59,
  "endLine" : 71,
  "identifiers" : [ "properties", "setProperty", "String", "valueOf", "Config", "threadNum", "properties", "setProperty", "File", "separator", "properties", "setProperty", "File", "separator", "File", "separator", "properties", "setProperty", "Config", "MITbName", "properties", "setProperty", "File", "separator", "File", "separator", "properties", "setProperty", "properties", "setProperty", "Config", "DRIVER", "properties", "setProperty", "Config", "URL", "properties", "setProperty", "Config", "username", "properties", "setProperty", "Config", "password" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\SingleProjConfMaker\\src\\main\\java\\process\\DetectProcess.java",
  "startLine" : 27,
  "endLine" : 57,
  "identifiers" : [ "String", "jarPath", "this", "getClass", "getProtectionDomain", "getCodeSource", "getLocation", "getPath", "File", "jarFile", "new", "File", "jarPath", "String", "curPath", "jarFile", "getParentFile", "getAbsolutePath", "log", "info", "String", "format", "JarName", "String", "blobFolderPath", "curPath", "File", "separator", "folderName", "File", "blobFolderFile", "new", "File", "blobFolderPath", "if", "blobFolderFile", "exists", "log", "error", "folderName", "log", "error", "blobFolderFile", "getAbsolutePath", "return", "String", "blobPropPath", "blobFolderFile", "getAbsolutePath", "File", "separator", "propName", "File", "blobPropFile", "new", "File", "blobPropPath", "try", "Files", "deleteIfExists", "blobPropFile", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "Properties", "properties", "new", "Properties", "setProperties", "properties", "try", "properties", "store", "new", "FileWriter", "blobPropFile", "COMMENT", "log", "info", "propName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\SingleProjConfMaker\\src\\main\\java\\process\\DetectProcess.java",
  "startLine" : 59,
  "endLine" : 73,
  "identifiers" : [ "properties", "setProperty", "Config", "language", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "Config", "sepNum", "properties", "setProperty", "Config", "exePath", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\SingleProjConfMaker\\src\\main\\java\\process\\EvoProcess.java",
  "startLine" : 27,
  "endLine" : 57,
  "identifiers" : [ "String", "jarPath", "this", "getClass", "getProtectionDomain", "getCodeSource", "getLocation", "getPath", "File", "jarFile", "new", "File", "jarPath", "String", "curPath", "jarFile", "getParentFile", "getAbsolutePath", "log", "info", "String", "format", "JarName", "String", "blobFolderPath", "curPath", "File", "separator", "folderName", "File", "blobFolderFile", "new", "File", "blobFolderPath", "if", "blobFolderFile", "exists", "log", "error", "folderName", "log", "error", "blobFolderFile", "getAbsolutePath", "return", "String", "propPath", "blobFolderFile", "getAbsolutePath", "File", "separator", "propName", "File", "propFile", "new", "File", "propPath", "try", "Files", "deleteIfExists", "propFile", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "Properties", "properties", "new", "Properties", "setProperties", "properties", "try", "properties", "store", "new", "FileWriter", "propFile", "COMMENT", "log", "info", "propName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\SingleProjConfMaker\\src\\main\\java\\process\\EvoProcess.java",
  "startLine" : 59,
  "endLine" : 79,
  "identifiers" : [ "properties", "setProperty", "Config", "URL", "properties", "setProperty", "Config", "DRIVER", "properties", "setProperty", "Config", "username", "properties", "setProperty", "Config", "password", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "Config", "MITbName", "properties", "setProperty", "Config", "repoPath", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "File", "separator", "File", "separator", "File", "separator", "properties", "setProperty", "Config", "threadNum", "toString", "properties", "setProperty", "Config", "language", "properties", "setProperty" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\SingleProjConfMaker\\src\\main\\java\\process\\SnapshotProcess.java",
  "startLine" : 28,
  "endLine" : 58,
  "identifiers" : [ "String", "jarPath", "this", "getClass", "getProtectionDomain", "getCodeSource", "getLocation", "getPath", "File", "jarFile", "new", "File", "jarPath", "String", "curPath", "jarFile", "getParentFile", "getAbsolutePath", "log", "info", "String", "format", "JarName", "String", "blobFolderPath", "curPath", "File", "separator", "folderName", "File", "blobFolderFile", "new", "File", "blobFolderPath", "if", "blobFolderFile", "exists", "log", "error", "folderName", "log", "error", "blobFolderFile", "getAbsolutePath", "return", "String", "blobPropPath", "blobFolderFile", "getAbsolutePath", "File", "separator", "propName", "File", "blobPropFile", "new", "File", "blobPropPath", "try", "Files", "deleteIfExists", "blobPropFile", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "Properties", "properties", "new", "Properties", "setProperties", "properties", "try", "properties", "store", "new", "FileWriter", "blobPropFile", "COMMENT", "log", "info", "propName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ConfigMaker\\SingleProjConfMaker\\src\\main\\java\\process\\SnapshotProcess.java",
  "startLine" : 60,
  "endLine" : 71,
  "identifiers" : [ "properties", "setProperty", "Config", "language", "properties", "setProperty", "Config", "suffix", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "properties", "setProperty", "File", "separator", "properties", "setProperty", "properties", "setProperty" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\bak\\ErrorInsert.java",
  "startLine" : 38,
  "endLine" : 59,
  "identifiers" : [ "Config", "load", "log", "info", "String", "resource", "Properties", "prop", "Config", "getProperties", "try", "InputStream", "inputStream", "Resources", "getResourceAsStream", "resource", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "prop", "SqlSession", "session", "sqlSessionFactory", "openSession", "MeasureIndexMapper", "measureIndexMapper", "session", "getMapper", "MeasureIndexMapper", "class", "measureIndexMapper", "dropTable", "Config", "measureIndexTbName", "measureIndexMapper", "createTable", "Config", "measureIndexTbName", "session", "commit", "session", "close", "log", "info", "catch", "Exception", "e", "log", "error", "e", "toString" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\bak\\ErrorInsert.java",
  "startLine" : 60,
  "endLine" : 130,
  "identifiers" : [ "File", "headerFile", "new", "File", "Config", "infoFolder", "File", "separator", "Constants", "ErrorMICSV", "if", "headerFile", "exists", "log", "error", "log", "error", "headerFile", "getAbsolutePath", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "headerFile", "log", "info", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "log", "error", "log", "error", "str", "continue", "Integer", "id", "Integer", "parseInt", "ls", "String", "path", "ls", "if", "path", "length", "log", "error", "path", "log", "error", "path", "length", "String", "projectName", "ls", "if", "projectName", "length", "log", "error", "projectName", "log", "error", "projectName", "length", "Integer", "startLine", "Integer", "parseInt", "ls", "Integer", "endLine", "Integer", "parseInt", "ls", "Integer", "groupId", "Integer", "parseInt", "ls", "Integer", "methodId", "Integer", "parseInt", "ls", "MeasureIndex", "measureIndex", "new", "MeasureIndex", "id", "path", "projectName", "startLine", "endLine", "groupId", "methodId", "l", "l", "l", "l", "bufferList", "add", "measureIndex", "if", "bufferList", "size", "log", "info", "i", "insertToDB", "bufferedReader", "close", "catch", "IOException", "e", "e", "printStackTrace", "insertToDB", "log", "info" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\bak\\ErrorInsert.java",
  "startLine" : 132,
  "endLine" : 153,
  "identifiers" : [ "try", "if", "bufferList", "size", "SqlSession", "session", "sqlSessionFactory", "openSession", "MeasureIndexMapper", "measureIndexMapper", "session", "getMapper", "MeasureIndexMapper", "class", "measureIndexMapper", "insertList", "bufferList", "Config", "measureIndexTbName", "session", "commit", "session", "close", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "finally", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\config\\Config.java",
  "startLine" : 41,
  "endLine" : 58,
  "identifiers" : [ "properties", "setProperty", "detectFolder", "properties", "setProperty", "language", "properties", "setProperty", "dataset", "properties", "setProperty", "infoFolder", "properties", "setProperty", "granularity", "properties", "setProperty", "properties", "setProperty", "spring", "datasource", "usernamerootspring", "datasource", "passwordroot", "properties", "store", "new", "FileWriter", "CONFIG_FILE", "COMMENT" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\config\\Config.java",
  "startLine" : 63,
  "endLine" : 98,
  "identifiers" : [ "try", "if", "new", "File", "CONFIG_FILE", "exists", "properties", "load", "new", "FileReader", "CONFIG_FILE", "detectFolder", "properties", "getProperty", "language", "properties", "getProperty", "dataset", "properties", "getProperty", "infoFolder", "properties", "getProperty", "granularity", "properties", "getProperty", "measureIndexTbName", "language", "granularity", "fileInfoTbName", "language", "granularity", "projInfoTbName", "language", "granularity", "fileOPInfoTbName", "language", "redisPathLineKey", "language", "toLowerCase", "granularity", "toLowerCase", "redisGroupIdKey", "language", "toLowerCase", "granularity", "toLowerCase", "errorMeasureIndexCSV", "infoFolder", "File", "separator", "measureIndexTbName", "else", "save", "System", "out", "println", "CONFIG_FILE", "System", "exit", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\idproducer\\UpdateGroupId.java",
  "startLine" : 29,
  "endLine" : 41,
  "identifiers" : [ "Config", "load", "head_file", "new", "File", "Config", "detectFolder", "File", "separator", "File", "separator", "Constants", "MeasureIndexStr", "if", "head_file", "exists", "log", "error", "head_file", "getAbsolutePath", "System", "exit", "group_file", "new", "File", "Config", "detectFolder", "File", "separator", "File", "separator", "Constants", "Type123groupStr", "if", "group_file", "exists", "log", "error", "group_file", "getAbsolutePath", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\idproducer\\UpdateGroupId.java",
  "startLine" : 43,
  "endLine" : 70,
  "identifiers" : [ "try", "log", "info", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "group_file", "int", "total_id", "IOUtil", "getTotalLines", "group_file", "int", "group_id", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "group_id", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "continue", "for", "String", "mea_id", "ls", "Integer", "meain_id", "Integer", "parseInt", "mea_id", "group_map", "put", "meain_id", "group_id", "if", "group_id", "log", "info", "group_id", "total_id", "bufferedReader", "close", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 59,
  "endLine" : 67,
  "identifiers" : [ "Long", "l", "new", "Long", "polynomial", "FPGenerator", "fpgen", "FPGenerator", "generators", "get", "l", "if", "fpgen", "null", "fpgen", "new", "FPGenerator", "polynomial", "degree", "generators", "put", "l", "fpgen", "return", "fpgen" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 78,
  "endLine" : 88,
  "identifiers" : [ "int", "N", "degree", "long", "local", "N", "fp", "L", "N", "long", "temp", "zero", "for", "int", "i", "i", "N", "i", "temp", "ByteModTable", "i", "int", "fp", "xff", "fp", "return", "local", "temp" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 108,
  "endLine" : 116,
  "identifiers" : [ "f", "xffff", "v", "int", "i", "int", "f", "long", "result", "f", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 121,
  "endLine" : 133,
  "identifiers" : [ "f", "xffffffffL", "v", "int", "i", "int", "f", "long", "result", "f", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 138,
  "endLine" : 156,
  "identifiers" : [ "f", "v", "long", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 271,
  "endLine" : 278,
  "identifiers" : [ "int", "n", "s", "length", "for", "int", "i", "i", "n", "i", "int", "v", "int", "s", "charAt", "i", "f", "extend_char", "f", "v", "return", "reduce", "f" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 315,
  "endLine" : 322,
  "identifiers" : [ "int", "n", "s", "length", "for", "int", "i", "i", "n", "i", "int", "x", "int", "s", "charAt", "i", "f", "extend_byte", "f", "x", "return", "reduce", "f" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 364,
  "endLine" : 403,
  "identifiers" : [ "this", "degree", "degree", "this", "polynomial", "polynomial", "ByteModTable", "new", "long", "long", "PowerTable", "new", "long", "long", "x_to_the_i", "one", "long", "x_to_the_degree_minus_one", "one", "degree", "for", "int", "i", "i", "i", "PowerTable", "i", "x_to_the_i", "boolean", "overflow", "x_to_the_i", "x_to_the_degree_minus_one", "x_to_the_i", "if", "overflow", "x_to_the_i", "polynomial", "this", "empty", "PowerTable", "for", "int", "i", "i", "i", "for", "int", "j", "j", "j", "long", "v", "zero", "for", "int", "k", "k", "k", "if", "j", "k", "v", "PowerTable", "i", "k", "ByteModTable", "i", "j", "v" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 411,
  "endLine" : 475,
  "identifiers" : [ "null", "xC000000000000000L", "xC000000000000000L", "xE000000000000000L", "xE000000000000000L", "xD000000000000000L", "xB000000000000000L", "xF800000000000000L", "xF800000000000000L", "xEC00000000000000L", "xBC00000000000000L", "xDA00000000000000L", "xB600000000000000L", "xE500000000000000L", "xE500000000000000L", "x9680000000000000L", "xD480000000000000L", "x80C0000000000000L", "x8840000000000000L", "xB0A0000000000000L", "xE9A0000000000000L", "xD9F0000000000000L", "xC9B0000000000000L", "xE758000000000000L", "xDE98000000000000L", "xE42C000000000000L", "x94E4000000000000L", "xD4CE000000000000L", "xB892000000000000L", "xE2AB000000000000L", "x9E39000000000000L", "xCCE4800000000000L", "x9783800000000000L", "xD8F8C00000000000L", "xA9CDC00000000000L", "x9A28200000000000L", "xFD79E00000000000L", "xC782500000000000L", "x96CD300000000000L", "xBEE6880000000000L", "xE902C80000000000L", "x86D7E40000000000L", "xF066340000000000L", "x9888060000000000L", "x910ABE0000000000L", "xFF30E30000000000L", "xB27EFB0000000000L", "x8E375B8000000000L", "xA03D948000000000L", "xD1415C4000000000L", "xF5357CC000000000L", "x91A916E000000000L", "xB6CE66E000000000L", "xE6D2FC5000000000L", "xD55882B000000000L", "x9A3BA0B800000000L", "xFBD654E800000000L", "xAEA5D2E400000000L", "xF0E533AC00000000L", "xDA88B7BE00000000L", "xAA3AAEDE00000000L", "xBA75BB4300000000L", "xF5A811C500000000L", "x9B6C9A2F80000000L", "x9603CCED80000000L", "xFABB538840000000L", "xE2747090C0000000L", "x8358898EA0000000L", "x8C698D3D20000000L", "xDA8ABD5BF0000000L", "xF6DF3A0AF0000000L", "xB090C3F758000000L", "xD3B4D3D298000000L", "xAD9882F5BC000000L", "x88DA4FB544000000L", "xC3C366272A000000L", "xDCCF2A2262000000L", "x9BC0224A97000000L", "xAF5D96F273000000L", "x8643FFF621800000L", "x8E390C6EDC800000L", "xE45C01919BC00000L", "xCBB34C8945C00000L", "x80D8141BC2E00000L", "x886AFC3912200000L", "xF605807C26500000L", "xA3B92D28F6300000L", "xCE9A2CFC76280000L", "x98400C1921280000L", "xF61894904C040000L", "xC8BE6DBCEC8C0000L", "xE3A44C104D160000L", "xCA84A59443760000L", "xC7E84953A11B0000L", "xD9D4F6AA02CB0000L", "xC26CDD1C9A358000L", "x8BE8478434328000L", "xAE125DBEB198C000L", "xFCC5DBFD5AAAC000L", "x86DE52A079A6A000L", "xC5F16BD883816000L", "xDF82486AAFE37000L", "xA293EC735692D000L", "xE91ABA275C272800L", "xD686192874E3C800L", "x963D0960DAB3FC00L", "xBA9DE62072621400L", "xA2188C4E8A46CE00L", "xD31F75BCB4977E00L", "xC43A416020A6CB00L", "x99F57FECA12B3900L", "xA4F72EF82A58AE80L", "xCECE4391B81DA380L", "xB39F119264BC0940L", "x80A277D20DABB9C0L", "xFD6616C0CBFA0B20L", "xED16E64117DC11A0L", "xFFA8BC44327B5390L", "xEDFB13DB3B66C210L", "xCAE8EB99E73AB548L", "xC86135B6EA2F0B98L", "xBA49BADCDD19B16CL", "x8F1944AFB18564C4L", "xECFC86D765EABBEEL", "x9190E1C46CC13702L", "xE1F8D6B3195D6D97L", "xDF70267FF5E4C979L", "xD74307D3FD3382DBL", "x9999B3FFDC769B48L" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 105,
  "endLine" : 155,
  "identifiers" : [ ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 225,
  "endLine" : 239,
  "identifiers" : [ "if", "f", "f", "throw", "new", "IllegalArgumentException", "if", "n", "throw", "new", "IllegalArgumentException", "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "n", "f", "if", "l", "l", "l", "free", "PRIMES", "p", "l", "this", "f", "f", "this", "maxFill", "int", "free", "f", "key", "new", "long", "free", "state", "new", "byte", "free" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 305,
  "endLine" : 315,
  "identifiers" : [ "if", "offset", "throw", "new", "ArrayIndexOutOfBoundsException", "offset", "if", "length", "throw", "new", "IllegalArgumentException", "length", "if", "offset", "length", "arrayLength", "throw", "new", "ArrayIndexOutOfBoundsException", "offset", "length", "arrayLength" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 436,
  "endLine" : 471,
  "identifiers" : [ "final", "long", "key", "this", "key", "final", "byte", "state", "this", "state", "final", "int", "n", "key", "length", "final", "int", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "int", "h1", "k2i", "n", "if", "state", "h1", "OCCUPIED", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "OCCUPIED", "k", "key", "h1", "if", "state", "h1", "FREE", "return", "h1", "if", "state", "h1", "OCCUPIED", "return", "h1", "final", "int", "i", "h1", "if", "ASSERTS", "assert", "state", "h1", "REMOVED", "if", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "k", "key", "h1", "return", "state", "h1", "OCCUPIED", "h1", "i" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 481,
  "endLine" : 501,
  "identifiers" : [ "final", "long", "key", "this", "key", "final", "byte", "state", "this", "state", "final", "int", "n", "key", "length", "final", "int", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "int", "h1", "k2i", "n", "if", "state", "h1", "FREE", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "k", "key", "h1", "return", "state", "h1", "OCCUPIED", "h1" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 503,
  "endLine" : 523,
  "identifiers" : [ "final", "int", "i", "findInsertionPoint", "k", "if", "i", "return", "false", "if", "state", "i", "FREE", "free", "state", "i", "OCCUPIED", "key", "i", "k", "if", "count", "maxFill", "int", "newP", "Math", "min", "p", "growthFactor", "PRIMES", "length", "while", "PRIMES", "newP", "PRIMES", "p", "newP", "rehash", "newP", "if", "free", "rehash", "p", "if", "ASSERTS", "checkTable", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 599,
  "endLine" : 611,
  "identifiers" : [ "long", "retVal", "final", "byte", "state", "LongOpenHashSet", "this", "state", "final", "int", "n", "state", "length", "if", "hasNext", "throw", "new", "NoSuchElementException", "retVal", "key", "last", "pos", "if", "c", "do", "pos", "while", "pos", "n", "state", "pos", "OCCUPIED", "return", "retVal" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 668,
  "endLine" : 680,
  "identifiers" : [ "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "count", "f", "if", "l", "l", "l", "if", "l", "p", "return", "true", "try", "rehash", "l", "catch", "OutOfMemoryError", "cantDoIt", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 704,
  "endLine" : 717,
  "identifiers" : [ "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "Math", "min", "Integer", "MAX_VALUE", "Math", "max", "n", "count", "f", "if", "l", "l", "l", "if", "p", "l", "return", "true", "try", "rehash", "l", "catch", "OutOfMemoryError", "cantDoIt", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 732,
  "endLine" : 761,
  "identifiers" : [ "int", "i", "j", "count", "k2i", "h1", "h2", "final", "byte", "state", "this", "state", "long", "k", "final", "int", "newN", "PRIMES", "newP", "final", "long", "key", "this", "key", "newKey", "new", "long", "newN", "final", "byte", "newState", "new", "byte", "newN", "while", "j", "while", "state", "i", "OCCUPIED", "i", "k", "key", "i", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "h1", "k2i", "newN", "if", "newState", "h1", "FREE", "h2", "k2i", "newN", "do", "h1", "h1", "h2", "newN", "while", "newState", "h1", "FREE", "newState", "h1", "OCCUPIED", "newKey", "h1", "k", "i", "p", "newP", "free", "newN", "count", "maxFill", "int", "newN", "f", "this", "key", "newKey", "this", "state", "newState" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 782,
  "endLine" : 792,
  "identifiers" : [ "LongOpenHashSet", "c", "try", "c", "LongOpenHashSet", "super", "clone", "catch", "CloneNotSupportedException", "cantHappen", "throw", "new", "InternalError", "c", "key", "key", "clone", "c", "state", "state", "clone", "return", "c" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 804,
  "endLine" : 813,
  "identifiers" : [ "int", "h", "i", "j", "count", "while", "j", "while", "state", "i", "OCCUPIED", "i", "h", "longHash2IntHash", "key", "i", "i", "return", "h" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 826,
  "endLine" : 858,
  "identifiers" : [ "s", "defaultReadObject", "growthFactor", "DEFAULT_GROWTH_FACTOR", "p", "Arrays", "binarySearch", "PRIMES", "int", "count", "f", "if", "p", "p", "p", "final", "int", "n", "PRIMES", "p", "maxFill", "int", "n", "f", "free", "n", "count", "final", "long", "key", "this", "key", "new", "long", "n", "final", "byte", "state", "this", "state", "new", "byte", "n", "int", "i", "k2i", "h1", "h2", "long", "k", "i", "count", "while", "i", "k", "s", "readLong", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "h1", "k2i", "n", "if", "state", "h1", "FREE", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "state", "h1", "OCCUPIED", "key", "h1", "k", "if", "ASSERTS", "checkTable" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\Shingle.java",
  "startLine" : 36,
  "endLine" : 47,
  "identifiers" : [ "HashSet", "String", "shingles", "new", "HashSet", "String", "for", "int", "i", "i", "line", "length", "CHAR_GRAM_LENGTH", "i", "String", "shingle", "line", "substring", "i", "i", "CHAR_GRAM_LENGTH", "shingles", "add", "shingle", "return", "shingles" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 56,
  "endLine" : 102,
  "identifiers" : [ "LongOpenHashSet", "shingles", "new", "LongOpenHashSet", "Math", "min", "s", "length", "int", "length", "s", "length", "for", "int", "i", "i", "length", "FIXED_CGRAM_LENGTH", "i", "long", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingles", "add", "shingle", "int", "v", "new", "int", "HASH_SIZE", "byte", "longAsBytes", "new", "byte", "for", "long", "shingle", "shingles", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "long", "longHash", "FPGenerator", "std64", "fp", "longAsBytes", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 104,
  "endLine" : 158,
  "identifiers" : [ "LongOpenHashSet", "shingles", "new", "LongOpenHashSet", "Math", "min", "length", "FIXED_BGRAM_LENGTH", "for", "int", "i", "offset", "i", "length", "FIXED_BGRAM_LENGTH", "i", "int", "pos", "i", "long", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingles", "add", "shingle", "int", "v", "new", "int", "HASH_SIZE", "byte", "longAsBytes", "new", "byte", "for", "long", "shingle", "shingles", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "long", "longHash", "FPGenerator", "std64", "fp", "longAsBytes", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 160,
  "endLine" : 183,
  "identifiers" : [ "int", "v", "new", "int", "HASH_SIZE", "for", "String", "shingle", "shingles", "byte", "bytes", "shingle", "getBytes", "long", "longHash", "FPGenerator", "std64", "fp", "bytes", "bytes", "length", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 197,
  "endLine" : 204,
  "identifiers" : [ "long", "res", "new", "long", "res", "hash", "xffff000000000000L", "res", "hash", "x0000ffff00000000L", "res", "hash", "x00000000ffff0000L", "res", "hash", "x000000000000ffffL", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\util\\CommentUtil.java",
  "startLine" : 29,
  "endLine" : 43,
  "identifiers" : [ "if", "language", "equals", "Constants", "LANGUAGE_JAVA", "language", "equals", "Constants", "LANGUAGE_C", "language", "equals", "Constants", "LANGUAGE_CPP", "language", "equals", "Constants", "LANGUAGE_GO", "code", "removeComments", "code", "JAVA_COMMENT_SINGLE_LINE", "code", "removeComments", "code", "JAVA_COMMENT_MULTI_LINE", "else", "if", "language", "equals", "Constants", "LANGUAGE_PYTHON", "code", "removeComments", "code", "PYTHON_COMMENT_SINGLE_LINE", "code", "removeComments", "code", "PYTHON_COMMENT_MULTI_LINE", "code", "removeComments", "code", "PYTHON_COMMENT_MULTI_LINE2", "code", "code", "replaceAll", "return", "code" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\util\\DateUtil.java",
  "startLine" : 31,
  "endLine" : 37,
  "identifiers" : [ "int", "seconds", "int", "timeMillis", "e3", "int", "hour", "seconds", "int", "minute", "seconds", "hour", "int", "second", "seconds", "hour", "minute", "return", "String", "format", "hour", "minute", "second" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 19,
  "endLine" : 34,
  "identifiers" : [ "List", "String", "lines", "new", "ArrayList", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "int", "lineCnt", "while", "line", "reader", "readLine", "null", "lineCnt", "if", "lineCnt", "startLine", "lineCnt", "endLine", "lines", "add", "line", "else", "if", "lineCnt", "endLine", "break", "reader", "close", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\util\\IOUtil.java",
  "startLine" : 18,
  "endLine" : 37,
  "identifiers" : [ "if", "file", "exists", "try", "long", "startTime", "System", "currentTimeMillis", "FileReader", "in", "new", "FileReader", "file", "LineNumberReader", "reader", "new", "LineNumberReader", "in", "reader", "skip", "Long", "MAX_VALUE", "int", "lines", "reader", "getLineNumber", "reader", "close", "long", "endTime", "System", "currentTimeMillis", "log", "info", "endTime", "startTime", "return", "lines", "catch", "IOException", "e", "log", "error", "e", "getMessage", "return" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\com\\fudan\\util\\NameUtil.java",
  "startLine" : 19,
  "endLine" : 27,
  "identifiers" : [ "String", "tmp", "path", "substring", "dataset", "length", "String", "sep", "tmp", "contains", "if", "tmp", "charAt", "tmp", "charAt", "tmp", "tmp", "substring", "String", "names", "tmp", "split", "sep", "return", "names" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 35,
  "endLine" : 42,
  "identifiers" : [ "long", "timeStart", "System", "currentTimeMillis", "Pipeline", "pipeline", "new", "Pipeline", "pipeline", "init", "pipeline", "readMeasureIndex", "long", "timeEnd", "System", "currentTimeMillis", "System", "out", "printf", "DateUtil", "convert", "timeEnd", "timeStart" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 43,
  "endLine" : 66,
  "identifiers" : [ "Config", "load", "updateGroupId", "new", "UpdateGroupId", "log", "info", "String", "resource", "Properties", "prop", "Config", "getProperties", "try", "InputStream", "inputStream", "Resources", "getResourceAsStream", "resource", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "prop", "SqlSession", "session", "sqlSessionFactory", "openSession", "true", "MeasureIndexMapper", "measureIndexMapper", "session", "getMapper", "MeasureIndexMapper", "class", "measureIndexMapper", "dropTable", "Config", "measureIndexTbName", "measureIndexMapper", "createTable", "Config", "measureIndexTbName", "session", "close", "log", "info", "new", "File", "Config", "errorMeasureIndexCSV", "getParentFile", "mkdirs", "printer", "new", "CSVPrinter", "new", "FileWriter", "Config", "errorMeasureIndexCSV", "CSVFormat", "DEFAULT", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 67,
  "endLine" : 132,
  "identifiers" : [ "File", "headerFile", "new", "File", "Config", "detectFolder", "File", "separator", "File", "separator", "Constants", "MeasureIndexStr", "if", "headerFile", "exists", "log", "error", "log", "error", "headerFile", "getAbsolutePath", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "headerFile", "log", "info", "total", "IOUtil", "getTotalLines", "headerFile", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "try", "if", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "String", "path", "str", "substring", "str", "indexOf", "str", "lastIndexOf", "path", "path", "substring", "path", "lastIndexOf", "Integer", "methodId", "Integer", "parseInt", "ls", "Integer", "groupId", "updateGroupId", "getGroupId", "methodId", "String", "projectName", "NameUtil", "getProjectName", "Config", "dataset", "path", "String", "relativePath", "path", "substring", "path", "indexOf", "projectName", "projectName", "length", "relativePath", "relativePath", "replaceAll", "Integer", "startLine", "Integer", "parseInt", "ls", "ls", "length", "Integer", "endLine", "Integer", "parseInt", "ls", "ls", "length", "List", "String", "lines", "FileUtil", "readLines", "path", "startLine", "endLine", "String", "code", "String", "join", "lines", "code", "CommentUtil", "removeComments2", "code", "Config", "language", "long", "hashVal", "SimHash", "computeOptimizedSimHashForString", "code", "long", "hashs", "SimHash", "divide4", "hashVal", "MeasureIndex", "measureIndex", "new", "MeasureIndex", "methodId", "relativePath", "projectName", "startLine", "endLine", "groupId", "methodId", "hashs", "hashs", "hashs", "hashs", "bufferList", "add", "measureIndex", "if", "bufferList", "size", "log", "info", "methodId", "total", "methodId", "f", "total", "insertToDB", "catch", "Exception", "e", "e", "printStackTrace", "bufferedReader", "close", "catch", "IOException", "e", "e", "printStackTrace", "insertToDB", "log", "info", "try", "printer", "close", "catch", "IOException", "e", "e", "printStackTrace", "checkStatus" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 134,
  "endLine" : 154,
  "identifiers" : [ "try", "if", "bufferList", "size", "SqlSession", "session", "sqlSessionFactory", "openSession", "MeasureIndexMapper", "measureIndexMapper", "session", "getMapper", "MeasureIndexMapper", "class", "measureIndexMapper", "insertList", "bufferList", "Config", "measureIndexTbName", "session", "commit", "session", "close", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "for", "MeasureIndex", "measureIndex", "bufferList", "printToErr", "measureIndex", "finally", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 155,
  "endLine" : 169,
  "identifiers" : [ "try", "printer", "printRecord", "measureIndex", "getId", "measureIndex", "getPath", "measureIndex", "getProject", "measureIndex", "getStartLine", "measureIndex", "getEndLine", "measureIndex", "getGroupId", "measureIndex", "getMethodId", "printer", "flush", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 171,
  "endLine" : 180,
  "identifiers" : [ "SqlSession", "session", "sqlSessionFactory", "openSession", "MeasureIndexMapper", "measureIndexMapper", "session", "getMapper", "MeasureIndexMapper", "class", "int", "tbCnt", "measureIndexMapper", "selectCnt", "Config", "measureIndexTbName", "log", "info", "total", "log", "info", "Config", "measureIndexTbName", "tbCnt", "session", "commit", "session", "close" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\test\\java\\DBTests.java",
  "startLine" : 17,
  "endLine" : 28,
  "identifiers" : [ "Config", "load", "String", "resource", "Properties", "prop", "Config", "getProperties", "InputStream", "inputStream", "Resources", "getResourceAsStream", "resource", "SqlSessionFactory", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "prop", "SqlSession", "session", "sqlSessionFactory", "openSession", "MeasureIndexMapper", "measureIndexMapper", "session", "getMapper", "MeasureIndexMapper", "class", "measureIndexMapper", "createTable", "Config", "measureIndexTbName", "session", "commit", "session", "close" ]
}, {
  "path" : "d:\\GitRepo\\DBInsertion\\src\\test\\java\\TotalCloneLineInsertionRedis.java",
  "startLine" : 31,
  "endLine" : 85,
  "identifiers" : [ "File", "headerFile", "new", "File", "Config", "detectFolder", "File", "separator", "File", "separator", "Constants", "MeasureIndexStr", "if", "headerFile", "exists", "log", "error", "log", "error", "headerFile", "getAbsolutePath", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "headerFile", "log", "info", "int", "i", "String", "cache", "null", "int", "cacheLine", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "log", "error", "log", "error", "str", "continue", "Integer", "methodId", "Integer", "parseInt", "ls", "String", "path", "ls", "if", "path", "length", "continue", "Integer", "startLine", "Integer", "parseInt", "ls", "Integer", "endLine", "Integer", "parseInt", "ls", "if", "cache", "null", "cache", "path", "cacheLine", "endLine", "startLine", "else", "if", "cache", "equals", "path", "cacheLine", "endLine", "startLine", "else", "insertToRedis", "cache", "cacheLine", "cache", "path", "cacheLine", "endLine", "startLine", "bufferedReader", "close", "insertToRedis", "cache", "cacheLine", "catch", "IOException", "e", "e", "printStackTrace", "log", "info" ]
}, {
  "path" : "d:\\GitRepo\\ListFiles\\java\\list-files-java\\src\\main\\java\\bean\\ListFileTask.java",
  "startLine" : 24,
  "endLine" : 50,
  "identifiers" : [ "List", "String", "paths", "new", "ArrayList", "File", "file", "new", "File", "path", "File", "items", "file", "listFiles", "if", "items", "null", "items", "length", "return", "paths", "int", "cnt", "for", "File", "item", "items", "if", "isRoot", "cnt", "System", "out", "printf", "cnt", "f", "items", "length", "if", "item", "isFile", "String", "ext", "FilenameUtils", "getExtension", "item", "getName", "if", "extensionMap", "containsKey", "ext", "paths", "add", "item", "getAbsolutePath", "else", "ListFileTask", "task", "new", "ListFileTask", "item", "getAbsolutePath", "extensionMap", "false", "task", "fork", "paths", "addAll", "task", "join", "return", "paths" ]
}, {
  "path" : "d:\\GitRepo\\ListFiles\\java\\list-files-java\\src\\main\\java\\conf\\Config.java",
  "startLine" : 20,
  "endLine" : 27,
  "identifiers" : [ "properties", "setProperty", "DATASET", "properties", "setProperty", "EXTENSIONS", "properties", "setProperty", "OUTPUT", "FileWriter", "writer", "new", "FileWriter", "CONFIG_FILE", "properties", "store", "writer", "writer", "close" ]
}, {
  "path" : "d:\\GitRepo\\ListFiles\\java\\list-files-java\\src\\main\\java\\conf\\Config.java",
  "startLine" : 29,
  "endLine" : 39,
  "identifiers" : [ "FileReader", "reader", "new", "FileReader", "CONFIG_FILE", "properties", "load", "reader", "reader", "close", "DATASET", "properties", "getProperty", "EXTENSIONS", "properties", "getProperty", "for", "String", "ext", "EXTENSIONS", "split", "EXTENSION_MAP", "put", "ext", "true", "OUTPUT", "properties", "getProperty" ]
}, {
  "path" : "d:\\GitRepo\\ListFiles\\java\\list-files-java\\src\\main\\java\\Main.java",
  "startLine" : 12,
  "endLine" : 43,
  "identifiers" : [ "long", "start", "System", "currentTimeMillis", "System", "out", "println", "File", "config", "new", "File", "Config", "CONFIG_FILE", "try", "if", "config", "exists", "System", "out", "printf", "Config", "CONFIG_FILE", "Config", "save", "System", "exit", "Config", "load", "catch", "IOException", "e", "e", "printStackTrace", "System", "exit", "System", "out", "println", "ForkJoinPool", "pool", "new", "ForkJoinPool", "List", "String", "files", "pool", "invoke", "new", "ListFileTask", "Config", "DATASET", "Config", "EXTENSION_MAP", "true", "System", "out", "printf", "Config", "OUTPUT", "File", "output", "new", "File", "Config", "OUTPUT", "output", "getParentFile", "mkdirs", "try", "FileUtils", "writeLines", "new", "File", "Config", "OUTPUT", "files", "catch", "IOException", "e", "e", "printStackTrace", "long", "end", "System", "currentTimeMillis", "Duration", "duration", "Duration", "ofMillis", "end", "start", "System", "out", "printf", "duration", "toString" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\bean\\DiffInfo.java",
  "startLine" : 22,
  "endLine" : 31,
  "identifiers" : [ "this", "id", "id", "this", "a_sha", "a_sha", "this", "b_sha", "b_sha", "this", "type", "type", "this", "a_path", "a_path", "this", "b_path", "b_path", "this", "a_commit", "a_commit", "this", "b_commit", "b_commit" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\config\\Config.java",
  "startLine" : 37,
  "endLine" : 51,
  "identifiers" : [ "properties", "setProperty", "String", "valueOf", "threadNum", "properties", "setProperty", "resultFolder", "properties", "setProperty", "detectFolder", "properties", "setProperty", "measureIndexTbName", "properties", "setProperty", "CC_OUT", "properties", "setProperty", "bufferCount", "toString", "properties", "setProperty", "DRIVER", "properties", "setProperty", "URL", "properties", "setProperty", "USERNAME", "properties", "setProperty", "PASSWORD", "properties", "store", "new", "FileWriter", "CONFIG_FILE", "COMMENT" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\config\\Config.java",
  "startLine" : 56,
  "endLine" : 83,
  "identifiers" : [ "try", "if", "new", "File", "CONFIG_FILE", "exists", "properties", "load", "new", "FileReader", "CONFIG_FILE", "threadNum", "Integer", "parseInt", "properties", "getProperty", "resultFolder", "properties", "getProperty", "detectFolder", "properties", "getProperty", "measureIndexTbName", "properties", "getProperty", "CC_OUT", "properties", "getProperty", "blobIdRealPathCsv", "CC_OUT", "File", "separator", "CurCommitBlobCsv", "CC_OUT", "File", "separator", "bufferCount", "Integer", "parseInt", "properties", "getProperty", "DRIVER", "properties", "getProperty", "URL", "properties", "getProperty", "USERNAME", "properties", "getProperty", "PASSWORD", "properties", "getProperty", "else", "save", "System", "out", "println", "CONFIG_FILE", "System", "exit", "catch", "Exception", "e", "System", "out", "println", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\idproducer\\MethodNameProducer.java",
  "startLine" : 33,
  "endLine" : 71,
  "identifiers" : [ "String", "methodNameCsvPath", "Config", "resultFolder", "File", "separator", "if", "new", "File", "methodNameCsvPath", "exists", "System", "out", "println", "methodNameCsvPath", "System", "exit", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "methodNameCsvPath", "logger", "info", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "divStr", "str", "split", "String", "blobPath", "divStr", "Integer", "endLine", "Integer", "parseInt", "divStr", "String", "name", "divStr", "if", "name", "length", "name", "name", "substring", "String", "key", "blobPath", "endLine", "bpathel_mname_map", "put", "key", "name", "if", "i", "System", "out", "println", "i", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\idproducer\\UpdateGroupId.java",
  "startLine" : 33,
  "endLine" : 46,
  "identifiers" : [ "Config", "load", "File", "head_file", "new", "File", "Config", "detectFolder", "File", "separator", "Constants", "MeasureIndexStr", "if", "head_file", "exists", "System", "out", "println", "System", "exit", "File", "group_file", "new", "File", "Config", "detectFolder", "File", "separator", "Constants", "Type123groupStr", "if", "group_file", "exists", "System", "out", "println", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\idproducer\\UpdateGroupId.java",
  "startLine" : 48,
  "endLine" : 77,
  "identifiers" : [ "try", "System", "out", "println", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "Config", "detectFolder", "File", "separator", "Constants", "Type123groupStr", "int", "group_id", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "group_id", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "System", "out", "println", "continue", "for", "String", "mea_id", "ls", "Integer", "meain_id", "Integer", "parseInt", "mea_id", "group_map", "put", "meain_id", "group_id", "if", "group_id", "System", "out", "println", "group_id", "bufferedReader", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\infoProvider\\CsvProvider.java",
  "startLine" : 29,
  "endLine" : 109,
  "identifiers" : [ "String", "sources_sorted", "Config", "blobIdRealPathCsv", "File", "sources_file", "new", "File", "sources_sorted", "if", "sources_file", "exists", "System", "out", "println", "sources_sorted", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "sources_sorted", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "divStr", "str", "split", "String", "blobId", "divStr", "String", "realPath", "divStr", "Set", "String", "realPathSet", "blobId_realPath_map", "getOrDefault", "blobId", "new", "HashSet", "realPathSet", "add", "realPath", "blobId_realPath_map", "put", "blobId", "realPathSet", "if", "i", "System", "out", "println", "i", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\infoProvider\\CurrentCommitProvider.java",
  "startLine" : 26,
  "endLine" : 62,
  "identifiers" : [ "File", "csvFile", "new", "File", "Config", "CurCommitBlobCsv", "if", "csvFile", "exists", "System", "out", "println", "System", "out", "println", "System", "out", "println", "csvFile", "getAbsolutePath", "System", "out", "println", "int", "i", "BufferedReader", "bufferedReader", "null", "try", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "csvFile", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "split", "if", "ls", "length", "continue", "curCommitBlobRPSet", "add", "str", "catch", "Exception", "e", "e", "printStackTrace", "System", "out", "println", "System", "out", "println", "curCommitBlobRPSet", "size" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\infoProvider\\MethodNameProvider.java",
  "startLine" : 43,
  "endLine" : 58,
  "identifiers" : [ "File", "codeFile", "new", "File", "path", "if", "codeFile", "exists", "sourceStr", "null", "value", "null", "String", "fullStr", "DeleteCAndCplusplusAndJavaNote", "readFile", "path", "sourceStr", "DeleteCAndCplusplusAndJavaNote", "delete_C_Cplusplus_Java_Note", "fullStr", "fullStr", "null", "value", "sourceStr", "toCharArray" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\infoProvider\\MethodNameProvider.java",
  "startLine" : 61,
  "endLine" : 86,
  "identifiers" : [ "String", "encoding", "File", "file", "new", "File", "filePath", "Long", "filelength", "file", "length", "byte", "filecontent", "new", "byte", "filelength", "intValue", "try", "FileInputStream", "in", "new", "FileInputStream", "file", "in", "read", "filecontent", "in", "close", "catch", "FileNotFoundException", "e", "e", "printStackTrace", "return", "null", "catch", "IOException", "e", "e", "printStackTrace", "return", "null", "try", "String", "result", "new", "String", "filecontent", "encoding", "return", "result", "catch", "UnsupportedEncodingException", "e", "System", "err", "println", "encoding", "e", "printStackTrace", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\infoProvider\\MethodNameProvider.java",
  "startLine" : 88,
  "endLine" : 212,
  "identifiers" : [ "int", "startLine", "methodItem", "getStartLine", "String", "methodName", "String", "paras", "String", "fedMName", "List", "String", "filterWord", "Arrays", "asList", "int", "nlcount", "if", "this", "sourceStr", "null", "methodName", "else", "int", "leftBracIdx", "getIndexOfLeftBracket", "startLine", "STATE", "state", "STATE", "One", "Stack", "Character", "braces", "new", "Stack", "Stack", "Character", "nameStack", "new", "Stack", "Stack", "Character", "paraStack", "new", "Stack", "for", "int", "i", "leftBracIdx", "i", "Math", "max", "leftBracIdx", "i", "char", "c", "value", "i", "if", "c", "n", "nlcount", "switch", "state", "case", "One", "if", "c", "braces", "push", "paraStack", "push", "c", "state", "STATE", "Two", "else", "if", "c", "state", "STATE", "Equals", "break", "case", "Equals", "if", "c", "state", "STATE", "RSqB", "nameStack", "push", "c", "if", "isValidChar", "c", "nameStack", "push", "c", "state", "STATE", "Four", "if", "c", "c", "state", "STATE", "Error", "break", "case", "RSqB", "if", "c", "state", "STATE", "LSqB", "nameStack", "push", "c", "if", "c", "c", "state", "STATE", "Error", "break", "case", "LSqB", "if", "isValidChar", "c", "nameStack", "push", "c", "state", "STATE", "Four", "break", "case", "Two", "if", "c", "braces", "push", "else", "if", "c", "braces", "pop", "paraStack", "push", "c", "if", "braces", "empty", "state", "STATE", "Three", "break", "case", "Three", "if", "c", "braces", "push", "state", "STATE", "Two", "else", "if", "isValidChar", "c", "nameStack", "push", "c", "state", "STATE", "Four", "break", "case", "Four", "if", "isValidChar", "c", "nameStack", "push", "c", "else", "state", "STATE", "Exit", "StringBuilder", "stringBuilder", "new", "StringBuilder", "while", "nameStack", "empty", "stringBuilder", "append", "nameStack", "pop", "String", "tmpName", "stringBuilder", "toString", "fedMName", "filterMname", "tmpName", "for", "String", "word", "filterWord", "if", "fedMName", "equals", "word", "paraStack", "clear", "nameStack", "clear", "state", "STATE", "One", "if", "fedMName", "equals", "if", "judgeIndexOfLeftBracket", "startLine", "i", "paraStack", "clear", "nameStack", "clear", "state", "STATE", "One", "break", "case", "Exit", "break", "case", "Error", "break", "default", "break", "if", "state", "STATE", "Exit", "state", "STATE", "Error", "break" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\infoProvider\\MethodNameProvider.java",
  "startLine" : 216,
  "endLine" : 224,
  "identifiers" : [ "methodName", "fedMName", "StringBuilder", "paraBuilder", "new", "StringBuilder", "while", "paraStack", "empty", "paraBuilder", "append", "paraStack", "pop", "String", "tmpParas", "paraBuilder", "toString", "paras", "transMParas", "tmpParas" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\infoProvider\\MethodNameProvider.java",
  "startLine" : 258,
  "endLine" : 644,
  "identifiers" : [ "char", "nl", "n", "final", "int", "max", "this", "sourceStr", "length", "int", "match", "int", "i", "for", "i", "i", "max", "i", "if", "value", "i", "nl", "match", "if", "match", "startLine", "break", "if", "i", "max", "return", "char", "target", "for", "i", "i", "i", "if", "value", "i", "nl", "return", "if", "value", "i", "target", "break", "return", "i", "private", "static", "String", "filterMname", "String", "in", "Set", "String", "filterSet", "new", "HashSet", "filterSet", "add", "filterSet", "add", "filterSet", "add", "filterSet", "add", "filterSet", "add", "if", "filterSet", "contains", "in", "return", "else", "return", "in", "private", "static", "boolean", "isValidChar", "char", "c", "if", "c", "c", "c", "c", "c", "c", "c", "c", "_", "c", "return", "true", "else", "return", "false", "public", "void", "getStructNameByStartLine", "MethodItem", "methodItem", "int", "startLine", "methodItem", "getStartLine", "String", "methodName", "int", "nlcount", "if", "this", "sourceStr", "null", "methodName", "else", "int", "leftBracIdx", "getIndexOfLeftBracket", "startLine", "STRUCT_STATE", "struct_state", "STRUCT_STATE", "One", "Stack", "Character", "nameStack", "new", "Stack", "Stack", "Character", "structStack", "new", "Stack", "for", "int", "i", "leftBracIdx", "i", "Math", "max", "leftBracIdx", "i", "char", "c", "value", "i", "if", "c", "n", "nlcount", "switch", "struct_state", "case", "One", "if", "isValidChar", "c", "nameStack", "push", "c", "struct_state", "STRUCT_STATE", "Two", "else", "if", "c", "c", "c", "r", "c", "n", "c", "t", "else", "struct_state", "STRUCT_STATE", "Error", "break", "case", "Two", "if", "isValidChar", "c", "nameStack", "push", "c", "else", "if", "c", "c", "r", "c", "t", "struct_state", "STRUCT_STATE", "Three", "else", "struct_state", "STRUCT_STATE", "Error", "break", "case", "Three", "if", "c", "c", "r", "c", "t", "else", "if", "isValidChar", "c", "structStack", "push", "c", "struct_state", "STRUCT_STATE", "Four", "else", "struct_state", "STRUCT_STATE", "Error", "break", "case", "Four", "if", "isValidChar", "c", "structStack", "push", "c", "else", "struct_state", "STRUCT_STATE", "Exit", "break", "case", "Exit", "break", "case", "Error", "break", "default", "break", "if", "struct_state", "STRUCT_STATE", "Exit", "struct_state", "STRUCT_STATE", "Error", "break", "if", "struct_state", "STRUCT_STATE", "Exit", "methodName", "else", "StringBuilder", "stringBuilder", "new", "StringBuilder", "while", "nameStack", "empty", "stringBuilder", "append", "nameStack", "pop", "String", "tmpName", "stringBuilder", "toString", "stringBuilder", "new", "StringBuilder", "while", "structStack", "empty", "stringBuilder", "append", "structStack", "pop", "String", "structKey", "stringBuilder", "toString", "if", "structKey", "equals", "structKey", "equals", "structKey", "equals", "structKey", "contains", "structKey", "contains", "structKey", "equals", "String", "fedMName", "filterMname", "tmpName", "methodName", "fedMName", "else", "methodName", "if", "methodName", "equals", "methodItem", "setMethodName", "methodName", "else", "methodItem", "setStartLine", "startLine", "nlcount", "methodItem", "setMethodName", "methodName", "public", "void", "getMethodNameByEndLine", "MethodItem", "methodItem", "int", "endLine", "methodItem", "getEndLine", "String", "methodName", "String", "fedMName", "STRUCT_STATE", "state", "STRUCT_STATE", "One", "if", "this", "sourceStr", "null", "return", "else", "int", "rightBracIdx", "getIndexOfRightBracket", "endLine", "if", "rightBracIdx", "return", "Stack", "Character", "nameStruct", "new", "Stack", "char", "c", "for", "int", "i", "rightBracIdx", "i", "Math", "max", "this", "sourceStr", "length", "rightBracIdx", "i", "c", "value", "i", "nameStruct", "push", "c", "if", "value", "i", "value", "i", "n", "continue", "else", "break", "if", "nameStruct", "empty", "Character", "firstpushChar", "nameStruct", "pop", "Character", "tempchar", "StringBuilder", "nameStr", "new", "StringBuilder", "if", "firstpushChar", "while", "nameStruct", "isEmpty", "tempchar", "nameStruct", "pop", "if", "isValidChar", "tempchar", "nameStr", "append", "tempchar", "break", "while", "nameStruct", "isEmpty", "tempchar", "nameStruct", "pop", "if", "isValidChar", "tempchar", "nameStr", "append", "tempchar", "else", "break", "if", "nameStr", "length", "fedMName", "nameStr", "toString", "if", "fedMName", "equals", "methodItem", "setMethodName", "fedMName", "int", "startLine", "getMethodStartLineForEndName", "methodItem", "getStartLine", "if", "startLine", "methodItem", "setStartLine", "startLine", "else", "methodItem", "setMethodName", "else", "methodItem", "setMethodName", "private", "String", "filterEndName", "String", "tmpName", "Set", "String", "filterSet", "new", "HashSet", "filterSet", "add", "if", "filterSet", "contains", "tmpName", "return", "else", "return", "tmpName", "private", "int", "getMethodStartLineForEndName", "Integer", "startLine", "Stack", "Character", "structStack", "new", "Stack", "STRUCT_STATE", "structState", "STRUCT_STATE", "One", "int", "nlCount", "if", "this", "sourceStr", "null", "return", "else", "char", "nl", "n", "char", "c", "int", "leftBracIdx", "getIndexOfLeftBracket", "startLine", "for", "int", "i", "leftBracIdx", "i", "Math", "max", "leftBracIdx", "i", "c", "value", "i", "switch", "structState", "case", "One", "if", "c", "c", "r", "c", "t", "c", "n", "else", "if", "isValidChar", "c", "structStack", "push", "c", "structState", "STRUCT_STATE", "Two", "else", "structState", "STRUCT_STATE", "Error", "break", "case", "Two", "if", "isValidChar", "c", "structStack", "push", "c", "else", "structState", "STRUCT_STATE", "Exit", "case", "Exit", "break", "case", "Error", "break", "default", "break", "if", "structState", "STRUCT_STATE", "Exit", "structState", "STRUCT_STATE", "Error", "break", "if", "c", "nl", "nlCount", "if", "structState", "STRUCT_STATE", "Error", "return", "else", "StringBuilder", "structName", "new", "StringBuilder", "while", "structStack", "empty", "structName", "append", "structStack", "pop", "String", "structKey", "structName", "toString", "if", "structKey", "equals", "structKey", "equals", "structKey", "equals", "structKey", "contains", "structKey", "contains", "structKey", "equals", "return", "startLine", "nlCount", "else", "return", "private", "int", "getIndexOfRightBracket", "int", "endLine", "char", "nl", "n", "final", "int", "max", "this", "sourceStr", "length", "int", "match", "int", "i", "for", "i", "i", "max", "i", "if", "value", "i", "nl", "match", "if", "match", "endLine", "break", "if", "i", "max", "return", "char", "target", "for", "i", "i", "i", "if", "value", "i", "nl", "return", "if", "value", "i", "target", "break", "return", "i", "private", "static", "String", "transMParas", "String", "in", "String", "res", "in", "replaceAll", "res", "res", "replaceAll", "res", "res", "replaceAll", "if", "res", "length", "res", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\infoProvider\\NormalProducer.java",
  "startLine" : 15,
  "endLine" : 27,
  "identifiers" : [ "String", "regex", "if", "File", "separator", "equals", "regex", "else", "regex", "String", "divPath", "blobPath", "split", "regex", "String", "last", "divPath", "divPath", "length", "last", "last", "substring", "last", "length", "String", "first", "divPath", "divPath", "length", "return", "first", "last" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\infoProvider\\TokenView.java",
  "startLine" : 21,
  "endLine" : 30,
  "identifiers" : [ "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "url", "String", "str", "null", "while", "str", "bufferedReader", "readLine", "null", "lines", "add", "str", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\infoProvider\\TokenView.java",
  "startLine" : 31,
  "endLine" : 65,
  "identifiers" : [ "String", "codeSnip", "readSelectedLine", "fromLine", "toLine", "String", "removeCommentCode", "DeleteCAndCplusplusAndJavaNote", "delete_C_Cplusplus_Java_Note", "codeSnip", "int", "indexLeftBracket", "removeCommentCode", "indexOf", "if", "indexLeftBracket", "return", "String", "methodName", "removeCommentCode", "substring", "indexLeftBracket", "return", "methodName", "public", "String", "readSelectedLine", "int", "fromLine", "int", "toLine", "String", "result", "if", "fromLine", "toLine", "fromLine", "lines", "size", "toLine", "lines", "size", "return", "result", "for", "int", "i", "fromLine", "i", "toLine", "i", "if", "i", "toLine", "result", "lines", "get", "i", "else", "result", "lines", "get", "i", "return", "result", "public", "String", "getNoCommentCode", "List", "String", "lines100", "lines", "subList", "Math", "min", "lines", "size", "String", "total", "String", "join", "lines100", "total", "DeleteCAndCplusplusAndJavaNote", "delete_C_Cplusplus_Java_Note", "total", "return", "total" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 42,
  "endLine" : 145,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "State", "state", "State", "CODE", "for", "int", "i", "i", "strToHandle", "length", "i", "char", "c", "strToHandle", "charAt", "i", "switch", "state", "case", "CODE", "if", "c", "state", "State", "SLASH", "else", "builder", "append", "c", "if", "c", "state", "State", "CODE_CHAR", "else", "if", "c", "r", "n", "r", "n", "r", "n", "state", "State", "CODE", "else", "state", "State", "CODE_STRING", "break", "case", "STRING_ESCAPE_SEQUENCE", "builder", "append", "c", "state", "State", "CODE_STRING", "break", "default", "break", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 153,
  "endLine" : 173,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "try", "FileInputStream", "fis", "new", "FileInputStream", "inputFileName", "InputStreamReader", "dis", "new", "InputStreamReader", "fis", "BufferedReader", "reader", "new", "BufferedReader", "dis", "String", "s", "while", "s", "reader", "readLine", "null", "builder", "append", "s", "builder", "append", "reader", "close", "dis", "close", "fis", "close", "catch", "IOException", "e", "e", "printStackTrace", "return", "null", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\util\\DeleteCAndCplusplusAndJavaNote.java",
  "startLine" : 180,
  "endLine" : 193,
  "identifiers" : [ "try", "FileOutputStream", "fos", "new", "FileOutputStream", "outputFileName", "OutputStreamWriter", "dos", "new", "OutputStreamWriter", "fos", "BufferedWriter", "writer", "new", "BufferedWriter", "dos", "writer", "write", "strHandled", "writer", "close", "dos", "close", "fos", "close", "System", "out", "println", "outputFileName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\util\\DruidDataSourceFactory.java",
  "startLine" : 21,
  "endLine" : 50,
  "identifiers" : [ "DruidDataSource", "dds", "new", "DruidDataSource", "dds", "setDriverClassName", "this", "props", "getProperty", "dds", "setUrl", "this", "props", "getProperty", "dds", "setUsername", "this", "props", "getProperty", "dds", "setPassword", "this", "props", "getProperty", "dds", "setValidationQuery", "this", "props", "getProperty", "dds", "setValidationQueryTimeout", "dds", "setTestOnBorrow", "Boolean", "getBoolean", "this", "props", "getProperty", "dds", "setTestOnReturn", "Boolean", "getBoolean", "this", "props", "getProperty", "dds", "setTestWhileIdle", "Boolean", "getBoolean", "this", "props", "getProperty", "dds", "setMaxActive", "Integer", "parseInt", "this", "props", "getProperty", "dds", "setInitialSize", "Integer", "parseInt", "this", "props", "getProperty", "dds", "setMaxWait", "Long", "parseLong", "this", "props", "getProperty", "dds", "setPoolPreparedStatements", "false", "dds", "setLogAbandoned", "true", "dds", "setRemoveAbandoned", "false", "dds", "setRemoveAbandonedTimeout", "dds", "setTimeBetweenEvictionRunsMillis", "try", "dds", "init", "catch", "SQLException", "e", "log", "error", "e", "getMessage", "e", "return", "dds" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\util\\DruidUtil.java",
  "startLine" : 22,
  "endLine" : 39,
  "identifiers" : [ "if", "dataSource", "null", "return", "dataSource", "new", "DruidDataSource", "dataSource", "setDriverClassName", "Config", "DRIVER", "dataSource", "setUrl", "Config", "URL", "dataSource", "setUsername", "Config", "USERNAME", "dataSource", "setPassword", "Config", "PASSWORD", "dataSource", "setInitialSize", "dataSource", "setMaxActive", "dataSource", "setMaxWait", "dataSource", "setTimeBetweenEvictionRunsMillis", "dataSource", "setMinEvictableIdleTimeMillis", "dataSource", "setValidationQuery", "dataSource", "setTestOnBorrow", "true", "dataSource", "init" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\util\\InitTable.java",
  "startLine" : 31,
  "endLine" : 53,
  "identifiers" : [ "Config", "load", "String", "resource", "try", "InputStream", "inputStream", "Resources", "getResourceAsStream", "resource", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "SqlSession", "session", "sqlSessionFactory", "openSession", "IMethodCloneInfoDao", "methodCloneInfoDao", "session", "getMapper", "IMethodCloneInfoDao", "class", "methodCloneInfoDao", "setName", "methodCloneInfoDao", "setFOREIGN_KEY_CHECKS0", "methodCloneInfoDao", "DropTable", "Config", "measureIndexTbName", "methodCloneInfoDao", "createCrossTable", "Config", "measureIndexTbName", "methodCloneInfoDao", "setFOREIGN_KEY_CHECKS1", "session", "commit", "session", "close", "logger", "info", "Config", "measureIndexTbName", "catch", "Exception", "e", "logger", "info", "e", "toString" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\util\\MethodNameUtil.java",
  "startLine" : 15,
  "endLine" : 27,
  "identifiers" : [ "int", "idx", "input", "indexOf", "MethodSign", "result", "if", "idx", "result", "new", "MethodSign", "input", "else", "String", "firstPart", "input", "substring", "idx", "String", "secondPart", "input", "substring", "idx", "result", "new", "MethodSign", "firstPart", "secondPart", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\worker\\FileProducer.java",
  "startLine" : 32,
  "endLine" : 69,
  "identifiers" : [ "ArrayList", "bufferList", "new", "ArrayList", "this", "maxGroupSize", "File", "filesInFirstDir", "blobOfRepoDirFile", "listFiles", "int", "i", "for", "File", "preFixFile", "filesInFirstDir", "if", "preFixFile", "isDirectory", "File", "postFixFileArr", "preFixFile", "listFiles", "for", "File", "postFixFile", "postFixFileArr", "if", "postFixFile", "isFile", "bufferList", "add", "postFixFile", "if", "bufferList", "size", "this", "maxGroupSize", "this", "put", "bufferList", "bufferList", "clear", "i", "if", "i", "logger", "info", "this", "getName", "i", "if", "bufferList", "size", "this", "put", "bufferList", "for", "int", "k", "k", "Config", "threadNum", "k", "this", "put", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\worker\\FileProducer.java",
  "startLine" : 71,
  "endLine" : 85,
  "identifiers" : [ "boolean", "succeed", "false", "ArrayList", "File", "out", "new", "ArrayList", "flist", "size", "out", "addAll", "flist", "do", "try", "this", "outputFileListQueue", "put", "out", "succeed", "true", "catch", "InterruptedException", "var5", "var5", "printStackTrace", "while", "succeed" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\worker\\MethodItemConsumerOutputer.java",
  "startLine" : 29,
  "endLine" : 40,
  "identifiers" : [ "this", "queue", "queue", "this", "numPoisons", "try", "this", "bufferedWriter", "new", "BufferedWriter", "new", "OutputStreamWriter", "new", "FileOutputStream", "outputFile", "catch", "UnsupportedEncodingException", "e", "e", "printStackTrace", "catch", "FileNotFoundException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\worker\\MethodItemConsumerOutputer.java",
  "startLine" : 42,
  "endLine" : 73,
  "identifiers" : [ "List", "b", "null", "while", "true", "while", "true", "try", "b", "this", "queue", "take", "break", "catch", "InterruptedException", "var5", "if", "b", "size", "this", "numPoisons", "if", "this", "numPoisons", "Config", "threadNum", "try", "this", "bufferedWriter", "close", "catch", "IOException", "var3", "var3", "printStackTrace", "return", "else", "try", "this", "writeParseResult", "b", "catch", "IOException", "var4", "var4", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\worker\\MIConsumerMethodInfoProducer.java",
  "startLine" : 35,
  "endLine" : 81,
  "identifiers" : [ "List", "MethodItem", "methodItemList", "new", "LinkedList", "List", "Measure", "mListOfFile", "null", "while", "true", "while", "true", "try", "mListOfFile", "this", "MIListInputQueue", "take", "break", "catch", "InterruptedException", "var7", "if", "mListOfFile", "size", "if", "methodItemList", "size", "this", "put", "methodItemList", "this", "put", "new", "ArrayList", "return", "Iterator", "iterator", "mListOfFile", "iterator", "String", "path", "mListOfFile", "get", "getPath", "MethodNameProvider", "methodNameProvider", "new", "MethodNameProvider", "path", "while", "iterator", "hasNext", "Measure", "measure", "Measure", "iterator", "next", "MethodItem", "methodItem", "new", "MethodItem", "methodItem", "setId", "measure", "getMid", "methodItem", "setBlobPath", "measure", "getPath", "methodItem", "setStartLine", "measure", "getStartLine", "methodItem", "setEndLine", "measure", "getEndLine", "methodNameProvider", "getMethodNameByStartLine", "methodItem", "if", "methodItem", "getMethodName", "equals", "methodNameProvider", "getStructNameByStartLine", "methodItem", "if", "methodItem", "getMethodName", "equals", "methodNameProvider", "getMethodNameByEndLine", "methodItem", "methodItemList", "add", "methodItem", "this", "put", "methodItemList" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\worker\\MIConsumerMethodInfoProducer.java",
  "startLine" : 83,
  "endLine" : 99,
  "identifiers" : [ "List", "MethodItem", "miOutList", "new", "LinkedList", "miOutList", "addAll", "outputMethodItemList", "boolean", "success", "false", "do", "try", "this", "methodItemListOutputQueue", "put", "miOutList", "success", "true", "log", "info", "this", "getName", "miConsumeCount", "get", "catch", "InterruptedException", "var4", "var4", "printStackTrace", "while", "success", "outputMethodItemList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\worker\\MIProducer.java",
  "startLine" : 34,
  "endLine" : 107,
  "identifiers" : [ "String", "mipath", "Config", "detectFolder", "File", "separator", "MeasureIndexStr", "File", "mifile", "new", "File", "mipath", "if", "mifile", "exists", "log", "error", "mipath", "ArrayList", "bufferList", "new", "ArrayList", "log", "info", "int", "i", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "mifile", "String", "lastPath", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "log", "error", "log", "error", "str", "continue", "Integer", "methodId", "Integer", "parseInt", "ls", "String", "blobPath", "ls", "Integer", "startLine", "Integer", "parseInt", "ls", "Integer", "endLine", "Integer", "parseInt", "ls", "Measure", "measure", "new", "Measure", "methodId", "blobPath", "startLine", "endLine", "if", "blobPath", "equals", "lastPath", "bufferList", "add", "measure", "else", "if", "lastPath", "equals", "this", "put", "bufferList", "bufferList", "clear", "bufferList", "add", "measure", "lastPath", "blobPath", "else", "bufferList", "add", "measure", "lastPath", "blobPath", "if", "i", "log", "info", "i", "bufferedReader", "close", "log", "info", "i", "catch", "IOException", "e", "e", "printStackTrace", "if", "bufferList", "size", "this", "put", "bufferList", "for", "int", "k", "k", "Config", "threadNum", "k", "this", "put", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\cn\\edu\\fudan\\worker\\MIProducer.java",
  "startLine" : 109,
  "endLine" : 123,
  "identifiers" : [ "boolean", "succeed", "false", "ArrayList", "Measure", "out", "new", "ArrayList", "measureList", "size", "out", "addAll", "measureList", "do", "try", "this", "outputMeasureListQueue", "put", "out", "succeed", "true", "catch", "InterruptedException", "var5", "var5", "printStackTrace", "while", "succeed" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\GetIP.java",
  "startLine" : 13,
  "endLine" : 30,
  "identifiers" : [ "Enumeration", "allNetInterfaces", "NetworkInterface", "getNetworkInterfaces", "InetAddress", "ip", "null", "while", "allNetInterfaces", "hasMoreElements", "NetworkInterface", "netInterface", "NetworkInterface", "allNetInterfaces", "nextElement", "System", "out", "println", "netInterface", "getName", "Enumeration", "addresses", "netInterface", "getInetAddresses", "while", "addresses", "hasMoreElements", "ip", "InetAddress", "addresses", "nextElement", "if", "ip", "null", "ip", "instanceof", "Inet4Address", "System", "out", "println", "ip", "getHostAddress" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\InsertByJDBC.java",
  "startLine" : 48,
  "endLine" : 89,
  "identifiers" : [ "try", "logger", "info", "Config", "measureIndexTbName", "String", "sql", "String", "format", "Config", "measureIndexTbName", "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "return", "Statement", "statement", "connection", "createStatement", "statement", "execute", "sql", "statement", "close", "logger", "info", "Config", "measureIndexTbName", "sql", "String", "format", "Config", "measureIndexTbName", "statement", "connection", "createStatement", "statement", "execute", "sql", "statement", "close", "connection", "recycle", "catch", "Exception", "e", "logger", "error", "e", "toString" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\InsertByJDBC.java",
  "startLine" : 94,
  "endLine" : 165,
  "identifiers" : [ "logger", "info", "try", "String", "csvPath", "Config", "resultFolder", "File", "separator", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "csvPath", "String", "line", "null", "List", "MethodCloneInfo", "bufferList", "new", "ArrayList", "int", "insertCount", "while", "line", "reader", "readLine", "null", "try", "String", "tmp", "line", "split", "if", "tmp", "length", "continue", "int", "k", "Integer", "id", "Integer", "parseInt", "tmp", "k", "Integer", "groupId", "Integer", "parseInt", "tmp", "k", "Integer", "methodId", "Integer", "parseInt", "tmp", "k", "String", "blobPath", "tmp", "k", "String", "realPath", "tmp", "k", "if", "realPath", "length", "realPath", "realPath", "substring", "Integer", "startLine", "Integer", "parseInt", "tmp", "k", "Integer", "endLine", "Integer", "parseInt", "tmp", "k", "String", "methodName", "tmp", "k", "if", "methodName", "length", "methodName", "methodName", "substring", "Integer", "isCurCommitBlob", "Integer", "parseInt", "tmp", "k", "String", "blobId", "tmp", "k", "String", "paras", "tmp", "k", "String", "author", "tmp", "k", "MethodCloneInfo", "methodCloneInfo", "new", "MethodCloneInfo", "id", "groupId", "methodId", "blobPath", "realPath", "startLine", "endLine", "methodName", "isCurCommitBlob", "blobId", "paras", "author", "bufferList", "add", "methodCloneInfo", "if", "bufferList", "size", "Config", "bufferCount", "insertIntoDB", "bufferList", "insertCount", "bufferList", "size", "logger", "info", "insertCount", "bufferList", "clear", "catch", "Exception", "e", "logger", "error", "e", "toString", "if", "bufferList", "size", "insertIntoDB", "bufferList", "insertCount", "bufferList", "size", "logger", "info", "insertCount", "bufferList", "clear", "reader", "close", "catch", "Exception", "e", "logger", "error", "e", "toString" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\InsertByJDBC.java",
  "startLine" : 167,
  "endLine" : 217,
  "identifiers" : [ "if", "bufferList", "size", "return", "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "PreparedStatement", "statement", "null", "try", "connection", "setAutoCommit", "false", "logger", "info", "statement", "connection", "prepareStatement", "Config", "measureIndexTbName", "for", "MethodCloneInfo", "info", "bufferList", "statement", "setInt", "info", "getId", "statement", "setInt", "info", "getGroupId", "statement", "setInt", "info", "getMethodId", "statement", "setString", "info", "getBlobPath", "statement", "setString", "info", "getRealPath", "statement", "setInt", "info", "getStartLine", "statement", "setInt", "info", "getEndLine", "statement", "setString", "info", "getMethodName", "statement", "setInt", "info", "getIsCurCommit", "statement", "setString", "info", "getBlobId", "statement", "setString", "info", "getParas", "statement", "setString", "info", "getAuthor", "statement", "addBatch", "logger", "info", "statement", "executeBatch", "logger", "info", "connection", "commit", "logger", "info", "catch", "Exception", "e", "logger", "info", "connection", "rollback", "throw", "e", "finally", "try", "statement", "close", "finally", "connection", "recycle" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\Parse.java",
  "startLine" : 52,
  "endLine" : 68,
  "identifiers" : [ "Config", "load", "updateGroupId", "new", "UpdateGroupId", "logger", "info", "String", "resource", "try", "InputStream", "inputStream", "Resources", "getResourceAsStream", "resource", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "catch", "Exception", "e", "logger", "info", "e", "toString", "csvProvider", "new", "CsvProvider", "currentCommitProvider", "new", "CurrentCommitProvider" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\Parse.java",
  "startLine" : 73,
  "endLine" : 154,
  "identifiers" : [ "File", "headerFile", "new", "File", "Config", "resultFolder", "File", "separator", "Constants", "MethodNameStr", "if", "headerFile", "exists", "logger", "error", "logger", "error", "headerFile", "getAbsolutePath", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "headerFile", "logger", "info", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "logger", "error", "logger", "error", "str", "Integer", "methodId", "Integer", "parseInt", "ls", "Integer", "groupId", "updateGroupId", "getGroupId", "methodId", "String", "blobPath", "ls", "String", "blobId", "NormalProducer", "getBlobId", "blobPath", "Set", "String", "realPathSet", "csvProvider", "getRealPathSetByBlobId", "blobId", "Integer", "startLine", "Integer", "parseInt", "ls", "Integer", "endLine", "Integer", "parseInt", "ls", "String", "methodName", "ls", "String", "paras", "ls", "if", "methodName", "length", "methodName", "methodName", "substring", "if", "paras", "length", "paras", "paras", "substring", "String", "author", "for", "String", "realPath", "realPathSet", "Integer", "isCurCommit", "currentCommitProvider", "isCurrentCommitBlob", "blobId", "realPath", "MethodCloneInfo", "methodCloneInfo", "new", "MethodCloneInfo", "i", "groupId", "methodId", "blobPath", "realPath", "startLine", "endLine", "methodName", "isCurCommit", "blobId", "paras", "author", "bufferList", "add", "methodCloneInfo", "if", "i", "logger", "info", "i", "if", "bufferList", "size", "writeBufferList", "bufferedReader", "close", "catch", "IOException", "e", "e", "printStackTrace", "writeBufferList", "logger", "info" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\Parse.java",
  "startLine" : 156,
  "endLine" : 175,
  "identifiers" : [ "File", "resultFile", "new", "File", "Config", "resultFolder", "File", "separator", "if", "bufferList", "size", "try", "FileWriter", "fw", "new", "FileWriter", "resultFile", "getAbsoluteFile", "true", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "for", "MethodCloneInfo", "methodCloneInfo", "bufferList", "bw", "write", "methodCloneInfo", "toString", "bw", "flush", "bw", "close", "catch", "Exception", "e", "e", "printStackTrace", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\ParseMNameText.java",
  "startLine" : 43,
  "endLine" : 82,
  "identifiers" : [ "File", "outputFile", "new", "File", "Config", "resultFolder", "File", "separator", "try", "Files", "deleteIfExists", "outputFile", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "BlockingQueue", "List", "Measure", "measuresToParse", "new", "LinkedBlockingQueue", "BlockingQueue", "List", "MethodItem", "methodItemListQueue", "new", "LinkedBlockingQueue", "AtomicInteger", "parseMIcount", "new", "AtomicInteger", "MIProducer", "miProducer", "new", "MIProducer", "measuresToParse", "List", "MIConsumerMethodInfoProducer", "parserList", "new", "ArrayList", "MIConsumerMethodInfoProducer", "tmpParser", "null", "for", "int", "i", "i", "Config", "threadNum", "i", "tmpParser", "new", "MIConsumerMethodInfoProducer", "measuresToParse", "methodItemListQueue", "parseMIcount", "parserList", "add", "tmpParser", "MethodItemConsumerOutputer", "outputer", "new", "MethodItemConsumerOutputer", "methodItemListQueue", "outputFile", "outputer", "setName", "miProducer", "start", "Iterator", "iterator", "parserList", "iterator", "while", "iterator", "hasNext", "tmpParser", "MIConsumerMethodInfoProducer", "iterator", "next", "tmpParser", "start", "outputer", "start", "miProducer", "join", "iterator", "parserList", "iterator", "while", "iterator", "hasNext", "tmpParser", "MIConsumerMethodInfoProducer", "iterator", "next", "tmpParser", "join", "outputer", "join" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\ParseToDB.java",
  "startLine" : 44,
  "endLine" : 74,
  "identifiers" : [ "Config", "load", "Properties", "prop", "Config", "getProperties", "String", "resource", "try", "InputStream", "inputStream", "Resources", "getResourceAsStream", "resource", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "prop", "session", "sqlSessionFactory", "openSession", "false", "IMethodCloneInfoDao", "methodCloneInfoDao", "session", "getMapper", "IMethodCloneInfoDao", "class", "methodCloneInfoDao", "setName", "methodCloneInfoDao", "setFOREIGN_KEY_CHECKS0", "logger", "info", "Config", "measureIndexTbName", "methodCloneInfoDao", "DropTable", "Config", "measureIndexTbName", "logger", "info", "Config", "measureIndexTbName", "methodCloneInfoDao", "createCrossTable", "Config", "measureIndexTbName", "methodCloneInfoDao", "setFOREIGN_KEY_CHECKS1", "session", "commit", "logger", "info", "Config", "measureIndexTbName", "catch", "Exception", "e", "session", "rollback", "logger", "error", "e", "toString", "logger", "error", "e", "getStackTrace", "toString", "logger", "error", "session", "close", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\ParseToDB.java",
  "startLine" : 76,
  "endLine" : 144,
  "identifiers" : [ "int", "i", "String", "csvPath", "Config", "resultFolder", "File", "separator", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "csvPath", "logger", "info", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "divStr", "str", "split", "if", "divStr", "length", "continue", "int", "k", "Integer", "id", "Integer", "parseInt", "divStr", "k", "Integer", "groupId", "Integer", "parseInt", "divStr", "k", "Integer", "methodId", "Integer", "parseInt", "divStr", "k", "String", "blobPath", "divStr", "k", "String", "realPath", "divStr", "k", "if", "realPath", "length", "realPath", "realPath", "substring", "Integer", "startLine", "Integer", "parseInt", "divStr", "k", "Integer", "endLine", "Integer", "parseInt", "divStr", "k", "String", "methodName", "divStr", "k", "if", "methodName", "length", "methodName", "methodName", "substring", "Integer", "isCurCommitBlob", "Integer", "parseInt", "divStr", "k", "String", "blobId", "divStr", "k", "String", "commitDate", "divStr", "k", "String", "author", "divStr", "k", "MethodCloneInfo", "methodCloneInfo", "new", "MethodCloneInfo", "id", "groupId", "methodId", "blobPath", "realPath", "startLine", "endLine", "methodName", "isCurCommitBlob", "blobId", "commitDate", "author", "bufferList", "add", "methodCloneInfo", "if", "bufferList", "size", "Config", "bufferCount", "insertToDB", "catch", "Exception", "e", "logger", "error", "e", "toString", "if", "session", "null", "session", "close", "insertToDB", "if", "session", "null", "session", "close" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\ParseToDB.java",
  "startLine" : 146,
  "endLine" : 206,
  "identifiers" : [ "if", "bufferList", "size", "int", "errorCount", "while", "true", "logger", "info", "try", "IMethodCloneInfoDao", "methodCloneInfoDao", "session", "getMapper", "IMethodCloneInfoDao", "class", "if", "errorCount", "for", "MethodCloneInfo", "methodCloneInfo", "bufferList", "try", "methodCloneInfoDao", "deleteByPrimaryKey", "methodCloneInfo", "getId", "Config", "measureIndexTbName", "catch", "Exception", "e", "logger", "error", "e", "getMessage", "e", "logger", "error", "logger", "info", "methodCloneInfoDao", "insertInfoList", "bufferList", "Config", "measureIndexTbName", "logger", "info", "session", "commit", "logger", "info", "logger", "info", "break", "catch", "Exception", "e", "logger", "error", "e", "toString", "logger", "info", "try", "session", "rollback", "catch", "Exception", "ex", "try", "session", "close", "catch", "Exception", "ex", "logger", "info", "try", "session", "sqlSessionFactory", "openSession", "logger", "info", "catch", "Exception", "ex", "logger", "error", "logger", "error", "e", "getMessage", "e", "errorCount", "if", "errorCount", "logger", "error", "System", "exit", "break", "insertNum", "bufferList", "size", "logger", "info", "insertNum", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\ParseToDBDruid.java",
  "startLine" : 32,
  "endLine" : 71,
  "identifiers" : [ "Config", "load", "Properties", "prop", "Config", "getProperties", "String", "resource", "InputStream", "inputStream", "null", "try", "inputStream", "Resources", "getResourceAsStream", "resource", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e", "log", "error", "System", "exit", "try", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "prop", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "log", "error", "System", "exit", "SqlSession", "session", "null", "try", "session", "sqlSessionFactory", "openSession", "false", "log", "info", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "log", "error", "System", "exit", "IMethodCloneInfoDao", "methodCloneInfoDao", "session", "getMapper", "IMethodCloneInfoDao", "class", "String", "res", "methodCloneInfoDao", "selectOne", "if", "res", "null", "log", "info", "Config", "measureIndexTbName", "else", "log", "info", "Config", "measureIndexTbName", "session", "close" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\ParseToDBDruid.java",
  "startLine" : 75,
  "endLine" : 96,
  "identifiers" : [ "SqlSession", "session", "null", "try", "session", "sqlSessionFactory", "openSession", "false", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "log", "error", "System", "exit", "IMethodCloneInfoDao", "methodCloneInfoDao", "session", "getMapper", "IMethodCloneInfoDao", "class", "methodCloneInfoDao", "setName", "methodCloneInfoDao", "setFOREIGN_KEY_CHECKS0", "log", "info", "Config", "measureIndexTbName", "methodCloneInfoDao", "DropTable", "Config", "measureIndexTbName", "log", "info", "Config", "measureIndexTbName", "methodCloneInfoDao", "createCrossTable", "Config", "measureIndexTbName", "methodCloneInfoDao", "setFOREIGN_KEY_CHECKS1", "session", "commit", "session", "close", "log", "info", "Config", "measureIndexTbName" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\ParseToDBDruid.java",
  "startLine" : 98,
  "endLine" : 162,
  "identifiers" : [ "int", "i", "String", "csvPath", "Config", "resultFolder", "File", "separator", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "csvPath", "log", "info", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "divStr", "str", "split", "if", "divStr", "length", "continue", "int", "k", "Integer", "id", "Integer", "parseInt", "divStr", "k", "Integer", "groupId", "Integer", "parseInt", "divStr", "k", "Integer", "methodId", "Integer", "parseInt", "divStr", "k", "String", "blobPath", "divStr", "k", "String", "realPath", "divStr", "k", "if", "realPath", "length", "realPath", "realPath", "substring", "Integer", "startLine", "Integer", "parseInt", "divStr", "k", "Integer", "endLine", "Integer", "parseInt", "divStr", "k", "String", "methodName", "divStr", "k", "if", "methodName", "length", "methodName", "methodName", "substring", "Integer", "isCurCommitBlob", "Integer", "parseInt", "divStr", "k", "String", "blobId", "divStr", "k", "String", "commitDate", "divStr", "k", "String", "author", "divStr", "k", "MethodCloneInfo", "methodCloneInfo", "new", "MethodCloneInfo", "id", "groupId", "methodId", "blobPath", "realPath", "startLine", "endLine", "methodName", "isCurCommitBlob", "blobId", "commitDate", "author", "bufferList", "add", "methodCloneInfo", "if", "bufferList", "size", "Config", "bufferCount", "insertToDB", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e", "insertToDB" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\ParseToDBDruid.java",
  "startLine" : 164,
  "endLine" : 234,
  "identifiers" : [ "if", "bufferList", "size", "int", "errorCount", "while", "true", "log", "info", "SqlSession", "session", "null", "try", "session", "sqlSessionFactory", "openSession", "TransactionIsolationLevel", "READ_COMMITTED", "log", "info", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "log", "error", "System", "exit", "try", "IMethodCloneInfoDao", "methodCloneInfoDao", "session", "getMapper", "IMethodCloneInfoDao", "class", "if", "errorCount", "log", "info", "Set", "Integer", "idSet", "new", "HashSet", "for", "MethodCloneInfo", "methodCloneInfo", "bufferList", "idSet", "add", "methodCloneInfo", "getId", "try", "methodCloneInfoDao", "deleteByPrimaryKeySet", "idSet", "Config", "measureIndexTbName", "log", "info", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "log", "error", "idSet", "clear", "log", "info", "methodCloneInfoDao", "insertInfoList", "bufferList", "Config", "measureIndexTbName", "log", "info", "session", "commit", "log", "info", "log", "info", "if", "session", "null", "session", "close", "break", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "log", "info", "try", "session", "rollback", "catch", "Exception", "ex", "try", "session", "close", "catch", "Exception", "ex", "errorCount", "if", "errorCount", "log", "error", "System", "exit", "break", "if", "session", "null", "session", "close", "insertNum", "bufferList", "size", "log", "info", "insertNum", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\MeasureIndexInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 18,
  "endLine" : 37,
  "identifiers" : [ "Config", "load", "File", "resultFolderFile", "new", "File", "Config", "resultFolder", "File", "separator", "resultFolderFile", "mkdirs", "File", "resultFile1", "new", "File", "Config", "resultFolder", "File", "separator", "File", "resultFile2", "new", "File", "Config", "resultFolder", "File", "separator", "try", "Files", "deleteIfExists", "resultFile1", "toPath", "Files", "deleteIfExists", "resultFile2", "toPath", "catch", "IOException", "e", "e", "printStackTrace", "ParseMNameText", "main", "args", "Parse", "main", "args", "InsertByJDBC", "main", "args" ]
}, {
  "path" : "d:\\GitRepo\\neo4jdemo\\.mvn\\wrapper\\MavenWrapperDownloader.java",
  "startLine" : 49,
  "endLine" : 96,
  "identifiers" : [ "System", "out", "println", "File", "baseDirectory", "new", "File", "args", "System", "out", "println", "baseDirectory", "getAbsolutePath", "File", "mavenWrapperPropertyFile", "new", "File", "baseDirectory", "MAVEN_WRAPPER_PROPERTIES_PATH", "String", "url", "DEFAULT_DOWNLOAD_URL", "if", "mavenWrapperPropertyFile", "exists", "FileInputStream", "mavenWrapperPropertyFileInputStream", "null", "try", "mavenWrapperPropertyFileInputStream", "new", "FileInputStream", "mavenWrapperPropertyFile", "Properties", "mavenWrapperProperties", "new", "Properties", "mavenWrapperProperties", "load", "mavenWrapperPropertyFileInputStream", "url", "mavenWrapperProperties", "getProperty", "PROPERTY_NAME_WRAPPER_URL", "url", "catch", "IOException", "e", "System", "out", "println", "MAVEN_WRAPPER_PROPERTIES_PATH", "finally", "try", "if", "mavenWrapperPropertyFileInputStream", "null", "mavenWrapperPropertyFileInputStream", "close", "catch", "IOException", "e", "System", "out", "println", "url", "File", "outputFile", "new", "File", "baseDirectory", "getAbsolutePath", "MAVEN_WRAPPER_JAR_PATH", "if", "outputFile", "getParentFile", "exists", "if", "outputFile", "getParentFile", "mkdirs", "System", "out", "println", "outputFile", "getParentFile", "getAbsolutePath", "System", "out", "println", "outputFile", "getAbsolutePath", "try", "downloadFileFromURL", "url", "outputFile", "System", "out", "println", "System", "exit", "catch", "Throwable", "e", "System", "out", "println", "e", "printStackTrace", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\neo4jdemo\\.mvn\\wrapper\\MavenWrapperDownloader.java",
  "startLine" : 98,
  "endLine" : 116,
  "identifiers" : [ "if", "System", "getenv", "null", "System", "getenv", "null", "String", "username", "System", "getenv", "char", "password", "System", "getenv", "toCharArray", "Authenticator", "setDefault", "new", "Authenticator", "Override", "protected", "PasswordAuthentication", "getPasswordAuthentication", "return", "new", "PasswordAuthentication", "username", "password", "URL", "website", "new", "URL", "urlString", "ReadableByteChannel", "rbc", "rbc", "Channels", "newChannel", "website", "openStream", "FileOutputStream", "fos", "new", "FileOutputStream", "destination", "fos", "getChannel", "transferFrom", "rbc", "Long", "MAX_VALUE", "fos", "close", "rbc", "close" ]
}, {
  "path" : "d:\\GitRepo\\neo4jdemo\\src\\test\\java\\com\\example\\neo4jdemo\\Neo4jdemoApplicationTests.java",
  "startLine" : 21,
  "endLine" : 40,
  "identifiers" : [ "supplyGraphRepo", "deleteAll", "supplyRelationshipRepo", "deleteAll", "SupplyGraph", "supplyGraph", "new", "SupplyGraph", "supplyGraph", "setName", "supplyGraph", "supplyGraphRepo", "save", "supplyGraph", "System", "out", "println", "supplyGraph", "getId", "SupplyGraph", "supplyGraph2", "new", "SupplyGraph", "supplyGraph2", "setName", "supplyGraph2", "supplyGraphRepo", "save", "supplyGraph2", "System", "out", "println", "supplyGraph2", "getId", "SupplyRelationship", "supplyRelationship", "new", "SupplyRelationship", "supplyRelationship", "setAmount", "supplyRelationship", "setCompany", "supplyGraph", "supplyRelationship", "setSupply", "supplyGraph2", "supplyRelationship", "setScale", "supplyRelationshipRepo", "save", "supplyRelationship" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\config\\Config.java",
  "startLine" : 34,
  "endLine" : 48,
  "identifiers" : [ "properties", "setProperty", "DRIVER", "properties", "setProperty", "URL", "properties", "setProperty", "USERNAME", "properties", "setProperty", "PASSWORD", "properties", "setProperty", "CSV_FOLDER", "properties", "setProperty", "GRANULARITY", "properties", "setProperty", "LANGUAGE", "properties", "setProperty", "THRESHOLD", "toString", "properties", "setProperty", "DETECT_FOLDER", "properties", "store", "new", "FileWriter", "CONFIG_FILE" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\config\\Config.java",
  "startLine" : 50,
  "endLine" : 77,
  "identifiers" : [ "if", "new", "File", "CONFIG_FILE", "exists", "System", "out", "printf", "CONFIG_FILE", "save", "System", "exit", "properties", "load", "new", "FileReader", "CONFIG_FILE", "DRIVER", "properties", "getProperty", "URL", "properties", "getProperty", "USERNAME", "properties", "getProperty", "PASSWORD", "properties", "getProperty", "CSV_FOLDER", "properties", "getProperty", "DETECT_FOLDER", "properties", "getProperty", "GRANULARITY", "properties", "getProperty", "LANGUAGE", "properties", "getProperty", "PROJECT_INFO_OUTPUT_FILE", "CSV_FOLDER", "File", "separator", "FILE_INFO_OUTPUT_FILE", "CSV_FOLDER", "File", "separator", "MISSING_PROJECT_INFO_OUTPUT_FILE", "CSV_FOLDER", "File", "separator", "MEASURE_TABLE", "LANGUAGE", "toLowerCase", "GRANULARITY", "toLowerCase", "FILE_INFO_TABLE", "LANGUAGE", "toLowerCase", "GRANULARITY", "toLowerCase", "PROJECT_INFO_TABLE", "LANGUAGE", "toLowerCase", "GRANULARITY", "toLowerCase", "THRESHOLD", "Float", "parseFloat", "properties", "getProperty" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\infoProvider\\TotalLineProvider.java",
  "startLine" : 33,
  "endLine" : 107,
  "identifiers" : [ "File", "headerFile", "new", "File", "Config", "DETECT_FOLDER", "File", "separator", "File", "separator", "Constants", "MeasureIndexStr", "if", "headerFile", "exists", "log", "error", "log", "error", "headerFile", "getAbsolutePath", "log", "error", "System", "exit", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "headerFile", "log", "info", "int", "i", "String", "cache", "null", "int", "cacheLine", "boolean", "pathWanted", "false", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "split", "if", "ls", "length", "log", "error", "log", "error", "str", "continue", "Integer", "methodId", "Integer", "parseInt", "ls", "Integer", "groupId", "updateGroupId", "getGroupId", "methodId", "if", "groupId", "pathWanted", "true", "String", "path", "ls", "if", "path", "length", "continue", "Integer", "startLine", "Integer", "parseInt", "ls", "Integer", "endLine", "Integer", "parseInt", "ls", "if", "cache", "null", "cache", "path", "cacheLine", "endLine", "startLine", "else", "if", "cache", "equals", "path", "cacheLine", "endLine", "startLine", "else", "if", "pathWanted", "pathLineMap", "put", "cache", "cacheLine", "cache", "path", "cacheLine", "endLine", "startLine", "pathWanted", "false", "if", "i", "log", "info", "i", "if", "pathWanted", "pathLineMap", "put", "cache", "cacheLine", "cache", "null", "bufferedReader", "close", "catch", "IOException", "e", "e", "printStackTrace", "log", "info", "updateGroupId", "dispose", "updateGroupId", "null" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\infoProvider\\UpdateGroupId.java",
  "startLine" : 35,
  "endLine" : 52,
  "identifiers" : [ "try", "Config", "load", "catch", "IOException", "e", "e", "printStackTrace", "head_file", "new", "File", "Config", "DETECT_FOLDER", "File", "separator", "File", "separator", "Constants", "MeasureIndexStr", "if", "head_file", "exists", "System", "out", "println", "System", "exit", "group_file", "new", "File", "Config", "DETECT_FOLDER", "File", "separator", "File", "separator", "Constants", "Type123groupStr", "if", "group_file", "exists", "System", "out", "println", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\infoProvider\\UpdateGroupId.java",
  "startLine" : 54,
  "endLine" : 82,
  "identifiers" : [ "try", "System", "out", "println", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "group_file", "int", "group_id", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "group_id", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "System", "out", "println", "continue", "for", "String", "mea_id", "ls", "Integer", "meain_id", "Integer", "parseInt", "mea_id", "group_map", "put", "meain_id", "group_id", "if", "group_id", "log", "info", "group_id", "bufferedReader", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\Main.java",
  "startLine" : 13,
  "endLine" : 42,
  "identifiers" : [ "checkArgs", "args", "long", "start", "System", "currentTimeMillis", "Config", "load", "if", "args", "equals", "else", "ProjectInfoProcessor2", "projectInfoProcessor", "new", "ProjectInfoProcessor2", "projectInfoProcessor", "process", "long", "end", "System", "currentTimeMillis", "System", "out", "printf", "DateUtil", "format", "end", "start" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\Main.java",
  "startLine" : 44,
  "endLine" : 55,
  "identifiers" : [ "if", "args", "length", "System", "out", "println", "System", "exit", "if", "args", "equals", "args", "equals", "args", "equals", "System", "out", "println", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\processor\\CommonProcessor.java",
  "startLine" : 72,
  "endLine" : 98,
  "identifiers" : [ "List", "String", "projectList", "new", "ArrayList", "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "String", "sql", "String", "format", "Config", "MEASURE_TABLE", "PreparedStatement", "statement", "connection", "prepareStatement", "sql", "ResultSet", "resultSet", "statement", "executeQuery", "while", "resultSet", "next", "projectList", "add", "resultSet", "getString", "try", "resultSet", "close", "statement", "close", "finally", "connection", "recycle", "return", "projectList" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\processor\\ProjectInfoProcessor2.java",
  "startLine" : 36,
  "endLine" : 95,
  "identifiers" : [ "try", "log", "info", "DruidUtil", "initDataSource", "catch", "SQLException", "e", "log", "error", "e", "getMessage", "e", "System", "exit", "log", "info", "CSVPrinter", "printer", "new", "CSVPrinter", "new", "FileWriter", "Config", "PROJECT_INFO_OUTPUT_FILE", "CSVFormat", "DEFAULT", "List", "String", "projectList", "getProjectList", "int", "cnt", "for", "String", "project", "projectList", "cnt", "log", "info", "String", "format", "cnt", "f", "projectList", "size", "try", "log", "info", "project", "timer", "start", "int", "totalFile", "getFileNumber", "project", "false", "timer", "stop", "log", "info", "String", "format", "timer", "duration", "timer", "start", "Map", "String", "Integer", "relatedProjectMap", "new", "HashMap", "ProjectInfo", "example", "null", "if", "Config", "LANGUAGE", "equals", "Config", "GRANULARITY", "equals", "example", "getFileInfoListCPPMethod", "project", "relatedProjectMap", "totalFile", "else", "example", "getFileInfoList", "project", "relatedProjectMap", "totalFile", "timer", "stop", "log", "info", "String", "format", "timer", "duration", "log", "info", "String", "format", "timer", "duration", "for", "String", "relatedProject", "relatedProjectMap", "keySet", "if", "relatedProject", "equals", "project", "continue", "int", "relatedFile", "relatedProjectMap", "get", "relatedProject", "ProjectInfo", "projectInfo", "new", "ProjectInfo", "projectId", "project", "totalFile", "example", "getCloneValidFile", "relatedProject", "relatedFile", "example", "getScore", "printer", "printRecord", "projectInfo", "getId", "projectInfo", "getProjectName", "projectInfo", "getTotalValidFile", "projectInfo", "getCloneValidFile", "projectInfo", "getRelatedProject", "projectInfo", "getRelatedFile", "projectInfo", "getScore", "printer", "flush", "relatedProjectMap", "clear", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "log", "error", "project", "timer", "stop", "printer", "close", "DruidUtil", "close", "log", "info" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\processor\\ProjectInfoProcessor2.java",
  "startLine" : 104,
  "endLine" : 136,
  "identifiers" : [ "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "String", "sql", "String", "format", "Config", "MEASURE_TABLE", "project", "log", "info", "sql", "PreparedStatement", "statement", "connection", "prepareStatement", "sql", "ResultSet", "resultSet", "statement", "executeQuery", "int", "num", "if", "resultSet", "next", "num", "resultSet", "getInt", "try", "resultSet", "close", "statement", "close", "finally", "connection", "recycle", "return", "num" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\processor\\ProjectInfoProcessor2.java",
  "startLine" : 145,
  "endLine" : 242,
  "identifiers" : [ "ProjectInfo", "example", "new", "ProjectInfo", "example", "setId", "example", "setTotalValidFile", "totalValidFile", "Map", "String", "Float", "relateMapSumSimMap", "new", "HashMap", "Map", "String", "Integer", "relateMapCountMap", "new", "HashMap", "Map", "String", "Set", "String", "projectPathSetMap", "new", "HashMap", "Set", "String", "innerPathSet", "new", "HashSet", "String", "sql", "String", "format", "Config", "FILE_INFO_TABLE", "project", "project", "log", "info", "sql", "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "PreparedStatement", "statement", "connection", "prepareStatement", "sql", "ResultSet", "resultSet", "statement", "executeQuery", "while", "resultSet", "next", "int", "id", "resultSet", "getInt", "String", "fileA", "resultSet", "getString", "String", "fileAProject", "resultSet", "getString", "String", "fileB", "resultSet", "getString", "String", "fileBProject", "resultSet", "getString", "float", "similarity", "resultSet", "getFloat", "FileInfo", "fileInfo", "new", "FileInfo", "id", "fileA", "fileAProject", "fileB", "fileBProject", "similarity", "if", "fileInfo", "getFileAProject", "equals", "project", "innerPathSet", "add", "fileInfo", "getFileA", "else", "if", "fileInfo", "getFileBProject", "equals", "project", "innerPathSet", "add", "fileInfo", "getFileB", "String", "relatedProject", "String", "path", "if", "fileInfo", "getFileAProject", "equals", "project", "relatedProject", "fileInfo", "getFileBProject", "path", "fileInfo", "getFileB", "else", "if", "fileInfo", "getFileBProject", "equals", "project", "relatedProject", "fileInfo", "getFileAProject", "path", "fileInfo", "getFileA", "Set", "String", "pathSet", "projectPathSetMap", "getOrDefault", "relatedProject", "new", "HashSet", "pathSet", "add", "path", "projectPathSetMap", "put", "relatedProject", "pathSet", "if", "fileInfo", "getFileAProject", "equals", "project", "String", "key", "fileInfo", "getFileBProject", "Float", "sumSim", "relateMapSumSimMap", "getOrDefault", "key", "f", "sumSim", "fileInfo", "getSimilarity", "relateMapSumSimMap", "put", "relatedProject", "sumSim", "Integer", "count", "relateMapCountMap", "getOrDefault", "relatedProject", "count", "relateMapCountMap", "put", "relatedProject", "count", "else", "if", "fileInfo", "getFileBProject", "equals", "project", "String", "key", "fileInfo", "getFileAProject", "Float", "sumSim", "relateMapSumSimMap", "getOrDefault", "key", "f", "sumSim", "fileInfo", "getSimilarity", "relateMapSumSimMap", "put", "relatedProject", "sumSim", "Integer", "count", "relateMapCountMap", "getOrDefault", "relatedProject", "count", "relateMapCountMap", "put", "relatedProject", "count", "try", "resultSet", "close", "statement", "close", "catch", "SQLException", "e", "log", "error", "e", "getMessage", "e", "finally", "connection", "recycle", "int", "cloneFileNum", "innerPathSet", "size", "example", "setCloneValidFile", "cloneFileNum", "innerPathSet", "clear", "for", "String", "relateProject", "projectPathSetMap", "keySet", "Set", "String", "pathSet", "projectPathSetMap", "get", "relateProject", "Integer", "num", "pathSet", "size", "relatedProjectMap", "put", "relateProject", "num", "pathSet", "clear", "projectPathSetMap", "clear", "float", "score", "f", "for", "String", "relatedProject", "relatedProjectMap", "keySet", "float", "sumSim", "relateMapSumSimMap", "getOrDefault", "relatedProject", "F", "int", "count", "relateMapCountMap", "getOrDefault", "relatedProject", "float", "avgSimilarity", "sumSim", "count", "f", "score", "relatedProjectMap", "get", "relatedProject", "f", "totalValidFile", "avgSimilarity", "example", "setScore", "score", "relateMapSumSimMap", "clear", "relateMapCountMap", "clear", "return", "example" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\processor\\ProjectInfoProcessor2.java",
  "startLine" : 244,
  "endLine" : 353,
  "identifiers" : [ "ProjectInfo", "example", "new", "ProjectInfo", "example", "setId", "example", "setTotalValidFile", "totalValidFile", "Map", "String", "Float", "relateMapSumSimMap", "new", "HashMap", "Map", "String", "Integer", "relateMapCountMap", "new", "HashMap", "Map", "String", "Set", "String", "projectPathSetMap", "new", "HashMap", "Set", "String", "innerPathSet", "new", "HashSet", "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "for", "int", "i", "i", "i", "String", "tbName", "Config", "FILE_INFO_TABLE", "i", "String", "sql", "String", "format", "tbName", "project", "project", "log", "info", "sql", "String", "oriSql", "String", "format", "tbName", "PreparedStatement", "statement", "connection", "prepareStatement", "oriSql", "statement", "setString", "project", "statement", "setString", "project", "ResultSet", "resultSet", "statement", "executeQuery", "while", "resultSet", "next", "int", "id", "resultSet", "getInt", "String", "fileA", "resultSet", "getString", "String", "fileAProject", "resultSet", "getString", "String", "fileB", "resultSet", "getString", "String", "fileBProject", "resultSet", "getString", "float", "similarity", "resultSet", "getFloat", "FileInfo", "fileInfo", "new", "FileInfo", "id", "fileA", "fileAProject", "fileB", "fileBProject", "similarity", "if", "fileInfo", "getFileAProject", "equals", "project", "innerPathSet", "add", "fileInfo", "getFileA", "else", "if", "fileInfo", "getFileBProject", "equals", "project", "innerPathSet", "add", "fileInfo", "getFileB", "String", "relatedProject", "String", "path", "if", "fileInfo", "getFileAProject", "equals", "project", "relatedProject", "fileInfo", "getFileBProject", "path", "fileInfo", "getFileB", "else", "if", "fileInfo", "getFileBProject", "equals", "project", "relatedProject", "fileInfo", "getFileAProject", "path", "fileInfo", "getFileA", "Set", "String", "pathSet", "projectPathSetMap", "getOrDefault", "relatedProject", "new", "HashSet", "pathSet", "add", "path", "projectPathSetMap", "put", "relatedProject", "pathSet", "if", "fileInfo", "getFileAProject", "equals", "project", "String", "key", "fileInfo", "getFileBProject", "Float", "sumSim", "relateMapSumSimMap", "getOrDefault", "key", "f", "sumSim", "fileInfo", "getSimilarity", "relateMapSumSimMap", "put", "relatedProject", "sumSim", "Integer", "count", "relateMapCountMap", "getOrDefault", "relatedProject", "count", "relateMapCountMap", "put", "relatedProject", "count", "else", "if", "fileInfo", "getFileBProject", "equals", "project", "String", "key", "fileInfo", "getFileAProject", "Float", "sumSim", "relateMapSumSimMap", "getOrDefault", "key", "f", "sumSim", "fileInfo", "getSimilarity", "relateMapSumSimMap", "put", "relatedProject", "sumSim", "Integer", "count", "relateMapCountMap", "getOrDefault", "relatedProject", "count", "relateMapCountMap", "put", "relatedProject", "count", "try", "resultSet", "close", "catch", "SQLException", "e", "log", "error", "e", "getMessage", "e", "try", "statement", "close", "catch", "SQLException", "e", "log", "error", "e", "getMessage", "e", "connection", "recycle", "int", "cloneFileNum", "innerPathSet", "size", "example", "setCloneValidFile", "cloneFileNum", "innerPathSet", "clear", "for", "String", "relateProject", "projectPathSetMap", "keySet", "Set", "String", "pathSet", "projectPathSetMap", "get", "relateProject", "Integer", "num", "pathSet", "size", "relatedProjectMap", "put", "relateProject", "num", "pathSet", "clear", "projectPathSetMap", "clear", "float", "score", "f", "for", "String", "relatedProject", "relatedProjectMap", "keySet", "float", "sumSim", "relateMapSumSimMap", "getOrDefault", "relatedProject", "F", "int", "count", "relateMapCountMap", "getOrDefault", "relatedProject", "float", "avgSimilarity", "sumSim", "count", "f", "score", "relatedProjectMap", "get", "relatedProject", "f", "totalValidFile", "avgSimilarity", "example", "setScore", "score", "relateMapSumSimMap", "clear", "relateMapCountMap", "clear", "return", "example" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\util\\DateUtil.java",
  "startLine" : 10,
  "endLine" : 17,
  "identifiers" : [ "int", "seconds", "int", "millis", "e3", "int", "hours", "seconds", "seconds", "hours", "int", "minutes", "seconds", "seconds", "minutes", "return", "String", "format", "hours", "minutes", "seconds" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\util\\DelCommentPy.java",
  "startLine" : 28,
  "endLine" : 94,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "State", "state", "State", "CODE", "for", "int", "i", "i", "strToHandle", "length", "i", "char", "c", "strToHandle", "charAt", "i", "switch", "state", "case", "CODE", "if", "c", "state", "State", "SHARP", "else", "if", "c", "c", "state", "State", "S2", "else", "builder", "append", "c", "state", "State", "CODE", "break", "case", "S2", "if", "c", "c", "state", "State", "E1", "break", "case", "E1", "if", "c", "c", "state", "State", "CODE", "else", "state", "State", "S3", "break", "default", "break", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\util\\DelCommentPy.java",
  "startLine" : 102,
  "endLine" : 122,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "try", "FileInputStream", "fis", "new", "FileInputStream", "inputFileName", "InputStreamReader", "dis", "new", "InputStreamReader", "fis", "BufferedReader", "reader", "new", "BufferedReader", "dis", "String", "s", "while", "s", "reader", "readLine", "null", "builder", "append", "s", "builder", "append", "reader", "close", "dis", "close", "fis", "close", "catch", "IOException", "e", "e", "printStackTrace", "System", "exit", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\util\\DelCommentPy.java",
  "startLine" : 129,
  "endLine" : 142,
  "identifiers" : [ "try", "FileOutputStream", "fos", "new", "FileOutputStream", "outputFileName", "OutputStreamWriter", "dos", "new", "OutputStreamWriter", "fos", "BufferedWriter", "writer", "new", "BufferedWriter", "dos", "writer", "write", "strHandled", "writer", "close", "dos", "close", "fos", "close", "System", "out", "println", "outputFileName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\util\\DelCommentPy.java",
  "startLine" : 148,
  "endLine" : 163,
  "identifiers" : [ "String", "in", "String", "out", "System", "out", "println", "String", "inputFileName", "in", "System", "out", "println", "String", "outputFileName", "out", "String", "strToHandle", "readFile", "inputFileName", "String", "strHandled", "get_Note", "strToHandle", "writeFile", "outputFileName", "strHandled" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\util\\DeleteCommentUtil.java",
  "startLine" : 42,
  "endLine" : 145,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "State", "state", "State", "CODE", "for", "int", "i", "i", "strToHandle", "length", "i", "char", "c", "strToHandle", "charAt", "i", "switch", "state", "case", "CODE", "if", "c", "state", "State", "SLASH", "else", "builder", "append", "c", "if", "c", "state", "State", "CODE_CHAR", "else", "if", "c", "r", "n", "r", "n", "r", "n", "state", "State", "CODE", "else", "state", "State", "CODE_STRING", "break", "case", "STRING_ESCAPE_SEQUENCE", "builder", "append", "c", "state", "State", "CODE_STRING", "break", "default", "break", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\util\\DeleteCommentUtil.java",
  "startLine" : 153,
  "endLine" : 173,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "try", "FileInputStream", "fis", "new", "FileInputStream", "inputFileName", "InputStreamReader", "dis", "new", "InputStreamReader", "fis", "BufferedReader", "reader", "new", "BufferedReader", "dis", "String", "s", "while", "s", "reader", "readLine", "null", "builder", "append", "s", "builder", "append", "reader", "close", "dis", "close", "fis", "close", "catch", "IOException", "e", "e", "printStackTrace", "System", "exit", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\util\\DeleteCommentUtil.java",
  "startLine" : 180,
  "endLine" : 193,
  "identifiers" : [ "try", "FileOutputStream", "fos", "new", "FileOutputStream", "outputFileName", "OutputStreamWriter", "dos", "new", "OutputStreamWriter", "fos", "BufferedWriter", "writer", "new", "BufferedWriter", "dos", "writer", "write", "strHandled", "writer", "close", "dos", "close", "fos", "close", "System", "out", "println", "outputFileName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\util\\DeleteCommentUtil.java",
  "startLine" : 199,
  "endLine" : 212,
  "identifiers" : [ "Scanner", "in", "new", "Scanner", "System", "in", "System", "out", "println", "String", "inputFileName", "in", "nextLine", "System", "out", "println", "String", "outputFileName", "in", "nextLine", "String", "strToHandle", "readFile", "inputFileName", "String", "strHandled", "delete_C_Cplusplus_Java_Note", "strToHandle", "writeFile", "outputFileName", "strHandled" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\util\\DruidUtil.java",
  "startLine" : 22,
  "endLine" : 37,
  "identifiers" : [ "if", "dataSource", "null", "return", "dataSource", "new", "DruidDataSource", "dataSource", "setDriverClassName", "Config", "DRIVER", "dataSource", "setUrl", "Config", "URL", "dataSource", "setUsername", "Config", "USERNAME", "dataSource", "setPassword", "Config", "PASSWORD", "dataSource", "setInitialSize", "dataSource", "setMaxActive", "dataSource", "setMaxWait", "dataSource", "setValidationQuery", "dataSource", "setTestOnBorrow", "true", "dataSource", "init" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\util\\PathUtil.java",
  "startLine" : 32,
  "endLine" : 57,
  "identifiers" : [ "String", "encoding", "File", "file", "new", "File", "filePath", "Long", "filelength", "file", "length", "byte", "filecontent", "new", "byte", "filelength", "intValue", "try", "FileInputStream", "in", "new", "FileInputStream", "file", "in", "read", "filecontent", "in", "close", "catch", "FileNotFoundException", "e", "e", "printStackTrace", "return", "null", "catch", "IOException", "e", "e", "printStackTrace", "return", "null", "try", "String", "result", "new", "String", "filecontent", "encoding", "return", "result", "catch", "UnsupportedEncodingException", "e", "System", "err", "println", "encoding", "e", "printStackTrace", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\util\\PathUtil.java",
  "startLine" : 59,
  "endLine" : 70,
  "identifiers" : [ "List", "String", "tokenList", "new", "ArrayList", "String", "content", "readAllTextFast", "filePath", "String", "cleanCode", "DeleteCommentUtil", "delete_C_Cplusplus_Java_Note", "content", "content", "null", "StringTokenizer", "st", "new", "StringTokenizer", "cleanCode", "while", "st", "hasMoreTokens", "tokenList", "add", "st", "nextToken", "cleanCode", "null", "return", "tokenList" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\util\\StringUtil.java",
  "startLine" : 14,
  "endLine" : 41,
  "identifiers" : [ "List", "Byte", "allTokens", "new", "ArrayList", "allTokens", "addAll", "tokensX", "allTokens", "addAll", "tokensY", "Set", "Byte", "tokenSet", "new", "HashSet", "allTokens", "Map", "Byte", "Integer", "tokenMapX", "new", "HashMap", "Map", "Byte", "Integer", "tokenMapY", "new", "HashMap", "for", "Byte", "b", "tokensX", "tokenMapX", "put", "b", "tokenMapX", "getOrDefault", "b", "for", "Byte", "b", "tokensY", "tokenMapY", "put", "b", "tokenMapY", "getOrDefault", "b", "List", "Integer", "vecX", "new", "ArrayList", "List", "Integer", "vecY", "new", "ArrayList", "for", "Byte", "b", "tokenSet", "vecX", "add", "tokenMapX", "getOrDefault", "b", "vecY", "add", "tokenMapY", "getOrDefault", "b", "long", "x", "y", "xy", "for", "int", "i", "i", "tokenSet", "size", "i", "xy", "vecX", "get", "i", "vecY", "get", "i", "x", "vecX", "get", "i", "vecX", "get", "i", "y", "vecY", "get", "i", "vecY", "get", "i", "return", "float", "xy", "Math", "sqrt", "x", "Math", "sqrt", "y" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\util\\StringUtil.java",
  "startLine" : 49,
  "endLine" : 72,
  "identifiers" : [ "int", "matrix", "new", "int", "tokensY", "length", "for", "int", "i", "i", "matrix", "length", "i", "matrix", "i", "i", "for", "int", "i", "i", "matrix", "length", "i", "matrix", "i", "i", "for", "int", "i", "i", "tokensX", "length", "i", "for", "int", "j", "j", "matrix", "length", "j", "Byte", "b1", "tokensX", "i", "Byte", "b2", "tokensY", "j", "int", "leftTop", "b1", "equals", "b2", "matrix", "j", "matrix", "j", "int", "left", "matrix", "j", "int", "top", "matrix", "j", "matrix", "j", "Math", "min", "leftTop", "Math", "min", "left", "top", "System", "arraycopy", "matrix", "matrix", "matrix", "length", "Arrays", "fill", "matrix", "matrix", "i", "return", "matrix", "matrix", "length" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\util\\StringUtil.java",
  "startLine" : 82,
  "endLine" : 114,
  "identifiers" : [ "List", "String", "allTokens", "new", "ArrayList", "allTokens", "addAll", "tokensX", "allTokens", "addAll", "tokensY", "Set", "String", "tokenSet", "new", "HashSet", "allTokens", "Map", "String", "Integer", "tokenMapX", "new", "HashMap", "Map", "String", "Integer", "tokenMapY", "new", "HashMap", "for", "String", "b", "tokensX", "tokenMapX", "put", "b", "tokenMapX", "getOrDefault", "b", "for", "String", "b", "tokensY", "tokenMapY", "put", "b", "tokenMapY", "getOrDefault", "b", "List", "Integer", "vecX", "new", "ArrayList", "List", "Integer", "vecY", "new", "ArrayList", "for", "String", "b", "tokenSet", "vecX", "add", "tokenMapX", "getOrDefault", "b", "vecY", "add", "tokenMapY", "getOrDefault", "b", "long", "x", "y", "xy", "for", "int", "i", "i", "tokenSet", "size", "i", "xy", "vecX", "get", "i", "vecY", "get", "i", "x", "vecX", "get", "i", "vecX", "get", "i", "y", "vecY", "get", "i", "vecY", "get", "i", "float", "result", "float", "xy", "Math", "sqrt", "x", "Math", "sqrt", "y", "if", "result", "f", "result", "f", "allTokens", "clear", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\workers\\FileInfoConsumerOutputer.java",
  "startLine" : 39,
  "endLine" : 66,
  "identifiers" : [ "List", "FileInfo", "fileInfoList", "null", "while", "true", "while", "true", "try", "fileInfoList", "this", "input", "take", "break", "catch", "InterruptedException", "var5", "if", "fileInfoList", "size", "this", "numPoisons", "if", "this", "numPoisons", "Config", "threadNum", "try", "this", "printer", "flush", "this", "printer", "close", "catch", "IOException", "var3", "var3", "printStackTrace", "return", "else", "this", "write", "fileInfoList" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\java\\com\\fudan\\codeclone\\workers\\FileInfoConsumerOutputer.java",
  "startLine" : 68,
  "endLine" : 82,
  "identifiers" : [ "for", "FileInfo", "fileInfo", "fileInfoList", "try", "printer", "printRecord", "fileInfo", "getId", "fileInfo", "getFileA", "fileInfo", "getFileAProject", "fileInfo", "getFileB", "fileInfo", "getFileBProject", "fileInfo", "getSimilarity", "catch", "IOException", "e", "e", "printStackTrace", "try", "printer", "flush", "catch", "IOException", "e", "log", "error", "e", "getMessage", "fileInfoList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysis\\src\\main\\test\\SimTest.java",
  "startLine" : 13,
  "endLine" : 22,
  "identifiers" : [ "String", "fileA", "String", "fileB", "List", "String", "tokensA", "PathUtil", "getStringListOfFile", "fileA", "List", "String", "tokensB", "PathUtil", "getStringListOfFile", "fileB", "float", "similarity", "StringUtil", "cosineSimilarityByWord", "tokensA", "tokensB", "System", "out", "println", "similarity" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\analysis\\DetectResultReader.java",
  "startLine" : 37,
  "endLine" : 50,
  "identifiers" : [ "head_file", "new", "File", "config", "getDetectFolder", "File", "separator", "File", "separator", "Constants", "MeasureIndexStr", "group_file", "new", "File", "config", "getDetectFolder", "File", "separator", "File", "separator", "Constants", "Type123groupStr", "checkFile", "pathMethodIdMap", "new", "HashMap", "methodIdGroupIdMap", "new", "HashMap", "try", "readGroupFile", "readMeasureIndexFile", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\analysis\\DetectResultReader.java",
  "startLine" : 58,
  "endLine" : 67,
  "identifiers" : [ "if", "head_file", "exists", "log", "error", "head_file", "getAbsolutePath", "System", "exit", "if", "group_file", "exists", "log", "error", "group_file", "getAbsolutePath", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\analysis\\DetectResultReader.java",
  "startLine" : 69,
  "endLine" : 99,
  "identifiers" : [ "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "head_file", "log", "info", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "split", "if", "ls", "length", "continue", "Integer", "methodId", "Integer", "parseInt", "ls", "String", "path", "ls", "if", "path", "length", "continue", "ls", "null", "List", "Integer", "methodIdList", "pathMethodIdMap", "getOrDefault", "path", "new", "ArrayList", "methodIdList", "add", "methodId", "pathMethodIdMap", "put", "path", "methodIdList", "if", "i", "log", "info", "i", "bufferedReader", "close" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\analysis\\DetectResultReader.java",
  "startLine" : 101,
  "endLine" : 126,
  "identifiers" : [ "log", "info", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "group_file", "int", "group_id", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "group_id", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "continue", "for", "String", "mea_id", "ls", "Integer", "meain_id", "Integer", "parseInt", "mea_id", "methodIdGroupIdMap", "put", "meain_id", "group_id", "this", "maxGroupId", "group_id", "if", "group_id", "log", "info", "group_id", "bufferedReader", "close" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\analysis\\SpiltGroupIdTool.java",
  "startLine" : 25,
  "endLine" : 35,
  "identifiers" : [ "pathMethodIdMap", "detectResultReader", "getPathMethodIdMap", "methodIdGroupIdMap", "detectResultReader", "getMethodIdGroupIdMap", "int", "maxGroupId", "detectResultReader", "getMaxGroupId", "uf", "new", "UF", "maxGroupId", "pathMethodIdMap", "forEach", "key", "value", "unionOnePath", "value", "detectResultReader", "destroy" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\analysis\\SpiltGroupIdTool.java",
  "startLine" : 37,
  "endLine" : 51,
  "identifiers" : [ "Set", "Integer", "groupIdSet", "new", "HashSet", "for", "Integer", "methodId", "methodIdList", "Integer", "groupId", "methodIdGroupIdMap", "get", "methodId", "if", "groupId", "null", "groupIdSet", "add", "groupId", "List", "Integer", "groupIdList", "new", "ArrayList", "groupIdSet", "groupIdSet", "clear", "for", "int", "i", "i", "groupIdList", "size", "i", "uf", "union", "groupIdList", "get", "i", "groupIdList", "get", "i", "groupIdList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\analysis\\SpiltGroupIdTool.java",
  "startLine" : 61,
  "endLine" : 70,
  "identifiers" : [ "Map", "Integer", "List", "Integer", "clearDupHash", "new", "HashMap", "int", "ids", "uf", "getId", "for", "int", "i", "i", "ids", "length", "i", "List", "Integer", "list", "clearDupHash", "getOrDefault", "ids", "i", "new", "ArrayList", "list", "add", "i", "clearDupHash", "put", "ids", "i", "list", "return", "clearDupHash" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\CloneDependencyAnalysisApplication.java",
  "startLine" : 29,
  "endLine" : 45,
  "identifiers" : [ "checkArgs", "args", "long", "start", "System", "currentTimeMillis", "if", "args", "equals", "if", "config", "getGranularity", "equals", "fileInfoProcessor", "process", "else", "else", "long", "end", "System", "currentTimeMillis", "log", "info", "DateUtil", "format", "end", "start" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\CloneDependencyAnalysisApplication.java",
  "startLine" : 47,
  "endLine" : 58,
  "identifiers" : [ "if", "args", "length", "System", "out", "println", "System", "exit", "if", "args", "equals", "args", "equals", "System", "out", "println", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\config\\Datasource1Config.java",
  "startLine" : 63,
  "endLine" : 86,
  "identifiers" : [ "DruidDataSource", "dataSource", "new", "DruidDataSource", "dataSource", "setDriverClassName", "driverClass", "dataSource", "setUrl", "url", "dataSource", "setUsername", "user", "dataSource", "setPassword", "password", "dataSource", "setMaxActive", "maxActive", "dataSource", "setMinIdle", "minIdle", "dataSource", "setInitialSize", "initialSize", "dataSource", "setMaxWait", "maxWait", "dataSource", "setTimeBetweenEvictionRunsMillis", "timeBetweenEvictionRunsMillis", "dataSource", "setMinEvictableIdleTimeMillis", "minEvictableIdleTimeMillis", "dataSource", "setTestWhileIdle", "testWhileIdle", "dataSource", "setTestOnBorrow", "testOnBorrow", "dataSource", "setTestOnReturn", "testOnReturn", "dataSource", "setValidationQuery", "dataSource", "setPoolPreparedStatements", "true", "dataSource", "setMaxPoolPreparedStatementPerConnectionSize", "return", "dataSource" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\config\\Datasource2Config.java",
  "startLine" : 59,
  "endLine" : 82,
  "identifiers" : [ "DruidDataSource", "dataSource", "new", "DruidDataSource", "dataSource", "setDriverClassName", "driverClass", "dataSource", "setUrl", "url", "dataSource", "setUsername", "user", "dataSource", "setPassword", "password", "dataSource", "setMaxActive", "maxActive", "dataSource", "setMinIdle", "minIdle", "dataSource", "setInitialSize", "initialSize", "dataSource", "setMaxWait", "maxWait", "dataSource", "setTimeBetweenEvictionRunsMillis", "timeBetweenEvictionRunsMillis", "dataSource", "setMinEvictableIdleTimeMillis", "minEvictableIdleTimeMillis", "dataSource", "setTestWhileIdle", "testWhileIdle", "dataSource", "setTestOnBorrow", "testOnBorrow", "dataSource", "setTestOnReturn", "testOnReturn", "dataSource", "setValidationQuery", "dataSource", "setPoolPreparedStatements", "true", "dataSource", "setMaxPoolPreparedStatementPerConnectionSize", "return", "dataSource" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\infoProvider\\PathInfoProvider.java",
  "startLine" : 45,
  "endLine" : 57,
  "identifiers" : [ "pathInfoProvider", "this", "pathInfoProvider", "pathMapper", "this", "pathMapper", "pathInfoProvider", "config", "this", "config", "updateGroupId", "new", "UpdateGroupId", "config", "headerFile", "new", "File", "config", "getDetectFolder", "File", "separator", "File", "separator", "Constants", "MeasureIndexStr", "this", "readMeasureIndex", "try", "getNextReader", "new", "BufferedReader", "new", "FileReader", "headerFile", "catch", "FileNotFoundException", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\infoProvider\\PathInfoProvider.java",
  "startLine" : 60,
  "endLine" : 163,
  "identifiers" : [ "pathMapper", "dropTable", "PathTable", "pathMapper", "createTable", "PathTable", "int", "id", "if", "headerFile", "exists", "log", "error", "log", "error", "headerFile", "getAbsolutePath", "log", "error", "System", "exit", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "headerFile", "log", "info", "int", "i", "String", "cache", "null", "int", "cacheLine", "Map", "Integer", "Integer", "cacheIdLineMap", "new", "HashMap", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "split", "if", "ls", "length", "continue", "Integer", "methodId", "Integer", "parseInt", "ls", "Integer", "groupId", "updateGroupId", "getGroupId", "methodId", "String", "path", "ls", "if", "path", "length", "continue", "Integer", "startLine", "Integer", "parseInt", "ls", "Integer", "endLine", "Integer", "parseInt", "ls", "if", "cache", "null", "cache", "path", "totalPathCount", "cacheLine", "endLine", "startLine", "if", "groupId", "Integer", "cacheGLine", "cacheIdLineMap", "getOrDefault", "groupId", "cacheGLine", "endLine", "startLine", "cacheIdLineMap", "put", "groupId", "cacheGLine", "else", "if", "cache", "equals", "path", "cacheLine", "endLine", "startLine", "if", "groupId", "Integer", "cacheGLine", "cacheIdLineMap", "getOrDefault", "groupId", "cacheGLine", "endLine", "startLine", "cacheIdLineMap", "put", "groupId", "cacheGLine", "else", "for", "Map", "Entry", "Integer", "Integer", "entry", "cacheIdLineMap", "entrySet", "Integer", "gid", "entry", "getKey", "Integer", "gline", "entry", "getValue", "bufferList", "add", "new", "PathInfo", "id", "cache", "cacheLine", "gid", "gline", "cacheIdLineMap", "clear", "cache", "path", "totalPathCount", "cacheLine", "endLine", "startLine", "if", "groupId", "Integer", "cacheGLine", "cacheIdLineMap", "getOrDefault", "groupId", "cacheGLine", "endLine", "startLine", "cacheIdLineMap", "put", "groupId", "cacheGLine", "if", "bufferList", "size", "insert", "if", "i", "log", "info", "i", "ls", "null", "for", "Map", "Entry", "Integer", "Integer", "entry", "cacheIdLineMap", "entrySet", "Integer", "gid", "entry", "getKey", "Integer", "gline", "entry", "getValue", "bufferList", "add", "new", "PathInfo", "id", "cache", "cacheLine", "gid", "gline", "insert", "cacheIdLineMap", "clear", "cache", "null", "bufferedReader", "close", "catch", "IOException", "e", "e", "printStackTrace", "updateGroupId", "dispose", "updateGroupId", "null", "log", "info" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\infoProvider\\PathInfoProvider.java",
  "startLine" : 165,
  "endLine" : 204,
  "identifiers" : [ "try", "for", "String", "str", "str", "getNextReader", "readLine", "null", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "split", "if", "ls", "length", "continue", "String", "path", "ls", "ls", "null", "if", "path", "length", "continue", "if", "lastPath", "null", "lastPath", "path", "return", "path", "else", "if", "lastPath", "equals", "path", "continue", "else", "lastPath", "path", "return", "path", "lastPath", "null", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\infoProvider\\TotalLineProvider.java",
  "startLine" : 38,
  "endLine" : 130,
  "identifiers" : [ "File", "headerFile", "new", "File", "config", "getDetectFolder", "File", "separator", "File", "separator", "Constants", "MeasureIndexStr", "if", "headerFile", "exists", "log", "error", "log", "error", "headerFile", "getAbsolutePath", "log", "error", "System", "exit", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "headerFile", "log", "info", "int", "i", "String", "cache", "null", "int", "cacheLine", "boolean", "cacheWanted", "false", "Set", "Integer", "cacheGroupIdSet", "new", "HashSet", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "split", "if", "ls", "length", "continue", "Integer", "methodId", "Integer", "parseInt", "ls", "Integer", "groupId", "updateGroupId", "getGroupId", "methodId", "boolean", "pathWanted", "false", "if", "groupId", "pathWanted", "true", "cacheWanted", "true", "String", "path", "ls", "if", "path", "length", "continue", "Integer", "startLine", "Integer", "parseInt", "ls", "Integer", "endLine", "Integer", "parseInt", "ls", "if", "cache", "null", "cache", "path", "cacheLine", "endLine", "startLine", "cacheWanted", "pathWanted", "if", "groupId", "cacheGroupIdSet", "add", "groupId", "else", "if", "cache", "equals", "path", "cacheLine", "endLine", "startLine", "if", "groupId", "cacheGroupIdSet", "add", "groupId", "else", "if", "cacheWanted", "pathLineMap", "put", "cache", "new", "LineAndGroupCnt", "cacheLine", "cacheGroupIdSet", "size", "cache", "path", "cacheLine", "endLine", "startLine", "cacheWanted", "pathWanted", "cacheGroupIdSet", "clear", "if", "groupId", "cacheGroupIdSet", "add", "groupId", "if", "i", "log", "info", "i", "ls", "null", "if", "cacheWanted", "pathLineMap", "put", "cache", "new", "LineAndGroupCnt", "cacheLine", "cacheGroupIdSet", "size", "cache", "null", "cacheGroupIdSet", "clear", "cacheGroupIdSet", "null", "bufferedReader", "close", "catch", "IOException", "e", "e", "printStackTrace", "log", "info", "log", "info", "this", "pathLineMap", "keySet", "size", "updateGroupId", "dispose", "updateGroupId", "null" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\infoProvider\\UpdateGroupId.java",
  "startLine" : 36,
  "endLine" : 48,
  "identifiers" : [ "head_file", "new", "File", "config", "getDetectFolder", "File", "separator", "File", "separator", "Constants", "MeasureIndexStr", "if", "head_file", "exists", "log", "info", "log", "info", "head_file", "getAbsolutePath", "System", "exit", "group_file", "new", "File", "config", "getDetectFolder", "File", "separator", "File", "separator", "Constants", "Type123groupStr", "if", "group_file", "exists", "log", "info", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\infoProvider\\UpdateGroupId.java",
  "startLine" : 50,
  "endLine" : 78,
  "identifiers" : [ "try", "System", "out", "println", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "group_file", "int", "group_id", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "group_id", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "System", "out", "println", "continue", "for", "String", "mea_id", "ls", "Integer", "meain_id", "Integer", "parseInt", "mea_id", "group_map", "put", "meain_id", "group_id", "if", "group_id", "log", "info", "group_id", "bufferedReader", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor.java",
  "startLine" : 68,
  "endLine" : 88,
  "identifiers" : [ "initExtendConfig", "List", "List", "Integer", "groupIdListList", "spiltGroupId", "init", "maxGroupId", "measureIndexMapper", "selectMaxGroupId", "ExtendConfig", "MEASURE_TABLE", "for", "List", "Integer", "groupIdList", "groupIdListList", "processOneGroupIdList", "groupIdList", "groupIdList", "clear", "groupIdListList", "clear", "try", "printer", "close", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor.java",
  "startLine" : 98,
  "endLine" : 109,
  "identifiers" : [ "List", "List", "Integer", "groupIdListList", "new", "ArrayList", "SpiltGroupIdTool", "spiltGroupIdTool", "new", "SpiltGroupIdTool", "config", "spiltGroupIdTool", "spiltGroupId", "Map", "Integer", "List", "Integer", "groupIdMap", "spiltGroupIdTool", "getGroupIdList", "spiltGroupIdTool", "close", "for", "Map", "Entry", "Integer", "List", "Integer", "entry", "groupIdMap", "entrySet", "groupIdListList", "add", "entry", "getValue", "groupIdMap", "clear", "return", "groupIdListList" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor.java",
  "startLine" : 111,
  "endLine" : 144,
  "identifiers" : [ "List", "Integer", "processedGroupCntList", "new", "ArrayList", "for", "int", "i", "i", "pathList", "size", "i", "processedGroupCntList", "add", "Map", "String", "Integer", "pathPathMap", "new", "HashMap", "int", "size", "pathList", "size", "if", "size", "pathPathMap", "clear", "log", "info", "return", "edgeMapper", "dropTable", "EdgeTable", "edgeMapper", "createTable", "EdgeTable", "for", "Integer", "i", "i", "pathList", "size", "i", "pathPathMap", "put", "pathList", "get", "i", "i", "edgeId", "L", "for", "Integer", "groupId", "groupIdList", "processOneGroupIdWithDs2", "groupId", "pathPathMap", "measureIndexMapper", "processedGroupCntList", "pathList", "projectNameList", "log", "info", "curProcessed", "curProcessed", "f", "maxGroupId", "printDs2", "pathList", "projectNameList", "edgeMapper", "dropTable", "EdgeTable", "processedGroupCntList", "clear", "pathPathMap", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor.java",
  "startLine" : 145,
  "endLine" : 171,
  "identifiers" : [ "log", "info", "groupId", "Map", "String", "List", "MeasureIndex", "fileMap", "loadMeasureMap", "groupId", "measureIndexMapper", "calcCurFileInfoWithDs2", "fileMap", "pathPathMap", "List", "Integer", "toBeDel", "new", "ArrayList", "for", "String", "path", "fileMap", "keySet", "int", "idx", "pathPathMap", "get", "path", "int", "cnt", "processedGroupCntList", "get", "idx", "processedGroupCntList", "set", "idx", "cnt", "Integer", "groupCnt", "totalLineProvider", "getGroupCntOfPath", "path", "if", "groupCnt", "null", "cnt", "groupCnt", "printOnePathDs2", "pathList", "idx", "projectNameList", "toBeDel", "add", "idx", "if", "toBeDel", "size", "edgeMapper", "deleteByStartNode", "toBeDel", "EdgeTable", "fileMap", "clear", "toBeDel", "clear", "log", "info", "groupId" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor.java",
  "startLine" : 173,
  "endLine" : 197,
  "identifiers" : [ "List", "Edge", "edgeList", "edgeMapper", "selectByStartNode", "startNodeId", "EdgeTable", "Map", "Integer", "Float", "endNodeSimMap", "new", "HashMap", "for", "Edge", "edge", "edgeList", "Float", "sim", "endNodeSimMap", "getOrDefault", "edge", "getEndNode", "F", "sim", "edge", "getSimilarity", "endNodeSimMap", "put", "edge", "getEndNode", "sim", "edgeList", "clear", "String", "fileA", "pathList", "get", "startNodeId", "String", "fileAProject", "projectNameList", "get", "startNodeId", "for", "Map", "Entry", "Integer", "Float", "entry", "endNodeSimMap", "entrySet", "if", "entry", "getValue", "config", "getThreshold", "Integer", "endNodeId", "entry", "getKey", "Float", "sim", "entry", "getValue", "String", "fileB", "pathList", "get", "endNodeId", "String", "fileBProject", "projectNameList", "get", "endNodeId", "try", "printer", "printRecord", "fileInfoId", "fileA", "fileAProject", "fileB", "fileBProject", "sim", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor.java",
  "startLine" : 198,
  "endLine" : 266,
  "identifiers" : [ "List", "Edge", "bufferList", "new", "ArrayList", "List", "String", "fileList", "new", "ArrayList", "fileMap", "keySet", "for", "int", "i", "i", "fileList", "size", "i", "for", "int", "j", "i", "j", "fileList", "size", "j", "String", "fileI", "fileList", "get", "i", "String", "fileJ", "fileList", "get", "j", "String", "projectI", "fileMap", "get", "fileI", "stream", "findFirst", "get", "getProject", "String", "projectJ", "fileMap", "get", "fileJ", "stream", "findFirst", "get", "getProject", "if", "projectI", "equals", "projectJ", "continue", "Integer", "fileIIdx", "pathPathMap", "get", "fileI", "Integer", "fileJIdx", "pathPathMap", "get", "fileJ", "if", "fileIIdx", "null", "fileJIdx", "null", "log", "error", "continue", "String", "fileA", "String", "fileB", "Integer", "fileAidx", "Integer", "fileBidx", "if", "fileIIdx", "fileJIdx", "fileA", "fileJ", "fileAidx", "fileJIdx", "fileB", "fileI", "fileBidx", "fileIIdx", "else", "if", "fileJIdx", "fileIIdx", "fileA", "fileI", "fileAidx", "fileIIdx", "fileB", "fileJ", "fileBidx", "fileJIdx", "else", "continue", "int", "fileACloneLineNumber", "fileMap", "get", "fileA", "stream", "mapToInt", "s", "s", "getEndLine", "s", "getStartLine", "sum", "Integer", "fileATotalCloneLineNumber", "totalLineProvider", "getPathTotalLine", "fileA", "int", "fileBCloneLineNumber", "fileMap", "get", "fileB", "stream", "mapToInt", "s", "s", "getEndLine", "s", "getStartLine", "sum", "Integer", "fileBTotalCloneLineNumber", "totalLineProvider", "getPathTotalLine", "fileB", "if", "fileATotalCloneLineNumber", "null", "fileBTotalCloneLineNumber", "null", "continue", "float", "similarity", "fileACloneLineNumber", "f", "fileATotalCloneLineNumber", "fileBCloneLineNumber", "f", "fileBTotalCloneLineNumber", "Edge", "edge", "new", "Edge", "edgeId", "fileAidx", "fileBidx", "similarity", "bufferList", "add", "edge", "if", "bufferList", "size", "edgeMapper", "insertList", "bufferList", "EdgeTable", "bufferList", "clear", "fileList", "clear", "if", "bufferList", "size", "edgeMapper", "insertList", "bufferList", "EdgeTable", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor.java",
  "startLine" : 268,
  "endLine" : 303,
  "identifiers" : [ "List", "Integer", "startNodeIdList", "edgeMapper", "selectDistinctStartNode", "EdgeTable", "for", "Integer", "startNodeId", "startNodeIdList", "List", "Edge", "edgeList", "edgeMapper", "selectByStartNode", "startNodeId", "EdgeTable", "Map", "Integer", "Float", "endNodeSimMap", "new", "HashMap", "for", "Edge", "edge", "edgeList", "Float", "sim", "endNodeSimMap", "getOrDefault", "edge", "getEndNode", "F", "sim", "edge", "getSimilarity", "endNodeSimMap", "put", "edge", "getEndNode", "sim", "edgeList", "clear", "String", "fileA", "pathList", "get", "startNodeId", "String", "fileAProject", "projectNameList", "get", "startNodeId", "for", "Map", "Entry", "Integer", "Float", "entry", "endNodeSimMap", "entrySet", "if", "entry", "getValue", "config", "getThreshold", "Integer", "endNodeId", "entry", "getKey", "Float", "sim", "entry", "getValue", "String", "fileB", "pathList", "get", "endNodeId", "String", "fileBProject", "projectNameList", "get", "endNodeId", "try", "printer", "printRecord", "fileInfoId", "fileA", "fileAProject", "fileB", "fileBProject", "sim", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e", "startNodeIdList", "clear", "try", "printer", "flush", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor.java",
  "startLine" : 304,
  "endLine" : 322,
  "identifiers" : [ "log", "info", "log", "info", "groupIdList", "size", "List", "String", "pathList", "measureIndexMapper", "getPathInGroupIdList", "groupIdList", "ExtendConfig", "MEASURE_TABLE", "log", "info", "pathList", "size", "List", "String", "projectNameList", "new", "ArrayList", "for", "int", "i", "i", "pathList", "size", "i", "projectNameList", "add", "getProjectName", "pathList", "get", "i", "config", "getDataset", "if", "pathList", "size", "processOneGroupIdListWithDs2", "groupIdList", "pathList", "projectNameList", "else", "processOneGroupIdListWithArray", "groupIdList", "pathList", "projectNameList", "pathList", "clear", "projectNameList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor.java",
  "startLine" : 325,
  "endLine" : 354,
  "identifiers" : [ "Map", "String", "Integer", "pathIdxMap", "new", "HashMap", "for", "int", "i", "i", "pathList", "size", "i", "pathIdxMap", "put", "pathList", "get", "i", "i", "int", "size", "pathList", "size", "if", "size", "pathIdxMap", "clear", "pathList", "clear", "log", "info", "return", "log", "info", "size", "float", "matrix", "new", "float", "size", "for", "int", "i", "i", "size", "i", "matrix", "i", "new", "float", "i", "for", "Integer", "groupId", "groupIdList", "processOneGroupId", "matrix", "groupId", "pathIdxMap", "measureIndexMapper", "log", "info", "curProcessed", "curProcessed", "f", "maxGroupId", "printMatrix", "matrix", "pathList", "projectNameList", "pathIdxMap", "clear", "pathList", "clear", "matrix", "null", "log", "info" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor.java",
  "startLine" : 355,
  "endLine" : 361,
  "identifiers" : [ "log", "info", "groupId", "Map", "String", "List", "MeasureIndex", "fileMap", "loadMeasureMap", "groupId", "measureIndexMapper", "calcCurFileInfo", "fileMap", "matrix", "pathIdxMap", "fileMap", "clear", "log", "info", "groupId" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor.java",
  "startLine" : 362,
  "endLine" : 373,
  "identifiers" : [ "List", "MeasureIndex", "measureIndexList", "measureIndexMapper", "selectByGroupId", "groupId", "ExtendConfig", "MEASURE_TABLE", "Map", "String", "List", "MeasureIndex", "fileMap", "new", "HashMap", "for", "MeasureIndex", "measureIndex", "measureIndexList", "String", "path", "measureIndex", "getFile", "List", "MeasureIndex", "measureIndexListInMap", "fileMap", "getOrDefault", "path", "new", "ArrayList", "measureIndexListInMap", "add", "measureIndex", "fileMap", "put", "path", "measureIndexListInMap", "measureIndexList", "clear", "return", "fileMap" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor.java",
  "startLine" : 375,
  "endLine" : 425,
  "identifiers" : [ "List", "String", "fileList", "new", "ArrayList", "fileMap", "keySet", "for", "int", "i", "i", "fileList", "size", "i", "for", "int", "j", "i", "j", "fileList", "size", "j", "String", "fileI", "fileList", "get", "i", "String", "fileJ", "fileList", "get", "j", "String", "projectI", "fileMap", "get", "fileI", "stream", "findFirst", "get", "getProject", "String", "projectJ", "fileMap", "get", "fileJ", "stream", "findFirst", "get", "getProject", "if", "projectI", "equals", "projectJ", "continue", "Integer", "fileIIdx", "pathIdxMap", "get", "fileI", "Integer", "fileJIdx", "pathIdxMap", "get", "fileJ", "if", "fileIIdx", "null", "fileJIdx", "null", "log", "error", "continue", "String", "fileA", "String", "fileB", "Integer", "fileAidx", "Integer", "fileBidx", "if", "fileIIdx", "fileJIdx", "fileA", "fileJ", "fileAidx", "fileJIdx", "fileB", "fileI", "fileBidx", "fileIIdx", "else", "if", "fileJIdx", "fileIIdx", "fileA", "fileI", "fileAidx", "fileIIdx", "fileB", "fileJ", "fileBidx", "fileJIdx", "else", "continue", "int", "fileACloneLineNumber", "fileMap", "get", "fileA", "stream", "mapToInt", "s", "s", "getEndLine", "s", "getStartLine", "sum", "Integer", "fileATotalCloneLineNumber", "totalLineProvider", "getPathTotalLine", "fileA", "int", "fileBCloneLineNumber", "fileMap", "get", "fileB", "stream", "mapToInt", "s", "s", "getEndLine", "s", "getStartLine", "sum", "Integer", "fileBTotalCloneLineNumber", "totalLineProvider", "getPathTotalLine", "fileB", "if", "fileATotalCloneLineNumber", "null", "fileBTotalCloneLineNumber", "null", "continue", "float", "similarity", "fileACloneLineNumber", "f", "fileATotalCloneLineNumber", "fileBCloneLineNumber", "f", "fileBTotalCloneLineNumber", "float", "cache", "matrix", "fileAidx", "fileBidx", "matrix", "fileAidx", "fileBidx", "cache", "similarity", "fileList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor.java",
  "startLine" : 427,
  "endLine" : 452,
  "identifiers" : [ "for", "int", "i", "i", "matrix", "length", "i", "int", "rowLen", "matrix", "i", "length", "for", "int", "j", "j", "rowLen", "j", "float", "sim", "matrix", "i", "j", "if", "sim", "f", "String", "fileA", "pathList", "get", "i", "String", "fileB", "pathList", "get", "j", "String", "fileAProject", "projectNameList", "get", "i", "String", "fileBProject", "projectNameList", "get", "j", "try", "printer", "printRecord", "fileInfoId", "fileA", "fileAProject", "fileB", "fileBProject", "sim", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e", "try", "printer", "flush", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor.java",
  "startLine" : 454,
  "endLine" : 488,
  "identifiers" : [ "try", "String", "regex", "if", "File", "separator", "equals", "regex", "else", "regex", "String", "div_path", "path", "split", "regex", "String", "div_dir", "dataset", "split", "regex", "String", "mark", "div_dir", "div_dir", "length", "int", "index", "for", "int", "i", "i", "div_path", "length", "i", "if", "div_path", "i", "equals", "mark", "index", "i", "break", "if", "index", "index", "div_path", "length", "String", "projectName", "div_path", "index", "div_path", "index", "div_dir", "null", "div_path", "null", "return", "projectName", "else", "div_dir", "null", "div_path", "null", "return", "catch", "Exception", "e", "e", "printStackTrace", "return" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor.java",
  "startLine" : 490,
  "endLine" : 505,
  "identifiers" : [ "boolean", "stop", "false", "for", "int", "i", "i", "matrix", "length", "i", "int", "rowLen", "matrix", "i", "length", "for", "int", "j", "j", "rowLen", "j", "System", "out", "print", "String", "format", "matrix", "i", "j", "if", "matrix", "i", "j", "f", "stop", "true", "System", "out", "print", "if", "stop", "true", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor2.java",
  "startLine" : 46,
  "endLine" : 74,
  "identifiers" : [ "ExtendConfig", "init", "config", "try", "printer", "new", "CSVPrinter", "new", "FileWriter", "ExtendConfig", "FILE_INFO_OUTPUT_FILE", "CSVFormat", "DEFAULT", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e", "int", "i", "int", "totalPathCnt", "pathInfoProvider", "getTotalPathCount", "for", "String", "path", "path", "pathInfoProvider", "getNextPath", "null", "i", "Map", "String", "MyPath", "fileMap", "getFileMap", "path", "calSim", "path", "fileMap", "fileMap", "clear", "if", "i", "log", "info", "i", "totalPathCnt", "i", "f", "totalPathCnt", "try", "printer", "close", "catch", "IOException", "e", "log", "error", "e", "pathInfoProvider", "close", "pathInfoProvider", "null" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor2.java",
  "startLine" : 75,
  "endLine" : 110,
  "identifiers" : [ "MyPath", "myPathA", "fileMap", "get", "path", "for", "Map", "Entry", "String", "MyPath", "entry", "fileMap", "entrySet", "MyPath", "myPathB", "entry", "getValue", "if", "myPathA", "getProjectName", "equals", "myPathB", "getProjectName", "continue", "if", "myPathA", "getPath", "compareTo", "myPathB", "getPath", "float", "similarity", "getSim", "myPathA", "myPathB", "if", "similarity", "config", "getThreshold", "continue", "FileInfo", "fileInfo", "new", "FileInfo", "fileInfo", "setId", "fileInfoId", "fileInfo", "setFileA", "myPathA", "getPath", "fileInfo", "setFileAProject", "myPathA", "getProjectName", "fileInfo", "setFileB", "myPathB", "getPath", "fileInfo", "setFileBProject", "myPathB", "getProjectName", "fileInfo", "setSimilarity", "similarity", "try", "printer", "printRecord", "fileInfo", "getId", "fileInfo", "getFileA", "fileInfo", "getFileAProject", "fileInfo", "getFileB", "fileInfo", "getFileBProject", "fileInfo", "getSimilarity", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e", "try", "printer", "flush", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor2.java",
  "startLine" : 111,
  "endLine" : 126,
  "identifiers" : [ "Set", "Integer", "commonGidSet", "new", "HashSet", "commonGidSet", "addAll", "myPathA", "getGidLineMap", "keySet", "commonGidSet", "retainAll", "myPathB", "getGidLineMap", "keySet", "int", "fileATotalLineNumber", "myPathA", "getTotalLine", "int", "fileBTotalLineNumber", "myPathB", "getTotalLine", "int", "fileACloneLineNumber", "int", "fileBCloneLineNumber", "for", "Integer", "gid", "commonGidSet", "fileACloneLineNumber", "myPathA", "getGidLineMap", "get", "gid", "fileBCloneLineNumber", "myPathB", "getGidLineMap", "get", "gid", "commonGidSet", "clear", "float", "similarity", "fileACloneLineNumber", "f", "fileATotalLineNumber", "fileBCloneLineNumber", "f", "fileBTotalLineNumber", "return", "similarity" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\processor\\FileInfoProcessor2.java",
  "startLine" : 128,
  "endLine" : 144,
  "identifiers" : [ "Map", "String", "MyPath", "fileMap", "new", "HashMap", "List", "PathInfo", "pathInfoList", "pathMapper", "selectRelatePathInfo", "path", "PathTable", "for", "PathInfo", "pathInfo", "pathInfoList", "String", "curpath", "pathInfo", "getPath", "MyPath", "myPath", "fileMap", "get", "curpath", "if", "myPath", "null", "String", "project", "getProjectName", "curpath", "config", "getDataset", "config", "getRegex", "myPath", "new", "MyPath", "curpath", "project", "pathInfo", "getTotalLine", "new", "HashMap", "myPath", "getGidLineMap", "put", "pathInfo", "getGid", "pathInfo", "getGline", "fileMap", "put", "curpath", "myPath", "pathInfoList", "clear", "return", "fileMap" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\util\\DateUtil.java",
  "startLine" : 10,
  "endLine" : 17,
  "identifiers" : [ "int", "seconds", "int", "millis", "e3", "int", "hours", "seconds", "seconds", "hours", "int", "minutes", "seconds", "seconds", "minutes", "return", "String", "format", "hours", "minutes", "seconds" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\util\\ProjectNameUtil.java",
  "startLine" : 12,
  "endLine" : 40,
  "identifiers" : [ "try", "String", "div_path", "path", "split", "regex", "String", "div_dir", "dataset", "split", "regex", "String", "mark", "div_dir", "div_dir", "length", "int", "index", "for", "int", "i", "i", "div_path", "length", "i", "if", "div_path", "i", "equals", "mark", "index", "i", "break", "if", "index", "index", "div_path", "length", "String", "projectName", "div_path", "index", "div_path", "index", "div_dir", "null", "div_path", "null", "return", "projectName", "else", "div_dir", "null", "div_path", "null", "return", "catch", "Exception", "e", "e", "printStackTrace", "return" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\util\\UF.java",
  "startLine" : 19,
  "endLine" : 31,
  "identifiers" : [ "this", "N", "maxNumber", "this", "count", "maxNumber", "id", "new", "int", "N", "sz", "new", "int", "N", "for", "int", "i", "i", "N", "i", "id", "i", "i", "for", "int", "i", "i", "N", "i", "sz", "i" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\CloneDependencyAnalysisSpring\\src\\main\\java\\com\\fudan\\util\\UF.java",
  "startLine" : 43,
  "endLine" : 58,
  "identifiers" : [ "int", "xRoot", "find", "x", "int", "yRoot", "find", "y", "if", "xRoot", "yRoot", "if", "sz", "xRoot", "sz", "yRoot", "id", "xRoot", "y", "sz", "yRoot", "sz", "xRoot", "else", "id", "yRoot", "x", "sz", "xRoot", "sz", "yRoot", "count" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\clone_service\\.mvn\\wrapper\\MavenWrapperDownloader.java",
  "startLine" : 48,
  "endLine" : 95,
  "identifiers" : [ "System", "out", "println", "File", "baseDirectory", "new", "File", "args", "System", "out", "println", "baseDirectory", "getAbsolutePath", "File", "mavenWrapperPropertyFile", "new", "File", "baseDirectory", "MAVEN_WRAPPER_PROPERTIES_PATH", "String", "url", "DEFAULT_DOWNLOAD_URL", "if", "mavenWrapperPropertyFile", "exists", "FileInputStream", "mavenWrapperPropertyFileInputStream", "null", "try", "mavenWrapperPropertyFileInputStream", "new", "FileInputStream", "mavenWrapperPropertyFile", "Properties", "mavenWrapperProperties", "new", "Properties", "mavenWrapperProperties", "load", "mavenWrapperPropertyFileInputStream", "url", "mavenWrapperProperties", "getProperty", "PROPERTY_NAME_WRAPPER_URL", "url", "catch", "IOException", "e", "System", "out", "println", "MAVEN_WRAPPER_PROPERTIES_PATH", "finally", "try", "if", "mavenWrapperPropertyFileInputStream", "null", "mavenWrapperPropertyFileInputStream", "close", "catch", "IOException", "e", "System", "out", "println", "url", "File", "outputFile", "new", "File", "baseDirectory", "getAbsolutePath", "MAVEN_WRAPPER_JAR_PATH", "if", "outputFile", "getParentFile", "exists", "if", "outputFile", "getParentFile", "mkdirs", "System", "out", "println", "outputFile", "getParentFile", "getAbsolutePath", "System", "out", "println", "outputFile", "getAbsolutePath", "try", "downloadFileFromURL", "url", "outputFile", "System", "out", "println", "System", "exit", "catch", "Throwable", "e", "System", "out", "println", "e", "printStackTrace", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\clone_service\\.mvn\\wrapper\\MavenWrapperDownloader.java",
  "startLine" : 97,
  "endLine" : 115,
  "identifiers" : [ "if", "System", "getenv", "null", "System", "getenv", "null", "String", "username", "System", "getenv", "char", "password", "System", "getenv", "toCharArray", "Authenticator", "setDefault", "new", "Authenticator", "Override", "protected", "PasswordAuthentication", "getPasswordAuthentication", "return", "new", "PasswordAuthentication", "username", "password", "URL", "website", "new", "URL", "urlString", "ReadableByteChannel", "rbc", "rbc", "Channels", "newChannel", "website", "openStream", "FileOutputStream", "fos", "new", "FileOutputStream", "destination", "fos", "getChannel", "transferFrom", "rbc", "Long", "MAX_VALUE", "fos", "close", "rbc", "close" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\clone_service\\src\\main\\java\\com\\fudan\\controller\\CloneInfoController.java",
  "startLine" : 33,
  "endLine" : 42,
  "identifiers" : [ "String", "fileInfoTbName", "language", "granularity", "String", "projInfoTbName", "language", "granularity", "try", "return", "cloneInfoService", "getRepoCloneInfo", "repo_name", "projInfoTbName", "catch", "Exception", "e", "log", "error", "e", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\clone_service\\src\\main\\java\\com\\fudan\\controller\\CloneInfoController.java",
  "startLine" : 47,
  "endLine" : 57,
  "identifiers" : [ "String", "fileInfoTbName", "language", "granularity", "String", "projInfoTbName", "language", "granularity", "try", "return", "cloneInfoService", "getRepoCloneFileSim", "repo_name", "fileInfoTbName", "catch", "Exception", "e", "log", "error", "e", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\clone_service\\src\\main\\java\\com\\fudan\\controller\\CloneInfoController.java",
  "startLine" : 61,
  "endLine" : 75,
  "identifiers" : [ "try", "String", "language", "csvRequest", "getLanguage", "String", "granularity", "csvRequest", "getGranularity", "String", "fileInfoTbName", "language", "granularity", "String", "projInfoTbName", "language", "granularity", "String", "measureIndexTbName", "language", "granularity", "cloneInfoService", "printCSV", "csvRequest", "getProject", "measureIndexTbName", "return", "catch", "Exception", "e", "log", "error", "e", "return" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\clone_service\\src\\main\\java\\com\\fudan\\controller\\MeasureInfoController.java",
  "startLine" : 21,
  "endLine" : 30,
  "identifiers" : [ "try", "String", "measureIndexTbName", "request", "getLanguage", "request", "getGranularity", "cloneInfoService", "printCsvBySpecialProjects", "request", "getTargetProject", "request", "getRelatedProject", "measureIndexTbName", "return", "catch", "Exception", "e", "e", "printStackTrace", "return" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\clone_service\\src\\main\\java\\com\\fudan\\controller\\MeasureInfoController.java",
  "startLine" : 33,
  "endLine" : 42,
  "identifiers" : [ "try", "String", "measureIndexTbName", "request", "getLanguage", "request", "getGranularity", "List", "ClonePair", "measureInfos", "cloneInfoService", "getMeasureInfos", "request", "getTargetProject", "request", "getRelatedProject", "measureIndexTbName", "return", "measureInfos", "catch", "Exception", "e", "e", "printStackTrace", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\clone_service\\src\\main\\java\\com\\fudan\\controller\\MeasureInfoController.java",
  "startLine" : 45,
  "endLine" : 54,
  "identifiers" : [ "try", "String", "measureIndexTbName", "request", "getLanguage", "request", "getGranularity", "int", "measureInfos", "cloneInfoService", "countMeasureInfos", "request", "getTargetProject", "request", "getRelatedProject", "measureIndexTbName", "return", "measureInfos", "catch", "Exception", "e", "e", "printStackTrace", "return" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\clone_service\\src\\main\\java\\com\\fudan\\service\\impl\\CloneInfoServiceImpl.java",
  "startLine" : 39,
  "endLine" : 77,
  "identifiers" : [ "List", "ProjectInfo", "projectInfoList", "projectInfoMapper", "selectByProjectName", "repoName", "tbName", "if", "projectInfoList", "null", "projectInfoList", "size", "return", "null", "ProjectInfo", "first", "projectInfoList", "get", "RepoCloneInfo", "repoCloneInfo", "new", "RepoCloneInfo", "repoCloneInfo", "setTargetProjectName", "repoName", "repoCloneInfo", "setTotalFiles", "first", "gettProjFileNum", "repoCloneInfo", "setClonedFiles", "first", "gettProjCloneFileNum", "repoCloneInfo", "setAvgSim", "first", "getAvgSim", "Map", "String", "Map", "String", "Integer", "rproj_fcount", "new", "HashMap", "for", "ProjectInfo", "projectInfo", "projectInfoList", "Map", "String", "Integer", "stringIntegerMap", "new", "HashMap", "String", "relatedProject", "projectInfo", "getRelatedProject", "Integer", "cloneFileNum", "projectInfo", "getrTCloneFileNum", "stringIntegerMap", "put", "cloneFileNum", "ProjectInfo", "oneRelatedProject", "projectInfoMapper", "selectProjectTotalFileByProjectName", "relatedProject", "tbName", "Integer", "totalFileNum", "if", "oneRelatedProject", "null", "log", "error", "relatedProject", "tbName", "log", "error", "relatedProject", "tbName", "else", "totalFileNum", "oneRelatedProject", "gettProjFileNum", "stringIntegerMap", "put", "totalFileNum", "rproj_fcount", "put", "relatedProject", "stringIntegerMap", "repoCloneInfo", "setRelatedProjCloneFiles", "rproj_fcount", "return", "repoCloneInfo" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\clone_service\\src\\main\\java\\com\\fudan\\service\\impl\\CloneInfoServiceImpl.java",
  "startLine" : 80,
  "endLine" : 122,
  "identifiers" : [ "RepoCloneFileSim", "repoCloneFileSim", "new", "RepoCloneFileSim", "repoCloneFileSim", "setTargetProject", "repoName", "List", "FileInfo", "fileInfoList", "Map", "String", "List", "ShortFileInfo", "rProj_fileInfo_map", "new", "HashMap", "if", "tbName", "equals", "fileInfoList", "new", "ArrayList", "for", "int", "i", "i", "i", "String", "divTbName", "tbName", "i", "List", "FileInfo", "subFileInfoList", "fileInfoMapper", "selectByProject", "repoName", "divTbName", "fileInfoList", "addAll", "subFileInfoList", "subFileInfoList", "clear", "else", "fileInfoList", "fileInfoMapper", "selectByProject", "repoName", "tbName", "if", "fileInfoList", "null", "fileInfoList", "size", "for", "FileInfo", "fileInfo", "fileInfoList", "String", "tProjName", "String", "tFile", "String", "rProjName", "String", "rFile", "Double", "sim", "fileInfo", "getSimilarity", "if", "fileInfo", "getfAProject", "equals", "repoName", "tProjName", "fileInfo", "getfAProject", "tFile", "fileInfo", "getFileA", "rProjName", "fileInfo", "getfBProject", "rFile", "fileInfo", "getFileB", "else", "tProjName", "fileInfo", "getfBProject", "tFile", "fileInfo", "getFileB", "rProjName", "fileInfo", "getfAProject", "rFile", "fileInfo", "getFileA", "List", "ShortFileInfo", "shortFileInfoList", "rProj_fileInfo_map", "getOrDefault", "rProjName", "new", "ArrayList", "shortFileInfoList", "add", "new", "ShortFileInfo", "tFile", "rFile", "sim", "rProj_fileInfo_map", "put", "rProjName", "shortFileInfoList", "repoCloneFileSim", "setCloneFiles", "rProj_fileInfo_map", "return", "repoCloneFileSim" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\clone_service\\src\\main\\java\\com\\fudan\\service\\impl\\CloneInfoServiceImpl.java",
  "startLine" : 125,
  "endLine" : 152,
  "identifiers" : [ "long", "dataCnt", "measureIndexMapper", "selectCntByProjectList", "projectList", "tbName", "int", "pageSize", "Long", "pageCnt", "dataCnt", "pageSize", "if", "dataCnt", "File", "folderFile", "new", "File", "File", "separator", "if", "folderFile", "exists", "folderFile", "mkdirs", "SimpleDateFormat", "df", "new", "SimpleDateFormat", "String", "date", "df", "format", "new", "Date", "String", "fileName", "tbName", "projectList", "get", "File", "csvFile", "new", "File", "File", "separator", "File", "separator", "fileName", "try", "CSVPrinter", "printer", "new", "CSVPrinter", "new", "FileWriter", "csvFile", "CSVFormat", "DEFAULT", "for", "int", "pageNum", "pageNum", "pageCnt", "pageNum", "PageHelper", "startPage", "pageNum", "pageSize", "List", "ClonePair", "clonePairList", "measureIndexMapper", "selectByProjectList", "projectList", "tbName", "printClonePairs", "printer", "clonePairList", "printer", "close", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\clone_service\\src\\main\\java\\com\\fudan\\service\\impl\\CloneInfoServiceImpl.java",
  "startLine" : 155,
  "endLine" : 187,
  "identifiers" : [ "long", "dataCnt", "measureIndexMapper", "countByProjectPairs", "targetProject", "relatedProject", "tbName", "log", "info", "targetProject", "relatedProject", "dataCnt", "int", "pageSize", "Long", "pageCnt", "dataCnt", "pageSize", "if", "dataCnt", "log", "info", "targetProject", "relatedProject", "dataCnt", "return", "if", "dataCnt", "String", "resPath", "File", "separator", "targetProject", "File", "folderFile", "new", "File", "File", "separator", "resPath", "if", "folderFile", "exists", "folderFile", "mkdirs", "String", "fileName", "tbName", "relatedProject", "File", "csvFile", "new", "File", "File", "separator", "resPath", "File", "separator", "fileName", "try", "CSVPrinter", "printer", "new", "CSVPrinter", "new", "FileWriter", "csvFile", "CSVFormat", "DEFAULT", "for", "int", "pageNum", "pageNum", "pageCnt", "pageNum", "PageHelper", "startPage", "pageNum", "pageSize", "List", "ClonePair", "clonePairList", "measureIndexMapper", "selectByProjectPairs", "targetProject", "relatedProject", "tbName", "log", "info", "pageNum", "clonePairList", "size", "printClonePairs", "printer", "clonePairList", "printer", "close", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\clone_service\\src\\main\\java\\com\\fudan\\service\\impl\\CloneInfoServiceImpl.java",
  "startLine" : 201,
  "endLine" : 208,
  "identifiers" : [ "for", "ClonePair", "clonePair", "clonePairList", "printer", "printRecord", "clonePair", "getTarget_project", "clonePair", "getT_path", "clonePair", "getT_group_id", "clonePair", "getT_start_line", "clonePair", "getT_end_line", "clonePair", "getRelated_project", "clonePair", "getR_path", "clonePair", "getR_group_id", "clonePair", "getR_start_line", "clonePair", "getR_end_line", "printer", "flush", "clonePairList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\clone_service\\src\\main\\java\\com\\fudan\\service\\impl\\FileOPInfoServiceImpl.java",
  "startLine" : 26,
  "endLine" : 60,
  "identifiers" : [ "List", "String", "projectNmaList", "Arrays", "asList", "projectNames", "split", "if", "projectNmaList", "size", "log", "info", "projectNmaList", "size", "return", "long", "dataCnt", "fileOPInfoMapper", "countByProjectName", "projectNmaList", "tbName", "log", "info", "projectNmaList", "get", "dataCnt", "int", "pageSize", "Long", "pageCnt", "dataCnt", "pageSize", "if", "dataCnt", "String", "resPath", "File", "separator", "projectNmaList", "get", "File", "folderFile", "new", "File", "File", "separator", "resPath", "if", "folderFile", "exists", "folderFile", "mkdirs", "String", "fileName", "tbName", "projectNmaList", "get", "String", "pathName", "File", "separator", "resPath", "File", "separator", "fileName", "log", "info", "pathName", "File", "csvFile", "new", "File", "pathName", "try", "CSVPrinter", "printer", "new", "CSVPrinter", "new", "FileWriter", "csvFile", "CSVFormat", "DEFAULT", "for", "int", "pageNum", "pageNum", "pageCnt", "pageNum", "PageHelper", "startPage", "pageNum", "pageSize", "List", "FileOPinfo", "fileOPinfos", "fileOPInfoMapper", "selectByProjectName", "projectNmaList", "tbName", "log", "info", "pageNum", "fileOPinfos", "size", "printOpInfos", "printer", "fileOPinfos", "printer", "close", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\clone_service\\src\\main\\java\\com\\fudan\\service\\impl\\FileOPInfoServiceImpl.java",
  "startLine" : 62,
  "endLine" : 69,
  "identifiers" : [ "for", "FileOPinfo", "fileOPinfo", "fileOPinfos", "log", "info", "fileOPinfo", "getProjectName", "printer", "printRecord", "fileOPinfo", "getProjectName", "fileOPinfo", "getPath", "fileOPinfo", "getIsTencent", "printer", "flush", "fileOPinfos", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\datacheck\\src\\main\\java\\com\\fudan\\service\\impl\\CheckServiceImpl.java",
  "startLine" : 43,
  "endLine" : 62,
  "identifiers" : [ "int", "testCount", "int", "correctCount", "List", "FileInfo", "fileInfoList", "new", "ArrayList", "int", "maxFIId", "fileInfoMapper", "getMaxId", "FItbName", "Random", "random", "new", "Random", "for", "int", "i", "i", "testCount", "int", "id", "random", "nextInt", "maxFIId", "FileInfo", "fileInfo", "fileInfoMapper", "selectByPrimaryKey", "id", "FItbName", "if", "checkMeasureIndexTable", "fileInfo", "correctCount", "i", "log", "info", "correctCount", "i", "log", "info", "correctCount", "testCount" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\datacheck\\src\\main\\java\\com\\fudan\\service\\impl\\CheckServiceImpl.java",
  "startLine" : 64,
  "endLine" : 109,
  "identifiers" : [ "List", "MeasureIndex", "AmeasureIndexList", "measureIndexMapper", "selectByPath", "fileInfo", "getFileA", "MItbName", "List", "MeasureIndex", "BmeasureIndexList", "measureIndexMapper", "selectByPath", "fileInfo", "getFileB", "MItbName", "int", "fileATotalCloneLineNumber", "AmeasureIndexList", "stream", "mapToInt", "s", "s", "getEndLine", "s", "getStartLine", "sum", "int", "fileBTotalCloneLineNumber", "BmeasureIndexList", "stream", "mapToInt", "s", "s", "getEndLine", "s", "getStartLine", "sum", "Set", "Integer", "groupIdListA", "new", "HashSet", "for", "MeasureIndex", "measureIndex", "AmeasureIndexList", "if", "measureIndex", "getGroupId", "groupIdListA", "add", "measureIndex", "getGroupId", "Set", "Integer", "groupIdListB", "new", "HashSet", "for", "MeasureIndex", "measureIndex", "BmeasureIndexList", "if", "measureIndex", "getGroupId", "groupIdListB", "add", "measureIndex", "getGroupId", "Set", "Integer", "intercept", "new", "HashSet", "groupIdListA", "intercept", "retainAll", "groupIdListB", "int", "fileACloneLineNumber", "for", "MeasureIndex", "measureIndex", "AmeasureIndexList", "if", "intercept", "contains", "measureIndex", "getGroupId", "fileACloneLineNumber", "measureIndex", "getEndLine", "measureIndex", "getStartLine", "int", "fileBCloneLineNumber", "for", "MeasureIndex", "measureIndex", "BmeasureIndexList", "if", "intercept", "contains", "measureIndex", "getGroupId", "fileBCloneLineNumber", "measureIndex", "getEndLine", "measureIndex", "getStartLine", "float", "simByMI", "fileACloneLineNumber", "f", "fileATotalCloneLineNumber", "fileBCloneLineNumber", "f", "fileBTotalCloneLineNumber", "final", "float", "epsilon", "f", "if", "Math", "abs", "simByMI", "fileInfo", "getSimilarity", "epsilon", "return", "true", "else", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\datacheck\\src\\main\\java\\com\\fudan\\service\\impl\\CheckServiceImpl.java",
  "startLine" : 112,
  "endLine" : 123,
  "identifiers" : [ "String", "input", "List", "MeasureIndex", "AmeasureIndexList", "measureIndexMapper", "selectByPath", "input", "MItbName", "int", "fileATotalCloneLineNumber", "AmeasureIndexList", "stream", "mapToInt", "s", "s", "getEndLine", "s", "getStartLine", "sum", "Set", "Integer", "groupIdSet", "new", "HashSet", "for", "MeasureIndex", "measureIndex", "AmeasureIndexList", "if", "measureIndex", "getGroupId", "groupIdSet", "add", "measureIndex", "getGroupId", "System", "out", "println", "groupIdSet", "size", "fileATotalCloneLineNumber" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\datacheck\\src\\main\\java\\com\\fudan\\service\\impl\\CheckServiceImpl.java",
  "startLine" : 126,
  "endLine" : 178,
  "identifiers" : [ "Set", "Integer", "idSet", "readSet", "int", "x", "y", "String", "inputFile", "File", "headerFile", "new", "File", "inputFile", "UF", "uf", "new", "UF", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "headerFile", "log", "info", "int", "total", "getTotalLines", "headerFile", "int", "i", "PrintWriter", "printWriter", "new", "PrintWriter", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "log", "error", "log", "error", "str", "continue", "Integer", "methodId1", "Integer", "parseInt", "ls", "Integer", "methodId2", "Integer", "parseInt", "ls", "if", "idSet", "contains", "methodId1", "idSet", "contains", "methodId2", "printWriter", "write", "methodId1", "methodId2", "if", "i", "log", "info", "i", "total", "bufferedReader", "close", "printWriter", "flush", "printWriter", "close" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\datacheck\\src\\main\\java\\com\\fudan\\service\\impl\\CheckServiceImpl.java",
  "startLine" : 180,
  "endLine" : 196,
  "identifiers" : [ "Set", "Integer", "idset", "new", "HashSet", "File", "nodeFile", "new", "File", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "nodeFile", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "if", "str", "null", "str", "equals", "continue", "String", "idstr", "str", "trim", "Integer", "id", "Integer", "parseInt", "idstr", "idset", "add", "id", "bufferedReader", "close", "return", "idset" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\datacheck\\src\\main\\java\\com\\fudan\\service\\impl\\CheckServiceImpl.java",
  "startLine" : 199,
  "endLine" : 235,
  "identifiers" : [ "MItbName", "String", "format", "config", "getLanguage", "config", "getGranularity", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "config", "getInputFile", "PrintWriter", "printWriter", "new", "PrintWriter", "config", "getOutputFolder", "File", "separator", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "continue", "printWriter", "println", "printWriter", "println", "str", "for", "String", "idStr", "ls", "log", "info", "idStr", "printWriter", "println", "idStr", "Integer", "mid", "Integer", "parseInt", "idStr", "try", "MeasureIndex", "mi", "measureIndexMapper", "selectById", "mid", "MItbName", "String", "code", "readIntervalText", "mi", "getFile", "mi", "getStartLine", "mi", "getEndLine", "printWriter", "write", "code", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e", "printWriter", "println", "printWriter", "println", "printWriter", "flush", "bufferedReader", "close", "printWriter", "close" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\datacheck\\src\\main\\java\\com\\fudan\\service\\impl\\CheckServiceImpl.java",
  "startLine" : 238,
  "endLine" : 265,
  "identifiers" : [ "MItbName", "String", "format", "config", "getLanguage", "config", "getGranularity", "String", "ls", "config", "getInputIds", "split", "List", "Integer", "idList", "new", "ArrayList", "for", "String", "idstr", "ls", "idList", "add", "Integer", "parseInt", "idstr", "for", "Integer", "mid", "idList", "try", "MeasureIndex", "mi", "measureIndexMapper", "selectById", "mid", "MItbName", "log", "info", "mi", "int", "fileId", "getFileId", "mi", "getFile", "if", "fileId", "log", "error", "log", "error", "mi", "else", "searchMethodList", "mi", "fileId", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "try", "getMaxMethodId", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\datacheck\\src\\main\\java\\com\\fudan\\service\\impl\\CheckServiceImpl.java",
  "startLine" : 266,
  "endLine" : 290,
  "identifiers" : [ "File", "filesTxt", "new", "File", "config", "getDetectFolder", "File", "separator", "File", "separator", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "filesTxt", "int", "i", "boolean", "found", "false", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "if", "str", "equals", "path", "found", "true", "break", "bufferedReader", "close", "if", "found", "return", "i", "else", "return" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\datacheck\\src\\main\\java\\com\\fudan\\service\\impl\\CheckServiceImpl.java",
  "startLine" : 292,
  "endLine" : 325,
  "identifiers" : [ "File", "resultFolderFile", "new", "File", "config", "getDetectFolder", "File", "separator", "File", "methodIdListFileArray", "resultFolderFile", "listFiles", "boolean", "found", "false", "for", "File", "file", "methodIdListFileArray", "if", "file", "getName", "contains", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "file", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "Integer", "sl", "Integer", "parseInt", "ls", "Integer", "el", "Integer", "parseInt", "ls", "Integer", "st", "Integer", "parseInt", "ls", "Integer", "et", "Integer", "parseInt", "ls", "Integer", "fid", "Integer", "parseInt", "ls", "if", "fid", "fileId", "sl", "equals", "mi", "getStartLine", "el", "equals", "mi", "getEndLine", "log", "info", "file", "getName", "mi", "getMethodId", "log", "info", "i", "str", "found", "true", "break", "bufferedReader", "close", "if", "found", "return" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\datacheck\\src\\main\\java\\com\\fudan\\service\\impl\\CheckServiceImpl.java",
  "startLine" : 327,
  "endLine" : 359,
  "identifiers" : [ "File", "resultFolderFile", "new", "File", "config", "getDetectFolder", "File", "separator", "File", "methodIdListFileArray", "resultFolderFile", "listFiles", "List", "Integer", "nameList", "new", "ArrayList", "for", "File", "file", "methodIdListFileArray", "String", "name", "file", "getName", "if", "name", "contains", "String", "subName", "name", "substring", "length", "String", "pre", "subName", "substring", "subName", "length", "nameList", "add", "Integer", "parseInt", "pre", "Collections", "sort", "nameList", "log", "info", "nameList", "get", "nameList", "size", "File", "MethodListFile", "new", "File", "config", "getDetectFolder", "File", "separator", "File", "separator", "nameList", "get", "nameList", "size", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "MethodListFile", "int", "i", "String", "lastLine", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "lastLine", "str", "bufferedReader", "close", "log", "info", "lastLine" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\datacheck\\src\\main\\java\\com\\fudan\\util\\GraphUtil.java",
  "startLine" : 10,
  "endLine" : 35,
  "identifiers" : [ "int", "MaxValue", "int", "vertex", "int", "matrix", "new", "int", "vertex", "vertex", "for", "int", "i", "i", "vertex", "i", "for", "int", "j", "j", "vertex", "j", "matrix", "i", "j", "MaxValue", "int", "source", "dest", "dijstra", "matrix", "source", "dest" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\datacheck\\src\\main\\java\\com\\fudan\\util\\GraphUtil.java",
  "startLine" : 38,
  "endLine" : 97,
  "identifiers" : [ "int", "MaxValue", "int", "shortest", "new", "int", "matrix", "length", "int", "visited", "new", "int", "matrix", "length", "String", "path", "new", "String", "matrix", "length", "for", "int", "i", "i", "matrix", "length", "i", "path", "i", "new", "String", "source", "i", "shortest", "source", "visited", "source", "for", "int", "i", "i", "matrix", "length", "i", "int", "min", "Integer", "MAX_VALUE", "int", "index", "for", "int", "j", "j", "matrix", "length", "j", "if", "visited", "j", "matrix", "source", "j", "min", "min", "matrix", "source", "j", "index", "j", "shortest", "index", "min", "visited", "index", "for", "int", "m", "m", "matrix", "length", "m", "if", "visited", "m", "matrix", "source", "index", "matrix", "index", "m", "matrix", "source", "m", "matrix", "source", "m", "matrix", "source", "index", "matrix", "index", "m", "path", "m", "path", "index", "m", "if", "shortest", "dest", "MaxValue", "System", "out", "println", "source", "dest", "else", "System", "out", "println", "source", "dest", "path", "dest", "shortest", "dest" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\datacheck\\src\\main\\java\\com\\fudan\\util\\IOUtil.java",
  "startLine" : 15,
  "endLine" : 34,
  "identifiers" : [ "if", "file", "exists", "try", "long", "startTime", "System", "currentTimeMillis", "FileReader", "in", "new", "FileReader", "file", "LineNumberReader", "reader", "new", "LineNumberReader", "in", "reader", "skip", "Long", "MAX_VALUE", "int", "lines", "reader", "getLineNumber", "reader", "close", "long", "endTime", "System", "currentTimeMillis", "log", "info", "endTime", "startTime", "return", "lines", "catch", "IOException", "e", "log", "error", "e", "getMessage", "return" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\datacheck\\src\\main\\java\\com\\fudan\\util\\IOUtil.java",
  "startLine" : 44,
  "endLine" : 61,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "StringBuilder", "builder", "new", "StringBuilder", "int", "lineNumber", "while", "line", "reader", "readLine", "null", "lineNumber", "if", "lineNumber", "startLine", "continue", "if", "lineNumber", "endLine", "break", "builder", "append", "line", "reader", "close", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\datacheck\\src\\main\\java\\com\\fudan\\util\\UF.java",
  "startLine" : 19,
  "endLine" : 30,
  "identifiers" : [ "id", "new", "int", "N", "sz", "new", "int", "N", "for", "int", "i", "i", "N", "i", "id", "i", "i", "for", "int", "i", "i", "N", "i", "sz", "i", "this", "N", "N", "count", "N" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\datacheck\\src\\main\\java\\com\\fudan\\util\\UF.java",
  "startLine" : 42,
  "endLine" : 57,
  "identifiers" : [ "int", "xRoot", "find", "x", "int", "yRoot", "find", "y", "if", "xRoot", "yRoot", "if", "sz", "xRoot", "sz", "yRoot", "id", "xRoot", "y", "sz", "yRoot", "sz", "xRoot", "else", "id", "yRoot", "x", "sz", "xRoot", "sz", "yRoot", "count" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\CleanRedis.java",
  "startLine" : 13,
  "endLine" : 28,
  "identifiers" : [ "try", "Config", "load", "Jedis", "jedis", "jedis", "new", "Jedis", "Config", "redisIP", "Config", "redisPort", "if", "Config", "redisPassword", "null", "Config", "redisPassword", "equals", "jedis", "auth", "Config", "redisPassword", "jedis", "flushAll", "jedis", "close", "catch", "Exception", "e", "log", "error", "e", "getMessage", "log", "error", "e", "getStackTrace", "log", "error" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\bak\\ErrorInsert.java",
  "startLine" : 38,
  "endLine" : 59,
  "identifiers" : [ "Config", "load", "log", "info", "String", "resource", "Properties", "prop", "Config", "getProperties", "try", "InputStream", "inputStream", "Resources", "getResourceAsStream", "resource", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "prop", "SqlSession", "session", "sqlSessionFactory", "openSession", "MeasureIndexMapper", "measureIndexMapper", "session", "getMapper", "MeasureIndexMapper", "class", "measureIndexMapper", "dropTable", "Config", "measureIndexTbName", "measureIndexMapper", "createTable", "Config", "measureIndexTbName", "session", "commit", "session", "close", "log", "info", "catch", "Exception", "e", "log", "error", "e", "toString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\bak\\ErrorInsert.java",
  "startLine" : 60,
  "endLine" : 128,
  "identifiers" : [ "File", "headerFile", "new", "File", "Config", "infoFolder", "File", "separator", "Constants", "ErrorMICSV", "if", "headerFile", "exists", "log", "error", "log", "error", "headerFile", "getAbsolutePath", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "headerFile", "log", "info", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "log", "error", "log", "error", "str", "continue", "Integer", "id", "Integer", "parseInt", "ls", "String", "path", "ls", "if", "path", "length", "log", "error", "path", "log", "error", "path", "length", "String", "projectName", "ls", "if", "projectName", "length", "log", "error", "projectName", "log", "error", "projectName", "length", "Integer", "startLine", "Integer", "parseInt", "ls", "Integer", "endLine", "Integer", "parseInt", "ls", "Integer", "groupId", "Integer", "parseInt", "ls", "Integer", "methodId", "Integer", "parseInt", "ls", "MeasureIndex", "measureIndex", "new", "MeasureIndex", "id", "path", "projectName", "startLine", "endLine", "groupId", "methodId", "l", "l", "bufferList", "add", "measureIndex", "if", "bufferList", "size", "log", "info", "i", "insertToDB", "bufferedReader", "close", "catch", "IOException", "e", "e", "printStackTrace", "insertToDB", "log", "info" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\bak\\ErrorInsert.java",
  "startLine" : 130,
  "endLine" : 151,
  "identifiers" : [ "try", "if", "bufferList", "size", "SqlSession", "session", "sqlSessionFactory", "openSession", "MeasureIndexMapper", "measureIndexMapper", "session", "getMapper", "MeasureIndexMapper", "class", "measureIndexMapper", "insertList", "bufferList", "Config", "measureIndexTbName", "session", "commit", "session", "close", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "finally", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\bak\\InitRedis.java",
  "startLine" : 33,
  "endLine" : 51,
  "identifiers" : [ "Config", "load", "try", "jedis", "new", "Jedis", "Config", "redisIP", "Config", "redisPort", "if", "Config", "redisPassword", "null", "Config", "redisPassword", "equals", "jedis", "auth", "Config", "redisPassword", "jedis", "flushAll", "pipelined", "jedis", "pipelined", "catch", "Exception", "e", "log", "error", "e", "getMessage", "log", "error", "e", "getStackTrace", "log", "error", "System", "exit", "updateGroupId", "new", "UpdateGroupId" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\bak\\InitRedis.java",
  "startLine" : 52,
  "endLine" : 128,
  "identifiers" : [ "File", "headerFile", "new", "File", "Config", "detectFolder", "File", "separator", "File", "separator", "Constants", "MeasureIndexStr", "if", "headerFile", "exists", "log", "error", "log", "error", "headerFile", "getAbsolutePath", "log", "error", "System", "exit", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "headerFile", "log", "info", "int", "i", "String", "cache", "null", "int", "cacheLine", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "log", "error", "log", "error", "str", "continue", "Integer", "methodId", "Integer", "parseInt", "ls", "Integer", "groupId", "updateGroupId", "getGroupId", "methodId", "String", "path", "ls", "if", "path", "length", "continue", "Integer", "startLine", "Integer", "parseInt", "ls", "Integer", "endLine", "Integer", "parseInt", "ls", "String", "projectName", "NameUtil", "getProjectName", "path", "if", "cache", "null", "cache", "path", "cacheLine", "endLine", "startLine", "else", "if", "cache", "equals", "path", "cacheLine", "endLine", "startLine", "else", "insertToRedisPathLine", "cache", "cacheLine", "cache", "path", "cacheLine", "endLine", "startLine", "if", "groupId", "MeasureIndex", "measureIndex", "new", "MeasureIndex", "i", "path", "projectName", "startLine", "endLine", "groupId", "methodId", "l", "l", "insertToRedisGroupIdList", "measureIndex", "if", "i", "log", "info", "i", "bufferedReader", "close", "insertToRedisPathLine", "cache", "cacheLine", "catch", "IOException", "e", "e", "printStackTrace", "log", "info" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\config\\Config.java",
  "startLine" : 41,
  "endLine" : 58,
  "identifiers" : [ "properties", "setProperty", "detectFolder", "properties", "setProperty", "language", "properties", "setProperty", "dataset", "properties", "setProperty", "infoFolder", "properties", "setProperty", "granularity", "properties", "setProperty", "simThreshold", "toString", "properties", "setProperty", "properties", "setProperty", "spring", "datasource", "usernamec_checkspring", "datasource", "password", "pG57sozgIG0", "IQBQredisIPredisPortredisPassword", "redisPassword", "properties", "store", "new", "FileWriter", "CONFIG_FILE", "COMMENT" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\config\\Config.java",
  "startLine" : 63,
  "endLine" : 98,
  "identifiers" : [ "try", "if", "new", "File", "CONFIG_FILE", "exists", "properties", "load", "new", "FileReader", "CONFIG_FILE", "detectFolder", "properties", "getProperty", "language", "properties", "getProperty", "dataset", "properties", "getProperty", "infoFolder", "properties", "getProperty", "granularity", "properties", "getProperty", "simThreshold", "Double", "parseDouble", "properties", "getProperty", "redisIP", "properties", "getProperty", "redisPort", "Integer", "parseInt", "properties", "getProperty", "redisPassword", "properties", "getProperty", "regex", "properties", "getProperty", "measureIndexTbName", "language", "granularity", "fileInfoTbName", "language", "granularity", "projInfoTbName", "language", "granularity", "fileOPInfoTbName", "language", "redisPathLineKey", "language", "toLowerCase", "granularity", "toLowerCase", "redisGroupIdKey", "language", "toLowerCase", "granularity", "toLowerCase", "errorMeasureIndexCSV", "infoFolder", "File", "separator", "measureIndexTbName", "else", "save", "System", "out", "println", "CONFIG_FILE", "System", "exit", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\idproducer\\UpdateGroupId.java",
  "startLine" : 29,
  "endLine" : 41,
  "identifiers" : [ "Config", "load", "head_file", "new", "File", "Config", "detectFolder", "File", "separator", "File", "separator", "Constants", "MeasureIndexStr", "if", "head_file", "exists", "log", "error", "head_file", "getAbsolutePath", "System", "exit", "group_file", "new", "File", "Config", "detectFolder", "File", "separator", "File", "separator", "Constants", "Type123groupStr", "if", "group_file", "exists", "log", "error", "group_file", "getAbsolutePath", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\idproducer\\UpdateGroupId.java",
  "startLine" : 43,
  "endLine" : 70,
  "identifiers" : [ "try", "log", "info", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "group_file", "int", "total_id", "IOUtil", "getTotalLines", "group_file", "int", "group_id", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "group_id", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "continue", "for", "String", "mea_id", "ls", "Integer", "meain_id", "Integer", "parseInt", "mea_id", "group_map", "put", "meain_id", "group_id", "if", "group_id", "log", "info", "group_id", "total_id", "bufferedReader", "close", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 59,
  "endLine" : 67,
  "identifiers" : [ "Long", "l", "new", "Long", "polynomial", "FPGenerator", "fpgen", "FPGenerator", "generators", "get", "l", "if", "fpgen", "null", "fpgen", "new", "FPGenerator", "polynomial", "degree", "generators", "put", "l", "fpgen", "return", "fpgen" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 78,
  "endLine" : 88,
  "identifiers" : [ "int", "N", "degree", "long", "local", "N", "fp", "L", "N", "long", "temp", "zero", "for", "int", "i", "i", "N", "i", "temp", "ByteModTable", "i", "int", "fp", "xff", "fp", "return", "local", "temp" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 108,
  "endLine" : 116,
  "identifiers" : [ "f", "xffff", "v", "int", "i", "int", "f", "long", "result", "f", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 121,
  "endLine" : 133,
  "identifiers" : [ "f", "xffffffffL", "v", "int", "i", "int", "f", "long", "result", "f", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 138,
  "endLine" : 156,
  "identifiers" : [ "f", "v", "long", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 271,
  "endLine" : 278,
  "identifiers" : [ "int", "n", "s", "length", "for", "int", "i", "i", "n", "i", "int", "v", "int", "s", "charAt", "i", "f", "extend_char", "f", "v", "return", "reduce", "f" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 315,
  "endLine" : 322,
  "identifiers" : [ "int", "n", "s", "length", "for", "int", "i", "i", "n", "i", "int", "x", "int", "s", "charAt", "i", "f", "extend_byte", "f", "x", "return", "reduce", "f" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 364,
  "endLine" : 403,
  "identifiers" : [ "this", "degree", "degree", "this", "polynomial", "polynomial", "ByteModTable", "new", "long", "long", "PowerTable", "new", "long", "long", "x_to_the_i", "one", "long", "x_to_the_degree_minus_one", "one", "degree", "for", "int", "i", "i", "i", "PowerTable", "i", "x_to_the_i", "boolean", "overflow", "x_to_the_i", "x_to_the_degree_minus_one", "x_to_the_i", "if", "overflow", "x_to_the_i", "polynomial", "this", "empty", "PowerTable", "for", "int", "i", "i", "i", "for", "int", "j", "j", "j", "long", "v", "zero", "for", "int", "k", "k", "k", "if", "j", "k", "v", "PowerTable", "i", "k", "ByteModTable", "i", "j", "v" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 411,
  "endLine" : 475,
  "identifiers" : [ "null", "xC000000000000000L", "xC000000000000000L", "xE000000000000000L", "xE000000000000000L", "xD000000000000000L", "xB000000000000000L", "xF800000000000000L", "xF800000000000000L", "xEC00000000000000L", "xBC00000000000000L", "xDA00000000000000L", "xB600000000000000L", "xE500000000000000L", "xE500000000000000L", "x9680000000000000L", "xD480000000000000L", "x80C0000000000000L", "x8840000000000000L", "xB0A0000000000000L", "xE9A0000000000000L", "xD9F0000000000000L", "xC9B0000000000000L", "xE758000000000000L", "xDE98000000000000L", "xE42C000000000000L", "x94E4000000000000L", "xD4CE000000000000L", "xB892000000000000L", "xE2AB000000000000L", "x9E39000000000000L", "xCCE4800000000000L", "x9783800000000000L", "xD8F8C00000000000L", "xA9CDC00000000000L", "x9A28200000000000L", "xFD79E00000000000L", "xC782500000000000L", "x96CD300000000000L", "xBEE6880000000000L", "xE902C80000000000L", "x86D7E40000000000L", "xF066340000000000L", "x9888060000000000L", "x910ABE0000000000L", "xFF30E30000000000L", "xB27EFB0000000000L", "x8E375B8000000000L", "xA03D948000000000L", "xD1415C4000000000L", "xF5357CC000000000L", "x91A916E000000000L", "xB6CE66E000000000L", "xE6D2FC5000000000L", "xD55882B000000000L", "x9A3BA0B800000000L", "xFBD654E800000000L", "xAEA5D2E400000000L", "xF0E533AC00000000L", "xDA88B7BE00000000L", "xAA3AAEDE00000000L", "xBA75BB4300000000L", "xF5A811C500000000L", "x9B6C9A2F80000000L", "x9603CCED80000000L", "xFABB538840000000L", "xE2747090C0000000L", "x8358898EA0000000L", "x8C698D3D20000000L", "xDA8ABD5BF0000000L", "xF6DF3A0AF0000000L", "xB090C3F758000000L", "xD3B4D3D298000000L", "xAD9882F5BC000000L", "x88DA4FB544000000L", "xC3C366272A000000L", "xDCCF2A2262000000L", "x9BC0224A97000000L", "xAF5D96F273000000L", "x8643FFF621800000L", "x8E390C6EDC800000L", "xE45C01919BC00000L", "xCBB34C8945C00000L", "x80D8141BC2E00000L", "x886AFC3912200000L", "xF605807C26500000L", "xA3B92D28F6300000L", "xCE9A2CFC76280000L", "x98400C1921280000L", "xF61894904C040000L", "xC8BE6DBCEC8C0000L", "xE3A44C104D160000L", "xCA84A59443760000L", "xC7E84953A11B0000L", "xD9D4F6AA02CB0000L", "xC26CDD1C9A358000L", "x8BE8478434328000L", "xAE125DBEB198C000L", "xFCC5DBFD5AAAC000L", "x86DE52A079A6A000L", "xC5F16BD883816000L", "xDF82486AAFE37000L", "xA293EC735692D000L", "xE91ABA275C272800L", "xD686192874E3C800L", "x963D0960DAB3FC00L", "xBA9DE62072621400L", "xA2188C4E8A46CE00L", "xD31F75BCB4977E00L", "xC43A416020A6CB00L", "x99F57FECA12B3900L", "xA4F72EF82A58AE80L", "xCECE4391B81DA380L", "xB39F119264BC0940L", "x80A277D20DABB9C0L", "xFD6616C0CBFA0B20L", "xED16E64117DC11A0L", "xFFA8BC44327B5390L", "xEDFB13DB3B66C210L", "xCAE8EB99E73AB548L", "xC86135B6EA2F0B98L", "xBA49BADCDD19B16CL", "x8F1944AFB18564C4L", "xECFC86D765EABBEEL", "x9190E1C46CC13702L", "xE1F8D6B3195D6D97L", "xDF70267FF5E4C979L", "xD74307D3FD3382DBL", "x9999B3FFDC769B48L" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 105,
  "endLine" : 155,
  "identifiers" : [ ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 225,
  "endLine" : 239,
  "identifiers" : [ "if", "f", "f", "throw", "new", "IllegalArgumentException", "if", "n", "throw", "new", "IllegalArgumentException", "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "n", "f", "if", "l", "l", "l", "free", "PRIMES", "p", "l", "this", "f", "f", "this", "maxFill", "int", "free", "f", "key", "new", "long", "free", "state", "new", "byte", "free" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 305,
  "endLine" : 315,
  "identifiers" : [ "if", "offset", "throw", "new", "ArrayIndexOutOfBoundsException", "offset", "if", "length", "throw", "new", "IllegalArgumentException", "length", "if", "offset", "length", "arrayLength", "throw", "new", "ArrayIndexOutOfBoundsException", "offset", "length", "arrayLength" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 436,
  "endLine" : 471,
  "identifiers" : [ "final", "long", "key", "this", "key", "final", "byte", "state", "this", "state", "final", "int", "n", "key", "length", "final", "int", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "int", "h1", "k2i", "n", "if", "state", "h1", "OCCUPIED", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "OCCUPIED", "k", "key", "h1", "if", "state", "h1", "FREE", "return", "h1", "if", "state", "h1", "OCCUPIED", "return", "h1", "final", "int", "i", "h1", "if", "ASSERTS", "assert", "state", "h1", "REMOVED", "if", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "k", "key", "h1", "return", "state", "h1", "OCCUPIED", "h1", "i" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 481,
  "endLine" : 501,
  "identifiers" : [ "final", "long", "key", "this", "key", "final", "byte", "state", "this", "state", "final", "int", "n", "key", "length", "final", "int", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "int", "h1", "k2i", "n", "if", "state", "h1", "FREE", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "k", "key", "h1", "return", "state", "h1", "OCCUPIED", "h1" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 503,
  "endLine" : 523,
  "identifiers" : [ "final", "int", "i", "findInsertionPoint", "k", "if", "i", "return", "false", "if", "state", "i", "FREE", "free", "state", "i", "OCCUPIED", "key", "i", "k", "if", "count", "maxFill", "int", "newP", "Math", "min", "p", "growthFactor", "PRIMES", "length", "while", "PRIMES", "newP", "PRIMES", "p", "newP", "rehash", "newP", "if", "free", "rehash", "p", "if", "ASSERTS", "checkTable", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 599,
  "endLine" : 611,
  "identifiers" : [ "long", "retVal", "final", "byte", "state", "LongOpenHashSet", "this", "state", "final", "int", "n", "state", "length", "if", "hasNext", "throw", "new", "NoSuchElementException", "retVal", "key", "last", "pos", "if", "c", "do", "pos", "while", "pos", "n", "state", "pos", "OCCUPIED", "return", "retVal" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 668,
  "endLine" : 680,
  "identifiers" : [ "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "count", "f", "if", "l", "l", "l", "if", "l", "p", "return", "true", "try", "rehash", "l", "catch", "OutOfMemoryError", "cantDoIt", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 704,
  "endLine" : 717,
  "identifiers" : [ "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "Math", "min", "Integer", "MAX_VALUE", "Math", "max", "n", "count", "f", "if", "l", "l", "l", "if", "p", "l", "return", "true", "try", "rehash", "l", "catch", "OutOfMemoryError", "cantDoIt", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 732,
  "endLine" : 761,
  "identifiers" : [ "int", "i", "j", "count", "k2i", "h1", "h2", "final", "byte", "state", "this", "state", "long", "k", "final", "int", "newN", "PRIMES", "newP", "final", "long", "key", "this", "key", "newKey", "new", "long", "newN", "final", "byte", "newState", "new", "byte", "newN", "while", "j", "while", "state", "i", "OCCUPIED", "i", "k", "key", "i", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "h1", "k2i", "newN", "if", "newState", "h1", "FREE", "h2", "k2i", "newN", "do", "h1", "h1", "h2", "newN", "while", "newState", "h1", "FREE", "newState", "h1", "OCCUPIED", "newKey", "h1", "k", "i", "p", "newP", "free", "newN", "count", "maxFill", "int", "newN", "f", "this", "key", "newKey", "this", "state", "newState" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 782,
  "endLine" : 792,
  "identifiers" : [ "LongOpenHashSet", "c", "try", "c", "LongOpenHashSet", "super", "clone", "catch", "CloneNotSupportedException", "cantHappen", "throw", "new", "InternalError", "c", "key", "key", "clone", "c", "state", "state", "clone", "return", "c" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 804,
  "endLine" : 813,
  "identifiers" : [ "int", "h", "i", "j", "count", "while", "j", "while", "state", "i", "OCCUPIED", "i", "h", "longHash2IntHash", "key", "i", "i", "return", "h" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 826,
  "endLine" : 858,
  "identifiers" : [ "s", "defaultReadObject", "growthFactor", "DEFAULT_GROWTH_FACTOR", "p", "Arrays", "binarySearch", "PRIMES", "int", "count", "f", "if", "p", "p", "p", "final", "int", "n", "PRIMES", "p", "maxFill", "int", "n", "f", "free", "n", "count", "final", "long", "key", "this", "key", "new", "long", "n", "final", "byte", "state", "this", "state", "new", "byte", "n", "int", "i", "k2i", "h1", "h2", "long", "k", "i", "count", "while", "i", "k", "s", "readLong", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "h1", "k2i", "n", "if", "state", "h1", "FREE", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "state", "h1", "OCCUPIED", "key", "h1", "k", "if", "ASSERTS", "checkTable" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\Shingle.java",
  "startLine" : 36,
  "endLine" : 47,
  "identifiers" : [ "HashSet", "String", "shingles", "new", "HashSet", "String", "for", "int", "i", "i", "line", "length", "CHAR_GRAM_LENGTH", "i", "String", "shingle", "line", "substring", "i", "i", "CHAR_GRAM_LENGTH", "shingles", "add", "shingle", "return", "shingles" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 56,
  "endLine" : 102,
  "identifiers" : [ "LongOpenHashSet", "shingles", "new", "LongOpenHashSet", "Math", "min", "s", "length", "int", "length", "s", "length", "for", "int", "i", "i", "length", "FIXED_CGRAM_LENGTH", "i", "long", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingles", "add", "shingle", "int", "v", "new", "int", "HASH_SIZE", "byte", "longAsBytes", "new", "byte", "for", "long", "shingle", "shingles", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "long", "longHash", "FPGenerator", "std64", "fp", "longAsBytes", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 104,
  "endLine" : 158,
  "identifiers" : [ "LongOpenHashSet", "shingles", "new", "LongOpenHashSet", "Math", "min", "length", "FIXED_BGRAM_LENGTH", "for", "int", "i", "offset", "i", "length", "FIXED_BGRAM_LENGTH", "i", "int", "pos", "i", "long", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingles", "add", "shingle", "int", "v", "new", "int", "HASH_SIZE", "byte", "longAsBytes", "new", "byte", "for", "long", "shingle", "shingles", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "long", "longHash", "FPGenerator", "std64", "fp", "longAsBytes", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 160,
  "endLine" : 183,
  "identifiers" : [ "int", "v", "new", "int", "HASH_SIZE", "for", "String", "shingle", "shingles", "byte", "bytes", "shingle", "getBytes", "long", "longHash", "FPGenerator", "std64", "fp", "bytes", "bytes", "length", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\util\\CommentUtil.java",
  "startLine" : 29,
  "endLine" : 42,
  "identifiers" : [ "if", "language", "equals", "Constants", "LANGUAGE_JAVA", "language", "equals", "Constants", "LANGUAGE_C", "language", "equals", "Constants", "LANGUAGE_CPP", "language", "equals", "Constants", "LANGUAGE_GO", "code", "removeComments", "code", "JAVA_COMMENT_SINGLE_LINE", "code", "removeComments", "code", "JAVA_COMMENT_MULTI_LINE", "else", "if", "language", "equals", "Constants", "LANGUAGE_PYTHON", "code", "removeComments", "code", "PYTHON_COMMENT_SINGLE_LINE", "code", "removeComments", "code", "PYTHON_COMMENT_MULTI_LINE", "code", "removeComments", "code", "PYTHON_COMMENT_MULTI_LINE2", "return", "code" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\util\\DateUtil.java",
  "startLine" : 31,
  "endLine" : 37,
  "identifiers" : [ "int", "seconds", "int", "timeMillis", "e3", "int", "hour", "seconds", "int", "minute", "seconds", "hour", "int", "second", "seconds", "hour", "minute", "return", "String", "format", "hour", "minute", "second" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 19,
  "endLine" : 34,
  "identifiers" : [ "List", "String", "lines", "new", "ArrayList", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "int", "lineCnt", "while", "line", "reader", "readLine", "null", "lineCnt", "if", "lineCnt", "startLine", "lineCnt", "endLine", "lines", "add", "line", "else", "if", "lineCnt", "endLine", "break", "reader", "close", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\util\\IOUtil.java",
  "startLine" : 18,
  "endLine" : 37,
  "identifiers" : [ "if", "file", "exists", "try", "long", "startTime", "System", "currentTimeMillis", "FileReader", "in", "new", "FileReader", "file", "LineNumberReader", "reader", "new", "LineNumberReader", "in", "reader", "skip", "Long", "MAX_VALUE", "int", "lines", "reader", "getLineNumber", "reader", "close", "long", "endTime", "System", "currentTimeMillis", "log", "info", "endTime", "startTime", "return", "lines", "catch", "IOException", "e", "log", "error", "e", "getMessage", "return" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\util\\NameUtil.java",
  "startLine" : 19,
  "endLine" : 42,
  "identifiers" : [ "try", "String", "regex", "Config", "regex", "String", "div_path", "path", "split", "regex", "String", "div_dir", "Config", "dataset", "split", "regex", "String", "mark", "div_dir", "div_dir", "length", "int", "index", "for", "int", "i", "i", "div_path", "length", "i", "if", "div_path", "i", "equals", "mark", "index", "i", "break", "if", "index", "index", "div_path", "length", "return", "div_path", "index", "div_path", "index", "else", "return", "catch", "Exception", "e", "e", "printStackTrace", "return" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\com\\fudan\\util\\NameUtil.java",
  "startLine" : 44,
  "endLine" : 52,
  "identifiers" : [ "String", "tmp", "path", "substring", "Config", "dataset", "length", "if", "tmp", "charAt", "File", "separatorChar", "tmp", "tmp", "substring", "String", "sep", "tmp", "contains", "String", "names", "tmp", "split", "sep", "return", "names" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\FileInfo2DB.java",
  "startLine" : 35,
  "endLine" : 63,
  "identifiers" : [ "Config", "load", "String", "resource", "Properties", "prop", "Config", "getProperties", "try", "InputStream", "inputStream", "Resources", "getResourceAsStream", "resource", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "prop", "SqlSession", "session", "sqlSessionFactory", "openSession", "FileInfoMapper", "fileInfoMapper", "session", "getMapper", "FileInfoMapper", "class", "if", "Config", "language", "equals", "for", "int", "i", "i", "i", "String", "tbName", "Config", "fileInfoTbName", "i", "fileInfoMapper", "dropTable", "tbName", "fileInfoMapper", "createTable", "tbName", "else", "fileInfoMapper", "dropTable", "Config", "fileInfoTbName", "fileInfoMapper", "createTable", "Config", "fileInfoTbName", "session", "commit", "session", "close", "log", "info", "catch", "Exception", "e", "log", "error", "e", "toString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\FileInfo2DB.java",
  "startLine" : 64,
  "endLine" : 137,
  "identifiers" : [ "File", "csvFile", "new", "File", "Config", "infoFolder", "File", "separator", "Constants", "FileInfoStr", "if", "csvFile", "exists", "log", "error", "log", "error", "csvFile", "getAbsolutePath", "System", "exit", "int", "total", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "csvFile", "log", "info", "total", "IOUtil", "getTotalLines", "csvFile", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "log", "error", "log", "error", "str", "continue", "int", "k", "Integer", "id", "Integer", "parseInt", "ls", "k", "String", "fileA", "ls", "k", "String", "fAProject", "ls", "k", "String", "fileB", "ls", "k", "String", "fBProject", "ls", "k", "Double", "similarity", "Double", "parseDouble", "ls", "k", "if", "similarity", "Config", "simThreshold", "continue", "FileInfo", "fileInfo", "new", "FileInfo", "id", "fileA", "fAProject", "fileB", "fBProject", "similarity", "bufferList", "add", "fileInfo", "if", "bufferList", "size", "log", "info", "i", "total", "if", "Config", "language", "equals", "insertToDBCPP", "i", "else", "insertToDB", "bufferedReader", "close", "catch", "IOException", "e", "log", "error", "e", "if", "Config", "language", "equals", "insertToDBCPP", "total", "else", "insertToDB", "checkStatus", "total", "log", "info" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\FileInfo2DB.java",
  "startLine" : 139,
  "endLine" : 157,
  "identifiers" : [ "try", "if", "bufferList", "size", "SqlSession", "session", "sqlSessionFactory", "openSession", "FileInfoMapper", "fileInfoMapper", "session", "getMapper", "FileInfoMapper", "class", "fileInfoMapper", "insertList", "bufferList", "Config", "fileInfoTbName", "session", "commit", "session", "close", "catch", "Exception", "e", "log", "error", "e", "getMessage", "finally", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\FileInfo2DB.java",
  "startLine" : 159,
  "endLine" : 180,
  "identifiers" : [ "int", "idx", "current", "if", "idx", "idx", "String", "tbName", "Config", "fileInfoTbName", "idx", "try", "if", "bufferList", "size", "SqlSession", "session", "sqlSessionFactory", "openSession", "FileInfoMapper", "fileInfoMapper", "session", "getMapper", "FileInfoMapper", "class", "fileInfoMapper", "insertList", "bufferList", "tbName", "session", "commit", "session", "close", "catch", "Exception", "e", "log", "error", "e", "getMessage", "finally", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\FileInfo2DB.java",
  "startLine" : 182,
  "endLine" : 191,
  "identifiers" : [ "SqlSession", "session", "sqlSessionFactory", "openSession", "FileInfoMapper", "mapper", "session", "getMapper", "FileInfoMapper", "class", "int", "tbCnt", "mapper", "selectCnt", "Config", "fileInfoTbName", "log", "info", "total", "log", "info", "Config", "fileInfoTbName", "tbCnt", "session", "commit", "session", "close" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\FileInfo2DB2.java",
  "startLine" : 40,
  "endLine" : 59,
  "identifiers" : [ "Config", "load", "String", "resource", "Properties", "prop", "Config", "getProperties", "try", "InputStream", "inputStream", "Resources", "getResourceAsStream", "resource", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "prop", "SqlSession", "session", "sqlSessionFactory", "openSession", "FileInfoMapper", "fileInfoMapper", "session", "getMapper", "FileInfoMapper", "class", "fileInfoMapper", "dropTable", "Config", "fileInfoTbName", "fileInfoMapper", "createTable", "Config", "fileInfoTbName", "session", "commit", "session", "close", "log", "info", "catch", "Exception", "e", "log", "error", "e", "toString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\FileInfo2DB2.java",
  "startLine" : 61,
  "endLine" : 139,
  "identifiers" : [ "File", "headerFile", "new", "File", "Config", "detectFolder", "File", "separator", "File", "separator", "Constants", "MeasureIndexStr", "if", "headerFile", "exists", "log", "error", "log", "error", "headerFile", "getAbsolutePath", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "headerFile", "log", "info", "int", "total", "IOUtil", "getTotalLines", "headerFile", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "log", "error", "str", "if", "ls", "length", "continue", "else", "continue", "Integer", "methodId", "Integer", "parseInt", "ls", "Integer", "groupId", "String", "path", "ls", "if", "path", "length", "continue", "String", "projectName", "NameUtil", "getProjectName", "path", "if", "projectName", "length", "projectName", "projectName", "substring", "Integer", "startLine", "Integer", "parseInt", "ls", "Integer", "endLine", "Integer", "parseInt", "ls", "MeasureIndex", "measureIndex", "new", "MeasureIndex", "i", "path", "projectName", "startLine", "endLine", "groupId", "methodId", "l", "l", "measureIndexMap", "put", "methodId", "measureIndex", "if", "i", "logInterval", "log", "info", "String", "format", "i", "f", "total", "bufferedReader", "close", "catch", "IOException", "e", "log", "error", "e", "getMessage", "log", "info" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\FileInfo2DB2.java",
  "startLine" : 141,
  "endLine" : 184,
  "identifiers" : [ "File", "pair_file", "new", "File", "Config", "detectFolder", "File", "separator", "File", "separator", "Constants", "Type123pairStr", "log", "info", "int", "total", "IOUtil", "getTotalLines", "pair_file", "int", "file_id", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "pair_file", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "file_id", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "continue", "Integer", "mid1", "Integer", "parseInt", "ls", "Integer", "mid2", "Integer", "parseInt", "ls", "Double", "sim", "Double", "parseDouble", "ls", "MeasureIndex", "mi1", "measureIndexMap", "get", "mid1", "MeasureIndex", "mi2", "measureIndexMap", "get", "mid2", "if", "mi1", "null", "mi2", "null", "continue", "if", "mi1", "getProject", "equals", "mi2", "getProject", "continue", "FileInfo", "fileInfo", "new", "FileInfo", "file_id", "mi1", "getPath", "mi1", "getProject", "mi2", "getPath", "mi2", "getProject", "sim", "bufferList", "add", "fileInfo", "if", "bufferList", "size", "insertToDB", "if", "file_id", "logInterval", "log", "info", "String", "format", "file_id", "f", "total", "if", "bufferList", "size", "insertToDB", "catch", "Exception", "e", "log", "error", "e", "getMessage" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\FileInfo2DB2.java",
  "startLine" : 186,
  "endLine" : 204,
  "identifiers" : [ "try", "if", "bufferList", "size", "SqlSession", "session", "sqlSessionFactory", "openSession", "FileInfoMapper", "fileInfoMapper", "session", "getMapper", "FileInfoMapper", "class", "fileInfoMapper", "insertList", "bufferList", "Config", "fileInfoTbName", "session", "commit", "session", "close", "catch", "Exception", "e", "log", "error", "e", "getMessage", "finally", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\FileOPInfo2DB.java",
  "startLine" : 32,
  "endLine" : 50,
  "identifiers" : [ "Config", "load", "String", "resource", "Properties", "prop", "Config", "getProperties", "try", "InputStream", "inputStream", "Resources", "getResourceAsStream", "resource", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "prop", "SqlSession", "session", "sqlSessionFactory", "openSession", "FileOpOriMapper", "mapper", "session", "getMapper", "FileOpOriMapper", "class", "mapper", "dropTable", "Config", "fileOPInfoTbName", "mapper", "createTable", "Config", "fileOPInfoTbName", "session", "commit", "session", "close", "log", "info", "catch", "Exception", "e", "log", "error", "e", "toString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\FileOPInfo2DB.java",
  "startLine" : 52,
  "endLine" : 106,
  "identifiers" : [ "File", "csvFile", "new", "File", "Config", "infoFolder", "File", "separator", "Constants", "FileOPInfoStr", "if", "csvFile", "exists", "log", "error", "log", "error", "csvFile", "getAbsolutePath", "System", "exit", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "csvFile", "log", "info", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "log", "error", "log", "error", "str", "continue", "int", "k", "Integer", "id", "Integer", "parseInt", "ls", "k", "String", "path", "ls", "k", "String", "projectName", "ls", "k", "Integer", "isTencent", "Integer", "parseInt", "ls", "k", "String", "optype", "ls", "k", "FileOpOri", "fileOpOri", "new", "FileOpOri", "id", "path", "projectName", "isTencent", "optype", "bufferList", "add", "fileOpOri", "if", "bufferList", "size", "log", "info", "i", "insertToDB", "bufferedReader", "close", "catch", "IOException", "e", "e", "printStackTrace", "insertToDB", "log", "info" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\FileOPInfo2DB.java",
  "startLine" : 108,
  "endLine" : 126,
  "identifiers" : [ "try", "if", "bufferList", "size", "SqlSession", "session", "sqlSessionFactory", "openSession", "FileOpOriMapper", "mapper", "session", "getMapper", "FileOpOriMapper", "class", "mapper", "insertList", "bufferList", "Config", "fileOPInfoTbName", "session", "commit", "session", "close", "catch", "Exception", "e", "e", "printStackTrace", "finally", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 37,
  "endLine" : 51,
  "identifiers" : [ "long", "timeStart", "System", "currentTimeMillis", "Pipeline", "pipeline", "new", "Pipeline", "if", "args", "length", "pipeline", "reInsert", "true", "pipeline", "init", "if", "pipeline", "reInsert", "else", "pipeline", "readMeasureIndex", "long", "timeEnd", "System", "currentTimeMillis", "System", "out", "printf", "DateUtil", "convert", "timeEnd", "timeStart" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 52,
  "endLine" : 77,
  "identifiers" : [ "Config", "load", "updateGroupId", "new", "UpdateGroupId", "log", "info", "String", "resource", "Properties", "prop", "Config", "getProperties", "try", "InputStream", "inputStream", "Resources", "getResourceAsStream", "resource", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "prop", "if", "reInsert", "SqlSession", "session", "sqlSessionFactory", "openSession", "MeasureIndexMapper", "measureIndexMapper", "session", "getMapper", "MeasureIndexMapper", "class", "measureIndexMapper", "dropTable", "Config", "measureIndexTbName", "measureIndexMapper", "createTable", "Config", "measureIndexTbName", "session", "commit", "session", "close", "log", "info", "new", "File", "Config", "errorMeasureIndexCSV", "getParentFile", "mkdirs", "printer", "new", "CSVPrinter", "new", "FileWriter", "Config", "errorMeasureIndexCSV", "CSVFormat", "DEFAULT", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 78,
  "endLine" : 165,
  "identifiers" : [ "File", "headerFile", "new", "File", "Config", "detectFolder", "File", "separator", "File", "separator", "Constants", "MeasureIndexStr", "if", "headerFile", "exists", "log", "error", "log", "error", "headerFile", "getAbsolutePath", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "headerFile", "log", "info", "total", "IOUtil", "getTotalLines", "headerFile", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "try", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "log", "error", "log", "error", "str", "continue", "Integer", "methodId", "Integer", "parseInt", "ls", "Integer", "groupId", "updateGroupId", "getGroupId", "methodId", "String", "path", "ls", "String", "projectName", "NameUtil", "getProjectName2", "path", "String", "relativePath", "path", "substring", "path", "indexOf", "projectName", "projectName", "length", "relativePath", "relativePath", "replaceAll", "Integer", "startLine", "Integer", "parseInt", "ls", "Integer", "endLine", "Integer", "parseInt", "ls", "List", "String", "lines", "FileUtil", "readLines", "path", "startLine", "endLine", "String", "code", "String", "join", "lines", "code", "CommentUtil", "removeComments2", "code", "Config", "language", "long", "hashVal", "SimHash", "computeOptimizedSimHashForString", "code", "long", "hashs", "SimHash", "divide", "hashVal", "MeasureIndex", "measureIndex", "new", "MeasureIndex", "methodId", "relativePath", "projectName", "startLine", "endLine", "groupId", "methodId", "hashs", "hashs", "if", "measureIndex", "isInsertable", "bufferList", "add", "measureIndex", "else", "try", "printer", "printRecord", "measureIndex", "getId", "measureIndex", "getPath", "measureIndex", "getProject", "measureIndex", "getStartLine", "measureIndex", "getEndLine", "measureIndex", "getGroupId", "measureIndex", "getMethodId", "printer", "flush", "catch", "IOException", "ex", "ex", "printStackTrace", "if", "bufferList", "size", "log", "info", "methodId", "total", "methodId", "f", "total", "insertToDB", "catch", "Exception", "e", "e", "printStackTrace", "bufferedReader", "close", "catch", "IOException", "e", "e", "printStackTrace", "insertToDB", "log", "info", "try", "printer", "close", "catch", "IOException", "e", "e", "printStackTrace", "checkStatus" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 167,
  "endLine" : 187,
  "identifiers" : [ "try", "if", "bufferList", "size", "SqlSession", "session", "sqlSessionFactory", "openSession", "MeasureIndexMapper", "measureIndexMapper", "session", "getMapper", "MeasureIndexMapper", "class", "measureIndexMapper", "insertList", "bufferList", "Config", "measureIndexTbName", "session", "commit", "session", "close", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "for", "MeasureIndex", "measureIndex", "bufferList", "printToErr", "measureIndex", "finally", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 188,
  "endLine" : 202,
  "identifiers" : [ "try", "printer", "printRecord", "measureIndex", "getId", "measureIndex", "getPath", "measureIndex", "getProject", "measureIndex", "getStartLine", "measureIndex", "getEndLine", "measureIndex", "getGroupId", "measureIndex", "getMethodId", "printer", "flush", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 204,
  "endLine" : 213,
  "identifiers" : [ "SqlSession", "session", "sqlSessionFactory", "openSession", "MeasureIndexMapper", "measureIndexMapper", "session", "getMapper", "MeasureIndexMapper", "class", "int", "tbCnt", "measureIndexMapper", "selectCnt", "Config", "measureIndexTbName", "log", "info", "total", "log", "info", "Config", "measureIndexTbName", "tbCnt", "session", "commit", "session", "close" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\ProjInfo2DB.java",
  "startLine" : 34,
  "endLine" : 52,
  "identifiers" : [ "Config", "load", "String", "resource", "Properties", "prop", "Config", "getProperties", "try", "InputStream", "inputStream", "Resources", "getResourceAsStream", "resource", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "prop", "SqlSession", "session", "sqlSessionFactory", "openSession", "ProjectInfoMapper", "projectInfoMapper", "session", "getMapper", "ProjectInfoMapper", "class", "projectInfoMapper", "dropTable", "Config", "projInfoTbName", "projectInfoMapper", "createTable", "Config", "projInfoTbName", "session", "commit", "session", "close", "log", "info", "catch", "Exception", "e", "log", "error", "e", "toString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\ProjInfo2DB.java",
  "startLine" : 53,
  "endLine" : 116,
  "identifiers" : [ "File", "csvFile", "new", "File", "Config", "infoFolder", "File", "separator", "Constants", "ProjectInfoStr", "if", "csvFile", "exists", "log", "error", "log", "error", "csvFile", "getAbsolutePath", "System", "exit", "int", "total", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "csvFile", "log", "info", "total", "IOUtil", "getTotalLines", "csvFile", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "log", "error", "log", "error", "str", "continue", "int", "k", "Integer", "id", "Integer", "parseInt", "ls", "k", "String", "targetProject", "ls", "k", "Integer", "tProjFileNum", "Integer", "parseInt", "ls", "k", "Integer", "tProjCloneFileNum", "Integer", "parseInt", "ls", "k", "String", "relatedProject", "ls", "k", "Integer", "rTCloneFileNum", "Integer", "parseInt", "ls", "k", "Double", "avgSim", "Double", "parseDouble", "ls", "k", "ProjectInfo", "projectInfo", "new", "ProjectInfo", "id", "targetProject", "tProjFileNum", "tProjCloneFileNum", "relatedProject", "rTCloneFileNum", "avgSim", "bufferList", "add", "projectInfo", "if", "bufferList", "size", "log", "info", "i", "total", "insertToDB", "bufferedReader", "close", "catch", "IOException", "e", "e", "printStackTrace", "insertToDB", "log", "info", "checkStatus", "total" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\ProjInfo2DB.java",
  "startLine" : 118,
  "endLine" : 136,
  "identifiers" : [ "try", "if", "bufferList", "size", "SqlSession", "session", "sqlSessionFactory", "openSession", "ProjectInfoMapper", "mapper", "session", "getMapper", "ProjectInfoMapper", "class", "mapper", "insertList", "bufferList", "Config", "projInfoTbName", "session", "commit", "session", "close", "catch", "Exception", "e", "e", "printStackTrace", "finally", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\main\\java\\ProjInfo2DB.java",
  "startLine" : 137,
  "endLine" : 146,
  "identifiers" : [ "SqlSession", "session", "sqlSessionFactory", "openSession", "ProjectInfoMapper", "mapper", "session", "getMapper", "ProjectInfoMapper", "class", "int", "tbCnt", "mapper", "selectCnt", "Config", "projInfoTbName", "log", "info", "total", "log", "info", "Config", "projInfoTbName", "tbCnt", "session", "commit", "session", "close" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\DBInsertion\\src\\test\\java\\TotalCloneLineInsertionRedis.java",
  "startLine" : 31,
  "endLine" : 85,
  "identifiers" : [ "File", "headerFile", "new", "File", "Config", "detectFolder", "File", "separator", "File", "separator", "Constants", "MeasureIndexStr", "if", "headerFile", "exists", "log", "error", "log", "error", "headerFile", "getAbsolutePath", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "headerFile", "log", "info", "int", "i", "String", "cache", "null", "int", "cacheLine", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "log", "error", "log", "error", "str", "continue", "Integer", "methodId", "Integer", "parseInt", "ls", "String", "path", "ls", "if", "path", "length", "continue", "Integer", "startLine", "Integer", "parseInt", "ls", "Integer", "endLine", "Integer", "parseInt", "ls", "if", "cache", "null", "cache", "path", "cacheLine", "endLine", "startLine", "else", "if", "cache", "equals", "path", "cacheLine", "endLine", "startLine", "else", "insertToRedis", "cache", "cacheLine", "cache", "path", "cacheLine", "endLine", "startLine", "bufferedReader", "close", "insertToRedis", "cache", "cacheLine", "catch", "IOException", "e", "e", "printStackTrace", "log", "info" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\config\\Config.java",
  "startLine" : 27,
  "endLine" : 34,
  "identifiers" : [ "properties", "setProperty", "String", "valueOf", "threadNum", "properties", "setProperty", "csvFolder", "properties", "setProperty", "detectFolder", "properties", "setProperty", "extentions", "properties", "setProperty", "dataset", "properties", "store", "new", "FileWriter", "CONFIG_FILE", "COMMENT" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\config\\Config.java",
  "startLine" : 39,
  "endLine" : 60,
  "identifiers" : [ "try", "if", "new", "File", "CONFIG_FILE", "exists", "properties", "load", "new", "FileReader", "CONFIG_FILE", "threadNum", "Integer", "parseInt", "properties", "getProperty", "csvFolder", "properties", "getProperty", "detectFolder", "properties", "getProperty", "extentions", "properties", "getProperty", "extentionArray", "extentions", "split", "dataset", "properties", "getProperty", "for", "int", "i", "i", "extentionArray", "length", "i", "extentionArray", "i", "extentionArray", "i", "else", "save", "System", "out", "println", "CONFIG_FILE", "System", "exit", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\keyword\\KeyWordMap.java",
  "startLine" : 18,
  "endLine" : 43,
  "identifiers" : [ "Map", "String", "Integer", "keywordmap", "new", "HashMap", "List", "String", "keywordList", "new", "ArrayList", "keywordList", "add", "COPYRIGHT", "keywordList", "add", "APACHE", "keywordList", "add", "BSD", "keywordList", "add", "TWOCLAUSE", "keywordList", "add", "THREECLAUSE", "keywordList", "add", "GNU", "keywordList", "add", "GENERAL", "keywordList", "add", "PUBLIC", "keywordList", "add", "LESSER", "keywordList", "add", "GPL", "keywordList", "add", "AFFERO", "keywordList", "add", "MOZILLA", "keywordList", "add", "MIT", "keywordList", "add", "LICENSE", "keywordList", "add", "TENCENT", "for", "String", "keyword", "keywordList", "keywordmap", "put", "keyword", "return", "keywordmap" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\tfworkers\\DirReaderRepoProducer.java",
  "startLine" : 30,
  "endLine" : 56,
  "identifiers" : [ "List", "File", "bufferList", "new", "ArrayList", "if", "datasetFile", "isDirectory", "File", "authorFileArra", "datasetFile", "listFiles", "for", "File", "authorFile", "authorFileArra", "if", "authorFile", "isDirectory", "File", "repoFileArra", "authorFile", "listFiles", "for", "File", "repoFile", "repoFileArra", "if", "repoFile", "isDirectory", "bufferList", "add", "repoFile", "if", "bufferList", "size", "maxGroupSize", "this", "put", "bufferList", "if", "bufferList", "size", "this", "put", "bufferList", "for", "int", "k", "k", "Config", "threadNum", "k", "this", "putEnd", "log", "info", "this", "getName" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\tfworkers\\DirReaderRepoProducer.java",
  "startLine" : 57,
  "endLine" : 76,
  "identifiers" : [ "boolean", "succeed", "false", "if", "flist", "size", "ArrayList", "File", "out", "new", "ArrayList", "flist", "size", "out", "addAll", "flist", "do", "try", "this", "output", "put", "out", "succeed", "true", "catch", "InterruptedException", "var5", "var5", "printStackTrace", "while", "succeed", "log", "info", "this", "getName", "totalRepo", "addAndGet", "flist", "size", "flist", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\tfworkers\\DirReaderRepoProducer.java",
  "startLine" : 78,
  "endLine" : 89,
  "identifiers" : [ "boolean", "succeed", "false", "ArrayList", "File", "out", "new", "ArrayList", "do", "try", "this", "output", "put", "out", "succeed", "true", "catch", "InterruptedException", "var5", "var5", "printStackTrace", "while", "succeed" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\tfworkers\\FileConsumerOutputer.java",
  "startLine" : 24,
  "endLine" : 36,
  "identifiers" : [ "this", "fileOfRepo", "fileOfRepo", "this", "numPoisons", "try", "this", "csvWriter", "new", "BufferedWriter", "new", "OutputStreamWriter", "new", "FileOutputStream", "outCSVFile", "this", "txtWriter", "new", "BufferedWriter", "new", "OutputStreamWriter", "new", "FileOutputStream", "outTxtFile", "catch", "UnsupportedEncodingException", "e", "e", "printStackTrace", "catch", "FileNotFoundException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\tfworkers\\FileConsumerOutputer.java",
  "startLine" : 38,
  "endLine" : 66,
  "identifiers" : [ "List", "FileOPInfo", "b", "null", "while", "true", "while", "true", "try", "b", "this", "fileOfRepo", "take", "break", "catch", "InterruptedException", "var5", "if", "b", "size", "this", "numPoisons", "if", "this", "numPoisons", "Config", "threadNum", "try", "this", "csvWriter", "close", "this", "txtWriter", "close", "catch", "IOException", "var3", "var3", "printStackTrace", "return", "else", "this", "writeParseResult", "b" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\tfworkers\\FileConsumerOutputer.java",
  "startLine" : 67,
  "endLine" : 90,
  "identifiers" : [ "List", "String", "path2DetectList", "new", "ArrayList", "for", "FileOPInfo", "fileOPInfo", "fileList", "if", "fileOPInfo", "getIsTencent", "path2DetectList", "add", "fileOPInfo", "getPath", "try", "csvWriter", "write", "fileOPInfo", "toString", "catch", "IOException", "e", "e", "printStackTrace", "fileList", "clear", "if", "path2DetectList", "size", "for", "String", "path", "path2DetectList", "try", "txtWriter", "write", "path", "catch", "IOException", "e", "e", "printStackTrace", "path2DetectList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\tfworkers\\RepoConsumerFileProducer.java",
  "startLine" : 40,
  "endLine" : 134,
  "identifiers" : [ "List", "lfile", "null", "while", "true", "while", "true", "try", "lfile", "this", "input", "take", "break", "catch", "InterruptedException", "var7", "if", "lfile", "size", "this", "putEnd", "return", "Iterator", "var4", "lfile", "iterator", "while", "var4", "hasNext", "File", "repoFile", "File", "var4", "next", "Filetraves", "filetraves", "new", "FiletravesNIOimpl", "repoFile", "getAbsolutePath", "List", "File", "fileList", "filetraves", "directoryAllFileList", "List", "FileOPInfo", "fileOPInfoList", "new", "ArrayList", "fileList", "size", "for", "File", "file", "fileList", "try", "String", "projectName", "getProjectName", "file", "getAbsolutePath", "String", "path", "file", "getAbsolutePath", "if", "isGoAndContainsKeyword", "path", "OPType", "opType", "OPType", "Keyword", "Integer", "isTencent", "FileOPInfo", "fileOPInfo", "new", "FileOPInfo", "idgen", "addAndGet", "file", "getAbsolutePath", "projectName", "isTencent", "opType", "fileOPInfoList", "add", "fileOPInfo", "else", "if", "isJsAndMatchPattern", "path", "OPType", "opType", "OPType", "Keyword", "Integer", "isTencent", "FileOPInfo", "fileOPInfo", "new", "FileOPInfo", "idgen", "addAndGet", "file", "getAbsolutePath", "projectName", "isTencent", "opType", "fileOPInfoList", "add", "fileOPInfo", "else", "String", "codeStr", "FileUtils", "readFileToString", "file", "String", "handled", "if", "file", "getName", "endsWith", "handled", "GetCommentPy", "get_Note", "codeStr", "toLowerCase", "else", "handled", "GetComment", "get_Note", "codeStr", "toLowerCase", "OPType", "opType", "OPClassifyUtil", "getOPType", "handled", "Integer", "isTencent", "OPClassifyUtil", "isTencentFile", "opType", "FileOPInfo", "fileOPInfo", "new", "FileOPInfo", "idgen", "addAndGet", "file", "getAbsolutePath", "projectName", "isTencent", "opType", "fileOPInfoList", "add", "fileOPInfo", "codeStr", "catch", "IOException", "e", "continue", "if", "fileList", "size", "this", "put", "fileOPInfoList", "fileList", "clear", "fileList", "null", "log", "info", "this", "getName", "curRepo", "addAndGet", "lfile", "size", "totalRepo", "get" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\tfworkers\\RepoConsumerFileProducer.java",
  "startLine" : 135,
  "endLine" : 154,
  "identifiers" : [ "boolean", "succeed", "false", "if", "flist", "size", "ArrayList", "FileOPInfo", "out", "new", "ArrayList", "flist", "size", "out", "addAll", "flist", "do", "try", "this", "output", "put", "out", "succeed", "true", "catch", "InterruptedException", "var5", "var5", "printStackTrace", "while", "succeed", "flist", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\tfworkers\\RepoConsumerFileProducer.java",
  "startLine" : 156,
  "endLine" : 167,
  "identifiers" : [ "boolean", "succeed", "false", "ArrayList", "FileOPInfo", "out", "new", "ArrayList", "do", "try", "this", "output", "put", "out", "succeed", "true", "catch", "InterruptedException", "var5", "var5", "printStackTrace", "while", "succeed" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\tfworkers\\RepoConsumerFileProducer.java",
  "startLine" : 189,
  "endLine" : 205,
  "identifiers" : [ "boolean", "result", "false", "if", "path", "null", "path", "endsWith", "String", "pattern1", "String", "pattern2", "String", "pattern3", "boolean", "isMatch1", "path", "contains", "pattern1", "boolean", "isMatch2", "path", "contains", "pattern2", "boolean", "isMatch3", "path", "endsWith", "pattern3", "if", "isMatch1", "isMatch2", "isMatch3", "result", "true", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\TraveseFile.java",
  "startLine" : 31,
  "endLine" : 44,
  "identifiers" : [ "TraveseFile", "traveseFile", "new", "TraveseFile", "traveseFile", "init", "Instant", "start", "Instant", "now", "try", "traveseFile", "getAllFile", "catch", "InterruptedException", "e", "log", "error", "e", "Instant", "end", "Instant", "now", "Duration", "duration", "Duration", "between", "start", "end", "log", "info", "duration", "toString", "log", "info" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\TraveseFile.java",
  "startLine" : 53,
  "endLine" : 71,
  "identifiers" : [ "try", "Files", "deleteIfExists", "allFile", "toPath", "Files", "deleteIfExists", "txtFile", "toPath", "catch", "IOException", "e", "log", "error", "e", "if", "datasetFile", "exists", "datasetFile", "isDirectory", "log", "error", "log", "error", "System", "exit", "if", "allFile", "getParentFile", "exists", "allFile", "getParentFile", "mkdirs", "if", "txtFile", "getParentFile", "exists", "txtFile", "getParentFile", "mkdirs" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\TraveseFile.java",
  "startLine" : 72,
  "endLine" : 111,
  "identifiers" : [ "File", "datasetFile", "new", "File", "Config", "dataset", "File", "csvFile", "new", "File", "Config", "csvFolder", "File", "separator", "File", "txtFile", "new", "File", "Config", "detectFolder", "File", "separator", "File", "separator", "checkFile", "datasetFile", "csvFile", "txtFile", "BlockingQueue", "List", "File", "repoFileQueue", "new", "LinkedBlockingQueue", "BlockingQueue", "List", "FileOPInfo", "fileOPInfoQueue", "new", "LinkedBlockingQueue", "AtomicInteger", "totalRepo", "new", "AtomicInteger", "AtomicInteger", "curRepo", "new", "AtomicInteger", "AtomicInteger", "idgen", "new", "AtomicInteger", "DirReaderRepoProducer", "dirReader", "new", "DirReaderRepoProducer", "repoFileQueue", "datasetFile", "totalRepo", "dirReader", "setName", "List", "RepoConsumerFileProducer", "fileProducerList", "new", "ArrayList", "RepoConsumerFileProducer", "fileProducer", "null", "for", "int", "i", "i", "Config", "threadNum", "i", "fileProducer", "new", "RepoConsumerFileProducer", "repoFileQueue", "fileOPInfoQueue", "totalRepo", "curRepo", "idgen", "fileProducer", "setName", "i", "fileProducerList", "add", "fileProducer", "FileConsumerOutputer", "fileConsumerOutputer", "new", "FileConsumerOutputer", "fileOPInfoQueue", "csvFile", "txtFile", "dirReader", "start", "Iterator", "iterator", "fileProducerList", "iterator", "while", "iterator", "hasNext", "fileProducer", "RepoConsumerFileProducer", "iterator", "next", "fileProducer", "start", "iterator", "null", "fileConsumerOutputer", "start", "dirReader", "join", "iterator", "fileProducerList", "iterator", "while", "iterator", "hasNext", "fileProducer", "RepoConsumerFileProducer", "iterator", "next", "fileProducer", "join", "fileConsumerOutputer", "join" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\FiletravesNIOimpl.java",
  "startLine" : 39,
  "endLine" : 47,
  "identifiers" : [ "for", "String", "ext", "Config", "extentionArray", "if", "file", "toFile", "getName", "endsWith", "ext", "fileLists", "add", "file", "toFile", "break", "return", "super", "visitFile", "file", "attrs" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\GetComment.java",
  "startLine" : 37,
  "endLine" : 146,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "State", "state", "State", "CODE", "for", "int", "i", "i", "strToHandle", "length", "i", "char", "c", "strToHandle", "charAt", "i", "switch", "state", "case", "CODE", "if", "c", "state", "State", "SLASH", "else", "if", "c", "state", "State", "CODE_CHAR", "else", "if", "c", "state", "State", "CODE", "else", "state", "State", "CODE_STRING", "break", "case", "STRING_ESCAPE_SEQUENCE", "state", "State", "CODE_STRING", "break", "default", "break", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\GetComment.java",
  "startLine" : 154,
  "endLine" : 174,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "try", "FileInputStream", "fis", "new", "FileInputStream", "inputFileName", "InputStreamReader", "dis", "new", "InputStreamReader", "fis", "BufferedReader", "reader", "new", "BufferedReader", "dis", "String", "s", "while", "s", "reader", "readLine", "null", "builder", "append", "s", "builder", "append", "reader", "close", "dis", "close", "fis", "close", "catch", "IOException", "e", "e", "printStackTrace", "System", "exit", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\GetComment.java",
  "startLine" : 181,
  "endLine" : 194,
  "identifiers" : [ "try", "FileOutputStream", "fos", "new", "FileOutputStream", "outputFileName", "OutputStreamWriter", "dos", "new", "OutputStreamWriter", "fos", "BufferedWriter", "writer", "new", "BufferedWriter", "dos", "writer", "write", "strHandled", "writer", "close", "dos", "close", "fos", "close", "System", "out", "println", "outputFileName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\GetComment.java",
  "startLine" : 200,
  "endLine" : 215,
  "identifiers" : [ "String", "in", "String", "out", "System", "out", "println", "String", "inputFileName", "in", "System", "out", "println", "String", "outputFileName", "out", "String", "strToHandle", "readFile", "inputFileName", "String", "strHandled", "get_Note", "strToHandle", "writeFile", "outputFileName", "strHandled" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\GetCommentPy.java",
  "startLine" : 27,
  "endLine" : 97,
  "identifiers" : [ "Stack", "Character", "cstack", "new", "Stack", "StringBuilder", "builder", "new", "StringBuilder", "State", "state", "State", "CODE", "for", "int", "i", "i", "strToHandle", "length", "i", "char", "c", "strToHandle", "charAt", "i", "switch", "state", "case", "CODE", "if", "c", "state", "State", "SHARP", "else", "if", "c", "c", "cstack", "push", "c", "if", "cstack", "size", "cstack", "clear", "state", "State", "SFULL", "else", "cstack", "clear", "state", "State", "CODE", "break", "case", "SFULL", "if", "c", "c", "cstack", "push", "c", "if", "cstack", "size", "cstack", "clear", "state", "State", "CODE", "else", "while", "cstack", "isEmpty", "builder", "append", "cstack", "pop", "cstack", "clear", "state", "State", "SFULL", "break", "default", "break", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\GetCommentPy.java",
  "startLine" : 105,
  "endLine" : 125,
  "identifiers" : [ "StringBuilder", "builder", "new", "StringBuilder", "try", "FileInputStream", "fis", "new", "FileInputStream", "inputFileName", "InputStreamReader", "dis", "new", "InputStreamReader", "fis", "BufferedReader", "reader", "new", "BufferedReader", "dis", "String", "s", "while", "s", "reader", "readLine", "null", "builder", "append", "s", "builder", "append", "reader", "close", "dis", "close", "fis", "close", "catch", "IOException", "e", "e", "printStackTrace", "System", "exit", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\GetCommentPy.java",
  "startLine" : 132,
  "endLine" : 145,
  "identifiers" : [ "try", "FileOutputStream", "fos", "new", "FileOutputStream", "outputFileName", "OutputStreamWriter", "dos", "new", "OutputStreamWriter", "fos", "BufferedWriter", "writer", "new", "BufferedWriter", "dos", "writer", "write", "strHandled", "writer", "close", "dos", "close", "fos", "close", "System", "out", "println", "outputFileName", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\GetCommentPy.java",
  "startLine" : 151,
  "endLine" : 166,
  "identifiers" : [ "String", "in", "String", "out", "System", "out", "println", "String", "inputFileName", "in", "System", "out", "println", "String", "outputFileName", "out", "String", "strToHandle", "readFile", "inputFileName", "String", "strHandled", "get_Note", "strToHandle", "writeFile", "outputFileName", "strHandled" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\IOUtils.java",
  "startLine" : 20,
  "endLine" : 41,
  "identifiers" : [ "File", "resultFile", "new", "File", "Config", "csvFolder", "File", "separator", "if", "bufferList", "size", "try", "FileWriter", "fw", "new", "FileWriter", "resultFile", "getAbsoluteFile", "true", "BufferedWriter", "bw", "new", "BufferedWriter", "fw", "Iterator", "FileOPInfo", "iterator", "bufferList", "iterator", "while", "iterator", "hasNext", "FileOPInfo", "fileOPInfo", "iterator", "next", "bw", "write", "fileOPInfo", "toString", "bw", "flush", "bw", "close", "catch", "Exception", "e", "e", "printStackTrace", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\NameUtil.java",
  "startLine" : 18,
  "endLine" : 41,
  "identifiers" : [ "String", "regex", "if", "File", "separator", "equals", "regex", "else", "regex", "String", "div_path", "path", "split", "regex", "String", "div_dir", "Config", "dataset", "split", "regex", "String", "mark", "div_dir", "div_dir", "length", "int", "index", "for", "int", "i", "i", "div_path", "length", "i", "if", "div_path", "i", "equals", "mark", "index", "i", "break", "if", "index", "index", "div_path", "length", "return", "div_path", "index", "div_path", "index", "else", "return" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\OPClassifyUtil.java",
  "startLine" : 18,
  "endLine" : 52,
  "identifiers" : [ "Map", "String", "Integer", "keywordmap", "KeyWordMap", "getKeywordMap", "StringTokenizer", "st", "new", "StringTokenizer", "inputComment", "while", "st", "hasMoreElements", "String", "token", "st", "nextToken", "if", "keywordmap", "containsKey", "token", "Integer", "count", "keywordmap", "get", "token", "keywordmap", "put", "token", "count", "if", "isApache2", "keywordmap", "return", "OPType", "Apache2", "else", "if", "isBSD2", "keywordmap", "return", "OPType", "BSD2Clause", "else", "if", "isBSD3", "keywordmap", "return", "OPType", "BSD3Clause", "else", "if", "isGPL", "keywordmap", "return", "OPType", "GPL", "else", "if", "isLGPL", "keywordmap", "return", "OPType", "LGPL3", "else", "if", "isLGPL21", "keywordmap", "return", "OPType", "LGPL21", "else", "if", "isAGPL3", "keywordmap", "return", "OPType", "AGPL3", "else", "if", "isMPL", "keywordmap", "return", "OPType", "MPL2", "else", "if", "isMIT", "keywordmap", "return", "OPType", "MIT", "else", "if", "isCopyrightNotT", "keywordmap", "return", "OPType", "Copyright", "else", "return", "OPType", "defaultCase" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\OPClassifyUtil.java",
  "startLine" : 62,
  "endLine" : 73,
  "identifiers" : [ "if", "keywordmap", "get", "COPYRIGHT", "keywordmap", "get", "APACHE", "keywordmap", "get", "LICENSE", "keywordmap", "get", "TENCENT", "return", "true", "else", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\OPClassifyUtil.java",
  "startLine" : 74,
  "endLine" : 83,
  "identifiers" : [ "if", "keywordmap", "get", "COPYRIGHT", "keywordmap", "get", "BSD", "keywordmap", "get", "TWOCLAUSE", "keywordmap", "get", "TENCENT", "return", "true", "else", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\OPClassifyUtil.java",
  "startLine" : 84,
  "endLine" : 93,
  "identifiers" : [ "if", "keywordmap", "get", "COPYRIGHT", "keywordmap", "get", "BSD", "keywordmap", "get", "THREECLAUSE", "keywordmap", "get", "TENCENT", "return", "true", "else", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\OPClassifyUtil.java",
  "startLine" : 94,
  "endLine" : 106,
  "identifiers" : [ "if", "keywordmap", "get", "COPYRIGHT", "keywordmap", "get", "LICENSE", "keywordmap", "get", "GNU", "keywordmap", "get", "GENERAL", "keywordmap", "get", "PUBLIC", "keywordmap", "get", "LESSER", "keywordmap", "get", "TENCENT", "return", "true", "else", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\OPClassifyUtil.java",
  "startLine" : 107,
  "endLine" : 119,
  "identifiers" : [ "if", "keywordmap", "get", "COPYRIGHT", "keywordmap", "get", "LICENSE", "keywordmap", "get", "GNU", "keywordmap", "get", "GENERAL", "keywordmap", "get", "PUBLIC", "keywordmap", "get", "LESSER", "keywordmap", "get", "TENCENT", "return", "true", "else", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\OPClassifyUtil.java",
  "startLine" : 120,
  "endLine" : 129,
  "identifiers" : [ "if", "keywordmap", "get", "COPYRIGHT", "keywordmap", "get", "LESSER", "keywordmap", "get", "GPL", "keywordmap", "get", "TENCENT", "return", "true", "else", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\OPClassifyUtil.java",
  "startLine" : 130,
  "endLine" : 142,
  "identifiers" : [ "if", "keywordmap", "get", "COPYRIGHT", "keywordmap", "get", "GNU", "keywordmap", "get", "AFFERO", "keywordmap", "get", "GENERAL", "keywordmap", "get", "PUBLIC", "keywordmap", "get", "LICENSE", "keywordmap", "get", "TENCENT", "return", "true", "else", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\OPClassifyUtil.java",
  "startLine" : 143,
  "endLine" : 153,
  "identifiers" : [ "if", "keywordmap", "get", "MOZILLA", "keywordmap", "get", "PUBLIC", "keywordmap", "get", "LICENSE", "keywordmap", "get", "TENCENT", "return", "true", "else", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\main\\java\\util\\OPClassifyUtil.java",
  "startLine" : 154,
  "endLine" : 164,
  "identifiers" : [ "if", "keywordmap", "get", "COPYRIGHT", "keywordmap", "get", "MIT", "keywordmap", "get", "LICENSE", "keywordmap", "get", "TENCENT", "return", "true", "else", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\OpenSourceFinder\\src\\test\\java\\OPClassification.java",
  "startLine" : 35,
  "endLine" : 73,
  "identifiers" : [ "File", "allFile", "new", "File", "Config", "csvFolder", "File", "separator", "log", "info", "int", "i", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "allFile", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "projectName", "getProjectName", "str", "String", "codeStr", "FileUtils", "readFileToString", "new", "File", "str", "String", "handled", "GetComment", "get_Note", "codeStr", "OPType", "opType", "OPClassifyUtil", "getOPType", "handled", "Integer", "isTencent", "OPClassifyUtil", "isTencentFile", "opType", "FileOPInfo", "fileOPInfo", "new", "FileOPInfo", "i", "str", "projectName", "isTencent", "opType", "bufferList", "add", "fileOPInfo", "if", "bufferList", "size", "IOUtils", "writeListAndClear", "bufferList", "log", "info", "i", "catch", "IOException", "e", "log", "info", "e", "if", "bufferList", "size", "IOUtils", "writeListAndClear", "bufferList" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\ResultConvertor\\src\\main\\java\\Pipeline.java",
  "startLine" : 24,
  "endLine" : 66,
  "identifiers" : [ "String", "outputStr", "Config", "RESULT_FOLDER", "File", "separator", "new", "File", "outputStr", "getParentFile", "mkdirs", "CSVPrinter", "printer", "new", "CSVPrinter", "new", "FileWriter", "outputStr", "CSVFormat", "DEFAULT", "File", "headerFile", "new", "File", "Config", "DETECT_FOLDER", "File", "separator", "File", "separator", "Config", "INPUT_FILE", "if", "headerFile", "exists", "log", "error", "log", "error", "headerFile", "getAbsolutePath", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "headerFile", "log", "info", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "continue", "String", "path", "ls", "if", "path", "length", "log", "error", "path", "log", "error", "path", "length", "continue", "String", "hashPath", "getHashPath", "path", "printer", "printRecord", "ls", "hashPath", "ls", "ls", "bufferedReader", "close", "catch", "IOException", "e", "e", "printStackTrace", "log", "info", "try", "printer", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\ResultConvertor\\src\\main\\java\\util\\Config.java",
  "startLine" : 28,
  "endLine" : 40,
  "identifiers" : [ "if", "new", "File", "CONFIG_FILE", "exists", "System", "out", "printf", "CONFIG_FILE", "save", "System", "exit", "properties", "load", "new", "FileReader", "CONFIG_FILE", "DETECT_FOLDER", "properties", "getProperty", "RESULT_FOLDER", "properties", "getProperty", "Dataset", "properties", "getProperty", "SpiltRegex", "properties", "getProperty" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\ResultConvertor\\src\\main\\java\\util\\HashUtil.java",
  "startLine" : 19,
  "endLine" : 51,
  "identifiers" : [ "data", "MessageDigest", "md", "MessageDigest", "getInstance", "byte", "b", "data", "getBytes", "md", "update", "b", "byte", "b2", "md", "digest", "int", "len", "b2", "length", "String", "str", "char", "ch", "str", "toCharArray", "char", "chs", "new", "char", "len", "for", "int", "i", "k", "i", "len", "i", "byte", "b3", "b2", "i", "chs", "k", "ch", "b3", "xf", "chs", "k", "ch", "b3", "xf", "return", "new", "String", "chs" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\ResultConvertor\\src\\main\\java\\util\\PathUtil.java",
  "startLine" : 8,
  "endLine" : 44,
  "identifiers" : [ "try", "String", "regex", "Config", "SpiltRegex", "String", "div_path", "path", "split", "regex", "String", "div_dir", "Config", "Dataset", "split", "regex", "String", "mark", "div_dir", "div_dir", "length", "int", "index", "for", "int", "i", "i", "div_path", "length", "i", "if", "div_path", "i", "equals", "mark", "index", "i", "break", "if", "index", "index", "div_path", "length", "String", "sep", "if", "Config", "SpiltRegex", "equals", "sep", "else", "sep", "String", "hashAuthor", "sha1", "div_path", "index", "String", "hashRepo", "sha1", "div_path", "index", "String", "hashWhole", "sha1", "path", "String", "result", "Config", "Dataset", "sep", "hashAuthor", "sep", "hashRepo", "sep", "hashWhole", "return", "result", "else", "return", "catch", "Exception", "e", "e", "printStackTrace", "return" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 824,
  "endLine" : 838,
  "identifiers" : [ "if", "mAllLoaderManagers", "null", "mAllLoaderManagers", "new", "HashMap", "String", "LoaderManagerImpl", "LoaderManagerImpl", "lm", "mAllLoaderManagers", "get", "who", "if", "lm", "null", "if", "create", "lm", "new", "LoaderManagerImpl", "who", "this", "started", "mAllLoaderManagers", "put", "who", "lm", "else", "lm", "updateActivity", "this", "return", "lm" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 879,
  "endLine" : 899,
  "identifiers" : [ "if", "DEBUG_LIFECYCLE", "Slog", "v", "TAG", "this", "savedInstanceState", "if", "mLastNonConfigurationInstances", "null", "mAllLoaderManagers", "mLastNonConfigurationInstances", "loaders", "if", "mActivityInfo", "parentActivityName", "null", "if", "mActionBar", "null", "mEnableDefaultActionBarUp", "true", "else", "mActionBar", "setDefaultDisplayHomeAsUpEnabled", "true", "if", "savedInstanceState", "null", "Parcelable", "p", "savedInstanceState", "getParcelable", "FRAGMENTS_TAG", "mFragments", "restoreAllState", "p", "mLastNonConfigurationInstances", "null", "mLastNonConfigurationInstances", "fragments", "null", "mFragments", "dispatchCreate", "getApplication", "dispatchActivityCreated", "this", "savedInstanceState", "mCalled", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 948,
  "endLine" : 973,
  "identifiers" : [ "final", "Bundle", "b", "savedInstanceState", "getBundle", "SAVED_DIALOGS_TAG", "if", "b", "null", "return", "final", "int", "ids", "b", "getIntArray", "SAVED_DIALOG_IDS_KEY", "final", "int", "numDialogs", "ids", "length", "mManagedDialogs", "new", "SparseArray", "ManagedDialog", "numDialogs", "for", "int", "i", "i", "numDialogs", "i", "final", "Integer", "dialogId", "ids", "i", "Bundle", "dialogState", "b", "getBundle", "savedDialogKeyFor", "dialogId", "if", "dialogState", "null", "final", "ManagedDialog", "md", "new", "ManagedDialog", "md", "mArgs", "b", "getBundle", "savedDialogArgsKeyFor", "dialogId", "md", "mDialog", "createDialog", "dialogId", "dialogState", "md", "mArgs", "if", "md", "mDialog", "null", "mManagedDialogs", "put", "dialogId", "md", "onPrepareDialog", "dialogId", "md", "mDialog", "md", "mArgs", "md", "mDialog", "onRestoreInstanceState", "dialogState" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 1028,
  "endLine" : 1043,
  "identifiers" : [ "if", "DEBUG_LIFECYCLE", "Slog", "v", "TAG", "this", "mCalled", "true", "if", "mLoadersStarted", "mLoadersStarted", "true", "if", "mLoaderManager", "null", "mLoaderManager", "doStart", "else", "if", "mCheckedForLoaderManager", "mLoaderManager", "getLoaderManager", "null", "mLoadersStarted", "false", "mCheckedForLoaderManager", "true", "getApplication", "dispatchActivityStarted", "this" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 1197,
  "endLine" : 1204,
  "identifiers" : [ "outState", "putBundle", "WINDOW_HIERARCHY_TAG", "mWindow", "saveHierarchyState", "Parcelable", "p", "mFragments", "saveAllState", "if", "p", "null", "outState", "putParcelable", "FRAGMENTS_TAG", "p", "getApplication", "dispatchActivitySaveInstanceState", "this", "outState" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 1211,
  "endLine" : 1238,
  "identifiers" : [ "if", "mManagedDialogs", "null", "return", "final", "int", "numDialogs", "mManagedDialogs", "size", "if", "numDialogs", "return", "Bundle", "dialogState", "new", "Bundle", "int", "ids", "new", "int", "mManagedDialogs", "size", "for", "int", "i", "i", "numDialogs", "i", "final", "int", "key", "mManagedDialogs", "keyAt", "i", "ids", "i", "key", "final", "ManagedDialog", "md", "mManagedDialogs", "valueAt", "i", "dialogState", "putBundle", "savedDialogKeyFor", "key", "md", "mDialog", "onSaveInstanceState", "if", "md", "mArgs", "null", "dialogState", "putBundle", "savedDialogArgsKeyFor", "key", "md", "mArgs", "dialogState", "putIntArray", "SAVED_DIALOG_IDS_KEY", "ids", "outState", "putBundle", "SAVED_DIALOGS_TAG", "dialogState" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 1415,
  "endLine" : 1449,
  "identifiers" : [ "if", "DEBUG_LIFECYCLE", "Slog", "v", "TAG", "this", "mCalled", "true", "if", "mManagedDialogs", "null", "final", "int", "numDialogs", "mManagedDialogs", "size", "for", "int", "i", "i", "numDialogs", "i", "final", "ManagedDialog", "md", "mManagedDialogs", "valueAt", "i", "if", "md", "mDialog", "isShowing", "md", "mDialog", "dismiss", "mManagedDialogs", "null", "synchronized", "mManagedCursors", "int", "numCursors", "mManagedCursors", "size", "for", "int", "i", "i", "numCursors", "i", "ManagedCursor", "c", "mManagedCursors", "get", "i", "if", "c", "null", "c", "mCursor", "close", "mManagedCursors", "clear", "if", "mSearchManager", "null", "mSearchManager", "stopSearch", "getApplication", "dispatchActivityDestroyed", "this" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 1467,
  "endLine" : 1483,
  "identifiers" : [ "if", "DEBUG_LIFECYCLE", "Slog", "v", "TAG", "this", "newConfig", "mCalled", "true", "mFragments", "dispatchConfigurationChanged", "newConfig", "if", "mWindow", "null", "mWindow", "onConfigurationChanged", "newConfig", "if", "mActionBar", "null", "mActionBar", "onConfigurationChanged", "newConfig" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 1619,
  "endLine" : 1651,
  "identifiers" : [ "Object", "activity", "onRetainNonConfigurationInstance", "HashMap", "String", "Object", "children", "onRetainNonConfigurationChildInstances", "ArrayList", "Fragment", "fragments", "mFragments", "retainNonConfig", "boolean", "retainLoaders", "false", "if", "mAllLoaderManagers", "null", "LoaderManagerImpl", "loaders", "new", "LoaderManagerImpl", "mAllLoaderManagers", "size", "mAllLoaderManagers", "values", "toArray", "loaders", "if", "loaders", "null", "for", "int", "i", "i", "loaders", "length", "i", "LoaderManagerImpl", "lm", "loaders", "i", "if", "lm", "mRetaining", "retainLoaders", "true", "else", "lm", "doDestroy", "mAllLoaderManagers", "remove", "lm", "mWho", "if", "activity", "null", "children", "null", "fragments", "null", "retainLoaders", "return", "null", "NonConfigurationInstances", "nci", "new", "NonConfigurationInstances", "nci", "activity", "activity", "nci", "children", "children", "nci", "fragments", "fragments", "nci", "loaders", "mAllLoaderManagers", "return", "nci" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 1824,
  "endLine" : 1835,
  "identifiers" : [ "synchronized", "mManagedCursors", "final", "int", "N", "mManagedCursors", "size", "for", "int", "i", "i", "N", "i", "ManagedCursor", "mc", "mManagedCursors", "get", "i", "if", "mc", "mCursor", "c", "mManagedCursors", "remove", "i", "break" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 1870,
  "endLine" : 1883,
  "identifiers" : [ "Window", "window", "getWindow", "window", "getDecorView", "if", "isChild", "window", "hasFeature", "Window", "FEATURE_ACTION_BAR", "mActionBar", "null", "return", "mActionBar", "new", "ActionBarImpl", "this", "mActionBar", "setDefaultDisplayHomeAsUpEnabled", "mEnableDefaultActionBarUp" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 2024,
  "endLine" : 2043,
  "identifiers" : [ "mDefaultKeyMode", "mode", "switch", "mode", "case", "DEFAULT_KEYS_DISABLE", "case", "DEFAULT_KEYS_SHORTCUT", "mDefaultKeySsb", "null", "break", "case", "DEFAULT_KEYS_DIALER", "case", "DEFAULT_KEYS_SEARCH_LOCAL", "case", "DEFAULT_KEYS_SEARCH_GLOBAL", "mDefaultKeySsb", "new", "SpannableStringBuilder", "Selection", "setSelection", "mDefaultKeySsb", "break", "default", "throw", "new", "IllegalArgumentException" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 2071,
  "endLine" : 2128,
  "identifiers" : [ "if", "keyCode", "KeyEvent", "KEYCODE_BACK", "if", "getApplicationInfo", "targetSdkVersion", "Build", "VERSION_CODES", "ECLAIR", "event", "startTracking", "else", "onBackPressed", "return", "true", "if", "mDefaultKeyMode", "DEFAULT_KEYS_DISABLE", "return", "false", "else", "if", "mDefaultKeyMode", "DEFAULT_KEYS_SHORTCUT", "if", "getWindow", "performPanelShortcut", "Window", "FEATURE_OPTIONS_PANEL", "keyCode", "event", "Menu", "FLAG_ALWAYS_PERFORM_CLOSE", "return", "true", "return", "false", "else", "boolean", "clearSpannable", "false", "boolean", "handled", "if", "event", "getRepeatCount", "event", "isSystem", "clearSpannable", "true", "handled", "false", "else", "handled", "TextKeyListener", "getInstance", "onKeyDown", "null", "mDefaultKeySsb", "keyCode", "event", "if", "handled", "mDefaultKeySsb", "length", "final", "String", "str", "mDefaultKeySsb", "toString", "clearSpannable", "true", "switch", "mDefaultKeyMode", "case", "DEFAULT_KEYS_DIALER", "Intent", "intent", "new", "Intent", "Intent", "ACTION_DIAL", "Uri", "parse", "str", "intent", "addFlags", "Intent", "FLAG_ACTIVITY_NEW_TASK", "startActivity", "intent", "break", "case", "DEFAULT_KEYS_SEARCH_LOCAL", "startSearch", "str", "false", "null", "false", "break", "case", "DEFAULT_KEYS_SEARCH_GLOBAL", "startSearch", "str", "false", "null", "true", "break", "if", "clearSpannable", "mDefaultKeySsb", "clear", "mDefaultKeySsb", "clearSpans", "Selection", "setSelection", "mDefaultKeySsb", "return", "handled" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 2381,
  "endLine" : 2391,
  "identifiers" : [ "onUserInteraction", "Window", "win", "getWindow", "if", "win", "superDispatchKeyEvent", "event", "return", "true", "View", "decor", "mDecor", "if", "decor", "null", "decor", "win", "getDecorView", "return", "event", "dispatch", "this", "decor", "null", "decor", "getKeyDispatcherState", "null", "this" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 2466,
  "endLine" : 2481,
  "identifiers" : [ "event", "setClassName", "getClass", "getName", "event", "setPackageName", "getPackageName", "LayoutParams", "params", "getWindow", "getAttributes", "boolean", "isFullScreen", "params", "width", "LayoutParams", "MATCH_PARENT", "params", "height", "LayoutParams", "MATCH_PARENT", "event", "setFullScreen", "isFullScreen", "CharSequence", "title", "getTitle", "if", "TextUtils", "isEmpty", "title", "event", "getText", "add", "title", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 2555,
  "endLine" : 2594,
  "identifiers" : [ "CharSequence", "titleCondensed", "item", "getTitleCondensed", "switch", "featureId", "case", "Window", "FEATURE_OPTIONS_PANEL", "if", "titleCondensed", "null", "EventLog", "writeEvent", "titleCondensed", "toString", "if", "onOptionsItemSelected", "item", "return", "true", "if", "mFragments", "dispatchOptionsItemSelected", "item", "return", "true", "if", "item", "getItemId", "android", "R", "id", "home", "mActionBar", "null", "mActionBar", "getDisplayOptions", "ActionBar", "DISPLAY_HOME_AS_UP", "if", "mParent", "null", "return", "onNavigateUp", "else", "return", "mParent", "onNavigateUpFromChild", "this", "return", "false", "case", "Window", "FEATURE_CONTEXT_MENU", "if", "titleCondensed", "null", "EventLog", "writeEvent", "titleCondensed", "toString", "if", "onContextItemSelected", "item", "return", "true", "return", "mFragments", "dispatchContextItemSelected", "item", "default", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 2605,
  "endLine" : 2621,
  "identifiers" : [ "switch", "featureId", "case", "Window", "FEATURE_OPTIONS_PANEL", "mFragments", "dispatchOptionsMenuClosed", "menu", "onOptionsMenuClosed", "menu", "break", "case", "Window", "FEATURE_CONTEXT_MENU", "onContextMenuClosed", "menu", "break", "case", "Window", "FEATURE_ACTION_BAR", "initActionBar", "mActionBar", "dispatchMenuVisibilityChanged", "false", "break" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 2740,
  "endLine" : 2771,
  "identifiers" : [ "Intent", "upIntent", "getParentActivityIntent", "if", "upIntent", "null", "if", "mActivityInfo", "taskAffinity", "null", "finish", "else", "if", "shouldUpRecreateTask", "upIntent", "TaskStackBuilder", "b", "TaskStackBuilder", "create", "this", "onCreateNavigateUpTaskStack", "b", "onPrepareNavigateUpTaskStack", "b", "b", "startActivities", "if", "mResultCode", "RESULT_CANCELED", "mResultData", "null", "Log", "i", "TAG", "finish", "else", "finishAffinity", "else", "navigateUpTo", "upIntent", "return", "true", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 3075,
  "endLine" : 3093,
  "identifiers" : [ "if", "mManagedDialogs", "null", "mManagedDialogs", "new", "SparseArray", "ManagedDialog", "ManagedDialog", "md", "mManagedDialogs", "get", "id", "if", "md", "null", "md", "new", "ManagedDialog", "md", "mDialog", "createDialog", "id", "null", "args", "if", "md", "mDialog", "null", "return", "false", "mManagedDialogs", "put", "id", "md", "md", "mArgs", "args", "onPrepareDialog", "id", "md", "mDialog", "args", "md", "mDialog", "show", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 3388,
  "endLine" : 3418,
  "identifiers" : [ "if", "mParent", "null", "Instrumentation", "ActivityResult", "ar", "mInstrumentation", "execStartActivity", "this", "mMainThread", "getApplicationThread", "mToken", "this", "intent", "requestCode", "options", "if", "ar", "null", "mMainThread", "sendActivityResult", "mToken", "mEmbeddedID", "requestCode", "ar", "getResultCode", "ar", "getResultData", "if", "requestCode", "mStartedActivity", "true", "else", "if", "options", "null", "mParent", "startActivityFromChild", "this", "intent", "requestCode", "options", "else", "mParent", "startActivityFromChild", "this", "intent", "requestCode" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 3430,
  "endLine" : 3443,
  "identifiers" : [ "if", "mParent", "null", "throw", "new", "RuntimeException", "Instrumentation", "ActivityResult", "ar", "mInstrumentation", "execStartActivity", "this", "mMainThread", "getApplicationThread", "mToken", "this", "intent", "options", "user", "if", "ar", "null", "mMainThread", "sendActivityResult", "mToken", "mEmbeddedID", "ar", "getResultCode", "ar", "getResultData" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 3494,
  "endLine" : 3507,
  "identifiers" : [ "if", "mParent", "null", "startIntentSenderForResultInner", "intent", "requestCode", "fillInIntent", "flagsMask", "flagsValues", "this", "options", "else", "if", "options", "null", "mParent", "startIntentSenderFromChild", "this", "intent", "requestCode", "fillInIntent", "flagsMask", "flagsValues", "extraFlags", "options", "else", "mParent", "startIntentSenderFromChild", "this", "intent", "requestCode", "fillInIntent", "flagsMask", "flagsValues", "extraFlags" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 3512,
  "endLine" : 3540,
  "identifiers" : [ "try", "String", "resolvedType", "null", "if", "fillInIntent", "null", "fillInIntent", "migrateExtraStreamToClipData", "fillInIntent", "prepareToLeaveProcess", "resolvedType", "fillInIntent", "resolveTypeIfNeeded", "getContentResolver", "int", "result", "ActivityManagerNative", "getDefault", "startActivityIntentSender", "mMainThread", "getApplicationThread", "intent", "fillInIntent", "resolvedType", "mToken", "activity", "mEmbeddedID", "requestCode", "flagsMask", "flagsValues", "options", "if", "result", "ActivityManager", "START_CANCELED", "throw", "new", "IntentSender", "SendIntentException", "Instrumentation", "checkStartActivityResult", "result", "null", "catch", "RemoteException", "e", "if", "requestCode", "mStartedActivity", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 3738,
  "endLine" : 3771,
  "identifiers" : [ "if", "mParent", "null", "int", "result", "ActivityManager", "START_RETURN_INTENT_TO_CALLER", "try", "intent", "migrateExtraStreamToClipData", "intent", "prepareToLeaveProcess", "result", "ActivityManagerNative", "getDefault", "startActivity", "mMainThread", "getApplicationThread", "getBasePackageName", "intent", "intent", "resolveTypeIfNeeded", "getContentResolver", "mToken", "mEmbeddedID", "requestCode", "ActivityManager", "START_FLAG_ONLY_IF_NEEDED", "null", "null", "options", "catch", "RemoteException", "e", "Instrumentation", "checkStartActivityResult", "result", "intent", "if", "requestCode", "mStartedActivity", "true", "return", "result", "ActivityManager", "START_RETURN_INTENT_TO_CALLER", "throw", "new", "UnsupportedOperationException" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 3810,
  "endLine" : 3825,
  "identifiers" : [ "if", "mParent", "null", "try", "intent", "migrateExtraStreamToClipData", "intent", "prepareToLeaveProcess", "return", "ActivityManagerNative", "getDefault", "startNextMatchingActivity", "mToken", "intent", "options", "catch", "RemoteException", "e", "return", "false", "throw", "new", "UnsupportedOperationException" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 3865,
  "endLine" : 3875,
  "identifiers" : [ "Instrumentation", "ActivityResult", "ar", "mInstrumentation", "execStartActivity", "this", "mMainThread", "getApplicationThread", "mToken", "child", "intent", "requestCode", "options", "if", "ar", "null", "mMainThread", "sendActivityResult", "mToken", "child", "mEmbeddedID", "requestCode", "ar", "getResultCode", "ar", "getResultData" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 3916,
  "endLine" : 3926,
  "identifiers" : [ "Instrumentation", "ActivityResult", "ar", "mInstrumentation", "execStartActivity", "this", "mMainThread", "getApplicationThread", "mToken", "fragment", "intent", "requestCode", "options", "if", "ar", "null", "mMainThread", "sendActivityResult", "mToken", "fragment", "mWho", "requestCode", "ar", "getResultCode", "ar", "getResultData" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 4148,
  "endLine" : 4156,
  "identifiers" : [ "if", "mParent", "null", "throw", "new", "IllegalStateException", "if", "Looper", "myLooper", "mMainThread", "getLooper", "throw", "new", "IllegalStateException", "mMainThread", "requestRelaunchActivity", "mToken", "null", "null", "false", "null", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 4163,
  "endLine" : 4186,
  "identifiers" : [ "if", "mParent", "null", "int", "resultCode", "Intent", "resultData", "synchronized", "this", "resultCode", "mResultCode", "resultData", "mResultData", "if", "false", "Log", "v", "TAG", "mToken", "try", "if", "resultData", "null", "resultData", "prepareToLeaveProcess", "if", "ActivityManagerNative", "getDefault", "finishActivity", "mToken", "resultCode", "resultData", "mFinished", "true", "catch", "RemoteException", "e", "else", "mParent", "finishFromChild", "this" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 4202,
  "endLine" : 4216,
  "identifiers" : [ "if", "mParent", "null", "throw", "new", "IllegalStateException", "if", "mResultCode", "RESULT_CANCELED", "mResultData", "null", "throw", "new", "IllegalStateException", "try", "if", "ActivityManagerNative", "getDefault", "finishActivityAffinity", "mToken", "mFinished", "true", "catch", "RemoteException", "e" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 4323,
  "endLine" : 4338,
  "identifiers" : [ "String", "packageName", "getPackageName", "try", "data", "prepareToLeaveProcess", "IIntentSender", "target", "ActivityManagerNative", "getDefault", "getIntentSender", "ActivityManager", "INTENT_SENDER_ACTIVITY_RESULT", "packageName", "mParent", "null", "mToken", "mParent", "mToken", "mEmbeddedID", "requestCode", "new", "Intent", "data", "null", "flags", "null", "UserHandle", "myUserId", "return", "target", "null", "new", "PendingIntent", "target", "null", "catch", "RemoteException", "e", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 4443,
  "endLine" : 4452,
  "identifiers" : [ "final", "String", "pkg", "getPackageName", "final", "String", "cls", "mComponent", "getClassName", "int", "packageLen", "pkg", "length", "if", "cls", "startsWith", "pkg", "cls", "length", "packageLen", "cls", "charAt", "packageLen", "return", "cls", "return", "cls", "substring", "packageLen" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 4490,
  "endLine" : 4503,
  "identifiers" : [ "if", "getBaseContext", "null", "throw", "new", "IllegalStateException", "if", "WINDOW_SERVICE", "equals", "name", "return", "mWindowManager", "else", "if", "SEARCH_SERVICE", "equals", "name", "ensureSearchManager", "return", "mSearchManager", "return", "super", "getSystemService", "name" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 4702,
  "endLine" : 4779,
  "identifiers" : [ "if", "equals", "name", "return", "onCreateView", "name", "context", "attrs", "String", "fname", "attrs", "getAttributeValue", "null", "TypedArray", "a", "context", "obtainStyledAttributes", "attrs", "com", "android", "internal", "R", "styleable", "Fragment", "if", "fname", "null", "fname", "a", "getString", "com", "android", "internal", "R", "styleable", "Fragment_name", "int", "id", "a", "getResourceId", "com", "android", "internal", "R", "styleable", "Fragment_id", "View", "NO_ID", "String", "tag", "a", "getString", "com", "android", "internal", "R", "styleable", "Fragment_tag", "a", "recycle", "int", "containerId", "parent", "null", "parent", "getId", "if", "containerId", "View", "NO_ID", "id", "View", "NO_ID", "tag", "null", "throw", "new", "IllegalArgumentException", "attrs", "getPositionDescription", "fname", "Fragment", "fragment", "id", "View", "NO_ID", "mFragments", "findFragmentById", "id", "null", "if", "fragment", "null", "tag", "null", "fragment", "mFragments", "findFragmentByTag", "tag", "if", "fragment", "null", "containerId", "View", "NO_ID", "fragment", "mFragments", "findFragmentById", "containerId", "if", "FragmentManagerImpl", "DEBUG", "Log", "v", "TAG", "Integer", "toHexString", "id", "fname", "fragment", "if", "fragment", "null", "fragment", "Fragment", "instantiate", "this", "fname", "fragment", "mFromLayout", "true", "fragment", "mFragmentId", "id", "id", "containerId", "fragment", "mContainerId", "containerId", "fragment", "mTag", "tag", "fragment", "mInLayout", "true", "fragment", "mFragmentManager", "mFragments", "fragment", "onInflate", "this", "attrs", "fragment", "mSavedFragmentState", "mFragments", "addFragment", "fragment", "true", "else", "if", "fragment", "mInLayout", "throw", "new", "IllegalArgumentException", "attrs", "getPositionDescription", "Integer", "toHexString", "id", "tag", "Integer", "toHexString", "containerId", "fname", "else", "fragment", "mInLayout", "true", "if", "fragment", "mRetaining", "fragment", "onInflate", "this", "attrs", "fragment", "mSavedFragmentState", "mFragments", "moveToState", "fragment", "if", "fragment", "mView", "null", "throw", "new", "IllegalStateException", "fname", "if", "id", "fragment", "mView", "setId", "id", "if", "fragment", "mView", "getTag", "null", "fragment", "mView", "setTag", "tag", "return", "fragment", "mView" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 4795,
  "endLine" : 4819,
  "identifiers" : [ "writer", "print", "prefix", "writer", "print", "writer", "print", "Integer", "toHexString", "System", "identityHashCode", "this", "writer", "println", "String", "innerPrefix", "prefix", "writer", "print", "innerPrefix", "writer", "print", "writer", "print", "mResumed", "writer", "print", "writer", "print", "mStopped", "writer", "print", "writer", "println", "mFinished", "writer", "print", "innerPrefix", "writer", "print", "writer", "println", "mLoadersStarted", "writer", "print", "innerPrefix", "writer", "print", "writer", "println", "mChangingConfigurations", "writer", "print", "innerPrefix", "writer", "print", "writer", "println", "mCurrentConfig", "if", "mLoaderManager", "null", "writer", "print", "prefix", "writer", "print", "writer", "print", "Integer", "toHexString", "System", "identityHashCode", "mLoaderManager", "writer", "println", "mLoaderManager", "dump", "prefix", "fd", "writer", "args", "mFragments", "dump", "prefix", "fd", "writer", "args", "writer", "print", "prefix", "writer", "println", "dumpViewHierarchy", "prefix", "writer", "getWindow", "getDecorView" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 4821,
  "endLine" : 4840,
  "identifiers" : [ "writer", "print", "prefix", "if", "view", "null", "writer", "println", "return", "writer", "println", "view", "toString", "if", "view", "instanceof", "ViewGroup", "return", "ViewGroup", "grp", "ViewGroup", "view", "final", "int", "N", "grp", "getChildCount", "if", "N", "return", "prefix", "prefix", "for", "int", "i", "i", "N", "i", "dumpViewHierarchy", "prefix", "writer", "grp", "getChildAt", "i" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 4945,
  "endLine" : 4963,
  "identifiers" : [ "try", "PackageManager", "pm", "getPackageManager", "ComponentName", "cn", "targetIntent", "getComponent", "if", "cn", "null", "cn", "targetIntent", "resolveActivity", "pm", "ActivityInfo", "info", "pm", "getActivityInfo", "cn", "if", "info", "taskAffinity", "null", "return", "false", "return", "ActivityManagerNative", "getDefault", "targetTaskAffinityMatchesActivity", "mToken", "info", "taskAffinity", "catch", "RemoteException", "e", "return", "false", "catch", "NameNotFoundException", "e", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 4987,
  "endLine" : 5017,
  "identifiers" : [ "if", "mParent", "null", "ComponentName", "destInfo", "upIntent", "getComponent", "if", "destInfo", "null", "destInfo", "upIntent", "resolveActivity", "getPackageManager", "if", "destInfo", "null", "return", "false", "upIntent", "new", "Intent", "upIntent", "upIntent", "setComponent", "destInfo", "int", "resultCode", "Intent", "resultData", "synchronized", "this", "resultCode", "mResultCode", "resultData", "mResultData", "if", "resultData", "null", "resultData", "prepareToLeaveProcess", "try", "upIntent", "prepareToLeaveProcess", "return", "ActivityManagerNative", "getDefault", "navigateUpTo", "mToken", "upIntent", "resultCode", "resultData", "catch", "RemoteException", "e", "return", "false", "else", "return", "mParent", "navigateUpToFromChild", "this", "upIntent" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 5046,
  "endLine" : 5066,
  "identifiers" : [ "final", "String", "parentName", "mActivityInfo", "parentActivityName", "if", "TextUtils", "isEmpty", "parentName", "return", "null", "final", "ComponentName", "target", "new", "ComponentName", "this", "parentName", "try", "final", "ActivityInfo", "parentInfo", "getPackageManager", "getActivityInfo", "target", "final", "String", "parentActivity", "parentInfo", "parentActivityName", "final", "Intent", "parentIntent", "parentActivity", "null", "Intent", "makeMainActivity", "target", "new", "Intent", "setComponent", "target", "return", "parentIntent", "catch", "NameNotFoundException", "e", "Log", "e", "TAG", "parentName", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 5087,
  "endLine" : 5125,
  "identifiers" : [ "attachBaseContext", "context", "mFragments", "attachActivity", "this", "mContainer", "null", "mWindow", "PolicyManager", "makeNewWindow", "this", "mWindow", "setCallback", "this", "mWindow", "getLayoutInflater", "setPrivateFactory", "this", "if", "info", "softInputMode", "WindowManager", "LayoutParams", "SOFT_INPUT_STATE_UNSPECIFIED", "mWindow", "setSoftInputMode", "info", "softInputMode", "if", "info", "uiOptions", "mWindow", "setUiOptions", "info", "uiOptions", "mUiThread", "Thread", "currentThread", "mMainThread", "aThread", "mInstrumentation", "instr", "mToken", "token", "mIdent", "ident", "mApplication", "application", "mIntent", "intent", "mComponent", "intent", "getComponent", "mActivityInfo", "info", "mTitle", "title", "mParent", "parent", "mEmbeddedID", "id", "mLastNonConfigurationInstances", "lastNonConfigurationInstances", "mWindow", "setWindowManager", "WindowManager", "context", "getSystemService", "Context", "WINDOW_SERVICE", "mToken", "mComponent", "flattenToString", "info", "flags", "ActivityInfo", "FLAG_HARDWARE_ACCELERATED", "if", "mParent", "null", "mWindow", "setContainer", "mParent", "getWindow", "mWindowManager", "mWindow", "getWindowManager", "mCurrentConfig", "config" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 5139,
  "endLine" : 5161,
  "identifiers" : [ "mFragments", "noteStateNotSaved", "mCalled", "false", "mFragments", "execPendingActions", "mInstrumentation", "callActivityOnStart", "this", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "mFragments", "dispatchStart", "if", "mAllLoaderManagers", "null", "LoaderManagerImpl", "loaders", "new", "LoaderManagerImpl", "mAllLoaderManagers", "size", "mAllLoaderManagers", "values", "toArray", "loaders", "if", "loaders", "null", "for", "int", "i", "i", "loaders", "length", "i", "LoaderManagerImpl", "lm", "loaders", "i", "lm", "finishRetain", "lm", "doReportStart" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 5163,
  "endLine" : 5200,
  "identifiers" : [ "mFragments", "noteStateNotSaved", "if", "mStopped", "mStopped", "false", "if", "mToken", "null", "mParent", "null", "WindowManagerGlobal", "getInstance", "setStoppedState", "mToken", "false", "synchronized", "mManagedCursors", "final", "int", "N", "mManagedCursors", "size", "for", "int", "i", "i", "N", "i", "ManagedCursor", "mc", "mManagedCursors", "get", "i", "if", "mc", "mReleased", "mc", "mUpdated", "if", "mc", "mCursor", "requery", "if", "getApplicationInfo", "targetSdkVersion", "android", "os", "Build", "VERSION_CODES", "ICE_CREAM_SANDWICH", "throw", "new", "IllegalStateException", "mc", "mCursor", "mc", "mReleased", "false", "mc", "mUpdated", "false", "mCalled", "false", "mInstrumentation", "callActivityOnRestart", "this", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "performStart" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 5202,
  "endLine" : 5230,
  "identifiers" : [ "performRestart", "mFragments", "execPendingActions", "mLastNonConfigurationInstances", "null", "mCalled", "false", "mInstrumentation", "callActivityOnResume", "this", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "mCalled", "false", "mFragments", "dispatchResume", "mFragments", "execPendingActions", "onPostResume", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 5232,
  "endLine" : 5244,
  "identifiers" : [ "mFragments", "dispatchPause", "mCalled", "false", "onPause", "mResumed", "false", "if", "mCalled", "getApplicationInfo", "targetSdkVersion", "android", "os", "Build", "VERSION_CODES", "GINGERBREAD", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "mResumed", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 5251,
  "endLine" : 5296,
  "identifiers" : [ "if", "mLoadersStarted", "mLoadersStarted", "false", "if", "mLoaderManager", "null", "if", "mChangingConfigurations", "mLoaderManager", "doStop", "else", "mLoaderManager", "doRetain", "if", "mStopped", "if", "mWindow", "null", "mWindow", "closeAllPanels", "if", "mToken", "null", "mParent", "null", "WindowManagerGlobal", "getInstance", "setStoppedState", "mToken", "true", "mFragments", "dispatchStop", "mCalled", "false", "mInstrumentation", "callActivityOnStop", "this", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "synchronized", "mManagedCursors", "final", "int", "N", "mManagedCursors", "size", "for", "int", "i", "i", "N", "i", "ManagedCursor", "mc", "mManagedCursors", "get", "i", "if", "mc", "mReleased", "mc", "mCursor", "deactivate", "mc", "mReleased", "true", "mStopped", "true", "mResumed", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity1.java",
  "startLine" : 5316,
  "endLine" : 5329,
  "identifiers" : [ "if", "false", "Log", "v", "TAG", "who", "requestCode", "resultCode", "data", "mFragments", "noteStateNotSaved", "if", "who", "null", "onActivityResult", "requestCode", "resultCode", "data", "else", "Fragment", "frag", "mFragments", "findFragmentByWho", "who", "if", "frag", "null", "frag", "onActivityResult", "requestCode", "resultCode", "data" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 814,
  "endLine" : 828,
  "identifiers" : [ "if", "mAllLoaderManagers", "null", "mAllLoaderManagers", "new", "SparseArray", "LoaderManagerImpl", "LoaderManagerImpl", "lm", "mAllLoaderManagers", "get", "index", "if", "lm", "null", "if", "create", "lm", "new", "LoaderManagerImpl", "this", "started", "mAllLoaderManagers", "put", "index", "lm", "else", "lm", "updateActivity", "this", "return", "lm" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 869,
  "endLine" : 889,
  "identifiers" : [ "if", "DEBUG_LIFECYCLE", "Slog", "v", "TAG", "this", "savedInstanceState", "if", "mLastNonConfigurationInstances", "null", "mAllLoaderManagers", "mLastNonConfigurationInstances", "loaders", "if", "mActivityInfo", "parentActivityName", "null", "if", "mActionBar", "null", "mEnableDefaultActionBarUp", "true", "else", "mActionBar", "setDefaultDisplayHomeAsUpEnabled", "true", "if", "savedInstanceState", "null", "Parcelable", "p", "savedInstanceState", "getParcelable", "FRAGMENTS_TAG", "mFragments", "restoreAllState", "p", "mLastNonConfigurationInstances", "null", "mLastNonConfigurationInstances", "fragments", "null", "mFragments", "dispatchCreate", "getApplication", "dispatchActivityCreated", "this", "savedInstanceState", "mCalled", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 938,
  "endLine" : 963,
  "identifiers" : [ "final", "Bundle", "b", "savedInstanceState", "getBundle", "SAVED_DIALOGS_TAG", "if", "b", "null", "return", "final", "int", "ids", "b", "getIntArray", "SAVED_DIALOG_IDS_KEY", "final", "int", "numDialogs", "ids", "length", "mManagedDialogs", "new", "SparseArray", "ManagedDialog", "numDialogs", "for", "int", "i", "i", "numDialogs", "i", "final", "Integer", "dialogId", "ids", "i", "Bundle", "dialogState", "b", "getBundle", "savedDialogKeyFor", "dialogId", "if", "dialogState", "null", "final", "ManagedDialog", "md", "new", "ManagedDialog", "md", "mArgs", "b", "getBundle", "savedDialogArgsKeyFor", "dialogId", "md", "mDialog", "createDialog", "dialogId", "dialogState", "md", "mArgs", "if", "md", "mDialog", "null", "mManagedDialogs", "put", "dialogId", "md", "onPrepareDialog", "dialogId", "md", "mDialog", "md", "mArgs", "md", "mDialog", "onRestoreInstanceState", "dialogState" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 1018,
  "endLine" : 1033,
  "identifiers" : [ "if", "DEBUG_LIFECYCLE", "Slog", "v", "TAG", "this", "mCalled", "true", "if", "mLoadersStarted", "mLoadersStarted", "true", "if", "mLoaderManager", "null", "mLoaderManager", "doStart", "else", "if", "mCheckedForLoaderManager", "mLoaderManager", "getLoaderManager", "mLoadersStarted", "false", "mCheckedForLoaderManager", "true", "getApplication", "dispatchActivityStarted", "this" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 1187,
  "endLine" : 1194,
  "identifiers" : [ "outState", "putBundle", "WINDOW_HIERARCHY_TAG", "mWindow", "saveHierarchyState", "Parcelable", "p", "mFragments", "saveAllState", "if", "p", "null", "outState", "putParcelable", "FRAGMENTS_TAG", "p", "getApplication", "dispatchActivitySaveInstanceState", "this", "outState" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 1201,
  "endLine" : 1228,
  "identifiers" : [ "if", "mManagedDialogs", "null", "return", "final", "int", "numDialogs", "mManagedDialogs", "size", "if", "numDialogs", "return", "Bundle", "dialogState", "new", "Bundle", "int", "ids", "new", "int", "mManagedDialogs", "size", "for", "int", "i", "i", "numDialogs", "i", "final", "int", "key", "mManagedDialogs", "keyAt", "i", "ids", "i", "key", "final", "ManagedDialog", "md", "mManagedDialogs", "valueAt", "i", "dialogState", "putBundle", "savedDialogKeyFor", "key", "md", "mDialog", "onSaveInstanceState", "if", "md", "mArgs", "null", "dialogState", "putBundle", "savedDialogArgsKeyFor", "key", "md", "mArgs", "dialogState", "putIntArray", "SAVED_DIALOG_IDS_KEY", "ids", "outState", "putBundle", "SAVED_DIALOGS_TAG", "dialogState" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 1391,
  "endLine" : 1425,
  "identifiers" : [ "if", "DEBUG_LIFECYCLE", "Slog", "v", "TAG", "this", "mCalled", "true", "if", "mManagedDialogs", "null", "final", "int", "numDialogs", "mManagedDialogs", "size", "for", "int", "i", "i", "numDialogs", "i", "final", "ManagedDialog", "md", "mManagedDialogs", "valueAt", "i", "if", "md", "mDialog", "isShowing", "md", "mDialog", "dismiss", "mManagedDialogs", "null", "synchronized", "mManagedCursors", "int", "numCursors", "mManagedCursors", "size", "for", "int", "i", "i", "numCursors", "i", "ManagedCursor", "c", "mManagedCursors", "get", "i", "if", "c", "null", "c", "mCursor", "close", "mManagedCursors", "clear", "if", "mSearchManager", "null", "mSearchManager", "stopSearch", "getApplication", "dispatchActivityDestroyed", "this" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 1443,
  "endLine" : 1459,
  "identifiers" : [ "if", "DEBUG_LIFECYCLE", "Slog", "v", "TAG", "this", "newConfig", "mCalled", "true", "mFragments", "dispatchConfigurationChanged", "newConfig", "if", "mWindow", "null", "mWindow", "onConfigurationChanged", "newConfig", "if", "mActionBar", "null", "mActionBar", "onConfigurationChanged", "newConfig" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 1595,
  "endLine" : 1623,
  "identifiers" : [ "Object", "activity", "onRetainNonConfigurationInstance", "HashMap", "String", "Object", "children", "onRetainNonConfigurationChildInstances", "ArrayList", "Fragment", "fragments", "mFragments", "retainNonConfig", "boolean", "retainLoaders", "false", "if", "mAllLoaderManagers", "null", "for", "int", "i", "mAllLoaderManagers", "size", "i", "i", "LoaderManagerImpl", "lm", "mAllLoaderManagers", "valueAt", "i", "if", "lm", "mRetaining", "retainLoaders", "true", "else", "lm", "doDestroy", "mAllLoaderManagers", "removeAt", "i", "if", "activity", "null", "children", "null", "fragments", "null", "retainLoaders", "return", "null", "NonConfigurationInstances", "nci", "new", "NonConfigurationInstances", "nci", "activity", "activity", "nci", "children", "children", "nci", "fragments", "fragments", "nci", "loaders", "mAllLoaderManagers", "return", "nci" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 1796,
  "endLine" : 1807,
  "identifiers" : [ "synchronized", "mManagedCursors", "final", "int", "N", "mManagedCursors", "size", "for", "int", "i", "i", "N", "i", "ManagedCursor", "mc", "mManagedCursors", "get", "i", "if", "mc", "mCursor", "c", "mManagedCursors", "remove", "i", "break" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 1842,
  "endLine" : 1855,
  "identifiers" : [ "Window", "window", "getWindow", "window", "getDecorView", "if", "isChild", "window", "hasFeature", "Window", "FEATURE_ACTION_BAR", "mActionBar", "null", "return", "mActionBar", "new", "ActionBarImpl", "this", "mActionBar", "setDefaultDisplayHomeAsUpEnabled", "mEnableDefaultActionBarUp" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 1996,
  "endLine" : 2015,
  "identifiers" : [ "mDefaultKeyMode", "mode", "switch", "mode", "case", "DEFAULT_KEYS_DISABLE", "case", "DEFAULT_KEYS_SHORTCUT", "mDefaultKeySsb", "null", "break", "case", "DEFAULT_KEYS_DIALER", "case", "DEFAULT_KEYS_SEARCH_LOCAL", "case", "DEFAULT_KEYS_SEARCH_GLOBAL", "mDefaultKeySsb", "new", "SpannableStringBuilder", "Selection", "setSelection", "mDefaultKeySsb", "break", "default", "throw", "new", "IllegalArgumentException" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 2043,
  "endLine" : 2100,
  "identifiers" : [ "if", "keyCode", "KeyEvent", "KEYCODE_BACK", "if", "getApplicationInfo", "targetSdkVersion", "Build", "VERSION_CODES", "ECLAIR", "event", "startTracking", "else", "onBackPressed", "return", "true", "if", "mDefaultKeyMode", "DEFAULT_KEYS_DISABLE", "return", "false", "else", "if", "mDefaultKeyMode", "DEFAULT_KEYS_SHORTCUT", "if", "getWindow", "performPanelShortcut", "Window", "FEATURE_OPTIONS_PANEL", "keyCode", "event", "Menu", "FLAG_ALWAYS_PERFORM_CLOSE", "return", "true", "return", "false", "else", "boolean", "clearSpannable", "false", "boolean", "handled", "if", "event", "getRepeatCount", "event", "isSystem", "clearSpannable", "true", "handled", "false", "else", "handled", "TextKeyListener", "getInstance", "onKeyDown", "null", "mDefaultKeySsb", "keyCode", "event", "if", "handled", "mDefaultKeySsb", "length", "final", "String", "str", "mDefaultKeySsb", "toString", "clearSpannable", "true", "switch", "mDefaultKeyMode", "case", "DEFAULT_KEYS_DIALER", "Intent", "intent", "new", "Intent", "Intent", "ACTION_DIAL", "Uri", "parse", "str", "intent", "addFlags", "Intent", "FLAG_ACTIVITY_NEW_TASK", "startActivity", "intent", "break", "case", "DEFAULT_KEYS_SEARCH_LOCAL", "startSearch", "str", "false", "null", "false", "break", "case", "DEFAULT_KEYS_SEARCH_GLOBAL", "startSearch", "str", "false", "null", "true", "break", "if", "clearSpannable", "mDefaultKeySsb", "clear", "mDefaultKeySsb", "clearSpans", "Selection", "setSelection", "mDefaultKeySsb", "return", "handled" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 2353,
  "endLine" : 2363,
  "identifiers" : [ "onUserInteraction", "Window", "win", "getWindow", "if", "win", "superDispatchKeyEvent", "event", "return", "true", "View", "decor", "mDecor", "if", "decor", "null", "decor", "win", "getDecorView", "return", "event", "dispatch", "this", "decor", "null", "decor", "getKeyDispatcherState", "null", "this" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 2438,
  "endLine" : 2453,
  "identifiers" : [ "event", "setClassName", "getClass", "getName", "event", "setPackageName", "getPackageName", "LayoutParams", "params", "getWindow", "getAttributes", "boolean", "isFullScreen", "params", "width", "LayoutParams", "MATCH_PARENT", "params", "height", "LayoutParams", "MATCH_PARENT", "event", "setFullScreen", "isFullScreen", "CharSequence", "title", "getTitle", "if", "TextUtils", "isEmpty", "title", "event", "getText", "add", "title", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 2527,
  "endLine" : 2560,
  "identifiers" : [ "switch", "featureId", "case", "Window", "FEATURE_OPTIONS_PANEL", "EventLog", "writeEvent", "item", "getTitleCondensed", "if", "onOptionsItemSelected", "item", "return", "true", "if", "mFragments", "dispatchOptionsItemSelected", "item", "return", "true", "if", "item", "getItemId", "android", "R", "id", "home", "mActionBar", "null", "mActionBar", "getDisplayOptions", "ActionBar", "DISPLAY_HOME_AS_UP", "if", "mParent", "null", "return", "onNavigateUp", "else", "return", "mParent", "onNavigateUpFromChild", "this", "return", "false", "case", "Window", "FEATURE_CONTEXT_MENU", "EventLog", "writeEvent", "item", "getTitleCondensed", "if", "onContextItemSelected", "item", "return", "true", "return", "mFragments", "dispatchContextItemSelected", "item", "default", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 2571,
  "endLine" : 2587,
  "identifiers" : [ "switch", "featureId", "case", "Window", "FEATURE_OPTIONS_PANEL", "mFragments", "dispatchOptionsMenuClosed", "menu", "onOptionsMenuClosed", "menu", "break", "case", "Window", "FEATURE_CONTEXT_MENU", "onContextMenuClosed", "menu", "break", "case", "Window", "FEATURE_ACTION_BAR", "initActionBar", "mActionBar", "dispatchMenuVisibilityChanged", "false", "break" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 2706,
  "endLine" : 2732,
  "identifiers" : [ "Intent", "upIntent", "getParentActivityIntent", "if", "upIntent", "null", "if", "shouldUpRecreateTask", "upIntent", "TaskStackBuilder", "b", "TaskStackBuilder", "create", "this", "onCreateNavigateUpTaskStack", "b", "onPrepareNavigateUpTaskStack", "b", "b", "startActivities", "if", "mResultCode", "RESULT_CANCELED", "mResultData", "null", "Log", "i", "TAG", "finish", "else", "finishAffinity", "else", "navigateUpTo", "upIntent", "return", "true", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 3036,
  "endLine" : 3054,
  "identifiers" : [ "if", "mManagedDialogs", "null", "mManagedDialogs", "new", "SparseArray", "ManagedDialog", "ManagedDialog", "md", "mManagedDialogs", "get", "id", "if", "md", "null", "md", "new", "ManagedDialog", "md", "mDialog", "createDialog", "id", "null", "args", "if", "md", "mDialog", "null", "return", "false", "mManagedDialogs", "put", "id", "md", "md", "mArgs", "args", "onPrepareDialog", "id", "md", "mDialog", "args", "md", "mDialog", "show", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 3349,
  "endLine" : 3379,
  "identifiers" : [ "if", "mParent", "null", "Instrumentation", "ActivityResult", "ar", "mInstrumentation", "execStartActivity", "this", "mMainThread", "getApplicationThread", "mToken", "this", "intent", "requestCode", "options", "if", "ar", "null", "mMainThread", "sendActivityResult", "mToken", "mEmbeddedID", "requestCode", "ar", "getResultCode", "ar", "getResultData", "if", "requestCode", "mStartedActivity", "true", "else", "if", "options", "null", "mParent", "startActivityFromChild", "this", "intent", "requestCode", "options", "else", "mParent", "startActivityFromChild", "this", "intent", "requestCode" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 3430,
  "endLine" : 3443,
  "identifiers" : [ "if", "mParent", "null", "startIntentSenderForResultInner", "intent", "requestCode", "fillInIntent", "flagsMask", "flagsValues", "this", "options", "else", "if", "options", "null", "mParent", "startIntentSenderFromChild", "this", "intent", "requestCode", "fillInIntent", "flagsMask", "flagsValues", "extraFlags", "options", "else", "mParent", "startIntentSenderFromChild", "this", "intent", "requestCode", "fillInIntent", "flagsMask", "flagsValues", "extraFlags" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 3448,
  "endLine" : 3475,
  "identifiers" : [ "try", "String", "resolvedType", "null", "if", "fillInIntent", "null", "fillInIntent", "setAllowFds", "false", "resolvedType", "fillInIntent", "resolveTypeIfNeeded", "getContentResolver", "int", "result", "ActivityManagerNative", "getDefault", "startActivityIntentSender", "mMainThread", "getApplicationThread", "intent", "fillInIntent", "resolvedType", "mToken", "activity", "mEmbeddedID", "requestCode", "flagsMask", "flagsValues", "options", "if", "result", "ActivityManager", "START_CANCELED", "throw", "new", "IntentSender", "SendIntentException", "Instrumentation", "checkStartActivityResult", "result", "null", "catch", "RemoteException", "e", "if", "requestCode", "mStartedActivity", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 3673,
  "endLine" : 3705,
  "identifiers" : [ "if", "mParent", "null", "int", "result", "ActivityManager", "START_RETURN_INTENT_TO_CALLER", "try", "intent", "setAllowFds", "false", "result", "ActivityManagerNative", "getDefault", "startActivity", "mMainThread", "getApplicationThread", "intent", "intent", "resolveTypeIfNeeded", "getContentResolver", "mToken", "mEmbeddedID", "requestCode", "ActivityManager", "START_FLAG_ONLY_IF_NEEDED", "null", "null", "options", "catch", "RemoteException", "e", "Instrumentation", "checkStartActivityResult", "result", "intent", "if", "requestCode", "mStartedActivity", "true", "return", "result", "ActivityManager", "START_RETURN_INTENT_TO_CALLER", "throw", "new", "UnsupportedOperationException" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 3798,
  "endLine" : 3808,
  "identifiers" : [ "Instrumentation", "ActivityResult", "ar", "mInstrumentation", "execStartActivity", "this", "mMainThread", "getApplicationThread", "mToken", "child", "intent", "requestCode", "options", "if", "ar", "null", "mMainThread", "sendActivityResult", "mToken", "child", "mEmbeddedID", "requestCode", "ar", "getResultCode", "ar", "getResultData" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 3849,
  "endLine" : 3859,
  "identifiers" : [ "Instrumentation", "ActivityResult", "ar", "mInstrumentation", "execStartActivity", "this", "mMainThread", "getApplicationThread", "mToken", "fragment", "intent", "requestCode", "options", "if", "ar", "null", "mMainThread", "sendActivityResult", "mToken", "fragment", "mWho", "requestCode", "ar", "getResultCode", "ar", "getResultData" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 4067,
  "endLine" : 4075,
  "identifiers" : [ "if", "mParent", "null", "throw", "new", "IllegalStateException", "if", "Looper", "myLooper", "mMainThread", "getLooper", "throw", "new", "IllegalStateException", "mMainThread", "requestRelaunchActivity", "mToken", "null", "null", "false", "null", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 4082,
  "endLine" : 4105,
  "identifiers" : [ "if", "mParent", "null", "int", "resultCode", "Intent", "resultData", "synchronized", "this", "resultCode", "mResultCode", "resultData", "mResultData", "if", "false", "Log", "v", "TAG", "mToken", "try", "if", "resultData", "null", "resultData", "setAllowFds", "false", "if", "ActivityManagerNative", "getDefault", "finishActivity", "mToken", "resultCode", "resultData", "mFinished", "true", "catch", "RemoteException", "e", "else", "mParent", "finishFromChild", "this" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 4121,
  "endLine" : 4135,
  "identifiers" : [ "if", "mParent", "null", "throw", "new", "IllegalStateException", "if", "mResultCode", "RESULT_CANCELED", "mResultData", "null", "throw", "new", "IllegalStateException", "try", "if", "ActivityManagerNative", "getDefault", "finishActivityAffinity", "mToken", "mFinished", "true", "catch", "RemoteException", "e" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 4242,
  "endLine" : 4256,
  "identifiers" : [ "String", "packageName", "getPackageName", "try", "data", "setAllowFds", "false", "IIntentSender", "target", "ActivityManagerNative", "getDefault", "getIntentSender", "ActivityManager", "INTENT_SENDER_ACTIVITY_RESULT", "packageName", "mParent", "null", "mToken", "mParent", "mToken", "mEmbeddedID", "requestCode", "new", "Intent", "data", "null", "flags", "null", "return", "target", "null", "new", "PendingIntent", "target", "null", "catch", "RemoteException", "e", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 4361,
  "endLine" : 4370,
  "identifiers" : [ "final", "String", "pkg", "getPackageName", "final", "String", "cls", "mComponent", "getClassName", "int", "packageLen", "pkg", "length", "if", "cls", "startsWith", "pkg", "cls", "length", "packageLen", "cls", "charAt", "packageLen", "return", "cls", "return", "cls", "substring", "packageLen" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 4408,
  "endLine" : 4421,
  "identifiers" : [ "if", "getBaseContext", "null", "throw", "new", "IllegalStateException", "if", "WINDOW_SERVICE", "equals", "name", "return", "mWindowManager", "else", "if", "SEARCH_SERVICE", "equals", "name", "ensureSearchManager", "return", "mSearchManager", "return", "super", "getSystemService", "name" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 4620,
  "endLine" : 4697,
  "identifiers" : [ "if", "equals", "name", "return", "onCreateView", "name", "context", "attrs", "String", "fname", "attrs", "getAttributeValue", "null", "TypedArray", "a", "context", "obtainStyledAttributes", "attrs", "com", "android", "internal", "R", "styleable", "Fragment", "if", "fname", "null", "fname", "a", "getString", "com", "android", "internal", "R", "styleable", "Fragment_name", "int", "id", "a", "getResourceId", "com", "android", "internal", "R", "styleable", "Fragment_id", "View", "NO_ID", "String", "tag", "a", "getString", "com", "android", "internal", "R", "styleable", "Fragment_tag", "a", "recycle", "int", "containerId", "parent", "null", "parent", "getId", "if", "containerId", "View", "NO_ID", "id", "View", "NO_ID", "tag", "null", "throw", "new", "IllegalArgumentException", "attrs", "getPositionDescription", "fname", "Fragment", "fragment", "id", "View", "NO_ID", "mFragments", "findFragmentById", "id", "null", "if", "fragment", "null", "tag", "null", "fragment", "mFragments", "findFragmentByTag", "tag", "if", "fragment", "null", "containerId", "View", "NO_ID", "fragment", "mFragments", "findFragmentById", "containerId", "if", "FragmentManagerImpl", "DEBUG", "Log", "v", "TAG", "Integer", "toHexString", "id", "fname", "fragment", "if", "fragment", "null", "fragment", "Fragment", "instantiate", "this", "fname", "fragment", "mFromLayout", "true", "fragment", "mFragmentId", "id", "id", "containerId", "fragment", "mContainerId", "containerId", "fragment", "mTag", "tag", "fragment", "mInLayout", "true", "fragment", "mFragmentManager", "mFragments", "fragment", "onInflate", "this", "attrs", "fragment", "mSavedFragmentState", "mFragments", "addFragment", "fragment", "true", "else", "if", "fragment", "mInLayout", "throw", "new", "IllegalArgumentException", "attrs", "getPositionDescription", "Integer", "toHexString", "id", "tag", "Integer", "toHexString", "containerId", "fname", "else", "fragment", "mInLayout", "true", "if", "fragment", "mRetaining", "fragment", "onInflate", "this", "attrs", "fragment", "mSavedFragmentState", "mFragments", "moveToState", "fragment", "if", "fragment", "mView", "null", "throw", "new", "IllegalStateException", "fname", "if", "id", "fragment", "mView", "setId", "id", "if", "fragment", "mView", "getTag", "null", "fragment", "mView", "setTag", "tag", "return", "fragment", "mView" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 4709,
  "endLine" : 4731,
  "identifiers" : [ "writer", "print", "prefix", "writer", "print", "writer", "print", "Integer", "toHexString", "System", "identityHashCode", "this", "writer", "println", "String", "innerPrefix", "prefix", "writer", "print", "innerPrefix", "writer", "print", "writer", "print", "mResumed", "writer", "print", "writer", "print", "mStopped", "writer", "print", "writer", "println", "mFinished", "writer", "print", "innerPrefix", "writer", "print", "writer", "println", "mLoadersStarted", "writer", "print", "innerPrefix", "writer", "print", "writer", "println", "mChangingConfigurations", "writer", "print", "innerPrefix", "writer", "print", "writer", "println", "mCurrentConfig", "if", "mLoaderManager", "null", "writer", "print", "prefix", "writer", "print", "writer", "print", "Integer", "toHexString", "System", "identityHashCode", "mLoaderManager", "writer", "println", "mLoaderManager", "dump", "prefix", "fd", "writer", "args", "mFragments", "dump", "prefix", "fd", "writer", "args" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 4837,
  "endLine" : 4855,
  "identifiers" : [ "try", "PackageManager", "pm", "getPackageManager", "ComponentName", "cn", "targetIntent", "getComponent", "if", "cn", "null", "cn", "targetIntent", "resolveActivity", "pm", "ActivityInfo", "info", "pm", "getActivityInfo", "cn", "if", "info", "taskAffinity", "null", "return", "false", "return", "ActivityManagerNative", "getDefault", "targetTaskAffinityMatchesActivity", "mToken", "info", "taskAffinity", "catch", "RemoteException", "e", "return", "false", "catch", "NameNotFoundException", "e", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 4879,
  "endLine" : 4908,
  "identifiers" : [ "if", "mParent", "null", "ComponentName", "destInfo", "upIntent", "getComponent", "if", "destInfo", "null", "destInfo", "upIntent", "resolveActivity", "getPackageManager", "if", "destInfo", "null", "return", "false", "upIntent", "new", "Intent", "upIntent", "upIntent", "setComponent", "destInfo", "int", "resultCode", "Intent", "resultData", "synchronized", "this", "resultCode", "mResultCode", "resultData", "mResultData", "if", "resultData", "null", "resultData", "setAllowFds", "false", "try", "return", "ActivityManagerNative", "getDefault", "navigateUpTo", "mToken", "upIntent", "resultCode", "resultData", "catch", "RemoteException", "e", "return", "false", "else", "return", "mParent", "navigateUpToFromChild", "this", "upIntent" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 4964,
  "endLine" : 5000,
  "identifiers" : [ "attachBaseContext", "context", "mFragments", "attachActivity", "this", "mWindow", "PolicyManager", "makeNewWindow", "this", "mWindow", "setCallback", "this", "mWindow", "getLayoutInflater", "setPrivateFactory", "this", "if", "info", "softInputMode", "WindowManager", "LayoutParams", "SOFT_INPUT_STATE_UNSPECIFIED", "mWindow", "setSoftInputMode", "info", "softInputMode", "if", "info", "uiOptions", "mWindow", "setUiOptions", "info", "uiOptions", "mUiThread", "Thread", "currentThread", "mMainThread", "aThread", "mInstrumentation", "instr", "mToken", "token", "mIdent", "ident", "mApplication", "application", "mIntent", "intent", "mComponent", "intent", "getComponent", "mActivityInfo", "info", "mTitle", "title", "mParent", "parent", "mEmbeddedID", "id", "mLastNonConfigurationInstances", "lastNonConfigurationInstances", "mWindow", "setWindowManager", "null", "mToken", "mComponent", "flattenToString", "info", "flags", "ActivityInfo", "FLAG_HARDWARE_ACCELERATED", "if", "mParent", "null", "mWindow", "setContainer", "mParent", "getWindow", "mWindowManager", "mWindow", "getWindowManager", "mCurrentConfig", "config" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 5014,
  "endLine" : 5032,
  "identifiers" : [ "mFragments", "noteStateNotSaved", "mCalled", "false", "mFragments", "execPendingActions", "mInstrumentation", "callActivityOnStart", "this", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "mFragments", "dispatchStart", "if", "mAllLoaderManagers", "null", "for", "int", "i", "mAllLoaderManagers", "size", "i", "i", "LoaderManagerImpl", "lm", "mAllLoaderManagers", "valueAt", "i", "lm", "finishRetain", "lm", "doReportStart" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 5034,
  "endLine" : 5071,
  "identifiers" : [ "mFragments", "noteStateNotSaved", "if", "mStopped", "mStopped", "false", "if", "mToken", "null", "mParent", "null", "WindowManagerImpl", "getDefault", "setStoppedState", "mToken", "false", "synchronized", "mManagedCursors", "final", "int", "N", "mManagedCursors", "size", "for", "int", "i", "i", "N", "i", "ManagedCursor", "mc", "mManagedCursors", "get", "i", "if", "mc", "mReleased", "mc", "mUpdated", "if", "mc", "mCursor", "requery", "if", "getApplicationInfo", "targetSdkVersion", "android", "os", "Build", "VERSION_CODES", "ICE_CREAM_SANDWICH", "throw", "new", "IllegalStateException", "mc", "mCursor", "mc", "mReleased", "false", "mc", "mUpdated", "false", "mCalled", "false", "mInstrumentation", "callActivityOnRestart", "this", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "performStart" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 5073,
  "endLine" : 5101,
  "identifiers" : [ "performRestart", "mFragments", "execPendingActions", "mLastNonConfigurationInstances", "null", "mCalled", "false", "mInstrumentation", "callActivityOnResume", "this", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "mCalled", "false", "mFragments", "dispatchResume", "mFragments", "execPendingActions", "onPostResume", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 5103,
  "endLine" : 5115,
  "identifiers" : [ "mFragments", "dispatchPause", "mCalled", "false", "onPause", "mResumed", "false", "if", "mCalled", "getApplicationInfo", "targetSdkVersion", "android", "os", "Build", "VERSION_CODES", "GINGERBREAD", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "mResumed", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 5122,
  "endLine" : 5167,
  "identifiers" : [ "if", "mLoadersStarted", "mLoadersStarted", "false", "if", "mLoaderManager", "null", "if", "mChangingConfigurations", "mLoaderManager", "doStop", "else", "mLoaderManager", "doRetain", "if", "mStopped", "if", "mWindow", "null", "mWindow", "closeAllPanels", "if", "mToken", "null", "mParent", "null", "WindowManagerImpl", "getDefault", "setStoppedState", "mToken", "true", "mFragments", "dispatchStop", "mCalled", "false", "mInstrumentation", "callActivityOnStop", "this", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "synchronized", "mManagedCursors", "final", "int", "N", "mManagedCursors", "size", "for", "int", "i", "i", "N", "i", "ManagedCursor", "mc", "mManagedCursors", "get", "i", "if", "mc", "mReleased", "mc", "mCursor", "deactivate", "mc", "mReleased", "true", "mStopped", "true", "mResumed", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity2.java",
  "startLine" : 5186,
  "endLine" : 5199,
  "identifiers" : [ "if", "false", "Log", "v", "TAG", "who", "requestCode", "resultCode", "data", "mFragments", "noteStateNotSaved", "if", "who", "null", "onActivityResult", "requestCode", "resultCode", "data", "else", "Fragment", "frag", "mFragments", "findFragmentByWho", "who", "if", "frag", "null", "frag", "onActivityResult", "requestCode", "resultCode", "data" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 824,
  "endLine" : 838,
  "identifiers" : [ "if", "mAllLoaderManagers", "null", "mAllLoaderManagers", "new", "HashMap", "String", "LoaderManagerImpl", "LoaderManagerImpl", "lm", "mAllLoaderManagers", "get", "who", "if", "lm", "null", "if", "create", "lm", "new", "LoaderManagerImpl", "who", "this", "started", "mAllLoaderManagers", "put", "who", "lm", "else", "lm", "updateActivity", "this", "return", "lm" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 879,
  "endLine" : 899,
  "identifiers" : [ "if", "DEBUG_LIFECYCLE", "Slog", "v", "TAG", "this", "savedInstanceState", "if", "mLastNonConfigurationInstances", "null", "mAllLoaderManagers", "mLastNonConfigurationInstances", "loaders", "if", "mActivityInfo", "parentActivityName", "null", "if", "mActionBar", "null", "mEnableDefaultActionBarUp", "true", "else", "mActionBar", "setDefaultDisplayHomeAsUpEnabled", "true", "if", "savedInstanceState", "null", "Parcelable", "p", "savedInstanceState", "getParcelable", "FRAGMENTS_TAG", "mFragments", "restoreAllState", "p", "mLastNonConfigurationInstances", "null", "mLastNonConfigurationInstances", "fragments", "null", "mFragments", "dispatchCreate", "getApplication", "dispatchActivityCreated", "this", "savedInstanceState", "mCalled", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 948,
  "endLine" : 973,
  "identifiers" : [ "final", "Bundle", "b", "savedInstanceState", "getBundle", "SAVED_DIALOGS_TAG", "if", "b", "null", "return", "final", "int", "ids", "b", "getIntArray", "SAVED_DIALOG_IDS_KEY", "final", "int", "numDialogs", "ids", "length", "mManagedDialogs", "new", "SparseArray", "ManagedDialog", "numDialogs", "for", "int", "i", "i", "numDialogs", "i", "final", "Integer", "dialogId", "ids", "i", "Bundle", "dialogState", "b", "getBundle", "savedDialogKeyFor", "dialogId", "if", "dialogState", "null", "final", "ManagedDialog", "md", "new", "ManagedDialog", "md", "mArgs", "b", "getBundle", "savedDialogArgsKeyFor", "dialogId", "md", "mDialog", "createDialog", "dialogId", "dialogState", "md", "mArgs", "if", "md", "mDialog", "null", "mManagedDialogs", "put", "dialogId", "md", "onPrepareDialog", "dialogId", "md", "mDialog", "md", "mArgs", "md", "mDialog", "onRestoreInstanceState", "dialogState" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 1028,
  "endLine" : 1043,
  "identifiers" : [ "if", "DEBUG_LIFECYCLE", "Slog", "v", "TAG", "this", "mCalled", "true", "if", "mLoadersStarted", "mLoadersStarted", "true", "if", "mLoaderManager", "null", "mLoaderManager", "doStart", "else", "if", "mCheckedForLoaderManager", "mLoaderManager", "getLoaderManager", "null", "mLoadersStarted", "false", "mCheckedForLoaderManager", "true", "getApplication", "dispatchActivityStarted", "this" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 1197,
  "endLine" : 1204,
  "identifiers" : [ "outState", "putBundle", "WINDOW_HIERARCHY_TAG", "mWindow", "saveHierarchyState", "Parcelable", "p", "mFragments", "saveAllState", "if", "p", "null", "outState", "putParcelable", "FRAGMENTS_TAG", "p", "getApplication", "dispatchActivitySaveInstanceState", "this", "outState" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 1211,
  "endLine" : 1238,
  "identifiers" : [ "if", "mManagedDialogs", "null", "return", "final", "int", "numDialogs", "mManagedDialogs", "size", "if", "numDialogs", "return", "Bundle", "dialogState", "new", "Bundle", "int", "ids", "new", "int", "mManagedDialogs", "size", "for", "int", "i", "i", "numDialogs", "i", "final", "int", "key", "mManagedDialogs", "keyAt", "i", "ids", "i", "key", "final", "ManagedDialog", "md", "mManagedDialogs", "valueAt", "i", "dialogState", "putBundle", "savedDialogKeyFor", "key", "md", "mDialog", "onSaveInstanceState", "if", "md", "mArgs", "null", "dialogState", "putBundle", "savedDialogArgsKeyFor", "key", "md", "mArgs", "dialogState", "putIntArray", "SAVED_DIALOG_IDS_KEY", "ids", "outState", "putBundle", "SAVED_DIALOGS_TAG", "dialogState" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 1415,
  "endLine" : 1449,
  "identifiers" : [ "if", "DEBUG_LIFECYCLE", "Slog", "v", "TAG", "this", "mCalled", "true", "if", "mManagedDialogs", "null", "final", "int", "numDialogs", "mManagedDialogs", "size", "for", "int", "i", "i", "numDialogs", "i", "final", "ManagedDialog", "md", "mManagedDialogs", "valueAt", "i", "if", "md", "mDialog", "isShowing", "md", "mDialog", "dismiss", "mManagedDialogs", "null", "synchronized", "mManagedCursors", "int", "numCursors", "mManagedCursors", "size", "for", "int", "i", "i", "numCursors", "i", "ManagedCursor", "c", "mManagedCursors", "get", "i", "if", "c", "null", "c", "mCursor", "close", "mManagedCursors", "clear", "if", "mSearchManager", "null", "mSearchManager", "stopSearch", "getApplication", "dispatchActivityDestroyed", "this" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 1467,
  "endLine" : 1483,
  "identifiers" : [ "if", "DEBUG_LIFECYCLE", "Slog", "v", "TAG", "this", "newConfig", "mCalled", "true", "mFragments", "dispatchConfigurationChanged", "newConfig", "if", "mWindow", "null", "mWindow", "onConfigurationChanged", "newConfig", "if", "mActionBar", "null", "mActionBar", "onConfigurationChanged", "newConfig" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 1619,
  "endLine" : 1651,
  "identifiers" : [ "Object", "activity", "onRetainNonConfigurationInstance", "HashMap", "String", "Object", "children", "onRetainNonConfigurationChildInstances", "ArrayList", "Fragment", "fragments", "mFragments", "retainNonConfig", "boolean", "retainLoaders", "false", "if", "mAllLoaderManagers", "null", "LoaderManagerImpl", "loaders", "new", "LoaderManagerImpl", "mAllLoaderManagers", "size", "mAllLoaderManagers", "values", "toArray", "loaders", "if", "loaders", "null", "for", "int", "i", "i", "loaders", "length", "i", "LoaderManagerImpl", "lm", "loaders", "i", "if", "lm", "mRetaining", "retainLoaders", "true", "else", "lm", "doDestroy", "mAllLoaderManagers", "remove", "lm", "mWho", "if", "activity", "null", "children", "null", "fragments", "null", "retainLoaders", "return", "null", "NonConfigurationInstances", "nci", "new", "NonConfigurationInstances", "nci", "activity", "activity", "nci", "children", "children", "nci", "fragments", "fragments", "nci", "loaders", "mAllLoaderManagers", "return", "nci" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 1824,
  "endLine" : 1835,
  "identifiers" : [ "synchronized", "mManagedCursors", "final", "int", "N", "mManagedCursors", "size", "for", "int", "i", "i", "N", "i", "ManagedCursor", "mc", "mManagedCursors", "get", "i", "if", "mc", "mCursor", "c", "mManagedCursors", "remove", "i", "break" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 1870,
  "endLine" : 1883,
  "identifiers" : [ "Window", "window", "getWindow", "window", "getDecorView", "if", "isChild", "window", "hasFeature", "Window", "FEATURE_ACTION_BAR", "mActionBar", "null", "return", "mActionBar", "new", "ActionBarImpl", "this", "mActionBar", "setDefaultDisplayHomeAsUpEnabled", "mEnableDefaultActionBarUp" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 2024,
  "endLine" : 2043,
  "identifiers" : [ "mDefaultKeyMode", "mode", "switch", "mode", "case", "DEFAULT_KEYS_DISABLE", "case", "DEFAULT_KEYS_SHORTCUT", "mDefaultKeySsb", "null", "break", "case", "DEFAULT_KEYS_DIALER", "case", "DEFAULT_KEYS_SEARCH_LOCAL", "case", "DEFAULT_KEYS_SEARCH_GLOBAL", "mDefaultKeySsb", "new", "SpannableStringBuilder", "Selection", "setSelection", "mDefaultKeySsb", "break", "default", "throw", "new", "IllegalArgumentException" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 2071,
  "endLine" : 2128,
  "identifiers" : [ "if", "keyCode", "KeyEvent", "KEYCODE_BACK", "if", "getApplicationInfo", "targetSdkVersion", "Build", "VERSION_CODES", "ECLAIR", "event", "startTracking", "else", "onBackPressed", "return", "true", "if", "mDefaultKeyMode", "DEFAULT_KEYS_DISABLE", "return", "false", "else", "if", "mDefaultKeyMode", "DEFAULT_KEYS_SHORTCUT", "if", "getWindow", "performPanelShortcut", "Window", "FEATURE_OPTIONS_PANEL", "keyCode", "event", "Menu", "FLAG_ALWAYS_PERFORM_CLOSE", "return", "true", "return", "false", "else", "boolean", "clearSpannable", "false", "boolean", "handled", "if", "event", "getRepeatCount", "event", "isSystem", "clearSpannable", "true", "handled", "false", "else", "handled", "TextKeyListener", "getInstance", "onKeyDown", "null", "mDefaultKeySsb", "keyCode", "event", "if", "handled", "mDefaultKeySsb", "length", "final", "String", "str", "mDefaultKeySsb", "toString", "clearSpannable", "true", "switch", "mDefaultKeyMode", "case", "DEFAULT_KEYS_DIALER", "Intent", "intent", "new", "Intent", "Intent", "ACTION_DIAL", "Uri", "parse", "str", "intent", "addFlags", "Intent", "FLAG_ACTIVITY_NEW_TASK", "startActivity", "intent", "break", "case", "DEFAULT_KEYS_SEARCH_LOCAL", "startSearch", "str", "false", "null", "false", "break", "case", "DEFAULT_KEYS_SEARCH_GLOBAL", "startSearch", "str", "false", "null", "true", "break", "if", "clearSpannable", "mDefaultKeySsb", "clear", "mDefaultKeySsb", "clearSpans", "Selection", "setSelection", "mDefaultKeySsb", "return", "handled" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 2381,
  "endLine" : 2391,
  "identifiers" : [ "onUserInteraction", "Window", "win", "getWindow", "if", "win", "superDispatchKeyEvent", "event", "return", "true", "View", "decor", "mDecor", "if", "decor", "null", "decor", "win", "getDecorView", "return", "event", "dispatch", "this", "decor", "null", "decor", "getKeyDispatcherState", "null", "this" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 2466,
  "endLine" : 2481,
  "identifiers" : [ "event", "setClassName", "getClass", "getName", "event", "setPackageName", "getPackageName", "LayoutParams", "params", "getWindow", "getAttributes", "boolean", "isFullScreen", "params", "width", "LayoutParams", "MATCH_PARENT", "params", "height", "LayoutParams", "MATCH_PARENT", "event", "setFullScreen", "isFullScreen", "CharSequence", "title", "getTitle", "if", "TextUtils", "isEmpty", "title", "event", "getText", "add", "title", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 2555,
  "endLine" : 2594,
  "identifiers" : [ "CharSequence", "titleCondensed", "item", "getTitleCondensed", "switch", "featureId", "case", "Window", "FEATURE_OPTIONS_PANEL", "if", "titleCondensed", "null", "EventLog", "writeEvent", "titleCondensed", "toString", "if", "onOptionsItemSelected", "item", "return", "true", "if", "mFragments", "dispatchOptionsItemSelected", "item", "return", "true", "if", "item", "getItemId", "android", "R", "id", "home", "mActionBar", "null", "mActionBar", "getDisplayOptions", "ActionBar", "DISPLAY_HOME_AS_UP", "if", "mParent", "null", "return", "onNavigateUp", "else", "return", "mParent", "onNavigateUpFromChild", "this", "return", "false", "case", "Window", "FEATURE_CONTEXT_MENU", "if", "titleCondensed", "null", "EventLog", "writeEvent", "titleCondensed", "toString", "if", "onContextItemSelected", "item", "return", "true", "return", "mFragments", "dispatchContextItemSelected", "item", "default", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 2605,
  "endLine" : 2621,
  "identifiers" : [ "switch", "featureId", "case", "Window", "FEATURE_OPTIONS_PANEL", "mFragments", "dispatchOptionsMenuClosed", "menu", "onOptionsMenuClosed", "menu", "break", "case", "Window", "FEATURE_CONTEXT_MENU", "onContextMenuClosed", "menu", "break", "case", "Window", "FEATURE_ACTION_BAR", "initActionBar", "mActionBar", "dispatchMenuVisibilityChanged", "false", "break" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 2740,
  "endLine" : 2771,
  "identifiers" : [ "Intent", "upIntent", "getParentActivityIntent", "if", "upIntent", "null", "if", "mActivityInfo", "taskAffinity", "null", "finish", "else", "if", "shouldUpRecreateTask", "upIntent", "TaskStackBuilder", "b", "TaskStackBuilder", "create", "this", "onCreateNavigateUpTaskStack", "b", "onPrepareNavigateUpTaskStack", "b", "b", "startActivities", "if", "mResultCode", "RESULT_CANCELED", "mResultData", "null", "Log", "i", "TAG", "finish", "else", "finishAffinity", "else", "navigateUpTo", "upIntent", "return", "true", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 3075,
  "endLine" : 3093,
  "identifiers" : [ "if", "mManagedDialogs", "null", "mManagedDialogs", "new", "SparseArray", "ManagedDialog", "ManagedDialog", "md", "mManagedDialogs", "get", "id", "if", "md", "null", "md", "new", "ManagedDialog", "md", "mDialog", "createDialog", "id", "null", "args", "if", "md", "mDialog", "null", "return", "false", "mManagedDialogs", "put", "id", "md", "md", "mArgs", "args", "onPrepareDialog", "id", "md", "mDialog", "args", "md", "mDialog", "show", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 3388,
  "endLine" : 3418,
  "identifiers" : [ "if", "mParent", "null", "Instrumentation", "ActivityResult", "ar", "mInstrumentation", "execStartActivity", "this", "mMainThread", "getApplicationThread", "mToken", "this", "intent", "requestCode", "options", "if", "ar", "null", "mMainThread", "sendActivityResult", "mToken", "mEmbeddedID", "requestCode", "ar", "getResultCode", "ar", "getResultData", "if", "requestCode", "mStartedActivity", "true", "else", "if", "options", "null", "mParent", "startActivityFromChild", "this", "intent", "requestCode", "options", "else", "mParent", "startActivityFromChild", "this", "intent", "requestCode" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 3430,
  "endLine" : 3443,
  "identifiers" : [ "if", "mParent", "null", "throw", "new", "RuntimeException", "Instrumentation", "ActivityResult", "ar", "mInstrumentation", "execStartActivity", "this", "mMainThread", "getApplicationThread", "mToken", "this", "intent", "options", "user", "if", "ar", "null", "mMainThread", "sendActivityResult", "mToken", "mEmbeddedID", "ar", "getResultCode", "ar", "getResultData" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 3494,
  "endLine" : 3507,
  "identifiers" : [ "if", "mParent", "null", "startIntentSenderForResultInner", "intent", "requestCode", "fillInIntent", "flagsMask", "flagsValues", "this", "options", "else", "if", "options", "null", "mParent", "startIntentSenderFromChild", "this", "intent", "requestCode", "fillInIntent", "flagsMask", "flagsValues", "extraFlags", "options", "else", "mParent", "startIntentSenderFromChild", "this", "intent", "requestCode", "fillInIntent", "flagsMask", "flagsValues", "extraFlags" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 3512,
  "endLine" : 3540,
  "identifiers" : [ "try", "String", "resolvedType", "null", "if", "fillInIntent", "null", "fillInIntent", "migrateExtraStreamToClipData", "fillInIntent", "prepareToLeaveProcess", "resolvedType", "fillInIntent", "resolveTypeIfNeeded", "getContentResolver", "int", "result", "ActivityManagerNative", "getDefault", "startActivityIntentSender", "mMainThread", "getApplicationThread", "intent", "fillInIntent", "resolvedType", "mToken", "activity", "mEmbeddedID", "requestCode", "flagsMask", "flagsValues", "options", "if", "result", "ActivityManager", "START_CANCELED", "throw", "new", "IntentSender", "SendIntentException", "Instrumentation", "checkStartActivityResult", "result", "null", "catch", "RemoteException", "e", "if", "requestCode", "mStartedActivity", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 3738,
  "endLine" : 3771,
  "identifiers" : [ "if", "mParent", "null", "int", "result", "ActivityManager", "START_RETURN_INTENT_TO_CALLER", "try", "intent", "migrateExtraStreamToClipData", "intent", "prepareToLeaveProcess", "result", "ActivityManagerNative", "getDefault", "startActivity", "mMainThread", "getApplicationThread", "getBasePackageName", "intent", "intent", "resolveTypeIfNeeded", "getContentResolver", "mToken", "mEmbeddedID", "requestCode", "ActivityManager", "START_FLAG_ONLY_IF_NEEDED", "null", "null", "options", "catch", "RemoteException", "e", "Instrumentation", "checkStartActivityResult", "result", "intent", "if", "requestCode", "mStartedActivity", "true", "return", "result", "ActivityManager", "START_RETURN_INTENT_TO_CALLER", "throw", "new", "UnsupportedOperationException" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 3810,
  "endLine" : 3825,
  "identifiers" : [ "if", "mParent", "null", "try", "intent", "migrateExtraStreamToClipData", "intent", "prepareToLeaveProcess", "return", "ActivityManagerNative", "getDefault", "startNextMatchingActivity", "mToken", "intent", "options", "catch", "RemoteException", "e", "return", "false", "throw", "new", "UnsupportedOperationException" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 3865,
  "endLine" : 3875,
  "identifiers" : [ "Instrumentation", "ActivityResult", "ar", "mInstrumentation", "execStartActivity", "this", "mMainThread", "getApplicationThread", "mToken", "child", "intent", "requestCode", "options", "if", "ar", "null", "mMainThread", "sendActivityResult", "mToken", "child", "mEmbeddedID", "requestCode", "ar", "getResultCode", "ar", "getResultData" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 3916,
  "endLine" : 3926,
  "identifiers" : [ "Instrumentation", "ActivityResult", "ar", "mInstrumentation", "execStartActivity", "this", "mMainThread", "getApplicationThread", "mToken", "fragment", "intent", "requestCode", "options", "if", "ar", "null", "mMainThread", "sendActivityResult", "mToken", "fragment", "mWho", "requestCode", "ar", "getResultCode", "ar", "getResultData" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 4148,
  "endLine" : 4156,
  "identifiers" : [ "if", "mParent", "null", "throw", "new", "IllegalStateException", "if", "Looper", "myLooper", "mMainThread", "getLooper", "throw", "new", "IllegalStateException", "mMainThread", "requestRelaunchActivity", "mToken", "null", "null", "false", "null", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 4163,
  "endLine" : 4186,
  "identifiers" : [ "if", "mParent", "null", "int", "resultCode", "Intent", "resultData", "synchronized", "this", "resultCode", "mResultCode", "resultData", "mResultData", "if", "false", "Log", "v", "TAG", "mToken", "try", "if", "resultData", "null", "resultData", "prepareToLeaveProcess", "if", "ActivityManagerNative", "getDefault", "finishActivity", "mToken", "resultCode", "resultData", "mFinished", "true", "catch", "RemoteException", "e", "else", "mParent", "finishFromChild", "this" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 4202,
  "endLine" : 4216,
  "identifiers" : [ "if", "mParent", "null", "throw", "new", "IllegalStateException", "if", "mResultCode", "RESULT_CANCELED", "mResultData", "null", "throw", "new", "IllegalStateException", "try", "if", "ActivityManagerNative", "getDefault", "finishActivityAffinity", "mToken", "mFinished", "true", "catch", "RemoteException", "e" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 4323,
  "endLine" : 4338,
  "identifiers" : [ "String", "packageName", "getPackageName", "try", "data", "prepareToLeaveProcess", "IIntentSender", "target", "ActivityManagerNative", "getDefault", "getIntentSender", "ActivityManager", "INTENT_SENDER_ACTIVITY_RESULT", "packageName", "mParent", "null", "mToken", "mParent", "mToken", "mEmbeddedID", "requestCode", "new", "Intent", "data", "null", "flags", "null", "UserHandle", "myUserId", "return", "target", "null", "new", "PendingIntent", "target", "null", "catch", "RemoteException", "e", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 4443,
  "endLine" : 4452,
  "identifiers" : [ "final", "String", "pkg", "getPackageName", "final", "String", "cls", "mComponent", "getClassName", "int", "packageLen", "pkg", "length", "if", "cls", "startsWith", "pkg", "cls", "length", "packageLen", "cls", "charAt", "packageLen", "return", "cls", "return", "cls", "substring", "packageLen" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 4490,
  "endLine" : 4503,
  "identifiers" : [ "if", "getBaseContext", "null", "throw", "new", "IllegalStateException", "if", "WINDOW_SERVICE", "equals", "name", "return", "mWindowManager", "else", "if", "SEARCH_SERVICE", "equals", "name", "ensureSearchManager", "return", "mSearchManager", "return", "super", "getSystemService", "name" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 4702,
  "endLine" : 4779,
  "identifiers" : [ "if", "equals", "name", "return", "onCreateView", "name", "context", "attrs", "String", "fname", "attrs", "getAttributeValue", "null", "TypedArray", "a", "context", "obtainStyledAttributes", "attrs", "com", "android", "internal", "R", "styleable", "Fragment", "if", "fname", "null", "fname", "a", "getString", "com", "android", "internal", "R", "styleable", "Fragment_name", "int", "id", "a", "getResourceId", "com", "android", "internal", "R", "styleable", "Fragment_id", "View", "NO_ID", "String", "tag", "a", "getString", "com", "android", "internal", "R", "styleable", "Fragment_tag", "a", "recycle", "int", "containerId", "parent", "null", "parent", "getId", "if", "containerId", "View", "NO_ID", "id", "View", "NO_ID", "tag", "null", "throw", "new", "IllegalArgumentException", "attrs", "getPositionDescription", "fname", "Fragment", "fragment", "id", "View", "NO_ID", "mFragments", "findFragmentById", "id", "null", "if", "fragment", "null", "tag", "null", "fragment", "mFragments", "findFragmentByTag", "tag", "if", "fragment", "null", "containerId", "View", "NO_ID", "fragment", "mFragments", "findFragmentById", "containerId", "if", "FragmentManagerImpl", "DEBUG", "Log", "v", "TAG", "Integer", "toHexString", "id", "fname", "fragment", "if", "fragment", "null", "fragment", "Fragment", "instantiate", "this", "fname", "fragment", "mFromLayout", "true", "fragment", "mFragmentId", "id", "id", "containerId", "fragment", "mContainerId", "containerId", "fragment", "mTag", "tag", "fragment", "mInLayout", "true", "fragment", "mFragmentManager", "mFragments", "fragment", "onInflate", "this", "attrs", "fragment", "mSavedFragmentState", "mFragments", "addFragment", "fragment", "true", "else", "if", "fragment", "mInLayout", "throw", "new", "IllegalArgumentException", "attrs", "getPositionDescription", "Integer", "toHexString", "id", "tag", "Integer", "toHexString", "containerId", "fname", "else", "fragment", "mInLayout", "true", "if", "fragment", "mRetaining", "fragment", "onInflate", "this", "attrs", "fragment", "mSavedFragmentState", "mFragments", "moveToState", "fragment", "if", "fragment", "mView", "null", "throw", "new", "IllegalStateException", "fname", "if", "id", "fragment", "mView", "setId", "id", "if", "fragment", "mView", "getTag", "null", "fragment", "mView", "setTag", "tag", "return", "fragment", "mView" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 4795,
  "endLine" : 4819,
  "identifiers" : [ "writer", "print", "prefix", "writer", "print", "writer", "print", "Integer", "toHexString", "System", "identityHashCode", "this", "writer", "println", "String", "innerPrefix", "prefix", "writer", "print", "innerPrefix", "writer", "print", "writer", "print", "mResumed", "writer", "print", "writer", "print", "mStopped", "writer", "print", "writer", "println", "mFinished", "writer", "print", "innerPrefix", "writer", "print", "writer", "println", "mLoadersStarted", "writer", "print", "innerPrefix", "writer", "print", "writer", "println", "mChangingConfigurations", "writer", "print", "innerPrefix", "writer", "print", "writer", "println", "mCurrentConfig", "if", "mLoaderManager", "null", "writer", "print", "prefix", "writer", "print", "writer", "print", "Integer", "toHexString", "System", "identityHashCode", "mLoaderManager", "writer", "println", "mLoaderManager", "dump", "prefix", "fd", "writer", "args", "mFragments", "dump", "prefix", "fd", "writer", "args", "writer", "print", "prefix", "writer", "println", "dumpViewHierarchy", "prefix", "writer", "getWindow", "getDecorView" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 4821,
  "endLine" : 4840,
  "identifiers" : [ "writer", "print", "prefix", "if", "view", "null", "writer", "println", "return", "writer", "println", "view", "toString", "if", "view", "instanceof", "ViewGroup", "return", "ViewGroup", "grp", "ViewGroup", "view", "final", "int", "N", "grp", "getChildCount", "if", "N", "return", "prefix", "prefix", "for", "int", "i", "i", "N", "i", "dumpViewHierarchy", "prefix", "writer", "grp", "getChildAt", "i" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 4945,
  "endLine" : 4963,
  "identifiers" : [ "try", "PackageManager", "pm", "getPackageManager", "ComponentName", "cn", "targetIntent", "getComponent", "if", "cn", "null", "cn", "targetIntent", "resolveActivity", "pm", "ActivityInfo", "info", "pm", "getActivityInfo", "cn", "if", "info", "taskAffinity", "null", "return", "false", "return", "ActivityManagerNative", "getDefault", "targetTaskAffinityMatchesActivity", "mToken", "info", "taskAffinity", "catch", "RemoteException", "e", "return", "false", "catch", "NameNotFoundException", "e", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 4987,
  "endLine" : 5017,
  "identifiers" : [ "if", "mParent", "null", "ComponentName", "destInfo", "upIntent", "getComponent", "if", "destInfo", "null", "destInfo", "upIntent", "resolveActivity", "getPackageManager", "if", "destInfo", "null", "return", "false", "upIntent", "new", "Intent", "upIntent", "upIntent", "setComponent", "destInfo", "int", "resultCode", "Intent", "resultData", "synchronized", "this", "resultCode", "mResultCode", "resultData", "mResultData", "if", "resultData", "null", "resultData", "prepareToLeaveProcess", "try", "upIntent", "prepareToLeaveProcess", "return", "ActivityManagerNative", "getDefault", "navigateUpTo", "mToken", "upIntent", "resultCode", "resultData", "catch", "RemoteException", "e", "return", "false", "else", "return", "mParent", "navigateUpToFromChild", "this", "upIntent" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 5046,
  "endLine" : 5066,
  "identifiers" : [ "final", "String", "parentName", "mActivityInfo", "parentActivityName", "if", "TextUtils", "isEmpty", "parentName", "return", "null", "final", "ComponentName", "target", "new", "ComponentName", "this", "parentName", "try", "final", "ActivityInfo", "parentInfo", "getPackageManager", "getActivityInfo", "target", "final", "String", "parentActivity", "parentInfo", "parentActivityName", "final", "Intent", "parentIntent", "parentActivity", "null", "Intent", "makeMainActivity", "target", "new", "Intent", "setComponent", "target", "return", "parentIntent", "catch", "NameNotFoundException", "e", "Log", "e", "TAG", "parentName", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 5087,
  "endLine" : 5125,
  "identifiers" : [ "attachBaseContext", "context", "mFragments", "attachActivity", "this", "mContainer", "null", "mWindow", "PolicyManager", "makeNewWindow", "this", "mWindow", "setCallback", "this", "mWindow", "getLayoutInflater", "setPrivateFactory", "this", "if", "info", "softInputMode", "WindowManager", "LayoutParams", "SOFT_INPUT_STATE_UNSPECIFIED", "mWindow", "setSoftInputMode", "info", "softInputMode", "if", "info", "uiOptions", "mWindow", "setUiOptions", "info", "uiOptions", "mUiThread", "Thread", "currentThread", "mMainThread", "aThread", "mInstrumentation", "instr", "mToken", "token", "mIdent", "ident", "mApplication", "application", "mIntent", "intent", "mComponent", "intent", "getComponent", "mActivityInfo", "info", "mTitle", "title", "mParent", "parent", "mEmbeddedID", "id", "mLastNonConfigurationInstances", "lastNonConfigurationInstances", "mWindow", "setWindowManager", "WindowManager", "context", "getSystemService", "Context", "WINDOW_SERVICE", "mToken", "mComponent", "flattenToString", "info", "flags", "ActivityInfo", "FLAG_HARDWARE_ACCELERATED", "if", "mParent", "null", "mWindow", "setContainer", "mParent", "getWindow", "mWindowManager", "mWindow", "getWindowManager", "mCurrentConfig", "config" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 5139,
  "endLine" : 5161,
  "identifiers" : [ "mFragments", "noteStateNotSaved", "mCalled", "false", "mFragments", "execPendingActions", "mInstrumentation", "callActivityOnStart", "this", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "mFragments", "dispatchStart", "if", "mAllLoaderManagers", "null", "LoaderManagerImpl", "loaders", "new", "LoaderManagerImpl", "mAllLoaderManagers", "size", "mAllLoaderManagers", "values", "toArray", "loaders", "if", "loaders", "null", "for", "int", "i", "i", "loaders", "length", "i", "LoaderManagerImpl", "lm", "loaders", "i", "lm", "finishRetain", "lm", "doReportStart" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 5163,
  "endLine" : 5200,
  "identifiers" : [ "mFragments", "noteStateNotSaved", "if", "mStopped", "mStopped", "false", "if", "mToken", "null", "mParent", "null", "WindowManagerGlobal", "getInstance", "setStoppedState", "mToken", "false", "synchronized", "mManagedCursors", "final", "int", "N", "mManagedCursors", "size", "for", "int", "i", "i", "N", "i", "ManagedCursor", "mc", "mManagedCursors", "get", "i", "if", "mc", "mReleased", "mc", "mUpdated", "if", "mc", "mCursor", "requery", "if", "getApplicationInfo", "targetSdkVersion", "android", "os", "Build", "VERSION_CODES", "ICE_CREAM_SANDWICH", "throw", "new", "IllegalStateException", "mc", "mCursor", "mc", "mReleased", "false", "mc", "mUpdated", "false", "mCalled", "false", "mInstrumentation", "callActivityOnRestart", "this", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "performStart" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 5202,
  "endLine" : 5230,
  "identifiers" : [ "performRestart", "mFragments", "execPendingActions", "mLastNonConfigurationInstances", "null", "mCalled", "false", "mInstrumentation", "callActivityOnResume", "this", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "mCalled", "false", "mFragments", "dispatchResume", "mFragments", "execPendingActions", "onPostResume", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 5232,
  "endLine" : 5244,
  "identifiers" : [ "mFragments", "dispatchPause", "mCalled", "false", "onPause", "mResumed", "false", "if", "mCalled", "getApplicationInfo", "targetSdkVersion", "android", "os", "Build", "VERSION_CODES", "GINGERBREAD", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "mResumed", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 5251,
  "endLine" : 5296,
  "identifiers" : [ "if", "mLoadersStarted", "mLoadersStarted", "false", "if", "mLoaderManager", "null", "if", "mChangingConfigurations", "mLoaderManager", "doStop", "else", "mLoaderManager", "doRetain", "if", "mStopped", "if", "mWindow", "null", "mWindow", "closeAllPanels", "if", "mToken", "null", "mParent", "null", "WindowManagerGlobal", "getInstance", "setStoppedState", "mToken", "true", "mFragments", "dispatchStop", "mCalled", "false", "mInstrumentation", "callActivityOnStop", "this", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "synchronized", "mManagedCursors", "final", "int", "N", "mManagedCursors", "size", "for", "int", "i", "i", "N", "i", "ManagedCursor", "mc", "mManagedCursors", "get", "i", "if", "mc", "mReleased", "mc", "mCursor", "deactivate", "mc", "mReleased", "true", "mStopped", "true", "mResumed", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity3.java",
  "startLine" : 5316,
  "endLine" : 5329,
  "identifiers" : [ "if", "false", "Log", "v", "TAG", "who", "requestCode", "resultCode", "data", "mFragments", "noteStateNotSaved", "if", "who", "null", "onActivityResult", "requestCode", "resultCode", "data", "else", "Fragment", "frag", "mFragments", "findFragmentByWho", "who", "if", "frag", "null", "frag", "onActivityResult", "requestCode", "resultCode", "data" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 832,
  "endLine" : 846,
  "identifiers" : [ "if", "mAllLoaderManagers", "null", "mAllLoaderManagers", "new", "HashMap", "String", "LoaderManagerImpl", "LoaderManagerImpl", "lm", "mAllLoaderManagers", "get", "who", "if", "lm", "null", "if", "create", "lm", "new", "LoaderManagerImpl", "who", "this", "started", "mAllLoaderManagers", "put", "who", "lm", "else", "lm", "updateActivity", "this", "return", "lm" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 887,
  "endLine" : 907,
  "identifiers" : [ "if", "DEBUG_LIFECYCLE", "Slog", "v", "TAG", "this", "savedInstanceState", "if", "mLastNonConfigurationInstances", "null", "mAllLoaderManagers", "mLastNonConfigurationInstances", "loaders", "if", "mActivityInfo", "parentActivityName", "null", "if", "mActionBar", "null", "mEnableDefaultActionBarUp", "true", "else", "mActionBar", "setDefaultDisplayHomeAsUpEnabled", "true", "if", "savedInstanceState", "null", "Parcelable", "p", "savedInstanceState", "getParcelable", "FRAGMENTS_TAG", "mFragments", "restoreAllState", "p", "mLastNonConfigurationInstances", "null", "mLastNonConfigurationInstances", "fragments", "null", "mFragments", "dispatchCreate", "getApplication", "dispatchActivityCreated", "this", "savedInstanceState", "mCalled", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 956,
  "endLine" : 981,
  "identifiers" : [ "final", "Bundle", "b", "savedInstanceState", "getBundle", "SAVED_DIALOGS_TAG", "if", "b", "null", "return", "final", "int", "ids", "b", "getIntArray", "SAVED_DIALOG_IDS_KEY", "final", "int", "numDialogs", "ids", "length", "mManagedDialogs", "new", "SparseArray", "ManagedDialog", "numDialogs", "for", "int", "i", "i", "numDialogs", "i", "final", "Integer", "dialogId", "ids", "i", "Bundle", "dialogState", "b", "getBundle", "savedDialogKeyFor", "dialogId", "if", "dialogState", "null", "final", "ManagedDialog", "md", "new", "ManagedDialog", "md", "mArgs", "b", "getBundle", "savedDialogArgsKeyFor", "dialogId", "md", "mDialog", "createDialog", "dialogId", "dialogState", "md", "mArgs", "if", "md", "mDialog", "null", "mManagedDialogs", "put", "dialogId", "md", "onPrepareDialog", "dialogId", "md", "mDialog", "md", "mArgs", "md", "mDialog", "onRestoreInstanceState", "dialogState" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 1036,
  "endLine" : 1051,
  "identifiers" : [ "if", "DEBUG_LIFECYCLE", "Slog", "v", "TAG", "this", "mCalled", "true", "if", "mLoadersStarted", "mLoadersStarted", "true", "if", "mLoaderManager", "null", "mLoaderManager", "doStart", "else", "if", "mCheckedForLoaderManager", "mLoaderManager", "getLoaderManager", "null", "mLoadersStarted", "false", "mCheckedForLoaderManager", "true", "getApplication", "dispatchActivityStarted", "this" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 1205,
  "endLine" : 1212,
  "identifiers" : [ "outState", "putBundle", "WINDOW_HIERARCHY_TAG", "mWindow", "saveHierarchyState", "Parcelable", "p", "mFragments", "saveAllState", "if", "p", "null", "outState", "putParcelable", "FRAGMENTS_TAG", "p", "getApplication", "dispatchActivitySaveInstanceState", "this", "outState" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 1219,
  "endLine" : 1246,
  "identifiers" : [ "if", "mManagedDialogs", "null", "return", "final", "int", "numDialogs", "mManagedDialogs", "size", "if", "numDialogs", "return", "Bundle", "dialogState", "new", "Bundle", "int", "ids", "new", "int", "mManagedDialogs", "size", "for", "int", "i", "i", "numDialogs", "i", "final", "int", "key", "mManagedDialogs", "keyAt", "i", "ids", "i", "key", "final", "ManagedDialog", "md", "mManagedDialogs", "valueAt", "i", "dialogState", "putBundle", "savedDialogKeyFor", "key", "md", "mDialog", "onSaveInstanceState", "if", "md", "mArgs", "null", "dialogState", "putBundle", "savedDialogArgsKeyFor", "key", "md", "mArgs", "dialogState", "putIntArray", "SAVED_DIALOG_IDS_KEY", "ids", "outState", "putBundle", "SAVED_DIALOGS_TAG", "dialogState" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 1423,
  "endLine" : 1457,
  "identifiers" : [ "if", "DEBUG_LIFECYCLE", "Slog", "v", "TAG", "this", "mCalled", "true", "if", "mManagedDialogs", "null", "final", "int", "numDialogs", "mManagedDialogs", "size", "for", "int", "i", "i", "numDialogs", "i", "final", "ManagedDialog", "md", "mManagedDialogs", "valueAt", "i", "if", "md", "mDialog", "isShowing", "md", "mDialog", "dismiss", "mManagedDialogs", "null", "synchronized", "mManagedCursors", "int", "numCursors", "mManagedCursors", "size", "for", "int", "i", "i", "numCursors", "i", "ManagedCursor", "c", "mManagedCursors", "get", "i", "if", "c", "null", "c", "mCursor", "close", "mManagedCursors", "clear", "if", "mSearchManager", "null", "mSearchManager", "stopSearch", "getApplication", "dispatchActivityDestroyed", "this" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 1475,
  "endLine" : 1494,
  "identifiers" : [ "if", "DEBUG_LIFECYCLE", "Slog", "v", "TAG", "this", "newConfig", "mCalled", "true", "mFragments", "dispatchConfigurationChanged", "newConfig", "if", "mWindow", "null", "mWindow", "onConfigurationChanged", "newConfig", "if", "mWindow", "mIsFloatingWindow", "scaleFloatingWindow", "null", "if", "mActionBar", "null", "mActionBar", "onConfigurationChanged", "newConfig" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 1630,
  "endLine" : 1662,
  "identifiers" : [ "Object", "activity", "onRetainNonConfigurationInstance", "HashMap", "String", "Object", "children", "onRetainNonConfigurationChildInstances", "ArrayList", "Fragment", "fragments", "mFragments", "retainNonConfig", "boolean", "retainLoaders", "false", "if", "mAllLoaderManagers", "null", "LoaderManagerImpl", "loaders", "new", "LoaderManagerImpl", "mAllLoaderManagers", "size", "mAllLoaderManagers", "values", "toArray", "loaders", "if", "loaders", "null", "for", "int", "i", "i", "loaders", "length", "i", "LoaderManagerImpl", "lm", "loaders", "i", "if", "lm", "mRetaining", "retainLoaders", "true", "else", "lm", "doDestroy", "mAllLoaderManagers", "remove", "lm", "mWho", "if", "activity", "null", "children", "null", "fragments", "null", "retainLoaders", "return", "null", "NonConfigurationInstances", "nci", "new", "NonConfigurationInstances", "nci", "activity", "activity", "nci", "children", "children", "nci", "fragments", "fragments", "nci", "loaders", "mAllLoaderManagers", "return", "nci" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 1835,
  "endLine" : 1846,
  "identifiers" : [ "synchronized", "mManagedCursors", "final", "int", "N", "mManagedCursors", "size", "for", "int", "i", "i", "N", "i", "ManagedCursor", "mc", "mManagedCursors", "get", "i", "if", "mc", "mCursor", "c", "mManagedCursors", "remove", "i", "break" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 1881,
  "endLine" : 1894,
  "identifiers" : [ "Window", "window", "getWindow", "window", "getDecorView", "if", "isChild", "window", "hasFeature", "Window", "FEATURE_ACTION_BAR", "mActionBar", "null", "return", "mActionBar", "new", "ActionBarImpl", "this", "mActionBar", "setDefaultDisplayHomeAsUpEnabled", "mEnableDefaultActionBarUp" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 2035,
  "endLine" : 2054,
  "identifiers" : [ "mDefaultKeyMode", "mode", "switch", "mode", "case", "DEFAULT_KEYS_DISABLE", "case", "DEFAULT_KEYS_SHORTCUT", "mDefaultKeySsb", "null", "break", "case", "DEFAULT_KEYS_DIALER", "case", "DEFAULT_KEYS_SEARCH_LOCAL", "case", "DEFAULT_KEYS_SEARCH_GLOBAL", "mDefaultKeySsb", "new", "SpannableStringBuilder", "Selection", "setSelection", "mDefaultKeySsb", "break", "default", "throw", "new", "IllegalArgumentException" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 2082,
  "endLine" : 2139,
  "identifiers" : [ "if", "keyCode", "KeyEvent", "KEYCODE_BACK", "if", "getApplicationInfo", "targetSdkVersion", "Build", "VERSION_CODES", "ECLAIR", "event", "startTracking", "else", "onBackPressed", "return", "true", "if", "mDefaultKeyMode", "DEFAULT_KEYS_DISABLE", "return", "false", "else", "if", "mDefaultKeyMode", "DEFAULT_KEYS_SHORTCUT", "if", "getWindow", "performPanelShortcut", "Window", "FEATURE_OPTIONS_PANEL", "keyCode", "event", "Menu", "FLAG_ALWAYS_PERFORM_CLOSE", "return", "true", "return", "false", "else", "boolean", "clearSpannable", "false", "boolean", "handled", "if", "event", "getRepeatCount", "event", "isSystem", "clearSpannable", "true", "handled", "false", "else", "handled", "TextKeyListener", "getInstance", "onKeyDown", "null", "mDefaultKeySsb", "keyCode", "event", "if", "handled", "mDefaultKeySsb", "length", "final", "String", "str", "mDefaultKeySsb", "toString", "clearSpannable", "true", "switch", "mDefaultKeyMode", "case", "DEFAULT_KEYS_DIALER", "Intent", "intent", "new", "Intent", "Intent", "ACTION_DIAL", "Uri", "parse", "str", "intent", "addFlags", "Intent", "FLAG_ACTIVITY_NEW_TASK", "startActivity", "intent", "break", "case", "DEFAULT_KEYS_SEARCH_LOCAL", "startSearch", "str", "false", "null", "false", "break", "case", "DEFAULT_KEYS_SEARCH_GLOBAL", "startSearch", "str", "false", "null", "true", "break", "if", "clearSpannable", "mDefaultKeySsb", "clear", "mDefaultKeySsb", "clearSpans", "Selection", "setSelection", "mDefaultKeySsb", "return", "handled" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 2392,
  "endLine" : 2402,
  "identifiers" : [ "onUserInteraction", "Window", "win", "getWindow", "if", "win", "superDispatchKeyEvent", "event", "return", "true", "View", "decor", "mDecor", "if", "decor", "null", "decor", "win", "getDecorView", "return", "event", "dispatch", "this", "decor", "null", "decor", "getKeyDispatcherState", "null", "this" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 2477,
  "endLine" : 2492,
  "identifiers" : [ "event", "setClassName", "getClass", "getName", "event", "setPackageName", "getPackageName", "LayoutParams", "params", "getWindow", "getAttributes", "boolean", "isFullScreen", "params", "width", "LayoutParams", "MATCH_PARENT", "params", "height", "LayoutParams", "MATCH_PARENT", "event", "setFullScreen", "isFullScreen", "CharSequence", "title", "getTitle", "if", "TextUtils", "isEmpty", "title", "event", "getText", "add", "title", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 2566,
  "endLine" : 2605,
  "identifiers" : [ "CharSequence", "titleCondensed", "item", "getTitleCondensed", "switch", "featureId", "case", "Window", "FEATURE_OPTIONS_PANEL", "if", "titleCondensed", "null", "EventLog", "writeEvent", "titleCondensed", "toString", "if", "onOptionsItemSelected", "item", "return", "true", "if", "mFragments", "dispatchOptionsItemSelected", "item", "return", "true", "if", "item", "getItemId", "android", "R", "id", "home", "mActionBar", "null", "mActionBar", "getDisplayOptions", "ActionBar", "DISPLAY_HOME_AS_UP", "if", "mParent", "null", "return", "onNavigateUp", "else", "return", "mParent", "onNavigateUpFromChild", "this", "return", "false", "case", "Window", "FEATURE_CONTEXT_MENU", "if", "titleCondensed", "null", "EventLog", "writeEvent", "titleCondensed", "toString", "if", "onContextItemSelected", "item", "return", "true", "return", "mFragments", "dispatchContextItemSelected", "item", "default", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 2616,
  "endLine" : 2632,
  "identifiers" : [ "switch", "featureId", "case", "Window", "FEATURE_OPTIONS_PANEL", "mFragments", "dispatchOptionsMenuClosed", "menu", "onOptionsMenuClosed", "menu", "break", "case", "Window", "FEATURE_CONTEXT_MENU", "onContextMenuClosed", "menu", "break", "case", "Window", "FEATURE_ACTION_BAR", "initActionBar", "mActionBar", "dispatchMenuVisibilityChanged", "false", "break" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 2751,
  "endLine" : 2782,
  "identifiers" : [ "Intent", "upIntent", "getParentActivityIntent", "if", "upIntent", "null", "if", "mActivityInfo", "taskAffinity", "null", "finish", "else", "if", "shouldUpRecreateTask", "upIntent", "TaskStackBuilder", "b", "TaskStackBuilder", "create", "this", "onCreateNavigateUpTaskStack", "b", "onPrepareNavigateUpTaskStack", "b", "b", "startActivities", "if", "mResultCode", "RESULT_CANCELED", "mResultData", "null", "Log", "i", "TAG", "finish", "else", "finishAffinity", "else", "navigateUpTo", "upIntent", "return", "true", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 3086,
  "endLine" : 3104,
  "identifiers" : [ "if", "mManagedDialogs", "null", "mManagedDialogs", "new", "SparseArray", "ManagedDialog", "ManagedDialog", "md", "mManagedDialogs", "get", "id", "if", "md", "null", "md", "new", "ManagedDialog", "md", "mDialog", "createDialog", "id", "null", "args", "if", "md", "mDialog", "null", "return", "false", "mManagedDialogs", "put", "id", "md", "md", "mArgs", "args", "onPrepareDialog", "id", "md", "mDialog", "args", "md", "mDialog", "show", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 3399,
  "endLine" : 3429,
  "identifiers" : [ "if", "mParent", "null", "Instrumentation", "ActivityResult", "ar", "mInstrumentation", "execStartActivity", "this", "mMainThread", "getApplicationThread", "mToken", "this", "intent", "requestCode", "options", "if", "ar", "null", "mMainThread", "sendActivityResult", "mToken", "mEmbeddedID", "requestCode", "ar", "getResultCode", "ar", "getResultData", "if", "requestCode", "mStartedActivity", "true", "else", "if", "options", "null", "mParent", "startActivityFromChild", "this", "intent", "requestCode", "options", "else", "mParent", "startActivityFromChild", "this", "intent", "requestCode" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 3441,
  "endLine" : 3454,
  "identifiers" : [ "if", "mParent", "null", "throw", "new", "RuntimeException", "Instrumentation", "ActivityResult", "ar", "mInstrumentation", "execStartActivity", "this", "mMainThread", "getApplicationThread", "mToken", "this", "intent", "options", "user", "if", "ar", "null", "mMainThread", "sendActivityResult", "mToken", "mEmbeddedID", "ar", "getResultCode", "ar", "getResultData" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 3505,
  "endLine" : 3518,
  "identifiers" : [ "if", "mParent", "null", "startIntentSenderForResultInner", "intent", "requestCode", "fillInIntent", "flagsMask", "flagsValues", "this", "options", "else", "if", "options", "null", "mParent", "startIntentSenderFromChild", "this", "intent", "requestCode", "fillInIntent", "flagsMask", "flagsValues", "extraFlags", "options", "else", "mParent", "startIntentSenderFromChild", "this", "intent", "requestCode", "fillInIntent", "flagsMask", "flagsValues", "extraFlags" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 3523,
  "endLine" : 3551,
  "identifiers" : [ "try", "String", "resolvedType", "null", "if", "fillInIntent", "null", "fillInIntent", "migrateExtraStreamToClipData", "fillInIntent", "prepareToLeaveProcess", "resolvedType", "fillInIntent", "resolveTypeIfNeeded", "getContentResolver", "int", "result", "ActivityManagerNative", "getDefault", "startActivityIntentSender", "mMainThread", "getApplicationThread", "intent", "fillInIntent", "resolvedType", "mToken", "activity", "mEmbeddedID", "requestCode", "flagsMask", "flagsValues", "options", "if", "result", "ActivityManager", "START_CANCELED", "throw", "new", "IntentSender", "SendIntentException", "Instrumentation", "checkStartActivityResult", "result", "null", "catch", "RemoteException", "e", "if", "requestCode", "mStartedActivity", "true" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 3749,
  "endLine" : 3782,
  "identifiers" : [ "if", "mParent", "null", "int", "result", "ActivityManager", "START_RETURN_INTENT_TO_CALLER", "try", "intent", "migrateExtraStreamToClipData", "intent", "prepareToLeaveProcess", "result", "ActivityManagerNative", "getDefault", "startActivity", "mMainThread", "getApplicationThread", "getBasePackageName", "intent", "intent", "resolveTypeIfNeeded", "getContentResolver", "mToken", "mEmbeddedID", "requestCode", "ActivityManager", "START_FLAG_ONLY_IF_NEEDED", "null", "null", "options", "catch", "RemoteException", "e", "Instrumentation", "checkStartActivityResult", "result", "intent", "if", "requestCode", "mStartedActivity", "true", "return", "result", "ActivityManager", "START_RETURN_INTENT_TO_CALLER", "throw", "new", "UnsupportedOperationException" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 3821,
  "endLine" : 3836,
  "identifiers" : [ "if", "mParent", "null", "try", "intent", "migrateExtraStreamToClipData", "intent", "prepareToLeaveProcess", "return", "ActivityManagerNative", "getDefault", "startNextMatchingActivity", "mToken", "intent", "options", "catch", "RemoteException", "e", "return", "false", "throw", "new", "UnsupportedOperationException" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 3876,
  "endLine" : 3886,
  "identifiers" : [ "Instrumentation", "ActivityResult", "ar", "mInstrumentation", "execStartActivity", "this", "mMainThread", "getApplicationThread", "mToken", "child", "intent", "requestCode", "options", "if", "ar", "null", "mMainThread", "sendActivityResult", "mToken", "child", "mEmbeddedID", "requestCode", "ar", "getResultCode", "ar", "getResultData" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 3927,
  "endLine" : 3937,
  "identifiers" : [ "Instrumentation", "ActivityResult", "ar", "mInstrumentation", "execStartActivity", "this", "mMainThread", "getApplicationThread", "mToken", "fragment", "intent", "requestCode", "options", "if", "ar", "null", "mMainThread", "sendActivityResult", "mToken", "fragment", "mWho", "requestCode", "ar", "getResultCode", "ar", "getResultData" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 4159,
  "endLine" : 4167,
  "identifiers" : [ "if", "mParent", "null", "throw", "new", "IllegalStateException", "if", "Looper", "myLooper", "mMainThread", "getLooper", "throw", "new", "IllegalStateException", "mMainThread", "requestRelaunchActivity", "mToken", "null", "null", "false", "null", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 4174,
  "endLine" : 4197,
  "identifiers" : [ "if", "mParent", "null", "int", "resultCode", "Intent", "resultData", "synchronized", "this", "resultCode", "mResultCode", "resultData", "mResultData", "if", "false", "Log", "v", "TAG", "mToken", "try", "if", "resultData", "null", "resultData", "prepareToLeaveProcess", "if", "ActivityManagerNative", "getDefault", "finishActivity", "mToken", "resultCode", "resultData", "mFinished", "true", "catch", "RemoteException", "e", "else", "mParent", "finishFromChild", "this" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 4217,
  "endLine" : 4231,
  "identifiers" : [ "if", "mParent", "null", "throw", "new", "IllegalStateException", "if", "mResultCode", "RESULT_CANCELED", "mResultData", "null", "throw", "new", "IllegalStateException", "try", "if", "ActivityManagerNative", "getDefault", "finishActivityAffinity", "mToken", "mFinished", "true", "catch", "RemoteException", "e" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 4338,
  "endLine" : 4353,
  "identifiers" : [ "String", "packageName", "getPackageName", "try", "data", "prepareToLeaveProcess", "IIntentSender", "target", "ActivityManagerNative", "getDefault", "getIntentSender", "ActivityManager", "INTENT_SENDER_ACTIVITY_RESULT", "packageName", "mParent", "null", "mToken", "mParent", "mToken", "mEmbeddedID", "requestCode", "new", "Intent", "data", "null", "flags", "null", "UserHandle", "myUserId", "return", "target", "null", "new", "PendingIntent", "target", "null", "catch", "RemoteException", "e", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 4458,
  "endLine" : 4467,
  "identifiers" : [ "final", "String", "pkg", "getPackageName", "final", "String", "cls", "mComponent", "getClassName", "int", "packageLen", "pkg", "length", "if", "cls", "startsWith", "pkg", "cls", "length", "packageLen", "cls", "charAt", "packageLen", "return", "cls", "return", "cls", "substring", "packageLen" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 4505,
  "endLine" : 4518,
  "identifiers" : [ "if", "getBaseContext", "null", "throw", "new", "IllegalStateException", "if", "WINDOW_SERVICE", "equals", "name", "return", "mWindowManager", "else", "if", "SEARCH_SERVICE", "equals", "name", "ensureSearchManager", "return", "mSearchManager", "return", "super", "getSystemService", "name" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 4717,
  "endLine" : 4794,
  "identifiers" : [ "if", "equals", "name", "return", "onCreateView", "name", "context", "attrs", "String", "fname", "attrs", "getAttributeValue", "null", "TypedArray", "a", "context", "obtainStyledAttributes", "attrs", "com", "android", "internal", "R", "styleable", "Fragment", "if", "fname", "null", "fname", "a", "getString", "com", "android", "internal", "R", "styleable", "Fragment_name", "int", "id", "a", "getResourceId", "com", "android", "internal", "R", "styleable", "Fragment_id", "View", "NO_ID", "String", "tag", "a", "getString", "com", "android", "internal", "R", "styleable", "Fragment_tag", "a", "recycle", "int", "containerId", "parent", "null", "parent", "getId", "if", "containerId", "View", "NO_ID", "id", "View", "NO_ID", "tag", "null", "throw", "new", "IllegalArgumentException", "attrs", "getPositionDescription", "fname", "Fragment", "fragment", "id", "View", "NO_ID", "mFragments", "findFragmentById", "id", "null", "if", "fragment", "null", "tag", "null", "fragment", "mFragments", "findFragmentByTag", "tag", "if", "fragment", "null", "containerId", "View", "NO_ID", "fragment", "mFragments", "findFragmentById", "containerId", "if", "FragmentManagerImpl", "DEBUG", "Log", "v", "TAG", "Integer", "toHexString", "id", "fname", "fragment", "if", "fragment", "null", "fragment", "Fragment", "instantiate", "this", "fname", "fragment", "mFromLayout", "true", "fragment", "mFragmentId", "id", "id", "containerId", "fragment", "mContainerId", "containerId", "fragment", "mTag", "tag", "fragment", "mInLayout", "true", "fragment", "mFragmentManager", "mFragments", "fragment", "onInflate", "this", "attrs", "fragment", "mSavedFragmentState", "mFragments", "addFragment", "fragment", "true", "else", "if", "fragment", "mInLayout", "throw", "new", "IllegalArgumentException", "attrs", "getPositionDescription", "Integer", "toHexString", "id", "tag", "Integer", "toHexString", "containerId", "fname", "else", "fragment", "mInLayout", "true", "if", "fragment", "mRetaining", "fragment", "onInflate", "this", "attrs", "fragment", "mSavedFragmentState", "mFragments", "moveToState", "fragment", "if", "fragment", "mView", "null", "throw", "new", "IllegalStateException", "fname", "if", "id", "fragment", "mView", "setId", "id", "if", "fragment", "mView", "getTag", "null", "fragment", "mView", "setTag", "tag", "return", "fragment", "mView" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 4810,
  "endLine" : 4834,
  "identifiers" : [ "writer", "print", "prefix", "writer", "print", "writer", "print", "Integer", "toHexString", "System", "identityHashCode", "this", "writer", "println", "String", "innerPrefix", "prefix", "writer", "print", "innerPrefix", "writer", "print", "writer", "print", "mResumed", "writer", "print", "writer", "print", "mStopped", "writer", "print", "writer", "println", "mFinished", "writer", "print", "innerPrefix", "writer", "print", "writer", "println", "mLoadersStarted", "writer", "print", "innerPrefix", "writer", "print", "writer", "println", "mChangingConfigurations", "writer", "print", "innerPrefix", "writer", "print", "writer", "println", "mCurrentConfig", "if", "mLoaderManager", "null", "writer", "print", "prefix", "writer", "print", "writer", "print", "Integer", "toHexString", "System", "identityHashCode", "mLoaderManager", "writer", "println", "mLoaderManager", "dump", "prefix", "fd", "writer", "args", "mFragments", "dump", "prefix", "fd", "writer", "args", "writer", "print", "prefix", "writer", "println", "dumpViewHierarchy", "prefix", "writer", "getWindow", "getDecorView" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 4836,
  "endLine" : 4855,
  "identifiers" : [ "writer", "print", "prefix", "if", "view", "null", "writer", "println", "return", "writer", "println", "view", "toString", "if", "view", "instanceof", "ViewGroup", "return", "ViewGroup", "grp", "ViewGroup", "view", "final", "int", "N", "grp", "getChildCount", "if", "N", "return", "prefix", "prefix", "for", "int", "i", "i", "N", "i", "dumpViewHierarchy", "prefix", "writer", "grp", "getChildAt", "i" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 4960,
  "endLine" : 4978,
  "identifiers" : [ "try", "PackageManager", "pm", "getPackageManager", "ComponentName", "cn", "targetIntent", "getComponent", "if", "cn", "null", "cn", "targetIntent", "resolveActivity", "pm", "ActivityInfo", "info", "pm", "getActivityInfo", "cn", "if", "info", "taskAffinity", "null", "return", "false", "return", "ActivityManagerNative", "getDefault", "targetTaskAffinityMatchesActivity", "mToken", "info", "taskAffinity", "catch", "RemoteException", "e", "return", "false", "catch", "NameNotFoundException", "e", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 5002,
  "endLine" : 5032,
  "identifiers" : [ "if", "mParent", "null", "ComponentName", "destInfo", "upIntent", "getComponent", "if", "destInfo", "null", "destInfo", "upIntent", "resolveActivity", "getPackageManager", "if", "destInfo", "null", "return", "false", "upIntent", "new", "Intent", "upIntent", "upIntent", "setComponent", "destInfo", "int", "resultCode", "Intent", "resultData", "synchronized", "this", "resultCode", "mResultCode", "resultData", "mResultData", "if", "resultData", "null", "resultData", "prepareToLeaveProcess", "try", "upIntent", "prepareToLeaveProcess", "return", "ActivityManagerNative", "getDefault", "navigateUpTo", "mToken", "upIntent", "resultCode", "resultData", "catch", "RemoteException", "e", "return", "false", "else", "return", "mParent", "navigateUpToFromChild", "this", "upIntent" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 5061,
  "endLine" : 5081,
  "identifiers" : [ "final", "String", "parentName", "mActivityInfo", "parentActivityName", "if", "TextUtils", "isEmpty", "parentName", "return", "null", "final", "ComponentName", "target", "new", "ComponentName", "this", "parentName", "try", "final", "ActivityInfo", "parentInfo", "getPackageManager", "getActivityInfo", "target", "final", "String", "parentActivity", "parentInfo", "parentActivityName", "final", "Intent", "parentIntent", "parentActivity", "null", "Intent", "makeMainActivity", "target", "new", "Intent", "setComponent", "target", "return", "parentIntent", "catch", "NameNotFoundException", "e", "Log", "e", "TAG", "parentName", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 5102,
  "endLine" : 5179,
  "identifiers" : [ "attachBaseContext", "context", "mFragments", "attachActivity", "this", "mContainer", "null", "boolean", "floating", "intent", "getFlags", "Intent", "FLAG_FLOATING_WINDOW", "Intent", "FLAG_FLOATING_WINDOW", "boolean", "history", "intent", "getFlags", "Intent", "FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY", "Intent", "FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY", "if", "intent", "null", "floating", "history", "TypedArray", "styleArray", "context", "obtainStyledAttributes", "info", "theme", "com", "android", "internal", "R", "styleable", "Window", "TypedValue", "backgroundValue", "styleArray", "peekValue", "com", "android", "internal", "R", "styleable", "Window_windowBackground", "TypedValue", "outValue", "new", "TypedValue", "boolean", "result", "styleArray", "getValue", "com", "android", "internal", "R", "styleable", "Window_windowNoTitle", "outValue", "if", "backgroundValue", "null", "backgroundValue", "toString", "contains", "context", "getTheme", "applyStyle", "com", "android", "internal", "R", "style", "Theme_DeviceDefault_FloatingWindowLight", "true", "else", "context", "getTheme", "applyStyle", "com", "android", "internal", "R", "style", "Theme_DeviceDefault_FloatingWindow", "true", "parent", "null", "mWindow", "PolicyManager", "makeNewWindow", "this", "mWindow", "mIsFloatingWindow", "true", "mWindow", "setCloseOnTouchOutsideIfNotSet", "true", "mWindow", "setGravity", "Gravity", "CENTER", "if", "this", "instanceof", "LayerActivity", "android", "os", "Process", "myUid", "android", "os", "Process", "SYSTEM_UID", "mWindow", "setFlags", "WindowManager", "LayoutParams", "FLAG_DIM_BEHIND", "WindowManager", "LayoutParams", "FLAG_DIM_BEHIND", "WindowManager", "LayoutParams", "params", "mWindow", "getAttributes", "params", "alpha", "f", "params", "dimAmount", "f", "mWindow", "setAttributes", "android", "view", "WindowManager", "LayoutParams", "params", "scaleFloatingWindow", "context", "else", "mWindow", "PolicyManager", "makeNewWindow", "this", "mWindow", "setCallback", "this", "mWindow", "getLayoutInflater", "setPrivateFactory", "this", "if", "info", "softInputMode", "WindowManager", "LayoutParams", "SOFT_INPUT_STATE_UNSPECIFIED", "mWindow", "setSoftInputMode", "info", "softInputMode", "if", "info", "uiOptions", "mWindow", "setUiOptions", "info", "uiOptions", "mUiThread", "Thread", "currentThread", "mMainThread", "aThread", "mInstrumentation", "instr", "mToken", "token", "mIdent", "ident", "mApplication", "application", "mIntent", "intent", "mComponent", "intent", "getComponent", "mActivityInfo", "info", "mTitle", "title", "mParent", "parent", "mEmbeddedID", "id", "mLastNonConfigurationInstances", "lastNonConfigurationInstances", "mWindow", "setWindowManager", "WindowManager", "context", "getSystemService", "Context", "WINDOW_SERVICE", "mToken", "mComponent", "flattenToString", "info", "flags", "ActivityInfo", "FLAG_HARDWARE_ACCELERATED", "if", "mParent", "null", "mWindow", "setContainer", "mParent", "getWindow", "mWindowManager", "mWindow", "getWindowManager", "mCurrentConfig", "config" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 5181,
  "endLine" : 5199,
  "identifiers" : [ "if", "mWindow", "mIsFloatingWindow", "return", "WindowManager", "wm", "null", "if", "context", "null", "wm", "WindowManager", "context", "getSystemService", "Context", "WINDOW_SERVICE", "else", "wm", "WindowManager", "getSystemService", "Context", "WINDOW_SERVICE", "Display", "display", "wm", "getDefaultDisplay", "DisplayMetrics", "metrics", "new", "DisplayMetrics", "display", "getMetrics", "metrics", "if", "metrics", "heightPixels", "metrics", "widthPixels", "mWindow", "setLayout", "int", "metrics", "widthPixels", "f", "int", "metrics", "heightPixels", "f", "else", "mWindow", "setLayout", "int", "metrics", "widthPixels", "f", "int", "metrics", "heightPixels", "f" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 5213,
  "endLine" : 5235,
  "identifiers" : [ "mFragments", "noteStateNotSaved", "mCalled", "false", "mFragments", "execPendingActions", "mInstrumentation", "callActivityOnStart", "this", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "mFragments", "dispatchStart", "if", "mAllLoaderManagers", "null", "LoaderManagerImpl", "loaders", "new", "LoaderManagerImpl", "mAllLoaderManagers", "size", "mAllLoaderManagers", "values", "toArray", "loaders", "if", "loaders", "null", "for", "int", "i", "i", "loaders", "length", "i", "LoaderManagerImpl", "lm", "loaders", "i", "lm", "finishRetain", "lm", "doReportStart" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 5237,
  "endLine" : 5274,
  "identifiers" : [ "mFragments", "noteStateNotSaved", "if", "mStopped", "mStopped", "false", "if", "mToken", "null", "mParent", "null", "WindowManagerGlobal", "getInstance", "setStoppedState", "mToken", "false", "synchronized", "mManagedCursors", "final", "int", "N", "mManagedCursors", "size", "for", "int", "i", "i", "N", "i", "ManagedCursor", "mc", "mManagedCursors", "get", "i", "if", "mc", "mReleased", "mc", "mUpdated", "if", "mc", "mCursor", "requery", "if", "getApplicationInfo", "targetSdkVersion", "android", "os", "Build", "VERSION_CODES", "ICE_CREAM_SANDWICH", "throw", "new", "IllegalStateException", "mc", "mCursor", "mc", "mReleased", "false", "mc", "mUpdated", "false", "mCalled", "false", "mInstrumentation", "callActivityOnRestart", "this", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "performStart" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 5276,
  "endLine" : 5336,
  "identifiers" : [ "if", "mWindow", "null", "ExtendedPropertiesUtils", "isInitialized", "try", "if", "ExtendedPropertiesUtils", "mGlobalHook", "expand", "Settings", "System", "putInt", "this", "getContentResolver", "Settings", "System", "EXPANDED_DESKTOP_STATE", "else", "if", "mWindow", "null", "mWindow", "mIsFloatingWindow", "ExtendedPropertiesUtils", "mGlobalHook", "mancol", "ColorUtils", "getPerAppColorState", "this", "for", "int", "i", "i", "ExtendedPropertiesUtils", "PARANOID_COLORS_COUNT", "i", "String", "setting", "ExtendedPropertiesUtils", "PARANOID_COLORS_SETTINGS", "i", "ColorUtils", "ColorSettingInfo", "colorInfo", "ColorUtils", "getColorSettingInfo", "this", "setting", "String", "appColor", "ExtendedPropertiesUtils", "mGlobalHook", "colors", "i", "String", "nextColor", "appColor", "null", "appColor", "equals", "colorInfo", "systemColorString", "appColor", "if", "nextColor", "toUpperCase", "equals", "colorInfo", "lastColorString", "toUpperCase", "ColorUtils", "setColor", "this", "setting", "colorInfo", "systemColorString", "nextColor", "catch", "Exception", "e", "performRestart", "mFragments", "execPendingActions", "mLastNonConfigurationInstances", "null", "mCalled", "false", "mInstrumentation", "callActivityOnResume", "this", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "mCalled", "false", "mFragments", "dispatchResume", "mFragments", "execPendingActions", "onPostResume", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 5338,
  "endLine" : 5362,
  "identifiers" : [ "if", "ExtendedPropertiesUtils", "isInitialized", "mParent", "null", "mDecor", "null", "mDecor", "getParent", "null", "ExtendedPropertiesUtils", "mGlobalHook", "expand", "try", "Settings", "System", "putInt", "this", "getContentResolver", "Settings", "System", "EXPANDED_DESKTOP_STATE", "catch", "Exception", "e", "mFragments", "dispatchPause", "mCalled", "false", "onPause", "mResumed", "false", "if", "mCalled", "getApplicationInfo", "targetSdkVersion", "android", "os", "Build", "VERSION_CODES", "GINGERBREAD", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "mResumed", "false" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 5369,
  "endLine" : 5422,
  "identifiers" : [ "if", "mLoadersStarted", "mLoadersStarted", "false", "if", "mLoaderManager", "null", "if", "mChangingConfigurations", "mLoaderManager", "doStop", "else", "mLoaderManager", "doRetain", "if", "mStopped", "if", "mWindow", "null", "mWindow", "closeAllPanels", "if", "mToken", "null", "mParent", "null", "WindowManagerGlobal", "getInstance", "setStoppedState", "mToken", "true", "mFragments", "dispatchStop", "mCalled", "false", "mInstrumentation", "callActivityOnStop", "this", "if", "mCalled", "throw", "new", "SuperNotCalledException", "mComponent", "toShortString", "synchronized", "mManagedCursors", "final", "int", "N", "mManagedCursors", "size", "for", "int", "i", "i", "N", "i", "ManagedCursor", "mc", "mManagedCursors", "get", "i", "if", "mc", "mReleased", "mc", "mCursor", "deactivate", "mc", "mReleased", "true", "mStopped", "true", "mResumed", "false", "if", "mChangingConfigurations", "mWindow", "null", "mWindow", "mIsFloatingWindow", "isFinishing", "finish" ]
}, {
  "path" : "d:\\GitRepo\\ProjectCloneAnalysis\\test\\Activity4.java",
  "startLine" : 5442,
  "endLine" : 5455,
  "identifiers" : [ "if", "false", "Log", "v", "TAG", "who", "requestCode", "resultCode", "data", "mFragments", "noteStateNotSaved", "if", "who", "null", "onActivityResult", "requestCode", "resultCode", "data", "else", "Fragment", "frag", "mFragments", "findFragmentByWho", "who", "if", "frag", "null", "frag", "onActivityResult", "requestCode", "resultCode", "data" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\bean\\MeasurePair.java",
  "startLine" : 53,
  "endLine" : 62,
  "identifiers" : [ "if", "obj", "instanceof", "MeasurePair", "return", "false", "MeasurePair", "other", "MeasurePair", "obj", "boolean", "equal1", "firstMeasureIndex", "other", "firstMeasureIndex", "secondMeasureIndex", "other", "secondMeasureIndex", "boolean", "equal2", "firstMeasureIndex", "other", "secondMeasureIndex", "secondMeasureIndex", "other", "firstMeasureIndex", "return", "equal1", "equal2" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\config\\Config.java",
  "startLine" : 51,
  "endLine" : 67,
  "identifiers" : [ "properties", "setProperty", "language", "properties", "setProperty", "extensions", "properties", "setProperty", "String", "valueOf", "threshold", "properties", "setProperty", "String", "valueOf", "mlc", "properties", "setProperty", "String", "valueOf", "mlcc", "properties", "setProperty", "String", "valueOf", "minLine", "properties", "setProperty", "String", "valueOf", "sepNum", "properties", "setProperty", "exe", "properties", "setProperty", "granularity", "properties", "setProperty", "String", "valueOf", "openStringHash", "properties", "setProperty", "String", "valueOf", "useLongType", "properties", "setProperty", "String", "valueOf", "useGPU", "properties", "setProperty", "String", "valueOf", "tokenize", "properties", "setProperty", "String", "valueOf", "onlyTokenize", "properties", "store", "new", "FileWriter", "CONFIG_FILE", "COMMENT" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\config\\Config.java",
  "startLine" : 72,
  "endLine" : 102,
  "identifiers" : [ "try", "if", "new", "File", "CONFIG_FILE", "exists", "properties", "load", "new", "FileReader", "CONFIG_FILE", "language", "properties", "getProperty", "extensions", "properties", "getProperty", "extensionArray", "extensions", "split", "threshold", "Float", "parseFloat", "properties", "getProperty", "mlc", "Integer", "parseInt", "properties", "getProperty", "mlcc", "Integer", "parseInt", "properties", "getProperty", "minLine", "Integer", "parseInt", "properties", "getProperty", "sepNum", "Long", "parseLong", "properties", "getProperty", "exe", "properties", "getProperty", "granularity", "properties", "getProperty", "openStringHash", "Integer", "parseInt", "properties", "getProperty", "useLongType", "Integer", "parseInt", "properties", "getProperty", "useGPU", "Integer", "parseInt", "properties", "getProperty", "tokenize", "Integer", "parseInt", "properties", "getProperty", "onlyTokenize", "Integer", "parseInt", "properties", "getProperty", "else", "save", "log", "error", "System", "exit", "catch", "IOException", "e", "System", "exit", "catch", "NumberFormatException", "e", "log", "error", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\CPUSnippetParser.java",
  "startLine" : 35,
  "endLine" : 64,
  "identifiers" : [ "log", "info", "log", "info", "log", "info", "List", "Integer", "result", "new", "ArrayList", "int", "tokenFileNum", "tokenIndexList", "size", "if", "tokenFileNum", "String", "dataFile", "String", "format", "Constants", "DATAZ", "ParseMatchResult", "parseFileToInt", "dataFile", "result", "parseOneDataFile", "result", "result", "clear", "else", "int", "totalCnt", "tokenFileNum", "tokenFileNum", "int", "cnt", "for", "int", "j", "j", "tokenFileNum", "j", "for", "int", "i", "j", "i", "tokenFileNum", "i", "cnt", "log", "info", "cnt", "f", "totalCnt", "String", "dataFile", "String", "format", "Constants", "DATAZ", "j", "i", "ParseMatchResult", "parseFileToInt", "dataFile", "result", "parseOneDataFile", "result", "result", "clear", "log", "info", "cloneID", "get" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\CPUSnippetParser.java",
  "startLine" : 66,
  "endLine" : 84,
  "identifiers" : [ "int", "cache", "for", "int", "i", "i", "result", "size", "int", "situation", "int", "float", "i", "float", "result", "size", "if", "situation", "cache", "cache", "situation", "try", "gatherCloneFragment", "result", "get", "i", "result", "get", "i", "result", "get", "i", "i", "catch", "IndexOutOfBoundsException", "e", "e", "printStackTrace", "printType12Clone", "printType3Clone" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\CPUSnippetParser.java",
  "startLine" : 86,
  "endLine" : 147,
  "identifiers" : [ "int", "firstFrom", "Measure", "binarySearchStart", "x1", "int", "firstTo", "Measure", "binarySearchEnd", "x1", "cloneLen", "int", "secondFrom", "Measure", "binarySearchStart", "x2", "int", "secondTo", "Measure", "binarySearchEnd", "x2", "cloneLen", "if", "firstFrom", "firstTo", "secondFrom", "secondTo", "return", "Measure", "f1", "Measure", "measureList", "get", "firstFrom", "Measure", "f2", "Measure", "measureList", "get", "secondFrom", "int", "f1startToken", "int", "x1", "f1", "getStartToken", "int", "f2startToken", "int", "x2", "f2", "getStartToken", "Snippet", "s1", "new", "Snippet", "s1", "setFile", "files", "get", "f1", "getFileId", "getAbsolutePath", "s1", "setMStartLine", "f1", "getStartLine", "s1", "setMEndLine", "f1", "getEndLine", "s1", "setMeasureId", "f1", "getId", "s1", "setStartToken", "f1startToken", "s1", "setEndToken", "f1startToken", "cloneLen", "int", "line1", "getSnippetStartEndLine", "f1", "s1", "getStartToken", "s1", "getEndToken", "s1", "setSStartLine", "line1", "s1", "setSEndLine", "line1", "Snippet", "s2", "new", "Snippet", "s2", "setFile", "files", "get", "f2", "getFileId", "getAbsolutePath", "s2", "setMStartLine", "f2", "getStartLine", "s2", "setMEndLine", "f2", "getEndLine", "s2", "setMeasureId", "f2", "getId", "s2", "setStartToken", "f2startToken", "s2", "setEndToken", "f2startToken", "cloneLen", "int", "line2", "getSnippetStartEndLine", "f2", "s2", "getStartToken", "s2", "getEndToken", "s2", "setSStartLine", "line2", "s2", "setSEndLine", "line2", "SnippetPair", "snippetPair", "null", "if", "s1", "getEndToken", "s2", "getEndToken", "snippetPair", "new", "SnippetPair", "s1", "s2", "else", "snippetPair", "new", "SnippetPair", "s2", "s1", "String", "key", "generateType12Key", "snippetPair", "List", "SnippetPair", "snippetPairs", "snippets", "getOrDefault", "key", "new", "ArrayList", "snippetPairs", "add", "snippetPair", "snippets", "put", "key", "snippetPairs", "String", "method1", "String", "format", "s1", "getFile", "s1", "getMStartLine", "s1", "getMEndLine", "String", "method2", "String", "format", "s2", "getFile", "s2", "getMStartLine", "s2", "getMEndLine", "if", "method1", "compareTo", "method2", "snippetPair", "new", "SnippetPair", "s1", "s2", "key", "method1", "method2", "else", "snippetPair", "new", "SnippetPair", "s2", "s1", "key", "method2", "method1", "snippetPairs", "type3Snippets", "getOrDefault", "key", "new", "ArrayList", "snippetPairs", "add", "snippetPair", "type3Snippets", "put", "key", "snippetPairs" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\CPUSnippetParser.java",
  "startLine" : 153,
  "endLine" : 181,
  "identifiers" : [ "int", "groupId", "try", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "Constants", "TYPE12_SNIPPET_CLONE_GROUP_FILENAME", "for", "List", "SnippetPair", "snippetPairs", "snippets", "values", "groupId", "if", "snippetPairs", "size", "printSnippetPair", "snippetPairs", "get", "groupId", "writer", "continue", "SnippetPair", "pair", "snippetPairs", "stream", "min", "new", "Comparator", "SnippetPair", "Override", "public", "int", "compare", "SnippetPair", "o1", "SnippetPair", "o2", "if", "o1", "getS1", "getStartToken", "o2", "getS1", "getStartToken", "return", "else", "if", "o1", "getS1", "getStartToken", "o2", "getS1", "getStartToken", "return", "return", "get", "snippetPairs", "clear", "printSnippetPair", "pair", "groupId", "writer", "writer", "flush", "catch", "Exception", "e", "e", "printStackTrace", "cloneID", "set", "groupId" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\CPUSnippetParser.java",
  "startLine" : 183,
  "endLine" : 194,
  "identifiers" : [ "snippetPair", "getS1", "setGroupId", "groupId", "snippetPair", "getS2", "setGroupId", "groupId", "try", "writer", "write", "snippetPair", "getS1", "toString", "writer", "newLine", "writer", "write", "snippetPair", "getS2", "toString", "writer", "newLine", "writer", "newLine", "catch", "Exception", "e" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\CPUSnippetParser.java",
  "startLine" : 204,
  "endLine" : 225,
  "identifiers" : [ "int", "groupId", "cloneID", "get", "try", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "Constants", "TYPE3_SNIPPET_CLONE_GROUP_FILENAME", "for", "List", "SnippetPair", "snippetPairs", "type3Snippets", "values", "if", "snippetPairs", "size", "continue", "List", "SnippetPair", "type3Pairs", "mergeType3Snippets", "snippetPairs", "if", "type3Pairs", "size", "continue", "for", "SnippetPair", "pair", "type3Pairs", "groupId", "printSnippetPair", "pair", "groupId", "writer", "catch", "Exception", "e", "e", "printStackTrace", "cloneID", "set", "groupId", "type3Snippets", "clear" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\CPUSnippetParser.java",
  "startLine" : 232,
  "endLine" : 303,
  "identifiers" : [ "int", "tokenGap", "List", "SnippetPair", "type3Pairs", "new", "ArrayList", "snippetPairs", "sort", "new", "Comparator", "SnippetPair", "Override", "public", "int", "compare", "SnippetPair", "o1", "SnippetPair", "o2", "if", "o1", "getS1", "getStartToken", "o2", "getS1", "getStartToken", "return", "else", "if", "o1", "getS1", "getStartToken", "o2", "getS1", "getStartToken", "return", "return", "SnippetPair", "pair", "snippetPairs", "get", "boolean", "isSameMethodClone", "isInSameMethod", "pair", "getS1", "pair", "getS2", "int", "i", "if", "isSameMethodClone", "while", "i", "snippetPairs", "size", "SnippetPair", "nextPair", "snippetPairs", "get", "i", "if", "pair", "getS1", "getStartToken", "nextPair", "getS1", "getStartToken", "pair", "getS2", "getStartToken", "nextPair", "getS1", "getStartToken", "pair", "getS2", "getStartToken", "nextPair", "getS2", "getStartToken", "if", "pair", "getS1", "getEndToken", "nextPair", "getS1", "getEndToken", "if", "pair", "getS1", "getEndToken", "tokenGap", "nextPair", "getS1", "getStartToken", "if", "pair", "getS2", "getEndToken", "tokenGap", "nextPair", "getS2", "getStartToken", "Snippet", "tmp1", "linkSnippets", "pair", "getS1", "nextPair", "getS1", "Snippet", "tmp2", "linkSnippets", "pair", "getS2", "nextPair", "getS2", "type3Pairs", "add", "new", "SnippetPair", "tmp1", "tmp2", "pair", "nextPair", "i", "else", "int", "cnt", "while", "i", "snippetPairs", "size", "SnippetPair", "nextPair", "snippetPairs", "get", "i", "boolean", "merged", "false", "if", "pair", "getS1", "getEndToken", "nextPair", "getS1", "getEndToken", "if", "pair", "getS1", "getEndToken", "tokenGap", "nextPair", "getS1", "getStartToken", "if", "pair", "getS2", "getStartToken", "nextPair", "getS2", "getStartToken", "if", "pair", "getS2", "getEndToken", "tokenGap", "nextPair", "getS2", "getStartToken", "Snippet", "tmp1", "linkSnippets", "pair", "getS1", "nextPair", "getS1", "Snippet", "tmp2", "linkSnippets", "pair", "getS2", "nextPair", "getS2", "pair", "new", "SnippetPair", "tmp1", "tmp2", "merged", "true", "cnt", "if", "merged", "i", "snippetPairs", "size", "if", "cnt", "type3Pairs", "add", "pair", "cnt", "pair", "nextPair", "i", "return", "type3Pairs" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\CPUSnippetParser.java",
  "startLine" : 323,
  "endLine" : 334,
  "identifiers" : [ "Snippet", "newSnip", "new", "Snippet", "newSnip", "setFile", "s1", "getFile", "newSnip", "setMStartLine", "s1", "getMStartLine", "newSnip", "setMEndLine", "s1", "getMEndLine", "newSnip", "setMeasureId", "s1", "getMeasureId", "newSnip", "setStartToken", "Math", "min", "s1", "getStartToken", "s2", "getStartToken", "newSnip", "setEndToken", "Math", "max", "s1", "getEndToken", "s2", "getEndToken", "newSnip", "setSStartLine", "Math", "min", "s1", "getSStartLine", "s2", "getSStartLine", "newSnip", "setSEndLine", "Math", "max", "s1", "getSEndLine", "s2", "getSEndLine", "return", "newSnip" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\CPUSnippetParser.java",
  "startLine" : 343,
  "endLine" : 369,
  "identifiers" : [ "int", "chunkIndex", "int", "result", "new", "int", "for", "int", "i", "i", "state", "getTokenIndexList", "size", "i", "if", "measure", "getStartToken", "state", "getTokenIndexList", "get", "i", "chunkIndex", "i", "chunkIndex", "chunkIndex", "state", "getTokenIndexList", "size", "chunkIndex", "snippetStartIndex", "snippetEndIndex", "long", "measureOffset", "measure", "getStartToken", "state", "getTokenIndexList", "get", "chunkIndex", "long", "snippetOffset", "measureOffset", "snippetStartIndex", "String", "tokenLinePath", "String", "format", "Constants", "TOKEN_LINE_CSV", "chunkIndex", "try", "DataInputStream", "dataInputStream", "new", "DataInputStream", "new", "FileInputStream", "tokenLinePath", "dataInputStream", "skip", "snippetOffset", "result", "dataInputStream", "readShort", "dataInputStream", "skip", "snippetEndIndex", "snippetStartIndex", "result", "dataInputStream", "readShort", "catch", "IOException", "e", "log", "error", "e", "toString", "e", "printStackTrace", "System", "exit", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\enums\\CTokens.java",
  "startLine" : 113,
  "endLine" : 207,
  "identifiers" : [ "tokenMap", "put", "AUTO", "tokenMap", "put", "BREAK", "tokenMap", "put", "CASE", "tokenMap", "put", "CHAR", "tokenMap", "put", "CONST", "tokenMap", "put", "CONTINUE", "tokenMap", "put", "DEFAULT", "tokenMap", "put", "DO", "tokenMap", "put", "DOUBLE", "tokenMap", "put", "ELSE", "tokenMap", "put", "ENUM", "tokenMap", "put", "EXTERN", "tokenMap", "put", "FLOAT", "tokenMap", "put", "FOR", "tokenMap", "put", "GOTO", "tokenMap", "put", "IF", "tokenMap", "put", "INLINE", "tokenMap", "put", "INT", "tokenMap", "put", "LONG", "tokenMap", "put", "REGISTER", "tokenMap", "put", "RESTRICT", "tokenMap", "put", "RETURN", "tokenMap", "put", "SHORT", "tokenMap", "put", "SIGNED", "tokenMap", "put", "SIZE_OF", "tokenMap", "put", "STATIC", "tokenMap", "put", "STRUCT", "tokenMap", "put", "SWITCH", "tokenMap", "put", "TYPE_OF", "tokenMap", "put", "UNION", "tokenMap", "put", "UNSIGNED", "tokenMap", "put", "VOID", "tokenMap", "put", "VOLATILE", "tokenMap", "put", "WHILE", "tokenMap", "put", "ALIGN_AS", "tokenMap", "put", "ALIGN_OF", "tokenMap", "put", "AUTOMIC", "tokenMap", "put", "BOOL", "tokenMap", "put", "COMPLEX", "tokenMap", "put", "GENERIC", "tokenMap", "put", "STATIC_ASSERT", "tokenMap", "put", "THREAD_LOCAL", "tokenMap", "put", "LEFT_PAREN", "tokenMap", "put", "RIGHT_PAREN", "tokenMap", "put", "LEFT_BRACKET", "tokenMap", "put", "RIGHT_BRACKET", "tokenMap", "put", "LEFT_BRACE", "tokenMap", "put", "RIGHT_BRACE", "tokenMap", "put", "LESS", "tokenMap", "put", "LESS_EQUAL", "tokenMap", "put", "GREATER", "tokenMap", "put", "GREATER_EQUAL", "tokenMap", "put", "LEFT_SHIFT", "tokenMap", "put", "RIGHT_SHIFT", "tokenMap", "put", "PLUS", "tokenMap", "put", "PLUS_PLUS", "tokenMap", "put", "MINUS", "tokenMap", "put", "MINUS_MINUS", "tokenMap", "put", "STAR", "tokenMap", "put", "DIV", "tokenMap", "put", "MOD", "tokenMap", "put", "AND", "tokenMap", "put", "OR", "tokenMap", "put", "AND_AND", "tokenMap", "put", "OR_OR", "tokenMap", "put", "CARET", "tokenMap", "put", "NOT", "tokenMap", "put", "TILDE", "tokenMap", "put", "QUESTION", "tokenMap", "put", "COLON", "tokenMap", "put", "SEMI", "tokenMap", "put", "COMMA", "tokenMap", "put", "ASSIGN", "tokenMap", "put", "STAR_ASSIGN", "tokenMap", "put", "DIV_ASSIGN", "tokenMap", "put", "MOD_ASSIGN", "tokenMap", "put", "PLUS_ASSIGN", "tokenMap", "put", "MINUS_ASSIGN", "tokenMap", "put", "LEFT_SHIFT_ASSIGN", "tokenMap", "put", "RIGHT_SHIFT_ASSIGN", "tokenMap", "put", "AND_ASSIGN", "tokenMap", "put", "XOR_ASSIGN", "tokenMap", "put", "OR_ASSIGN", "tokenMap", "put", "EQUAL", "tokenMap", "put", "NOT_EQUAL", "tokenMap", "put", "ARROW", "tokenMap", "put", "DOT", "tokenMap", "put", "ELLIPSIS", "tokenMap", "put", "IDENTIFIER", "tokenMap", "put", "DIGIT", "tokenMap", "put", "POUND" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\enums\\GoTokens.java",
  "startLine" : 83,
  "endLine" : 150,
  "identifiers" : [ "tokenMap", "put", "BREAK", "tokenMap", "put", "CASE", "tokenMap", "put", "CHAN", "tokenMap", "put", "CONST", "tokenMap", "put", "CONTINUE", "tokenMap", "put", "DEFAULT", "tokenMap", "put", "DEFER", "tokenMap", "put", "ELSE", "tokenMap", "put", "FALL_THROUGH", "tokenMap", "put", "FOR", "tokenMap", "put", "FUNC", "tokenMap", "put", "GO", "tokenMap", "put", "GOTO", "tokenMap", "put", "IF", "tokenMap", "put", "IMPORT", "tokenMap", "put", "INTERFACE", "tokenMap", "put", "MAP", "tokenMap", "put", "PACKAGE", "tokenMap", "put", "RANGE", "tokenMap", "put", "RETURN", "tokenMap", "put", "SELECT", "tokenMap", "put", "STRUCT", "tokenMap", "put", "SWITCH", "tokenMap", "put", "TYPE", "tokenMap", "put", "VAR", "tokenMap", "put", "PLUS", "tokenMap", "put", "MINUS", "tokenMap", "put", "STAR", "tokenMap", "put", "DIV", "tokenMap", "put", "MOD", "tokenMap", "put", "PLUS_PLUS", "tokenMap", "put", "MINUS_MINUS", "tokenMap", "put", "EQUAL", "tokenMap", "put", "NOT_EQUAL", "tokenMap", "put", "GREATER", "tokenMap", "put", "LESS", "tokenMap", "put", "GREATER_EQUAL", "tokenMap", "put", "LESS_EQUAL", "tokenMap", "put", "AND", "tokenMap", "put", "OR", "tokenMap", "put", "NOT", "tokenMap", "put", "CARET", "tokenMap", "put", "LEFT_SHIFT", "tokenMap", "put", "RIGHT_SHIFT", "tokenMap", "put", "ASSIGN", "tokenMap", "put", "PLUS_ASSIGN", "tokenMap", "put", "MINUS_ASSIGN", "tokenMap", "put", "STAR_ASSIGN", "tokenMap", "put", "DIV_ASSIGN", "tokenMap", "put", "MOD_ASSIGN", "tokenMap", "put", "LEFT_SHIFT_ASSIGN", "tokenMap", "put", "RIGHT_SHIFT_ASSIGN", "tokenMap", "put", "AND_ASSIGN", "tokenMap", "put", "XOR_ASSIGN", "tokenMap", "put", "OR_ASSIGN", "tokenMap", "put", "QUESTION", "tokenMap", "put", "COLON", "tokenMap", "put", "SEMI", "tokenMap", "put", "COMMA", "tokenMap", "put", "DOT", "tokenMap", "put", "LEFT_SMALL_BRACKET", "tokenMap", "put", "LEFT_MID_BRACKET", "tokenMap", "put", "LEFT_LARGE_BRACKET", "tokenMap", "put", "RIGHT_SMALL_BRACKET", "tokenMap", "put", "RIGHT_MID_BRACKET", "tokenMap", "put", "RIGHT_LARGE_BRACKET" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\enums\\JavaTokens.java",
  "startLine" : 66,
  "endLine" : 92,
  "identifiers" : [ "put", "BREAK", "put", "BYTE", "put", "CASE", "put", "CATCH", "put", "CHAR", "put", "STRING", "put", "CONTINUE", "put", "ELSE", "put", "FLOAT", "put", "DOUBLE", "put", "FOR", "put", "BYTE", "put", "LONG", "put", "SHORT", "put", "NEW", "put", "IF", "put", "RETURN", "put", "SWITCH", "put", "TRY", "put", "WHILE", "put", "SYSTEM", "put", "OUT", "put", "THIS" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\enums\\JavaTokens.java",
  "startLine" : 105,
  "endLine" : 154,
  "identifiers" : [ "tokenMap", "put", "LEFT_SMALL_BRACKET", "tokenMap", "put", "LEFT_MID_BRACKET", "tokenMap", "put", "PLUS", "tokenMap", "put", "MIN", "tokenMap", "put", "PERCENT", "tokenMap", "put", "MUL", "tokenMap", "put", "DIV", "tokenMap", "put", "AND", "tokenMap", "put", "OR", "tokenMap", "put", "NOT", "tokenMap", "put", "DOT", "tokenMap", "put", "EQ", "tokenMap", "put", "LT", "tokenMap", "put", "LTE", "tokenMap", "put", "GT", "tokenMap", "put", "GTE", "tokenMap", "put", "UEQ", "tokenMap", "put", "RIGHT_SMALL_BRACKET", "tokenMap", "put", "RIGHT_MID_BRACKET", "tokenMap", "put", "BREAK", "tokenMap", "put", "BYTE", "tokenMap", "put", "CASE", "tokenMap", "put", "THIS", "tokenMap", "put", "CATCH", "tokenMap", "put", "CHAR", "tokenMap", "put", "STRING", "tokenMap", "put", "CONTINUE", "tokenMap", "put", "ELSE", "tokenMap", "put", "FLOAT", "tokenMap", "put", "DOUBLE", "tokenMap", "put", "FOR", "tokenMap", "put", "LONG", "tokenMap", "put", "SHORT", "tokenMap", "put", "NEW", "tokenMap", "put", "IF", "tokenMap", "put", "RETURN", "tokenMap", "put", "SWITCH", "tokenMap", "put", "WHILE", "tokenMap", "put", "LEFT_LARGE_BRACKET", "tokenMap", "put", "RIGHT_LARGE_BRACKET", "tokenMap", "put", "COMMA", "tokenMap", "put", "COLON", "tokenMap", "put", "TRY", "tokenMap", "put", "ASSIGNMENT", "tokenMap", "put", "CLASSFLAG", "tokenMap", "put", "SYSTEM", "tokenMap", "put", "OUT", "tokenMap", "put", "SEMICOLON" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\enums\\JSTokens.java",
  "startLine" : 117,
  "endLine" : 216,
  "identifiers" : [ "tokenMap", "put", "ABSTRACT", "tokenMap", "put", "ARGUMENTS", "tokenMap", "put", "BOOLEAN", "tokenMap", "put", "BREAK", "tokenMap", "put", "BYTE", "tokenMap", "put", "CASE", "tokenMap", "put", "CATCH", "tokenMap", "put", "CHAR", "tokenMap", "put", "CLASS", "tokenMap", "put", "CONST", "tokenMap", "put", "CONTINUE", "tokenMap", "put", "DEBUGGER", "tokenMap", "put", "DEFAULT", "tokenMap", "put", "DELETE", "tokenMap", "put", "DO", "tokenMap", "put", "DOUBLE", "tokenMap", "put", "ELSE", "tokenMap", "put", "ENUM", "tokenMap", "put", "EVAL", "tokenMap", "put", "EXPORT", "tokenMap", "put", "EXTENDS", "tokenMap", "put", "FALSE", "tokenMap", "put", "FINAL", "tokenMap", "put", "FINALLY", "tokenMap", "put", "FLOAT", "tokenMap", "put", "FOR", "tokenMap", "put", "FUNCTION", "tokenMap", "put", "GOTO", "tokenMap", "put", "IF", "tokenMap", "put", "IMPLEMENTS", "tokenMap", "put", "IMPORT", "tokenMap", "put", "IN", "tokenMap", "put", "INSTANCE_OF", "tokenMap", "put", "INT", "tokenMap", "put", "INTERFACE", "tokenMap", "put", "LET", "tokenMap", "put", "LONG", "tokenMap", "put", "NATIVE", "tokenMap", "put", "NEW", "tokenMap", "put", "NULL", "tokenMap", "put", "PACKAGE", "tokenMap", "put", "PRIVATE", "tokenMap", "put", "PROTECTED", "tokenMap", "put", "PUBLIC", "tokenMap", "put", "RETURN", "tokenMap", "put", "SHORT", "tokenMap", "put", "STATIC", "tokenMap", "put", "SUPER", "tokenMap", "put", "SWITCH", "tokenMap", "put", "SYNCHRONIZED", "tokenMap", "put", "THIS", "tokenMap", "put", "THROW", "tokenMap", "put", "THROWS", "tokenMap", "put", "TRANSIENT", "tokenMap", "put", "TRUE", "tokenMap", "put", "TRY", "tokenMap", "put", "TYPE_OF", "tokenMap", "put", "VAR", "tokenMap", "put", "VOID", "tokenMap", "put", "VOLATILE", "tokenMap", "put", "WHILE", "tokenMap", "put", "WITH", "tokenMap", "put", "YIELD", "tokenMap", "put", "PLUS", "tokenMap", "put", "MINUS", "tokenMap", "put", "STAR", "tokenMap", "put", "DIV", "tokenMap", "put", "MOD", "tokenMap", "put", "PLUS_PLUS", "tokenMap", "put", "MINUS_MINUS", "tokenMap", "put", "ASSIGN", "tokenMap", "put", "PLUS_ASSIGN", "tokenMap", "put", "MINUS_ASSIGN", "tokenMap", "put", "STAR_ASSIGN", "tokenMap", "put", "DIV_ASSIGN", "tokenMap", "put", "MOD_ASSIGN", "tokenMap", "put", "EQUAL", "tokenMap", "put", "ABSOLUTE_EQUAL", "tokenMap", "put", "NOT_EQUAL", "tokenMap", "put", "ABSOLUTE_NOT_EQUAL", "tokenMap", "put", "GREATER", "tokenMap", "put", "LESS", "tokenMap", "put", "GREATER_EQUAL", "tokenMap", "put", "LESS_EQUAL", "tokenMap", "put", "AND", "tokenMap", "put", "OR", "tokenMap", "put", "NOT", "tokenMap", "put", "QUESTION", "tokenMap", "put", "COLON", "tokenMap", "put", "SEMI", "tokenMap", "put", "COMMA", "tokenMap", "put", "DOT", "tokenMap", "put", "LEFT_SMALL_BRACKET", "tokenMap", "put", "LEFT_MID_BRACKET", "tokenMap", "put", "LEFT_LARGE_BRACKET", "tokenMap", "put", "RIGHT_SMALL_BRACKET", "tokenMap", "put", "RIGHT_MID_BRACKET", "tokenMap", "put", "RIGHT_LARGE_BRACKET" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\enums\\PythonTokens.java",
  "startLine" : 88,
  "endLine" : 158,
  "identifiers" : [ "tokenMap", "put", "FALSE", "tokenMap", "put", "NONE", "tokenMap", "put", "TRUE", "tokenMap", "put", "AND", "tokenMap", "put", "AS", "tokenMap", "put", "ASSERT", "tokenMap", "put", "BREAK", "tokenMap", "put", "CLASS", "tokenMap", "put", "CONTINUE", "tokenMap", "put", "DEF", "tokenMap", "put", "DEL", "tokenMap", "put", "ELIF", "tokenMap", "put", "ELSE", "tokenMap", "put", "EXCEPT", "tokenMap", "put", "FINALLY", "tokenMap", "put", "FOR", "tokenMap", "put", "FROM", "tokenMap", "put", "GLOBAL", "tokenMap", "put", "IF", "tokenMap", "put", "IMPORT", "tokenMap", "put", "IN", "tokenMap", "put", "IS", "tokenMap", "put", "LAMBDA", "tokenMap", "put", "NONLOCAL", "tokenMap", "put", "NOT", "tokenMap", "put", "OR", "tokenMap", "put", "PASS", "tokenMap", "put", "RAISE", "tokenMap", "put", "RETURN", "tokenMap", "put", "TRY", "tokenMap", "put", "WHILE", "tokenMap", "put", "WITH", "tokenMap", "put", "YIELD", "tokenMap", "put", "LEFT_PAREN", "tokenMap", "put", "RIGHT_PAREN", "tokenMap", "put", "LEFT_BRACKET", "tokenMap", "put", "RIGHT_BRACKET", "tokenMap", "put", "LEFT_BRACE", "tokenMap", "put", "RIGHT_BRACE", "tokenMap", "put", "PLUS", "tokenMap", "put", "MINUS", "tokenMap", "put", "STAR", "tokenMap", "put", "DIV", "tokenMap", "put", "MOD", "tokenMap", "put", "EXP", "tokenMap", "put", "tokenMap", "put", "BIT_AND", "tokenMap", "put", "BIT_OR", "tokenMap", "put", "BIT_CARET", "tokenMap", "put", "BIT_TILDE", "tokenMap", "put", "LEFT_SHIFT", "tokenMap", "put", "RIGHT_SHIFT", "tokenMap", "put", "DOT", "tokenMap", "put", "COMMA", "tokenMap", "put", "COLON" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\format\\Printer.java",
  "startLine" : 22,
  "endLine" : 41,
  "identifiers" : [ "List", "MeasurePair", "measurePairList", "new", "ArrayList", "measurePairSet", "Collections", "sort", "measurePairList", "new", "Comparator", "MeasurePair", "Override", "public", "int", "compare", "MeasurePair", "o1", "MeasurePair", "o2", "if", "o1", "getFirstMeasureIndex", "o2", "getFirstMeasureIndex", "return", "else", "if", "o1", "getFirstMeasureIndex", "o2", "getFirstMeasureIndex", "return", "else", "return", "for", "MeasurePair", "measurePair", "measurePairList", "printWriter", "println", "measurePair", "toString", "printWriter", "flush" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\format\\Printer.java",
  "startLine" : 43,
  "endLine" : 49,
  "identifiers" : [ "for", "int", "i", "i", "list", "size", "i", "printWriter", "write", "list", "get", "i", "printWriter", "write", "list", "get", "list", "size", "printWriter", "flush" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\format\\Printer.java",
  "startLine" : 51,
  "endLine" : 65,
  "identifiers" : [ "PrintWriter", "pw", "new", "PrintWriter", "Constants", "MEASURE_INDEX_FILENAME", "List", "Measure", "list", "Measure", "measureList", "for", "int", "i", "i", "list", "size", "i", "pw", "write", "i", "pw", "write", "files", "get", "list", "get", "i", "getFileId", "getAbsolutePath", "pw", "write", "pw", "write", "list", "get", "i", "getStartLine", "pw", "write", "pw", "write", "list", "get", "i", "getEndLine", "pw", "write", "pw", "flush", "pw", "close" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 37,
  "endLine" : 73,
  "identifiers" : [ "log", "info", "log", "info", "log", "info", "List", "Integer", "result", "new", "ArrayList", "int", "tokenFileNum", "tokenIndexList", "size", "if", "tokenFileNum", "try", "String", "dataFile", "String", "format", "Constants", "DATAZ", "ParseMatchResult", "parseFileToInt", "dataFile", "result", "parseOneDataFile", "result", "result", "clear", "catch", "Exception", "e", "e", "printStackTrace", "else", "int", "totalCnt", "tokenFileNum", "tokenFileNum", "int", "cnt", "for", "int", "j", "j", "tokenFileNum", "j", "for", "int", "i", "j", "i", "tokenFileNum", "i", "try", "cnt", "log", "info", "cnt", "f", "totalCnt", "String", "dataFile", "String", "format", "Constants", "DATAZ", "j", "i", "ParseMatchResult", "parseFileToInt", "dataFile", "result", "parseOneDataFile", "result", "result", "clear", "catch", "Exception", "e", "e", "printStackTrace", "log", "info", "classID", "get" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 79,
  "endLine" : 95,
  "identifiers" : [ "List", "Integer", "tmpList", "new", "ArrayList", "int", "i", "while", "result", "get", "i", "equals", "Integer", "MAX_VALUE", "if", "i", "result", "size", "break", "tmpList", "add", "result", "get", "i", "tmpList", "add", "result", "get", "i", "tmpList", "add", "result", "get", "i", "i", "gatherCloneFragmentClass", "tmpList", "tmpList", "clear", "printType12Clone", "printType3Clone" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 101,
  "endLine" : 119,
  "identifiers" : [ "if", "classInstances", "null", "classInstances", "size", "return", "for", "int", "i", "i", "classInstances", "size", "i", "int", "x1", "classInstances", "get", "i", "int", "x2", "classInstances", "get", "i", "int", "cloneLen", "classInstances", "get", "i", "int", "firstFrom", "Measure", "binarySearchStart", "x1", "int", "firstTo", "Measure", "binarySearchEnd", "x1", "cloneLen", "int", "secondFrom", "Measure", "binarySearchStart", "x2", "int", "secondTo", "Measure", "binarySearchEnd", "x2", "cloneLen", "if", "firstFrom", "firstTo", "secondFrom", "secondTo", "else", "gatherCloneFragment", "x1", "x2", "x1", "cloneLen", "x2", "cloneLen", "firstFrom", "secondFrom" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 130,
  "endLine" : 185,
  "identifiers" : [ "Measure", "f1", "Measure", "measureList", "get", "firstFrom", "Measure", "f2", "Measure", "measureList", "get", "secondFrom", "int", "f1startToken", "int", "f1start", "f1", "getStartToken", "int", "f2startToken", "int", "f2start", "f2", "getStartToken", "int", "f1endToken", "int", "f1end", "f1", "getStartToken", "int", "f2endToken", "int", "f2end", "f2", "getStartToken", "Snippet", "s1", "new", "Snippet", "s1", "setFile", "files", "get", "f1", "getFileId", "getAbsolutePath", "s1", "setMStartLine", "f1", "getStartLine", "s1", "setMEndLine", "f1", "getEndLine", "s1", "setMeasureId", "f1", "getId", "s1", "setStartToken", "f1startToken", "s1", "setEndToken", "f1endToken", "int", "line1", "getSnippetStartEndLine", "f1", "s1", "getStartToken", "s1", "getEndToken", "s1", "setSStartLine", "line1", "s1", "setSEndLine", "line1", "Snippet", "s2", "new", "Snippet", "s2", "setFile", "files", "get", "f2", "getFileId", "getAbsolutePath", "s2", "setMStartLine", "f2", "getStartLine", "s2", "setMEndLine", "f2", "getEndLine", "s2", "setMeasureId", "f2", "getId", "s2", "setStartToken", "f2startToken", "s2", "setEndToken", "f2endToken", "int", "line2", "getSnippetStartEndLine", "f2", "s2", "getStartToken", "s2", "getEndToken", "s2", "setSStartLine", "line2", "s2", "setSEndLine", "line2", "SnippetPair", "snippetPair", "null", "if", "s1", "getEndToken", "s2", "getEndToken", "snippetPair", "new", "SnippetPair", "s1", "s2", "else", "snippetPair", "new", "SnippetPair", "s2", "s1", "String", "key", "generateType12Key", "snippetPair", "List", "SnippetPair", "snippetPairs", "snippets", "getOrDefault", "key", "new", "ArrayList", "snippetPairs", "add", "snippetPair", "snippets", "put", "key", "snippetPairs", "String", "method1", "String", "format", "s1", "getFile", "s1", "getMStartLine", "s1", "getMEndLine", "String", "method2", "String", "format", "s2", "getFile", "s2", "getMStartLine", "s2", "getMEndLine", "if", "method1", "compareTo", "method2", "snippetPair", "new", "SnippetPair", "s1", "s2", "key", "method1", "method2", "else", "snippetPair", "new", "SnippetPair", "s2", "s1", "key", "method2", "method1", "snippetPairs", "type3Snippets", "getOrDefault", "key", "new", "ArrayList", "snippetPairs", "add", "snippetPair", "type3Snippets", "put", "key", "snippetPairs" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 195,
  "endLine" : 224,
  "identifiers" : [ "int", "groupId", "try", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "Constants", "TYPE12_SNIPPET_CLONE_GROUP_FILENAME", "for", "List", "SnippetPair", "snippetPairs", "snippets", "values", "groupId", "if", "snippetPairs", "size", "printSnippetPair", "snippetPairs", "get", "groupId", "writer", "continue", "SnippetPair", "pair", "snippetPairs", "stream", "min", "new", "Comparator", "SnippetPair", "Override", "public", "int", "compare", "SnippetPair", "o1", "SnippetPair", "o2", "if", "o1", "getS1", "getStartToken", "o2", "getS1", "getStartToken", "return", "else", "if", "o1", "getS1", "getStartToken", "o2", "getS1", "getStartToken", "return", "return", "get", "snippetPairs", "clear", "printSnippetPair", "pair", "groupId", "writer", "writer", "flush", "catch", "Exception", "e", "e", "printStackTrace", "classID", "set", "groupId", "snippets", "clear" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 229,
  "endLine" : 250,
  "identifiers" : [ "int", "groupId", "classID", "get", "try", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "Constants", "TYPE3_SNIPPET_CLONE_GROUP_FILENAME", "for", "List", "SnippetPair", "snippetPairs", "type3Snippets", "values", "if", "snippetPairs", "size", "continue", "List", "SnippetPair", "type3Pairs", "mergeType3Snippets", "snippetPairs", "if", "type3Pairs", "size", "continue", "for", "SnippetPair", "pair", "type3Pairs", "groupId", "printSnippetPair", "pair", "groupId", "writer", "catch", "Exception", "e", "e", "printStackTrace", "classID", "set", "groupId", "type3Snippets", "clear" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 252,
  "endLine" : 264,
  "identifiers" : [ "snippetPair", "getS1", "setGroupId", "groupId", "snippetPair", "getS2", "setGroupId", "groupId", "try", "writer", "write", "snippetPair", "getS1", "toString", "writer", "newLine", "writer", "write", "snippetPair", "getS2", "toString", "writer", "newLine", "writer", "newLine", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 271,
  "endLine" : 343,
  "identifiers" : [ "int", "tokenGap", "List", "SnippetPair", "type3Pairs", "new", "ArrayList", "snippetPairs", "sort", "new", "Comparator", "SnippetPair", "Override", "public", "int", "compare", "SnippetPair", "o1", "SnippetPair", "o2", "if", "o1", "getS1", "getStartToken", "o2", "getS1", "getStartToken", "return", "else", "if", "o1", "getS1", "getStartToken", "o2", "getS1", "getStartToken", "return", "return", "SnippetPair", "pair", "snippetPairs", "get", "boolean", "isSameMethodClone", "isInSameMethod", "pair", "getS1", "pair", "getS2", "int", "i", "if", "isSameMethodClone", "while", "i", "snippetPairs", "size", "SnippetPair", "nextPair", "snippetPairs", "get", "i", "if", "pair", "getS1", "getStartToken", "nextPair", "getS1", "getStartToken", "pair", "getS2", "getStartToken", "nextPair", "getS1", "getStartToken", "pair", "getS2", "getStartToken", "nextPair", "getS2", "getStartToken", "if", "pair", "getS1", "getEndToken", "nextPair", "getS1", "getEndToken", "if", "pair", "getS1", "getEndToken", "tokenGap", "nextPair", "getS1", "getStartToken", "if", "pair", "getS2", "getEndToken", "tokenGap", "nextPair", "getS2", "getStartToken", "Snippet", "tmp1", "linkSnippets", "pair", "getS1", "nextPair", "getS1", "Snippet", "tmp2", "linkSnippets", "pair", "getS2", "nextPair", "getS2", "type3Pairs", "add", "new", "SnippetPair", "tmp1", "tmp2", "pair", "nextPair", "i", "else", "int", "cnt", "while", "i", "snippetPairs", "size", "SnippetPair", "nextPair", "snippetPairs", "get", "i", "boolean", "merged", "false", "if", "pair", "getS1", "getEndToken", "nextPair", "getS1", "getEndToken", "if", "pair", "getS1", "getEndToken", "tokenGap", "nextPair", "getS1", "getStartToken", "if", "pair", "getS2", "getStartToken", "nextPair", "getS2", "getStartToken", "if", "pair", "getS2", "getEndToken", "tokenGap", "nextPair", "getS2", "getStartToken", "Snippet", "tmp1", "linkSnippets", "pair", "getS1", "nextPair", "getS1", "Snippet", "tmp2", "linkSnippets", "pair", "getS2", "nextPair", "getS2", "pair", "new", "SnippetPair", "tmp1", "tmp2", "merged", "true", "cnt", "if", "merged", "i", "snippetPairs", "size", "if", "cnt", "type3Pairs", "add", "pair", "cnt", "pair", "nextPair", "i", "return", "type3Pairs" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 363,
  "endLine" : 374,
  "identifiers" : [ "Snippet", "newSnip", "new", "Snippet", "newSnip", "setFile", "s1", "getFile", "newSnip", "setMStartLine", "s1", "getMStartLine", "newSnip", "setMEndLine", "s1", "getMEndLine", "newSnip", "setMeasureId", "s1", "getMeasureId", "newSnip", "setStartToken", "Math", "min", "s1", "getStartToken", "s2", "getStartToken", "newSnip", "setEndToken", "Math", "max", "s1", "getEndToken", "s2", "getEndToken", "newSnip", "setSStartLine", "Math", "min", "s1", "getSStartLine", "s2", "getSStartLine", "newSnip", "setSEndLine", "Math", "max", "s1", "getSEndLine", "s2", "getSEndLine", "return", "newSnip" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 383,
  "endLine" : 407,
  "identifiers" : [ "int", "chunkIndex", "int", "result", "new", "int", "for", "int", "i", "i", "state", "getTokenIndexList", "size", "i", "if", "measure", "getStartToken", "state", "getTokenIndexList", "get", "i", "chunkIndex", "i", "chunkIndex", "chunkIndex", "state", "getTokenIndexList", "size", "chunkIndex", "snippetStartIndex", "snippetEndIndex", "long", "measureOffset", "measure", "getStartToken", "state", "getTokenIndexList", "get", "chunkIndex", "long", "snippetOffset", "measureOffset", "snippetStartIndex", "String", "tokenLinePath", "String", "format", "Constants", "TOKEN_LINE_CSV", "chunkIndex", "try", "DataInputStream", "dataInputStream", "new", "DataInputStream", "new", "FileInputStream", "tokenLinePath", "dataInputStream", "skip", "snippetOffset", "result", "dataInputStream", "readShort", "dataInputStream", "skip", "snippetEndIndex", "snippetStartIndex", "result", "dataInputStream", "readShort", "catch", "IOException", "e", "e", "printStackTrace", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CLexer.java",
  "startLine" : 20,
  "endLine" : 274,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "peek", "t", "peek", "r", "else", "if", "peek", "n", "line", "line", "indexOfChar", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "indexOfChar", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "line", "else", "if", "peek", "n", "line", "line", "else", "break", "wordIndexOfChar", "indexOfChar", "switch", "peek", "case", "getChar", "if", "peek", "n", "line", "indexOfChar", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "CTokens", "LEFT_BRACKET", "line", "case", "getChar", "return", "new", "Token", "CTokens", "RIGHT_BRACKET", "line", "case", "getChar", "return", "new", "Token", "CTokens", "LEFT_PAREN", "line", "case", "getChar", "return", "new", "Token", "CTokens", "RIGHT_PAREN", "line", "case", "getChar", "return", "new", "Token", "CTokens", "DOT", "line", "case", "getChar", "return", "new", "Token", "CTokens", "COMMA", "line", "case", "getChar", "return", "new", "Token", "CTokens", "COLON", "line", "case", "getChar", "return", "new", "Token", "CTokens", "SEMI", "line", "case", "getChar", "return", "new", "Token", "CTokens", "LEFT_BRACE", "line", "case", "getChar", "return", "new", "Token", "CTokens", "RIGHT_BRACE", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "PLUS_PLUS", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "PLUS_ASSIGN", "line", "else", "return", "new", "Token", "CTokens", "PLUS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "MINUS_MINUS", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "MINUS_ASSIGN", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "ARROW", "line", "else", "return", "new", "Token", "CTokens", "MINUS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "STAR_ASSIGN", "line", "else", "return", "new", "Token", "CTokens", "STAR", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "DIV_ASSIGN", "line", "else", "return", "new", "Token", "CTokens", "DIV", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "MOD_ASSIGN", "line", "else", "return", "new", "Token", "CTokens", "MOD", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "EQUAL", "line", "else", "return", "new", "Token", "CTokens", "ASSIGN", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "GREATER_EQUAL", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "RIGHT_SHIFT", "line", "else", "return", "new", "Token", "CTokens", "GREATER", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "LESS_EQUAL", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "LEFT_SHIFT", "line", "else", "return", "new", "Token", "CTokens", "LESS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "NOT_EQUAL", "line", "else", "return", "new", "Token", "CTokens", "NOT", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "AND_ASSIGN", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "AND_AND", "line", "else", "return", "new", "Token", "CTokens", "AND", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "OR_ASSIGN", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "OR_OR", "line", "else", "return", "new", "Token", "CTokens", "OR", "line", "case", "getChar", "return", "new", "Token", "CTokens", "CARET", "line", "case", "getChar", "return", "new", "Token", "CTokens", "TILDE", "line", "if", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "builder", "toString", "line", "return", "new", "Token", "CTokens", "IDENTIFIER", "line", "if", "Character", "isDigit", "peek", "int", "value", "do", "value", "value", "Character", "digit", "peek", "getChar", "while", "Character", "isDigit", "peek", "return", "new", "Token", "CTokens", "DIGIT", "line", "if", "Character", "isLetter", "peek", "StringBuilder", "buffer", "new", "StringBuilder", "do", "buffer", "append", "peek", "getChar", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "String", "s", "buffer", "toString", "if", "s", "equals", "reader", "readLine", "getChar", "indexOfChar", "line", "line", "return", "new", "Token", "byte", "line", "else", "Byte", "token", "CTokens", "tokenMap", "get", "s", "if", "token", "null", "return", "new", "Token", "token", "line", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "s", "line", "return", "new", "Token", "CTokens", "IDENTIFIER", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CommonFileWord.java",
  "startLine" : 15,
  "endLine" : 71,
  "identifiers" : [ "try", "List", "Token", "tokenHashList", "new", "ArrayList", "Measure", "measure", "new", "Measure", "measure", "setFileId", "fileID", "measure", "setStartLine", "measure", "setStartToken", "tokenID", "get", "Integer", "MAX_VALUE", "switch", "Config", "language", "case", "DetectLanguage", "JAVA", "lexer", "new", "JavaLexer", "inputFileName", "break", "case", "DetectLanguage", "C", "lexer", "new", "CLexer", "inputFileName", "break", "case", "DetectLanguage", "CPP", "lexer", "new", "CPPLexer", "inputFileName", "break", "case", "DetectLanguage", "JAVA_SCRIPT", "lexer", "new", "JSLexer", "inputFileName", "break", "case", "DetectLanguage", "GO", "lexer", "new", "GoLexer", "inputFileName", "break", "case", "DetectLanguage", "PYTHON", "lexer", "new", "PythonLexer", "inputFileName", "break", "Token", "word", "null", "tokenHashList", "add", "new", "Token", "CommonTokens", "BOUND_LEFT", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "if", "word", "getTokenHash", "word", "getTokenHash", "tokenHashList", "add", "word", "tokenHashList", "add", "new", "Token", "CommonTokens", "BOUND_RIGHT", "lexer", "line", "if", "tokenHashList", "size", "mlc", "tokenHashList", "clear", "return", "new", "ArrayList", "measure", "setEndToken", "tokenID", "addAndGet", "tokenHashList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "finally", "lexer", "closeReader", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CommonLexer.java",
  "startLine" : 14,
  "endLine" : 68,
  "identifiers" : [ "if", "peek", "n", "getChar", "line", "indexOfChar", "return", "new", "Token", "byte", "line", "if", "Character", "isSpaceChar", "peek", "getChar", "return", "new", "Token", "byte", "line", "if", "peek", "getReaderIsEnd", "getChar", "return", "new", "Token", "str2hash", "sb", "toString", "line", "String", "token", "if", "Character", "isDigit", "peek", "while", "Character", "isDigit", "peek", "token", "peek", "getChar", "if", "getReaderIsEnd", "break", "return", "new", "Token", "str2hash", "token", "line", "if", "Character", "isLetter", "peek", "peek", "_", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "token", "peek", "getChar", "if", "getReaderIsEnd", "break", "return", "new", "Token", "str2hash", "token", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CommonWord.java",
  "startLine" : 13,
  "endLine" : 50,
  "identifiers" : [ "try", "List", "Token", "tokenHashList", "new", "ArrayList", "Measure", "measure", "new", "Measure", "measure", "setFileId", "fileID", "measure", "setStartLine", "measure", "setStartToken", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "new", "CommonLexer", "inputFileName", "Token", "word", "null", "tokenHashList", "add", "new", "Token", "CommonTokens", "BOUND_LEFT", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "if", "word", "getTokenHash", "word", "getTokenHash", "tokenHashList", "add", "word", "tokenHashList", "add", "new", "Token", "CommonTokens", "BOUND_RIGHT", "lexer", "line", "if", "tokenHashList", "size", "mlc", "tokenHashList", "clear", "return", "new", "ArrayList", "measure", "setEndToken", "tokenID", "addAndGet", "tokenHashList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "finally", "lexer", "closeReader", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CPPLexer.java",
  "startLine" : 17,
  "endLine" : 266,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "peek", "t", "peek", "r", "else", "if", "peek", "n", "line", "line", "indexOfChar", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "indexOfChar", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "line", "else", "if", "peek", "n", "line", "line", "else", "break", "wordIndexOfChar", "indexOfChar", "switch", "peek", "case", "getChar", "if", "peek", "n", "line", "indexOfChar", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "LEFT_BRACKET", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "RIGHT_BRACKET", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "LEFT_PAREN", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "RIGHT_PAREN", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "DOT", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "COMMA", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "COLON", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "SEMI", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "LEFT_BRACE", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "RIGHT_BRACE", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "PLUS_PLUS", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "PLUS_ASSIGN", "line", "else", "return", "new", "Token", "CPPTokens", "PLUS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "MINUS_MINUS", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "MINUS_ASSIGN", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "ARROW", "line", "else", "return", "new", "Token", "CPPTokens", "MINUS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "STAR_ASSIGN", "line", "else", "return", "new", "Token", "CPPTokens", "STAR", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "DIV_ASSIGN", "line", "else", "return", "new", "Token", "CPPTokens", "DIV", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "MOD_ASSIGN", "line", "else", "return", "new", "Token", "CPPTokens", "MOD", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "EQUAL", "line", "else", "return", "new", "Token", "CPPTokens", "ASSIGN", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "GREATER_EQUAL", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "RIGHT_SHIFT", "line", "else", "return", "new", "Token", "CPPTokens", "GREATER", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "LESS_EQUAL", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "LEFT_SHIFT", "line", "else", "return", "new", "Token", "CPPTokens", "LESS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "NOT_EQUAL", "line", "else", "return", "new", "Token", "CPPTokens", "NOT", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "AND_ASSIGN", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "AND_AND", "line", "else", "return", "new", "Token", "CPPTokens", "AND", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "OR_ASSIGN", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "OR_OR", "line", "else", "return", "new", "Token", "CPPTokens", "OR", "line", "if", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "builder", "toString", "line", "return", "new", "Token", "CPPTokens", "IDENTIFIER", "line", "if", "Character", "isDigit", "peek", "int", "value", "do", "value", "value", "Character", "digit", "peek", "getChar", "while", "Character", "isDigit", "peek", "return", "new", "Token", "CPPTokens", "DIGIT", "line", "if", "Character", "isLetter", "peek", "StringBuilder", "buffer", "new", "StringBuilder", "do", "buffer", "append", "peek", "getChar", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "String", "s", "buffer", "toString", "if", "s", "equals", "reader", "readLine", "getChar", "indexOfChar", "line", "line", "return", "new", "Token", "byte", "line", "else", "Byte", "token", "CPPTokens", "tokenMap", "get", "s", "if", "token", "null", "return", "new", "Token", "token", "line", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "s", "line", "return", "new", "Token", "CPPTokens", "IDENTIFIER", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CPPWord.java",
  "startLine" : 14,
  "endLine" : 67,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "CPPLexer", "inputFileName", "Token", "word", "null", "int", "functionPos", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "if", "word", "getTokenHash", "word", "getTokenHash", "tmpList", "add", "word", "if", "word", "getTokenHash", "CPPTokens", "LEFT_BRACE", "stack", "push", "lexer", "line", "if", "isFunction", "tmpList", "functionPos", "functionPos", "stack", "size", "tmpList", "clear", "tmpList", "add", "new", "Token", "CPPTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "else", "if", "word", "getTokenHash", "CPPTokens", "RIGHT_BRACE", "if", "stack", "size", "if", "stack", "size", "functionPos", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "add", "new", "Token", "CPPTokens", "BOUND_RIGHT", "lexer", "line", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "measure", "setId", "Measure", "measureID", "get", "tmpList", "clear", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "functionPos", "stack", "pop", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList", "finally", "lexer", "closeReader" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CPPWord.java",
  "startLine" : 74,
  "endLine" : 145,
  "identifiers" : [ "int", "size", "tmpList", "size", "if", "size", "return", "false", "int", "index", "size", "byte", "word", "tmpList", "get", "index", "getTokenHash", "byte", "midWord", "int", "limit", "while", "word", "CPPTokens", "RIGHT_PAREN", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "limit", "if", "word", "CPPTokens", "ASSIGN", "limit", "return", "false", "if", "word", "CPPTokens", "RIGHT_PAREN", "midWord", "word", "if", "midWord", "CPPTokens", "CONST", "return", "true", "if", "midWord", "return", "false", "int", "rightParenCnt", "while", "rightParenCnt", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "word", "CPPTokens", "LEFT_PAREN", "rightParenCnt", "else", "if", "word", "CPPTokens", "RIGHT_PAREN", "rightParenCnt", "index", "if", "index", "return", "false", "word", "tmpList", "get", "index", "getTokenHash", "if", "word", "CPPTokens", "FOR", "word", "CPPTokens", "SWITCH", "word", "CPPTokens", "IF", "word", "CPPTokens", "WHILE", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CWord.java",
  "startLine" : 14,
  "endLine" : 67,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "CLexer", "inputFileName", "Token", "word", "null", "int", "functionPos", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "if", "word", "getTokenHash", "word", "getTokenHash", "tmpList", "add", "word", "if", "word", "getTokenHash", "CTokens", "LEFT_BRACE", "stack", "push", "lexer", "line", "if", "isFunction", "tmpList", "functionPos", "functionPos", "stack", "size", "tmpList", "clear", "tmpList", "add", "new", "Token", "CTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "else", "if", "word", "getTokenHash", "CTokens", "RIGHT_BRACE", "if", "stack", "size", "if", "stack", "size", "functionPos", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "add", "new", "Token", "CTokens", "BOUND_RIGHT", "lexer", "line", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "measure", "setId", "Measure", "measureID", "get", "tmpList", "clear", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "functionPos", "stack", "pop", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList", "finally", "lexer", "closeReader" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CWord.java",
  "startLine" : 74,
  "endLine" : 145,
  "identifiers" : [ "int", "size", "tmpList", "size", "if", "size", "return", "false", "int", "index", "size", "byte", "word", "tmpList", "get", "index", "getTokenHash", "byte", "midWord", "int", "limit", "while", "word", "CTokens", "RIGHT_PAREN", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "limit", "if", "word", "CTokens", "ASSIGN", "limit", "return", "false", "if", "word", "CTokens", "RIGHT_PAREN", "midWord", "word", "if", "midWord", "CTokens", "CONST", "return", "true", "if", "midWord", "return", "false", "int", "rightParenCnt", "while", "rightParenCnt", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "word", "CTokens", "LEFT_PAREN", "rightParenCnt", "else", "if", "word", "CTokens", "RIGHT_PAREN", "rightParenCnt", "index", "if", "index", "return", "false", "word", "tmpList", "get", "index", "getTokenHash", "if", "word", "CTokens", "FOR", "word", "CTokens", "SWITCH", "word", "CTokens", "IF", "word", "CTokens", "WHILE", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\GoLexer.java",
  "startLine" : 17,
  "endLine" : 264,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "peek", "t", "peek", "r", "else", "if", "peek", "n", "line", "line", "indexOfChar", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "indexOfChar", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "line", "else", "if", "peek", "n", "line", "line", "else", "break", "wordIndexOfChar", "indexOfChar", "switch", "peek", "case", "getChar", "if", "peek", "n", "line", "indexOfChar", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "GoTokens", "LEFT_MID_BRACKET", "line", "case", "getChar", "return", "new", "Token", "GoTokens", "RIGHT_MID_BRACKET", "line", "case", "getChar", "return", "new", "Token", "GoTokens", "LEFT_SMALL_BRACKET", "line", "case", "getChar", "return", "new", "Token", "GoTokens", "RIGHT_SMALL_BRACKET", "line", "case", "getChar", "return", "new", "Token", "GoTokens", "DOT", "line", "case", "getChar", "return", "new", "Token", "GoTokens", "COMMA", "line", "case", "getChar", "return", "new", "Token", "GoTokens", "COLON", "line", "case", "getChar", "return", "new", "Token", "GoTokens", "SEMI", "line", "case", "getChar", "return", "new", "Token", "GoTokens", "LEFT_LARGE_BRACKET", "line", "case", "getChar", "return", "new", "Token", "GoTokens", "RIGHT_LARGE_BRACKET", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "GoTokens", "PLUS_PLUS", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "GoTokens", "PLUS_ASSIGN", "line", "else", "return", "new", "Token", "GoTokens", "PLUS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "GoTokens", "MINUS_MINUS", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "GoTokens", "MINUS_ASSIGN", "line", "else", "return", "new", "Token", "GoTokens", "MINUS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "GoTokens", "STAR_ASSIGN", "line", "else", "return", "new", "Token", "GoTokens", "STAR", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "GoTokens", "DIV_ASSIGN", "line", "else", "return", "new", "Token", "GoTokens", "DIV", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "GoTokens", "MOD_ASSIGN", "line", "else", "return", "new", "Token", "GoTokens", "MOD", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "GoTokens", "EQUAL", "line", "else", "return", "new", "Token", "GoTokens", "ASSIGN", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "GoTokens", "GREATER_EQUAL", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "GoTokens", "RIGHT_SHIFT", "line", "else", "return", "new", "Token", "GoTokens", "GREATER", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "GoTokens", "LESS_EQUAL", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "GoTokens", "LEFT_SHIFT", "line", "else", "return", "new", "Token", "GoTokens", "LESS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "GoTokens", "NOT_EQUAL", "line", "else", "return", "new", "Token", "GoTokens", "NOT", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "GoTokens", "AND_ASSIGN", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "GoTokens", "AND", "line", "else", "return", "new", "Token", "GoTokens", "AND", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "GoTokens", "OR_ASSIGN", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "GoTokens", "OR", "line", "else", "return", "new", "Token", "GoTokens", "OR", "line", "case", "getChar", "return", "new", "Token", "GoTokens", "CARET", "line", "if", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "builder", "toString", "line", "return", "new", "Token", "GoTokens", "ID", "line", "if", "Character", "isDigit", "peek", "int", "value", "do", "value", "value", "Character", "digit", "peek", "getChar", "while", "Character", "isDigit", "peek", "return", "new", "Token", "GoTokens", "DIGIT", "line", "if", "Character", "isLetter", "peek", "StringBuilder", "buffer", "new", "StringBuilder", "do", "buffer", "append", "peek", "getChar", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "String", "s", "buffer", "toString", "if", "s", "equals", "reader", "readLine", "getChar", "indexOfChar", "line", "line", "return", "new", "Token", "byte", "line", "else", "Byte", "token", "GoTokens", "tokenMap", "get", "s", "if", "token", "null", "return", "new", "Token", "token", "line", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "s", "line", "return", "new", "Token", "GoTokens", "ID", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\GoWord.java",
  "startLine" : 15,
  "endLine" : 64,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "GoLexer", "inputFileName", "Token", "word", "null", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "if", "word", "getTokenHash", "word", "getTokenHash", "tmpList", "add", "word", "if", "word", "getTokenHash", "GoTokens", "LEFT_LARGE_BRACKET", "stack", "push", "lexer", "line", "if", "stack", "size", "tmpList", "clear", "tmpList", "add", "new", "Token", "GoTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "else", "if", "word", "getTokenHash", "GoTokens", "RIGHT_LARGE_BRACKET", "if", "stack", "size", "if", "stack", "size", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "add", "new", "Token", "GoTokens", "BOUND_RIGHT", "lexer", "line", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "measure", "setId", "Measure", "measureID", "get", "tmpList", "clear", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "stack", "pop", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList", "finally", "lexer", "closeReader" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\JavaLexer.java",
  "startLine" : 20,
  "endLine" : 222,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "peek", "t", "continue", "else", "if", "peek", "n", "lastPeek", "line", "line", "indexOfChar", "continue", "else", "if", "lastPeek", "r", "peek", "r", "line", "line", "indexOfChar", "continue", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "indexOfChar", "if", "lastPeek", "r", "peek", "r", "line", "indexOfChar", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "else", "if", "peek", "n", "line", "indexOfChar", "else", "break", "wordIndexOfChar", "indexOfChar", "switch", "peek", "case", "getChar", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "LEFT_MID_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "RIGHT_MID_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "LEFT_SMALL_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "RIGHT_SMALL_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "DOT", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "COMMA", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "COLON", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "SEMICOLON", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "LEFT_LARGE_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "RIGHT_LARGE_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "PLUS", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "MIN", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "MUL", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "DIV", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "PERCENT", "line", "case", "if", "getChar", "return", "new", "Token", "JavaTokens", "EQ", "line", "else", "return", "new", "Token", "JavaTokens", "ASSIGNMENT", "line", "case", "if", "getChar", "return", "new", "Token", "JavaTokens", "GTE", "line", "else", "return", "new", "Token", "JavaTokens", "GT", "line", "case", "if", "getChar", "return", "new", "Token", "JavaTokens", "LT", "line", "else", "return", "new", "Token", "JavaTokens", "LTE", "line", "case", "if", "getChar", "return", "new", "Token", "JavaTokens", "UEQ", "line", "else", "return", "new", "Token", "JavaTokens", "NOT", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "AND", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "OR", "line", "if", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "sb", "toString", "line", "return", "new", "Token", "JavaTokens", "ID", "line", "if", "Character", "isDigit", "peek", "int", "value", "do", "value", "value", "Character", "digit", "peek", "getChar", "while", "Character", "isDigit", "peek", "return", "new", "Token", "JavaTokens", "DIGIT", "line", "lastIdentifier", "lastPeek", "if", "Character", "isLetter", "peek", "StringBuilder", "sb", "new", "StringBuilder", "do", "sb", "append", "peek", "getChar", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "peek", "String", "s", "sb", "toString", "if", "s", "equals", "s", "equals", "reader", "readLine", "indexOfChar", "line", "return", "new", "Token", "byte", "line", "else", "if", "s", "equals", "JavaTokens", "classKeyword", "return", "new", "Token", "JavaTokens", "CLASSFLAG", "line", "else", "if", "s", "endsWith", "JavaTokens", "exceptionKeyword", "return", "new", "Token", "byte", "line", "if", "JavaTokens", "neglectfulKeyword", "contains", "s", "return", "new", "Token", "byte", "line", "Byte", "isKeyWord", "JavaTokens", "map", "get", "s", "if", "isKeyWord", "null", "return", "new", "Token", "isKeyWord", "line", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "s", "line", "return", "new", "Token", "JavaTokens", "ID", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\JavaWord.java",
  "startLine" : 15,
  "endLine" : 74,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "JavaLexer", "inputFileName", "Token", "word", "null", "int", "innerClass", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "if", "word", "getTokenHash", "word", "getTokenHash", "tmpList", "add", "word", "if", "stack", "size", "word", "getTokenHash", "JavaTokens", "CLASSFLAG", "lexer", "lastIdentifier", "innerClass", "else", "if", "word", "getTokenHash", "JavaTokens", "LEFT_LARGE_BRACKET", "stack", "push", "lexer", "line", "if", "stack", "size", "innerClass", "tmpList", "new", "ArrayList", "tmpList", "add", "new", "Token", "JavaTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "measure", "setFileId", "fileID", "else", "tmpList", "remove", "tmpList", "size", "else", "if", "word", "getTokenHash", "JavaTokens", "RIGHT_LARGE_BRACKET", "if", "stack", "size", "if", "stack", "size", "innerClass", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "add", "new", "Token", "JavaTokens", "BOUND_RIGHT", "lexer", "line", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "measure", "setId", "Measure", "measureID", "get", "tmpList", "clear", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "else", "tmpList", "remove", "tmpList", "size", "if", "stack", "size", "innerClass", "innerClass", "innerClass", "stack", "pop", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList", "finally", "lexer", "closeReader" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\JSLexer.java",
  "startLine" : 17,
  "endLine" : 269,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "peek", "t", "peek", "r", "else", "if", "peek", "n", "line", "indexOfChar", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "indexOfChar", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "else", "if", "peek", "n", "line", "indexOfChar", "else", "break", "wordIndexOfChar", "indexOfChar", "switch", "peek", "case", "getChar", "if", "peek", "n", "line", "indexOfChar", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "JSTokens", "LEFT_MID_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JSTokens", "RIGHT_MID_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JSTokens", "LEFT_SMALL_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JSTokens", "RIGHT_SMALL_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JSTokens", "DOT", "line", "case", "getChar", "return", "new", "Token", "JSTokens", "COMMA", "line", "case", "getChar", "return", "new", "Token", "JSTokens", "COLON", "line", "case", "getChar", "return", "new", "Token", "JSTokens", "SEMI", "line", "case", "getChar", "return", "new", "Token", "JSTokens", "LEFT_LARGE_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JSTokens", "RIGHT_LARGE_BRACKET", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "JSTokens", "PLUS_PLUS", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "JSTokens", "PLUS_ASSIGN", "line", "else", "return", "new", "Token", "JSTokens", "PLUS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "JSTokens", "MINUS_MINUS", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "JSTokens", "MINUS_ASSIGN", "line", "else", "return", "new", "Token", "JSTokens", "MINUS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "JSTokens", "STAR_ASSIGN", "line", "else", "return", "new", "Token", "JSTokens", "STAR", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "JSTokens", "DIV_ASSIGN", "line", "else", "return", "new", "Token", "JSTokens", "DIV", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "JSTokens", "MOD_ASSIGN", "line", "else", "return", "new", "Token", "JSTokens", "MOD", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "JSTokens", "EQUAL", "line", "else", "return", "new", "Token", "JSTokens", "ASSIGN", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "JSTokens", "GREATER_EQUAL", "line", "else", "return", "new", "Token", "JSTokens", "GREATER", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "JSTokens", "LESS_EQUAL", "line", "else", "return", "new", "Token", "JSTokens", "LESS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "JSTokens", "NOT_EQUAL", "line", "else", "return", "new", "Token", "JSTokens", "NOT", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "JSTokens", "AND", "line", "else", "return", "new", "Token", "JSTokens", "AND", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "JSTokens", "OR", "line", "else", "return", "new", "Token", "JSTokens", "OR", "line", "if", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "builder", "toString", "line", "return", "new", "Token", "JSTokens", "ID", "line", "if", "peek", "StringBuilder", "sb", "new", "StringBuilder", "sb", "append", "peek", "do", "if", "peek", "getChar", "sb", "append", "peek", "getChar", "else", "getChar", "sb", "append", "peek", "while", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "sb", "toString", "line", "return", "new", "Token", "JSTokens", "ID", "line", "if", "Character", "isDigit", "peek", "int", "value", "do", "value", "value", "Character", "digit", "peek", "getChar", "while", "Character", "isDigit", "peek", "return", "new", "Token", "JSTokens", "DIGIT", "line", "if", "Character", "isLetter", "peek", "StringBuilder", "buffer", "new", "StringBuilder", "do", "buffer", "append", "peek", "getChar", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "String", "s", "buffer", "toString", "if", "s", "equals", "reader", "readLine", "getChar", "indexOfChar", "line", "line", "return", "new", "Token", "byte", "line", "else", "Byte", "token", "JSTokens", "tokenMap", "get", "s", "if", "token", "null", "return", "new", "Token", "token", "line", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "s", "line", "return", "new", "Token", "JSTokens", "ID", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\JSWord.java",
  "startLine" : 15,
  "endLine" : 68,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "JSLexer", "inputFileName", "Token", "word", "null", "int", "functionPos", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "if", "word", "getTokenHash", "word", "getTokenHash", "tmpList", "add", "word", "if", "word", "getTokenHash", "JSTokens", "LEFT_LARGE_BRACKET", "stack", "push", "lexer", "line", "if", "isFunction", "tmpList", "functionPos", "functionPos", "stack", "size", "tmpList", "clear", "tmpList", "add", "new", "Token", "JSTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "else", "if", "word", "getTokenHash", "JSTokens", "RIGHT_LARGE_BRACKET", "if", "stack", "size", "if", "stack", "size", "functionPos", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "add", "new", "Token", "JSTokens", "BOUND_RIGHT", "lexer", "line", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "measure", "setId", "Measure", "measureID", "get", "tmpList", "clear", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "functionPos", "stack", "pop", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList", "finally", "lexer", "closeReader" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\JSWord.java",
  "startLine" : 75,
  "endLine" : 129,
  "identifiers" : [ "int", "size", "tmpList", "size", "if", "size", "return", "false", "if", "tmpList", "get", "size", "getTokenHash", "JSTokens", "RIGHT_SMALL_BRACKET", "return", "false", "int", "index", "size", "byte", "word", "tmpList", "get", "index", "getTokenHash", "int", "rightSmallBracketCnt", "while", "rightSmallBracketCnt", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "word", "JSTokens", "RIGHT_SMALL_BRACKET", "rightSmallBracketCnt", "else", "if", "word", "JSTokens", "LEFT_SMALL_BRACKET", "rightSmallBracketCnt", "if", "index", "if", "tmpList", "get", "index", "getTokenHash", "JSTokens", "FUNCTION", "tmpList", "get", "index", "getTokenHash", "JSTokens", "FUNCTION", "return", "true", "byte", "lastWord", "tmpList", "get", "index", "getTokenHash", "if", "lastWord", "JSTokens", "FOR", "lastWord", "JSTokens", "SWITCH", "lastWord", "JSTokens", "CATCH", "lastWord", "JSTokens", "IF", "lastWord", "JSTokens", "WHILE", "return", "true", "if", "index", "if", "tmpList", "get", "index", "getTokenHash", "JSTokens", "FUNCTION", "return", "true", "byte", "lastWord", "tmpList", "get", "index", "getTokenHash", "if", "lastWord", "JSTokens", "FOR", "lastWord", "JSTokens", "SWITCH", "lastWord", "JSTokens", "CATCH", "lastWord", "JSTokens", "IF", "lastWord", "JSTokens", "WHILE", "return", "true", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\Lexer.java",
  "startLine" : 36,
  "endLine" : 51,
  "identifiers" : [ "FileWriter", "writer", "new", "FileWriter", "outputFileName", "writer", "write", "writer", "write", "if", "list", "size", "for", "SimToken", "x", "list", "writer", "write", "x", "toString", "writer", "flush", "writer", "close" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\Lexer.java",
  "startLine" : 92,
  "endLine" : 105,
  "identifiers" : [ "str", "str", "toLowerCase", "if", "str", "length", "int", "h", "str", "toCharArray", "str", "length", "h", "return", "byte", "h", "x7f", "else", "int", "h1", "str", "toCharArray", "str", "length", "int", "h2", "str", "toCharArray", "str", "length", "h1", "int", "h", "h1", "h2", "return", "byte", "h", "x7f" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\PythonLexer.java",
  "startLine" : 28,
  "endLine" : 262,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "indentPos", "add", "indexOfChar", "else", "if", "peek", "t", "peek", "r", "indexOfChar", "else", "if", "peek", "n", "lastNotBlankLine", "indexOfChar", "line", "lastNotBlankLine", "line", "indexOfChar", "indentPos", "clear", "else", "if", "peek", "lastNotBlankLine", "indexOfChar", "line", "lastNotBlankLine", "reader", "readLine", "line", "indexOfChar", "indentPos", "clear", "else", "break", "wordIndexOfChar", "indexOfChar", "switch", "peek", "case", "getChar", "return", "new", "Token", "PythonTokens", "LEFT_BRACKET", "line", "case", "getChar", "return", "new", "Token", "PythonTokens", "RIGHT_BRACKET", "line", "case", "getChar", "return", "new", "Token", "PythonTokens", "LEFT_PAREN", "line", "case", "rightParenLine", "line", "getChar", "return", "new", "Token", "PythonTokens", "RIGHT_PAREN", "line", "case", "getChar", "return", "new", "Token", "PythonTokens", "LEFT_BRACE", "line", "case", "getChar", "return", "new", "Token", "PythonTokens", "RIGHT_BRACE", "line", "case", "getChar", "return", "new", "Token", "PythonTokens", "DOT", "line", "case", "getChar", "return", "new", "Token", "PythonTokens", "COMMA", "line", "case", "getChar", "return", "new", "Token", "PythonTokens", "COLON", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "PythonTokens", "PLUS_ASSIGN", "line", "else", "return", "new", "Token", "PythonTokens", "PLUS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "PythonTokens", "MINUS_ASSIGN", "line", "else", "return", "new", "Token", "PythonTokens", "MINUS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "PythonTokens", "STAR_ASSIGN", "line", "else", "return", "new", "Token", "PythonTokens", "STAR", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "PythonTokens", "DIV2", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "PythonTokens", "DIV_ASSIGN", "line", "else", "return", "new", "Token", "PythonTokens", "DIV", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "PythonTokens", "MOD_ASSIGN", "line", "else", "return", "new", "Token", "PythonTokens", "MOD", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "PythonTokens", "EQUAL", "line", "else", "return", "new", "Token", "PythonTokens", "ASSIGN", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "PythonTokens", "GREATER_EQUAL", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "PythonTokens", "RIGHT_SHIFT", "line", "else", "return", "new", "Token", "PythonTokens", "GREATER", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "PythonTokens", "LESS_EQUAL", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "PythonTokens", "LEFT_SHIFT", "line", "else", "return", "new", "Token", "PythonTokens", "LESS", "line", "case", "getChar", "return", "new", "Token", "PythonTokens", "BIT_AND", "line", "case", "getChar", "return", "new", "Token", "PythonTokens", "BIT_OR", "line", "case", "getChar", "return", "new", "Token", "PythonTokens", "BIT_CARET", "line", "case", "getChar", "return", "new", "Token", "PythonTokens", "BIT_TILDE", "line", "if", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "builder", "toString", "line", "return", "new", "Token", "PythonTokens", "IDENTIFIER", "line", "if", "peek", "StringBuilder", "sb", "new", "StringBuilder", "sb", "append", "peek", "do", "if", "peek", "getChar", "sb", "append", "peek", "else", "if", "peek", "indentPos", "add", "indexOfChar", "else", "if", "peek", "n", "lastNotBlankLine", "line", "line", "indexOfChar", "indentPos", "clear", "getChar", "sb", "append", "peek", "while", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "sb", "toString", "line", "return", "new", "Token", "PythonTokens", "IDENTIFIER", "line", "if", "Character", "isDigit", "peek", "int", "value", "do", "value", "value", "Character", "digit", "peek", "getChar", "while", "Character", "isDigit", "peek", "return", "new", "Token", "PythonTokens", "DIGIT", "line", "if", "Character", "isLetter", "peek", "StringBuilder", "buffer", "new", "StringBuilder", "do", "buffer", "append", "peek", "getChar", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "String", "s", "buffer", "toString", "if", "s", "equals", "reader", "readLine", "getChar", "lastNotBlankLine", "line", "indexOfChar", "line", "indentPos", "clear", "return", "new", "Token", "byte", "line", "else", "Byte", "token", "PythonTokens", "tokenMap", "get", "s", "if", "token", "null", "return", "new", "Token", "token", "line", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "s", "line", "return", "new", "Token", "PythonTokens", "IDENTIFIER", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\PythonLexer.java",
  "startLine" : 268,
  "endLine" : 280,
  "identifiers" : [ "if", "indentPos", "size", "return", "int", "indent", "for", "int", "i", "i", "indexOfChar", "i", "indentPos", "size", "i", "if", "indentPos", "get", "i", "i", "break", "indent", "return", "indent" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\PythonWord.java",
  "startLine" : 18,
  "endLine" : 68,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "PythonLexer", "inputFileName", "Token", "word", "null", "int", "functionIndent", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "if", "word", "getTokenHash", "word", "getTokenHash", "tmpList", "add", "word", "if", "lexer", "getIndent", "functionIndent", "lexer", "line", "stack", "peek", "lexer", "line", "lexer", "rightParenLine", "if", "stack", "size", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "add", "new", "Token", "PythonTokens", "BOUND_RIGHT", "lexer", "line", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "lastNotBlankLine", "measure", "setId", "Measure", "measureID", "get", "tmpList", "clear", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "functionIndent", "stack", "pop", "if", "word", "getTokenHash", "PythonTokens", "DEF", "stack", "push", "lexer", "line", "functionIndent", "lexer", "getIndent", "tmpList", "clear", "tmpList", "add", "new", "Token", "PythonTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "finally", "lexer", "closeReader", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\Word.java",
  "startLine" : 50,
  "endLine" : 57,
  "identifiers" : [ "File", "file", "new", "File", "outputFileName", "OutputStream", "os", "new", "FileOutputStream", "file", "true", "List", "Byte", "tokens", "allTokenHashList", "stream", "map", "Token", "getTokenHash", "collect", "Collectors", "toList", "os", "write", "getLineTokenByteList", "tokens", "os", "flush", "os", "close" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\Word.java",
  "startLine" : 59,
  "endLine" : 68,
  "identifiers" : [ "File", "file", "new", "File", "outputFileName", "DataOutputStream", "dataOutputStream", "new", "DataOutputStream", "new", "FileOutputStream", "file", "true", "List", "Integer", "tokenLines", "allTokenHashList", "stream", "map", "Token", "getLine", "collect", "Collectors", "toList", "for", "Integer", "line", "tokenLines", "dataOutputStream", "writeShort", "line", "dataOutputStream", "flush", "dataOutputStream", "close" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\Word.java",
  "startLine" : 70,
  "endLine" : 76,
  "identifiers" : [ "byte", "temp", "new", "byte", "list", "size", "for", "int", "i", "i", "list", "size", "i", "temp", "i", "list", "get", "i", "return", "temp" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\CLexer2.java",
  "startLine" : 20,
  "endLine" : 77,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "r", "else", "if", "peek", "n", "line", "indexOfChar", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "indexOfChar", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "else", "if", "peek", "n", "line", "indexOfChar", "else", "if", "peek", "getReaderIsEnd", "else", "break", "wordIndexOfChar", "indexOfChar", "byte", "token", "byte", "peek", "if", "peek", "token", "ASCIITokens", "LEFT_SMALL_BRACKET", "else", "if", "peek", "token", "ASCIITokens", "RIGHT_SMALL_BRACKET", "getChar", "return", "new", "Token", "token", "line" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\CommonFileWord2.java",
  "startLine" : 17,
  "endLine" : 72,
  "identifiers" : [ "try", "List", "Token", "tokenHashList", "new", "ArrayList", "Measure", "measure", "new", "Measure", "measure", "setFileId", "fileID", "measure", "setStartLine", "measure", "setStartToken", "tokenID", "get", "Integer", "MAX_VALUE", "switch", "Config", "language", "case", "DetectLanguage", "JAVA", "lexer", "new", "JavaLexer2", "inputFileName", "break", "case", "DetectLanguage", "C", "lexer", "new", "CLexer2", "inputFileName", "break", "case", "DetectLanguage", "CPP", "lexer", "new", "CPPLexer2", "inputFileName", "break", "case", "DetectLanguage", "JAVA_SCRIPT", "lexer", "new", "JSLexer2", "inputFileName", "break", "case", "DetectLanguage", "GO", "lexer", "new", "GoLexer2", "inputFileName", "break", "case", "DetectLanguage", "PYTHON", "lexer", "new", "PythonLexer2", "inputFileName", "break", "Token", "word", "null", "tokenHashList", "add", "new", "Token", "CommonTokens", "BOUND_LEFT", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "tokenHashList", "add", "word", "tokenHashList", "add", "new", "Token", "CommonTokens", "BOUND_RIGHT", "lexer", "line", "if", "tokenHashList", "size", "mlc", "tokenHashList", "clear", "return", "new", "ArrayList", "measure", "setEndToken", "tokenID", "addAndGet", "tokenHashList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "finally", "lexer", "closeReader", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\CPPLexer2.java",
  "startLine" : 19,
  "endLine" : 75,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "r", "else", "if", "peek", "n", "line", "indexOfChar", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "indexOfChar", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "else", "if", "peek", "n", "line", "indexOfChar", "else", "if", "peek", "getReaderIsEnd", "else", "break", "wordIndexOfChar", "indexOfChar", "byte", "token", "byte", "peek", "if", "peek", "token", "ASCIITokens", "LEFT_SMALL_BRACKET", "else", "if", "peek", "token", "ASCIITokens", "RIGHT_SMALL_BRACKET", "getChar", "return", "new", "Token", "token", "line" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\CPPWord2.java",
  "startLine" : 17,
  "endLine" : 67,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "CPPLexer2", "inputFileName", "Token", "word", "null", "int", "functionPos", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "tmpList", "add", "word", "if", "word", "getTokenHash", "ASCIITokens", "LEFT_LARGE_BRACKET", "stack", "push", "lexer", "line", "if", "isFunction", "tmpList", "functionPos", "stack", "size", "tmpList", "clear", "tmpList", "add", "new", "Token", "CPPTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "else", "if", "word", "getTokenHash", "ASCIITokens", "RIGHT_LARGE_BRACKET", "if", "stack", "size", "if", "stack", "size", "functionPos", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "tmpList", "stream", "filter", "s", "s", "getTokenHash", "ASCIITokens", "SPACE", "s", "getTokenHash", "ASCIITokens", "HORIZONTAL_TAB", "collect", "Collectors", "toList", "tmpList", "add", "new", "Token", "CPPTokens", "BOUND_RIGHT", "lexer", "line", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "tmpList", "clear", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "functionPos", "stack", "pop", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "finally", "lexer", "closeReader", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\CPPWord2.java",
  "startLine" : 74,
  "endLine" : 144,
  "identifiers" : [ "int", "size", "tmpList", "size", "if", "size", "return", "false", "int", "index", "size", "byte", "word", "tmpList", "get", "index", "getTokenHash", "String", "seq", "while", "word", "ASCIITokens", "RIGHT_SMALL_BRACKET", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "word", "ASCIITokens", "SPACE", "word", "ASCIITokens", "RIGHT_SMALL_BRACKET", "seq", "char", "word", "seq", "new", "StringBuilder", "seq", "reverse", "toString", "if", "seq", "equals", "return", "true", "if", "seq", "length", "return", "false", "int", "rightParenCnt", "while", "rightParenCnt", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "word", "ASCIITokens", "LEFT_SMALL_BRACKET", "rightParenCnt", "else", "if", "word", "ASCIITokens", "RIGHT_SMALL_BRACKET", "rightParenCnt", "for", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "Character", "isSpaceChar", "char", "word", "break", "seq", "for", "seq", "char", "word", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "Character", "isLetterOrDigit", "char", "word", "word", "ASCIITokens", "UNDER_SCORE", "word", "ASCIITokens", "COLON", "break", "seq", "new", "StringBuilder", "seq", "reverse", "toString", "if", "CPPTokens", "KEY_WORDs_WITH_PAREN", "contains", "seq", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\CWord2.java",
  "startLine" : 18,
  "endLine" : 67,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "CLexer2", "inputFileName", "Token", "word", "null", "int", "functionPos", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "tmpList", "add", "word", "if", "word", "getTokenHash", "ASCIITokens", "LEFT_LARGE_BRACKET", "stack", "push", "lexer", "line", "if", "isFunction", "tmpList", "functionPos", "stack", "size", "tmpList", "clear", "tmpList", "add", "new", "Token", "CTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "else", "if", "word", "getTokenHash", "ASCIITokens", "RIGHT_LARGE_BRACKET", "if", "stack", "size", "if", "stack", "size", "functionPos", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "tmpList", "stream", "filter", "s", "s", "getTokenHash", "ASCIITokens", "SPACE", "s", "getTokenHash", "ASCIITokens", "HORIZONTAL_TAB", "collect", "Collectors", "toList", "tmpList", "add", "new", "Token", "CTokens", "BOUND_RIGHT", "lexer", "line", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "tmpList", "clear", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "functionPos", "stack", "pop", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "finally", "lexer", "closeReader", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\CWord2.java",
  "startLine" : 74,
  "endLine" : 143,
  "identifiers" : [ "int", "size", "tmpList", "size", "if", "size", "return", "false", "int", "index", "size", "byte", "word", "tmpList", "get", "index", "getTokenHash", "String", "seq", "while", "word", "ASCIITokens", "RIGHT_SMALL_BRACKET", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "word", "ASCIITokens", "SPACE", "word", "ASCIITokens", "RIGHT_SMALL_BRACKET", "seq", "char", "word", "if", "seq", "equals", "return", "true", "if", "seq", "length", "return", "false", "int", "rightParenCnt", "while", "rightParenCnt", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "word", "ASCIITokens", "LEFT_SMALL_BRACKET", "rightParenCnt", "else", "if", "word", "ASCIITokens", "RIGHT_SMALL_BRACKET", "rightParenCnt", "for", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "Character", "isSpaceChar", "char", "word", "break", "seq", "for", "seq", "char", "word", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "Character", "isLetterOrDigit", "char", "word", "break", "seq", "new", "StringBuilder", "seq", "reverse", "toString", "if", "CTokens", "KEY_WORDs_WITH_PAREN", "contains", "seq", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\GoLexer2.java",
  "startLine" : 20,
  "endLine" : 72,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "r", "peek", "t", "peek", "else", "if", "peek", "n", "line", "indexOfChar", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "indexOfChar", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "else", "if", "peek", "n", "line", "indexOfChar", "else", "if", "peek", "getReaderIsEnd", "else", "break", "wordIndexOfChar", "indexOfChar", "byte", "token", "byte", "peek", "if", "peek", "token", "ASCIITokens", "LEFT_SMALL_BRACKET", "else", "if", "peek", "token", "ASCIITokens", "RIGHT_SMALL_BRACKET", "getChar", "return", "new", "Token", "token", "line" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\GoWord2.java",
  "startLine" : 18,
  "endLine" : 65,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "GoLexer2", "inputFileName", "Token", "word", "null", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "tmpList", "add", "word", "if", "word", "getTokenHash", "ASCIITokens", "LEFT_LARGE_BRACKET", "stack", "push", "lexer", "line", "if", "stack", "size", "tmpList", "clear", "tmpList", "add", "new", "Token", "GoTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "else", "if", "word", "getTokenHash", "ASCIITokens", "RIGHT_LARGE_BRACKET", "if", "stack", "size", "if", "stack", "size", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "tmpList", "stream", "filter", "s", "s", "getTokenHash", "ASCIITokens", "SPACE", "s", "getTokenHash", "ASCIITokens", "HORIZONTAL_TAB", "collect", "Collectors", "toList", "tmpList", "add", "new", "Token", "GoTokens", "BOUND_RIGHT", "lexer", "line", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "tmpList", "clear", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "stack", "pop", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "finally", "lexer", "closeReader", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\JavaLexer2.java",
  "startLine" : 22,
  "endLine" : 84,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "t", "else", "if", "peek", "n", "line", "indexOfChar", "else", "if", "lastPeek", "r", "peek", "r", "line", "indexOfChar", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "indexOfChar", "if", "lastPeek", "r", "peek", "r", "line", "indexOfChar", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "else", "if", "peek", "n", "line", "indexOfChar", "else", "if", "peek", "getReaderIsEnd", "else", "break", "wordIndexOfChar", "indexOfChar", "byte", "token", "byte", "peek", "if", "peek", "token", "ASCIITokens", "LEFT_SMALL_BRACKET", "else", "if", "peek", "token", "ASCIITokens", "RIGHT_SMALL_BRACKET", "getChar", "return", "new", "Token", "token", "line" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\JavaWord2.java",
  "startLine" : 18,
  "endLine" : 68,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "JavaLexer2", "inputFileName", "Token", "word", "null", "int", "functionPos", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "tmpList", "add", "word", "if", "word", "getTokenHash", "ASCIITokens", "LEFT_LARGE_BRACKET", "stack", "push", "lexer", "line", "if", "isFunction", "tmpList", "functionPos", "stack", "size", "tmpList", "clear", "tmpList", "add", "new", "Token", "JavaTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "else", "if", "word", "getTokenHash", "ASCIITokens", "RIGHT_LARGE_BRACKET", "if", "stack", "size", "if", "stack", "size", "functionPos", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "tmpList", "stream", "filter", "s", "s", "getTokenHash", "ASCIITokens", "SPACE", "s", "getTokenHash", "ASCIITokens", "HORIZONTAL_TAB", "collect", "Collectors", "toList", "tmpList", "add", "new", "Token", "JavaTokens", "BOUND_RIGHT", "lexer", "line", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "tmpList", "clear", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "functionPos", "stack", "pop", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "finally", "lexer", "closeReader", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\JavaWord2.java",
  "startLine" : 75,
  "endLine" : 145,
  "identifiers" : [ "int", "size", "tmpList", "size", "if", "size", "return", "false", "int", "index", "size", "byte", "word", "tmpList", "get", "index", "getTokenHash", "String", "seq", "while", "word", "ASCIITokens", "RIGHT_SMALL_BRACKET", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "Character", "isLetterOrDigit", "char", "word", "seq", "char", "word", "seq", "new", "StringBuilder", "seq", "reverse", "toString", "if", "seq", "contains", "return", "true", "if", "seq", "length", "seq", "contains", "return", "false", "int", "rightParenCnt", "while", "rightParenCnt", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "word", "ASCIITokens", "LEFT_SMALL_BRACKET", "rightParenCnt", "else", "if", "word", "ASCIITokens", "RIGHT_SMALL_BRACKET", "rightParenCnt", "for", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "word", "ASCIITokens", "SPACE", "break", "seq", "for", "seq", "char", "word", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "Character", "isLetterOrDigit", "char", "word", "break", "seq", "new", "StringBuilder", "seq", "reverse", "toString", "if", "JavaTokens", "KEY_WORDs_WITH_PAREN", "contains", "seq", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\JSLexer2.java",
  "startLine" : 19,
  "endLine" : 80,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "r", "else", "if", "peek", "n", "line", "indexOfChar", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "indexOfChar", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "else", "if", "peek", "n", "line", "indexOfChar", "else", "if", "peek", "getReaderIsEnd", "else", "if", "peek", "do", "if", "peek", "getChar", "getChar", "else", "getChar", "while", "peek", "getReaderIsEnd", "else", "break", "wordIndexOfChar", "indexOfChar", "byte", "token", "byte", "peek", "if", "peek", "token", "ASCIITokens", "LEFT_SMALL_BRACKET", "else", "if", "peek", "token", "ASCIITokens", "RIGHT_SMALL_BRACKET", "getChar", "return", "new", "Token", "token", "line" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\JSWord2.java",
  "startLine" : 18,
  "endLine" : 68,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "JSLexer2", "inputFileName", "Token", "word", "null", "int", "functionPos", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "tmpList", "add", "word", "if", "word", "getTokenHash", "ASCIITokens", "LEFT_LARGE_BRACKET", "stack", "push", "lexer", "line", "if", "isFunction", "tmpList", "functionPos", "functionPos", "stack", "size", "tmpList", "clear", "tmpList", "add", "new", "Token", "JSTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "else", "if", "word", "getTokenHash", "ASCIITokens", "RIGHT_LARGE_BRACKET", "if", "stack", "size", "if", "stack", "size", "functionPos", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "tmpList", "stream", "filter", "s", "s", "getTokenHash", "ASCIITokens", "SPACE", "s", "getTokenHash", "ASCIITokens", "HORIZONTAL_TAB", "collect", "Collectors", "toList", "tmpList", "add", "new", "Token", "JSTokens", "BOUND_RIGHT", "lexer", "line", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "tmpList", "clear", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "functionPos", "stack", "pop", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "finally", "lexer", "closeReader", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\JSWord2.java",
  "startLine" : 75,
  "endLine" : 159,
  "identifiers" : [ "int", "size", "tmpList", "size", "if", "size", "return", "false", "int", "index", "size", "byte", "word", "tmpList", "get", "index", "getTokenHash", "for", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "Character", "isSpaceChar", "char", "word", "break", "if", "word", "ASCIITokens", "RIGHT_SMALL_BRACKET", "return", "false", "int", "rightSmallBracketCnt", "while", "rightSmallBracketCnt", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "word", "ASCIITokens", "RIGHT_SMALL_BRACKET", "rightSmallBracketCnt", "else", "if", "word", "ASCIITokens", "LEFT_SMALL_BRACKET", "rightSmallBracketCnt", "List", "String", "seqs", "new", "ArrayList", "String", "seq", "for", "int", "i", "i", "i", "for", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "Character", "isLetterOrDigit", "char", "word", "break", "for", "seq", "char", "word", "index", "if", "index", "if", "seq", "equals", "seq", "new", "StringBuilder", "seq", "reverse", "toString", "seqs", "add", "seq", "seq", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "Character", "isLetterOrDigit", "char", "word", "seq", "new", "StringBuilder", "seq", "reverse", "toString", "seqs", "add", "seq", "seq", "break", "if", "seqs", "size", "if", "seqs", "get", "equals", "seqs", "get", "equals", "return", "true", "if", "seqs", "size", "seq", "seqs", "get", "if", "seq", "equals", "return", "true", "if", "JSTokens", "KEY_WORDs_WITH_PAREN", "contains", "seqs", "get", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\PythonLexer2.java",
  "startLine" : 30,
  "endLine" : 91,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "indentPos", "add", "indexOfChar", "break", "else", "if", "peek", "r", "else", "if", "peek", "n", "lastNotBlankLine", "indexOfChar", "line", "lastNotBlankLine", "line", "indexOfChar", "indentPos", "clear", "else", "if", "peek", "lastNotBlankLine", "indexOfChar", "line", "lastNotBlankLine", "reader", "readLine", "line", "indexOfChar", "indentPos", "clear", "else", "if", "peek", "getReaderIsEnd", "else", "if", "peek", "do", "if", "peek", "getChar", "else", "if", "peek", "indentPos", "add", "indexOfChar", "else", "if", "peek", "n", "lastNotBlankLine", "line", "line", "indexOfChar", "indentPos", "clear", "getChar", "while", "peek", "getReaderIsEnd", "else", "break", "wordIndexOfChar", "indexOfChar", "byte", "token", "byte", "peek", "if", "peek", "token", "ASCIITokens", "LEFT_SMALL_BRACKET", "else", "if", "peek", "rightParenLine", "line", "token", "ASCIITokens", "RIGHT_SMALL_BRACKET", "getChar", "return", "new", "Token", "token", "line" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\PythonLexer2.java",
  "startLine" : 97,
  "endLine" : 109,
  "identifiers" : [ "if", "indentPos", "size", "return", "int", "indent", "for", "int", "i", "i", "indexOfChar", "i", "indentPos", "size", "i", "if", "indentPos", "get", "i", "i", "break", "indent", "return", "indent" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\PythonWord2.java",
  "startLine" : 19,
  "endLine" : 70,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "PythonLexer2", "inputFileName", "Token", "word", "null", "int", "functionIndent", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "tmpList", "add", "word", "if", "lexer", "getIndent", "functionIndent", "lexer", "line", "stack", "peek", "lexer", "line", "lexer", "rightParenLine", "if", "stack", "size", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "tmpList", "stream", "filter", "s", "s", "getTokenHash", "ASCIITokens", "SPACE", "s", "getTokenHash", "ASCIITokens", "HORIZONTAL_TAB", "collect", "Collectors", "toList", "tmpList", "add", "new", "Token", "PythonTokens", "BOUND_RIGHT", "lexer", "line", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "lastNotBlankLine", "tmpList", "clear", "tmpList", "add", "word", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "functionIndent", "stack", "pop", "if", "word", "getTokenHash", "f", "if", "isFunction", "tmpList", "stack", "push", "lexer", "line", "functionIndent", "lexer", "getIndent", "tmpList", "clear", "tmpList", "add", "new", "Token", "PythonTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "finally", "lexer", "closeReader", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\lexer2\\PythonWord2.java",
  "startLine" : 77,
  "endLine" : 86,
  "identifiers" : [ "int", "size", "tmpList", "size", "if", "size", "return", "false", "boolean", "c1", "tmpList", "get", "size", "getTokenHash", "f", "boolean", "c2", "tmpList", "get", "size", "getTokenHash", "e", "boolean", "c3", "tmpList", "get", "size", "getTokenHash", "d", "return", "c1", "c2", "c3" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\model\\CandidateClone.java",
  "startLine" : 18,
  "endLine" : 24,
  "identifiers" : [ "Measure", "firstMeasure", "Measure", "measureList", "get", "firstFrom", "Measure", "secondMeasure", "Measure", "measureList", "get", "secondFrom", "long", "m1start", "firstMeasure", "getStartToken", "long", "m2start", "secondMeasure", "getStartToken", "return", "int", "this", "f2start", "m2start", "this", "f1start", "m1start", "L" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\model\\CandidateClone.java",
  "startLine" : 26,
  "endLine" : 34,
  "identifiers" : [ "List", "CandidateClone", "list", "new", "ArrayList", "for", "int", "i", "i", "frag", "size", "i", "list", "add", "new", "CandidateClone", "Integer", "frag", "get", "i", "Integer", "frag", "get", "i", "Integer", "frag", "get", "i", "Integer", "frag", "get", "i", "return", "list" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\model\\CandidateClone.java",
  "startLine" : 36,
  "endLine" : 47,
  "identifiers" : [ "List", "Integer", "frag", "new", "ArrayList", "for", "int", "i", "i", "list", "size", "i", "frag", "add", "list", "get", "i", "f1start", "frag", "add", "list", "get", "i", "f2start", "frag", "add", "list", "get", "i", "cloneLen", "frag", "add", "list", "get", "i", "classid", "return", "frag" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\model\\CandidateClone.java",
  "startLine" : 49,
  "endLine" : 56,
  "identifiers" : [ "Comparator", "CandidateClone", "cmp", "Comparator", "comparing", "CandidateClone", "cc", "return", "cc", "getRank", "firstFrom", "secondFrom", "thenComparing", "cc", "return", "cc", "f1start", "Collections", "sort", "list", "cmp" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\model\\Clone.java",
  "startLine" : 21,
  "endLine" : 33,
  "identifiers" : [ "if", "this", "fileUrl", "clone", "fileUrl", "return", "false", "else", "if", "this", "start", "clone", "end", "clone", "end", "this", "start", "this", "end", "this", "start", "return", "true", "else", "if", "this", "end", "clone", "start", "clone", "start", "this", "end", "this", "start", "this", "end", "return", "true", "else", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\model\\Measure.java",
  "startLine" : 91,
  "endLine" : 106,
  "identifiers" : [ "int", "left", "int", "right", "measureList", "size", "int", "mid", "while", "left", "right", "mid", "left", "right", "if", "key", "measureList", "get", "mid", "getStartToken", "right", "mid", "else", "if", "key", "measureList", "get", "mid", "getStartToken", "left", "mid", "else", "return", "mid", "return", "right" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\model\\Measure.java",
  "startLine" : 108,
  "endLine" : 123,
  "identifiers" : [ "int", "left", "int", "right", "measureList", "size", "int", "mid", "while", "left", "right", "mid", "left", "right", "if", "key", "measureList", "get", "mid", "getEndToken", "right", "mid", "else", "if", "key", "measureList", "get", "mid", "getEndToken", "left", "mid", "else", "return", "mid", "return", "left" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\model\\MergedCCInstance.java",
  "startLine" : 32,
  "endLine" : 46,
  "identifiers" : [ "int", "idsize", "classIDs", "size", "int", "mvstep", "idsize", "long", "fil", "long", "power", "mvstep", "long", "hash", "L", "hash", "long", "idsize", "Integer", "classID", "for", "Iterator", "var7", "classIDs", "iterator", "var7", "hasNext", "hash", "long", "classID", "fil", "classID", "Integer", "var7", "next", "hash", "mvstep", "return", "hash" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\model\\SegmentAndLine.java",
  "startLine" : 27,
  "endLine" : 41,
  "identifiers" : [ "if", "this", "segNum", "y", "segNum", "return", "else", "if", "this", "segNum", "y", "segNum", "if", "this", "lineNum", "y", "lineNum", "return", "else", "if", "this", "lineNum", "y", "lineNum", "return", "else", "return", "else", "return" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\model\\SegmentAndLine.java",
  "startLine" : 43,
  "endLine" : 61,
  "identifiers" : [ "int", "low", "int", "high", "list", "size", "while", "low", "high", "low", "list", "size", "high", "list", "size", "int", "middle", "high", "low", "int", "re", "this", "compare", "list", "get", "middle", "if", "re", "return", "middle", "else", "if", "re", "high", "middle", "else", "low", "middle", "return" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\Pipeline.java",
  "startLine" : 24,
  "endLine" : 47,
  "identifiers" : [ "log", "info", "File", "dataset", "new", "File", "Config", "dataset", "if", "dataset", "isFile", "List", "String", "paths", "FileUtil", "readLines", "Config", "dataset", "for", "String", "path", "paths", "files", "add", "new", "File", "path", "else", "Filetraves", "filetraves", "new", "FiletravesNIOimpl", "Config", "dataset", "files", "filetraves", "directoryAllFileList", "try", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "Constants", "FILE_LIST", "for", "File", "f", "files", "writer", "write", "f", "getAbsolutePath", "writer", "newLine", "writer", "flush", "catch", "IOException", "e", "e", "printStackTrace", "log", "info", "files", "size" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\Pipeline.java",
  "startLine" : 67,
  "endLine" : 78,
  "identifiers" : [ "if", "args", "length", "log", "info", "System", "exit", "if", "new", "File", "args", "exists", "log", "error", "args", "System", "exit", "Config", "dataset", "args" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\Pipeline.java",
  "startLine" : 80,
  "endLine" : 127,
  "identifiers" : [ "checkArgs", "args", "long", "start", "System", "currentTimeMillis", "Config", "load", "MyTimer", "reset", "makeResultFolder", "loadFiles", "loadState", "Tokenizer", "tokenizer", "new", "Tokenizer", "state", "tokenIndexList", "files", "tokenizer", "tokenize", "if", "Config", "onlyTokenize", "SuffixArrayBuilder", "builder", "new", "SuffixArrayBuilder", "tokenIndexList", "builder", "build", "DataZParser", "parser", "null", "if", "Config", "granularity", "equals", "DetectGranularity", "SNIPPET", "if", "Config", "useLongType", "parser", "new", "UnionFindParser", "tokenIndexList", "tokenizer", "getQuickFindUF", "else", "parser", "new", "UnionFindParserForLong", "tokenIndexList", "tokenizer", "getQuickFindUF", "else", "if", "Config", "useGPU", "parser", "new", "GPUSnippetParser", "tokenIndexList", "files", "state", "else", "parser", "new", "CPUSnippetParser", "tokenIndexList", "files", "state", "parser", "parseDataZ", "long", "end", "System", "currentTimeMillis", "String", "timeCost", "MyTimer", "convert", "end", "start", "log", "info", "timeCost" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\SuffixArrayBuilder.java",
  "startLine" : 19,
  "endLine" : 81,
  "identifiers" : [ "log", "info", "log", "info", "log", "info", "int", "tokenFileNum", "tokenIndexList", "size", "if", "tokenFileNum", "File", "gpuData", "new", "File", "String", "format", "Constants", "DATAZ", "if", "gpuData", "exists", "return", "try", "File", "file", "new", "File", "String", "format", "Constants", "ALL_TOKEN_CSV", "file", "createNewFile", "long", "allTokenCsv0Size", "FileUtil", "getSize", "String", "format", "Constants", "ALL_TOKEN_CSV", "log", "info", "allTokenCsv0Size", "if", "allTokenCsv0Size", "return", "String", "command", "Config", "exe", "tokenIndexList", "get", "Config", "mlcc", "log", "info", "command", "Process", "p", "Runtime", "getRuntime", "exec", "command", "p", "waitFor", "catch", "Exception", "e", "e", "printStackTrace", "else", "for", "int", "i", "i", "tokenFileNum", "i", "for", "int", "j", "i", "j", "tokenFileNum", "j", "try", "Process", "p", "String", "command", "File", "gpuData", "new", "File", "String", "format", "Constants", "DATAZ", "i", "j", "if", "gpuData", "exists", "continue", "if", "i", "if", "j", "command", "Config", "exe", "i", "j", "tokenIndexList", "get", "i", "tokenIndexList", "get", "j", "Config", "mlcc", "else", "command", "Config", "exe", "i", "j", "tokenIndexList", "get", "i", "tokenIndexList", "get", "j", "Config", "mlcc", "else", "command", "Config", "exe", "i", "j", "tokenIndexList", "get", "i", "tokenIndexList", "get", "j", "Config", "mlcc", "long", "allTokenCsvSize1", "FileUtil", "getSize", "String", "format", "Constants", "ALL_TOKEN_CSV", "i", "long", "allTokenCsvSize2", "FileUtil", "getSize", "String", "format", "Constants", "ALL_TOKEN_CSV", "j", "log", "info", "allTokenCsvSize1", "allTokenCsvSize2", "if", "allTokenCsvSize1", "allTokenCsvSize2", "continue", "p", "Runtime", "getRuntime", "exec", "command", "log", "info", "command", "p", "waitFor", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\Tokenizer.java",
  "startLine" : 49,
  "endLine" : 64,
  "identifiers" : [ "try", "FileOutputStream", "os", "new", "FileOutputStream", "Constants", "TOKEN_ANALYZE", "for", "Measure", "measure", "Measure", "measureList", "long", "x", "measure", "getEndToken", "for", "int", "i", "i", "i", "os", "write", "int", "x", "i", "os", "flush", "os", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\Tokenizer.java",
  "startLine" : 66,
  "endLine" : 176,
  "identifiers" : [ "log", "info", "log", "info", "log", "info", "File", "file", "new", "File", "Constants", "TOKEN_DATA_FOLDER", "file", "mkdir", "file", "new", "File", "String", "format", "Constants", "ALL_TOKEN_CSV", "file", "createNewFile", "MyTimer", "reset", "Word", "word", "initWord", "word", "setMlc", "Config", "mlc", "word", "setMinLine", "Config", "minLine", "Measure", "measureList", "addAll", "MeasureListSaver", "load", "state", "getOutputId", "Measure", "measureID", "new", "AtomicInteger", "state", "getMeasureId", "if", "state", "getTokenIndexList", "null", "state", "getTokenIndexList", "size", "Word", "tokenID", "new", "AtomicLong", "else", "Word", "tokenID", "new", "AtomicLong", "state", "getTokenIndexList", "get", "state", "getTokenIndexList", "size", "Integer", "MAX_VALUE", "int", "outputId", "state", "getOutputId", "int", "cache", "Long", "tokenIdCache", "L", "Integer", "MAX_VALUE", "if", "new", "File", "Constants", "STATE_FILENAME", "exists", "tokenIndexList", "addAll", "state", "getTokenIndexList", "else", "tokenIndexList", "add", "tokenIdCache", "tokenNum", "state", "getTokenNum", "Word", "line", "new", "AtomicLong", "state", "getLine", "int", "lastIndex", "if", "new", "File", "Constants", "STATE_FILENAME", "exists", "lastIndex", "state", "getLastProcessedFileIndex", "int", "lastMeasureId", "state", "getMeasureId", "String", "lastTokenPath", "String", "format", "Constants", "ALL_TOKEN_CSV", "outputId", "File", "lastTokenFile", "new", "File", "lastTokenPath", "if", "lastTokenFile", "exists", "lastTokenFile", "delete", "if", "Config", "granularity", "equals", "DetectGranularity", "SNIPPET", "String", "lastTokenLinePath", "String", "format", "Constants", "TOKEN_LINE_CSV", "outputId", "File", "lastTokenLineFile", "new", "File", "lastTokenLinePath", "if", "lastTokenLineFile", "exists", "lastTokenLineFile", "delete", "for", "int", "i", "lastIndex", "i", "files", "size", "i", "try", "int", "situation", "int", "i", "float", "files", "size", "if", "situation", "cache", "log", "info", "situation", "cache", "situation", "String", "inputFile", "files", "get", "i", "getAbsolutePath", "List", "Token", "partTokenHash", "word", "segment", "inputFile", "i", "if", "partTokenHash", "size", "continue", "String", "currentFile", "String", "format", "Constants", "ALL_TOKEN_CSV", "outputId", "word", "saveToken", "partTokenHash", "currentFile", "if", "Config", "granularity", "equals", "DetectGranularity", "SNIPPET", "String", "currentTokenLineFile", "String", "format", "Constants", "TOKEN_LINE_CSV", "outputId", "word", "saveTokenLine", "partTokenHash", "currentTokenLineFile", "tokenNum", "partTokenHash", "size", "partTokenHash", "clear", "if", "Word", "tokenID", "get", "Config", "sepNum", "outputId", "state", "setLastProcessedFileIndex", "i", "state", "setOutputId", "outputId", "state", "setMeasureId", "Measure", "measureID", "get", "state", "setLine", "Word", "line", "get", "MeasureListSaver", "save", "Measure", "measureList", "subList", "lastMeasureId", "Measure", "measureID", "get", "outputId", "lastMeasureId", "Measure", "measureID", "get", "outputId", "tokenIdCache", "Word", "tokenID", "get", "Integer", "MAX_VALUE", "tokenIndexList", "add", "tokenIdCache", "state", "setTokenIndexList", "tokenIndexList", "state", "setTokenNum", "tokenNum", "StateUtil", "save", "state", "catch", "Exception", "e", "e", "printStackTrace", "if", "tokenNum", "state", "getTokenNum", "state", "setLastProcessedFileIndex", "files", "size", "state", "setOutputId", "outputId", "state", "setMeasureId", "Measure", "measureID", "get", "state", "setLine", "Word", "line", "get", "MeasureListSaver", "save", "Measure", "measureList", "subList", "lastMeasureId", "Measure", "measureID", "get", "outputId", "state", "setTokenNum", "tokenNum", "state", "setTokenIndexList", "tokenIndexList", "StateUtil", "save", "state", "log", "info", "tokenIndexList", "log", "info", "tokenNum", "log", "info", "Measure", "measureID", "log", "info", "Word", "line", "quickFindUF", "new", "UF", "Measure", "measureList", "size", "writeMeasureSep", "Printer", "printMeasureIndex", "files" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\Tokenizer.java",
  "startLine" : 182,
  "endLine" : 248,
  "identifiers" : [ "Word", "word", "null", "if", "Config", "language", "equals", "DetectLanguage", "JAVA", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "CommonFileWord", "else", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "JavaWord", "else", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "CommonFileWord2", "else", "word", "new", "JavaWord2", "else", "if", "Config", "language", "equals", "DetectLanguage", "C", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "CommonFileWord", "else", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "CWord", "else", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "CommonFileWord2", "else", "word", "new", "CWord2", "else", "if", "Config", "language", "equals", "DetectLanguage", "CPP", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "CommonFileWord", "else", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "CPPWord", "else", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "CommonFileWord2", "else", "word", "new", "CPPWord2", "else", "if", "Config", "language", "equals", "DetectLanguage", "PYTHON", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "CommonFileWord", "else", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "PythonWord", "else", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "CommonFileWord2", "else", "word", "new", "PythonWord2", "else", "if", "Config", "language", "equals", "DetectLanguage", "JAVA_SCRIPT", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "CommonFileWord", "else", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "JSWord", "else", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "CommonFileWord2", "else", "word", "new", "JSWord2", "else", "if", "Config", "language", "equals", "DetectLanguage", "GO", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "CommonFileWord", "else", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "GoWord", "else", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "Config", "tokenize", "word", "new", "CommonFileWord2", "else", "word", "new", "GoWord2", "else", "if", "Config", "language", "equals", "DetectLanguage", "COMMON", "word", "new", "CommonWord", "return", "word" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\UnionFindParser.java",
  "startLine" : 34,
  "endLine" : 66,
  "identifiers" : [ "PrintWriter", "pwClass", "new", "PrintWriter", "new", "File", "Constants", "CLONE_GROUP_FILENAME", "PrintWriter", "measurePairPrinter", "new", "PrintWriter", "new", "File", "Constants", "CLONE_PAIR_FILENAME", "Map", "Integer", "List", "Integer", "clearDupHash", "new", "HashMap", "int", "ids", "quickFindUF", "getId", "for", "int", "i", "i", "ids", "length", "i", "List", "Integer", "list", "clearDupHash", "getOrDefault", "ids", "i", "new", "ArrayList", "list", "add", "i", "clearDupHash", "put", "ids", "i", "list", "List", "List", "Integer", "resultSet", "new", "ArrayList", "Iterator", "List", "Integer", "iterator3", "clearDupHash", "values", "iterator", "while", "iterator3", "hasNext", "List", "Integer", "list", "iterator3", "next", "if", "list", "size", "resultSet", "add", "list", "iterator3", "remove", "log", "info", "resultSet", "size", "for", "int", "i", "i", "resultSet", "size", "i", "Printer", "printCloneClassByID", "pwClass", "resultSet", "get", "i", "Printer", "printMeasurePairSet", "measurePairPrinter", "new", "HashSet", "measurePairMap", "values", "pwClass", "flush", "pwClass", "close" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\UnionFindParser.java",
  "startLine" : 77,
  "endLine" : 107,
  "identifiers" : [ "int", "index", "long", "startToken", "int", "size", "int", "totalSize", "while", "index", "pairs", "size", "long", "pairIndex", "pairs", "get", "index", "getFirst", "int", "pairSize", "pairs", "get", "index", "getSize", "if", "index", "startToken", "pairIndex", "size", "pairSize", "index", "continue", "if", "startToken", "size", "pairIndex", "if", "startToken", "size", "pairIndex", "pairSize", "else", "size", "int", "pairIndex", "startToken", "pairSize", "index", "else", "totalSize", "size", "startToken", "pairIndex", "size", "pairSize", "index", "totalSize", "size", "return", "totalSize" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\UnionFindParser.java",
  "startLine" : 109,
  "endLine" : 171,
  "identifiers" : [ "Map", "String", "List", "ClonePair", "clonePairMap", "new", "HashMap", "for", "int", "i", "i", "result", "size", "i", "if", "result", "get", "i", "continue", "int", "x1", "result", "get", "i", "int", "x2", "result", "get", "i", "int", "cloneLen", "result", "get", "i", "int", "firstFrom", "Measure", "binarySearchStart", "x1", "int", "firstTo", "Measure", "binarySearchEnd", "x1", "cloneLen", "int", "secondFrom", "Measure", "binarySearchStart", "x2", "int", "secondTo", "Measure", "binarySearchEnd", "x2", "cloneLen", "if", "firstFrom", "secondFrom", "continue", "if", "firstFrom", "firstTo", "secondFrom", "secondTo", "continue", "String", "curPair", "linkMeasure", "firstFrom", "secondFrom", "List", "ClonePair", "pairs", "clonePairMap", "getOrDefault", "curPair", "new", "ArrayList", "pairs", "add", "new", "ClonePair", "Math", "min", "x1", "x2", "Math", "max", "x1", "x2", "cloneLen", "clonePairMap", "put", "curPair", "pairs", "for", "String", "pair", "clonePairMap", "keySet", "String", "tmp", "pair", "split", "int", "firstFrom", "Integer", "parseInt", "tmp", "int", "secondFrom", "Integer", "parseInt", "tmp", "Measure", "firstMeasure", "Measure", "measureList", "get", "firstFrom", "Measure", "secondMeasure", "Measure", "measureList", "get", "secondFrom", "int", "firstMeasureSize", "int", "firstMeasure", "getEndToken", "firstMeasure", "getStartToken", "int", "secondMeasureSize", "int", "secondMeasure", "getEndToken", "secondMeasure", "getStartToken", "int", "maxMeasureSize", "Math", "max", "firstMeasureSize", "secondMeasureSize", "List", "ClonePair", "pairs", "clonePairMap", "get", "pair", "Collections", "sort", "pairs", "new", "Comparator", "ClonePair", "Override", "public", "int", "compare", "ClonePair", "o1", "ClonePair", "o2", "if", "o1", "getFirst", "o2", "getFirst", "return", "else", "if", "o1", "getFirst", "o2", "getFirst", "return", "else", "return", "int", "totalCloneSize", "calculateCoverLength", "pairs", "float", "similarity", "totalCloneSize", "f", "maxMeasureSize", "if", "similarity", "Config", "threshold", "similarity", "f", "quickFindUF", "union", "firstFrom", "secondFrom", "String", "key", "linkMeasure", "firstFrom", "secondFrom", "if", "measurePairMap", "containsKey", "key", "measurePairMap", "put", "key", "new", "MeasurePair", "firstFrom", "secondFrom", "similarity", "clonePairMap", "clear" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\UnionFindParser.java",
  "startLine" : 174,
  "endLine" : 212,
  "identifiers" : [ "log", "info", "log", "info", "log", "info", "List", "Integer", "result", "new", "ArrayList", "int", "tokenFileNum", "tokenIndexList", "size", "if", "tokenFileNum", "String", "dataFile", "String", "format", "Constants", "DATAZ", "if", "new", "File", "dataFile", "exists", "return", "ParseMatchResult", "parseFileToInt", "dataFile", "result", "parseOneDataFile", "result", "result", "clear", "else", "int", "totalCnt", "tokenFileNum", "tokenFileNum", "int", "cnt", "for", "int", "j", "j", "tokenFileNum", "j", "for", "int", "i", "j", "i", "tokenFileNum", "i", "try", "cnt", "log", "info", "cnt", "f", "totalCnt", "String", "dataFile", "String", "format", "Constants", "DATAZ", "j", "i", "if", "new", "File", "dataFile", "exists", "continue", "ParseMatchResult", "parseFileToInt", "dataFile", "result", "parseOneDataFile", "result", "result", "clear", "catch", "Exception", "e", "e", "printStackTrace", "printUnionResult" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\UnionFindParserForLong.java",
  "startLine" : 35,
  "endLine" : 67,
  "identifiers" : [ "PrintWriter", "pwClass", "new", "PrintWriter", "new", "File", "Constants", "CLONE_GROUP_FILENAME", "PrintWriter", "measurePairPrinter", "new", "PrintWriter", "new", "File", "Constants", "CLONE_PAIR_FILENAME", "Map", "Integer", "List", "Integer", "clearDupHash", "new", "HashMap", "int", "ids", "quickFindUF", "getId", "for", "int", "i", "i", "ids", "length", "i", "List", "Integer", "list", "clearDupHash", "getOrDefault", "ids", "i", "new", "ArrayList", "list", "add", "i", "clearDupHash", "put", "ids", "i", "list", "List", "List", "Integer", "resultSet", "new", "ArrayList", "Iterator", "List", "Integer", "iterator3", "clearDupHash", "values", "iterator", "while", "iterator3", "hasNext", "List", "Integer", "list", "iterator3", "next", "if", "list", "size", "resultSet", "add", "list", "iterator3", "remove", "log", "info", "resultSet", "size", "for", "int", "i", "i", "resultSet", "size", "i", "Printer", "printCloneClassByID", "pwClass", "resultSet", "get", "i", "Printer", "printMeasurePairSet", "measurePairPrinter", "new", "HashSet", "measurePairMap", "values", "pwClass", "flush", "pwClass", "close" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\UnionFindParserForLong.java",
  "startLine" : 78,
  "endLine" : 108,
  "identifiers" : [ "int", "index", "long", "startToken", "int", "size", "int", "totalSize", "while", "index", "pairs", "size", "long", "pairIndex", "pairs", "get", "index", "getFirst", "int", "pairSize", "pairs", "get", "index", "getSize", "if", "index", "startToken", "pairIndex", "size", "pairSize", "index", "continue", "if", "startToken", "size", "pairIndex", "if", "startToken", "size", "pairIndex", "pairSize", "else", "size", "int", "pairIndex", "startToken", "pairSize", "index", "else", "totalSize", "size", "startToken", "pairIndex", "size", "pairSize", "index", "totalSize", "size", "return", "totalSize" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\UnionFindParserForLong.java",
  "startLine" : 110,
  "endLine" : 171,
  "identifiers" : [ "Map", "String", "List", "ClonePair", "clonePairMap", "new", "HashMap", "for", "int", "i", "i", "result", "size", "i", "if", "result", "get", "i", "continue", "long", "x1", "result", "get", "i", "long", "x2", "result", "get", "i", "int", "cloneLen", "Math", "toIntExact", "result", "get", "i", "int", "firstFrom", "Measure", "binarySearchStart", "x1", "int", "firstTo", "Measure", "binarySearchEnd", "x1", "cloneLen", "int", "secondFrom", "Measure", "binarySearchStart", "x2", "int", "secondTo", "Measure", "binarySearchEnd", "x2", "cloneLen", "if", "firstFrom", "secondFrom", "continue", "if", "firstFrom", "firstTo", "secondFrom", "secondTo", "continue", "String", "curPair", "linkMeasure", "firstFrom", "secondFrom", "List", "ClonePair", "pairs", "clonePairMap", "getOrDefault", "curPair", "new", "ArrayList", "pairs", "add", "new", "ClonePair", "Math", "min", "x1", "x2", "Math", "max", "x1", "x2", "cloneLen", "clonePairMap", "put", "curPair", "pairs", "for", "String", "pair", "clonePairMap", "keySet", "String", "tmp", "pair", "split", "int", "firstFrom", "Integer", "parseInt", "tmp", "int", "secondFrom", "Integer", "parseInt", "tmp", "Measure", "firstMeasure", "Measure", "measureList", "get", "firstFrom", "Measure", "secondMeasure", "Measure", "measureList", "get", "secondFrom", "int", "firstMeasureSize", "int", "firstMeasure", "getEndToken", "firstMeasure", "getStartToken", "int", "secondMeasureSize", "int", "secondMeasure", "getEndToken", "secondMeasure", "getStartToken", "int", "maxMeasureSize", "Math", "max", "firstMeasureSize", "secondMeasureSize", "List", "ClonePair", "pairs", "clonePairMap", "get", "pair", "Collections", "sort", "pairs", "new", "Comparator", "ClonePair", "Override", "public", "int", "compare", "ClonePair", "o1", "ClonePair", "o2", "if", "o1", "getFirst", "o2", "getFirst", "return", "else", "if", "o1", "getFirst", "o2", "getFirst", "return", "else", "return", "int", "totalCloneSize", "calculateCoverLength", "pairs", "float", "similarity", "totalCloneSize", "f", "maxMeasureSize", "if", "similarity", "Config", "threshold", "similarity", "f", "quickFindUF", "union", "firstFrom", "secondFrom", "String", "key", "linkMeasure", "firstFrom", "secondFrom", "if", "measurePairMap", "containsKey", "key", "measurePairMap", "put", "key", "new", "MeasurePair", "firstFrom", "secondFrom", "similarity", "clonePairMap", "clear" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\UnionFindParserForLong.java",
  "startLine" : 174,
  "endLine" : 212,
  "identifiers" : [ "log", "info", "log", "info", "log", "info", "List", "Long", "result", "new", "ArrayList", "int", "tokenFileNum", "tokenIndexList", "size", "if", "tokenFileNum", "String", "dataFile", "String", "format", "Constants", "DATAZ", "if", "new", "File", "dataFile", "exists", "return", "ParseMatchResult", "parseFileToLong", "dataFile", "result", "parseOneDataFile", "result", "result", "clear", "else", "int", "totalCnt", "tokenFileNum", "tokenFileNum", "int", "cnt", "for", "int", "j", "j", "tokenFileNum", "j", "for", "int", "i", "j", "i", "tokenFileNum", "i", "try", "cnt", "log", "info", "cnt", "f", "totalCnt", "String", "dataFile", "String", "format", "Constants", "DATAZ", "j", "i", "if", "new", "File", "dataFile", "exists", "continue", "ParseMatchResult", "parseFileToLong", "dataFile", "result", "parseOneDataFile", "result", "result", "clear", "catch", "Exception", "e", "e", "printStackTrace", "printUnionResult" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\CalCoverage.java",
  "startLine" : 24,
  "endLine" : 70,
  "identifiers" : [ "if", "s", "null", "e", "null", "Arrays", "sort", "s", "Arrays", "sort", "e", "int", "p", "int", "q", "int", "start", "s", "p", "int", "coverLen", "while", "p", "s", "length", "q", "e", "length", "if", "s", "p", "e", "q", "p", "else", "q", "if", "p", "q", "coverLen", "e", "p", "start", "start", "s", "p", "if", "p", "coverLen", "e", "p", "start", "return", "coverLen", "else", "Arrays", "sort", "ls", "Arrays", "sort", "le", "int", "p", "int", "q", "long", "start", "ls", "p", "int", "coverLen", "while", "p", "ls", "length", "q", "le", "length", "if", "ls", "p", "le", "q", "p", "else", "q", "if", "p", "q", "coverLen", "le", "p", "start", "start", "ls", "p", "if", "p", "coverLen", "le", "p", "start", "return", "coverLen" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\FiletravesNIOimpl.java",
  "startLine" : 38,
  "endLine" : 46,
  "identifiers" : [ "for", "String", "ext", "Config", "extensionArray", "if", "file", "toFile", "getName", "endsWith", "ext", "fileLists", "add", "file", "toFile", "break", "return", "super", "visitFile", "file", "attrs" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\FileUtil.java",
  "startLine" : 20,
  "endLine" : 29,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "List", "String", "lines", "new", "ArrayList", "String", "line", "null", "while", "line", "reader", "readLine", "null", "lines", "add", "line", "reader", "close", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\FileUtil.java",
  "startLine" : 36,
  "endLine" : 45,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "StringBuilder", "builder", "new", "StringBuilder", "String", "line", "null", "while", "line", "reader", "readLine", "null", "builder", "append", "line", "reader", "close", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\FileUtil.java",
  "startLine" : 71,
  "endLine" : 80,
  "identifiers" : [ "FileInputStream", "fileInputStream", "new", "FileInputStream", "path", "List", "Character", "result", "new", "ArrayList", "int", "c", "while", "c", "fileInputStream", "read", "result", "add", "char", "c", "fileInputStream", "close", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\MeasureListSaver.java",
  "startLine" : 18,
  "endLine" : 26,
  "identifiers" : [ "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "String", "format", "Constants", "MEASURE_LIST", "outputId", "for", "Measure", "measure", "measureList", "writer", "write", "measure", "toString", "writer", "newLine", "writer", "flush", "writer", "close" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\MeasureListSaver.java",
  "startLine" : 33,
  "endLine" : 55,
  "identifiers" : [ "List", "Measure", "measureList", "new", "ArrayList", "if", "new", "File", "String", "format", "Constants", "MEASURE_LIST", "exists", "return", "measureList", "for", "int", "i", "i", "outputId", "i", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "String", "format", "Constants", "MEASURE_LIST", "i", "String", "line", "null", "while", "line", "reader", "readLine", "null", "String", "info", "line", "split", "int", "startLine", "Integer", "parseInt", "info", "int", "endLine", "Integer", "parseInt", "info", "long", "startToken", "Long", "parseLong", "info", "long", "endToken", "Long", "parseLong", "info", "int", "fileId", "Integer", "parseInt", "info", "int", "id", "Integer", "parseInt", "info", "measureList", "add", "new", "Measure", "id", "startToken", "endToken", "startLine", "endLine", "fileId", "reader", "close", "return", "measureList" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\MyTimer.java",
  "startLine" : 44,
  "endLine" : 50,
  "identifiers" : [ "int", "seconds", "int", "timeMillis", "e3", "int", "hour", "seconds", "int", "minute", "seconds", "hour", "int", "second", "seconds", "hour", "minute", "return", "String", "format", "hour", "minute", "second" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\ParseMatchResult.java",
  "startLine" : 20,
  "endLine" : 37,
  "identifiers" : [ "try", "BufferedInputStream", "br", "new", "BufferedInputStream", "new", "FileInputStream", "srcFile", "int", "buffer", "int", "buffer4", "for", "int", "count", "buffer", "br", "read", "count", "int", "bit", "count", "buffer", "bit", "buffer4", "buffer", "if", "count", "result", "add", "buffer4", "buffer4", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\ParseMatchResult.java",
  "startLine" : 44,
  "endLine" : 61,
  "identifiers" : [ "try", "BufferedInputStream", "br", "new", "BufferedInputStream", "new", "FileInputStream", "srcFile", "long", "buffer", "long", "buffer8", "for", "int", "count", "buffer", "br", "read", "count", "int", "bit", "count", "buffer", "bit", "buffer8", "buffer", "if", "count", "result", "add", "buffer8", "buffer8", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\StateUtil.java",
  "startLine" : 20,
  "endLine" : 28,
  "identifiers" : [ "try", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "Constants", "STATE_FILENAME", "String", "json", "JSONObject", "toJSONString", "state", "writer", "write", "json", "writer", "flush", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\StateUtil.java",
  "startLine" : 34,
  "endLine" : 51,
  "identifiers" : [ "if", "new", "File", "Constants", "STATE_FILENAME", "exists", "return", "new", "State", "try", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "Constants", "STATE_FILENAME", "StringBuilder", "builder", "new", "StringBuilder", "String", "line", "null", "while", "line", "reader", "readLine", "null", "builder", "append", "line", "String", "json", "builder", "toString", "return", "JSONObject", "parseObject", "json", "State", "class", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "State" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\UF.java",
  "startLine" : 19,
  "endLine" : 30,
  "identifiers" : [ "id", "new", "int", "N", "sz", "new", "int", "N", "for", "int", "i", "i", "N", "i", "id", "i", "i", "for", "int", "i", "i", "N", "i", "sz", "i", "this", "N", "N", "count", "N" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\UF.java",
  "startLine" : 42,
  "endLine" : 57,
  "identifiers" : [ "int", "xRoot", "find", "x", "int", "yRoot", "find", "y", "if", "xRoot", "yRoot", "if", "sz", "xRoot", "sz", "yRoot", "id", "xRoot", "y", "sz", "yRoot", "sz", "xRoot", "else", "id", "yRoot", "x", "sz", "xRoot", "sz", "yRoot", "count" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 46,
  "endLine" : 102,
  "identifiers" : [ "DiffInfo", "diffInfo", "null", "try", "AbstractTreeIterator", "oldTreeParser", "prepareTreeParser", "repository", "oldCommit", "getId", "getName", "AbstractTreeIterator", "newTreeParser", "prepareTreeParser", "repository", "newCommit", "getId", "getName", "List", "DiffEntry", "diffEntryList", "git", "diff", "setOldTree", "oldTreeParser", "setNewTree", "newTreeParser", "setPathFilter", "PathFilter", "create", "getVersedRelativePath", "cloneInstance", "getPath", "setContextLines", "call", "if", "diffEntryList", "size", "System", "out", "println", "return", "null", "DiffEntry", "diffEntry", "diffEntryList", "get", "EditList", "editList", "getEditListFromDiffEntry", "repository", "diffEntry", "CloneInstanceWithStatus", "cloneInstanceInNewCommitWithStatus", "getNewCloneInstanceWithStatus", "editList", "cloneInstance", "if", "cloneInstanceInNewCommitWithStatus", "getStatus", "Status", "D", "boolean", "fileExist", "FileExistUtil", "isFileExist", "repository", "newCommit", "cloneInstanceInNewCommitWithStatus", "getPath", "if", "fileExist", "cloneInstanceInNewCommitWithStatus", "setStatus", "Status", "Q", "CloneInstance", "newCloneInstance", "new", "CloneInstance", "cloneInstanceInNewCommitWithStatus", "getPath", "cloneInstanceInNewCommitWithStatus", "getStartLine", "cloneInstanceInNewCommitWithStatus", "getEndLine", "diffInfo", "new", "DiffInfo", "newCommit", "newCloneInstance", "cloneInstanceInNewCommitWithStatus", "getStatus", "catch", "Exception", "e", "e", "printStackTrace", "return", "diffInfo" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 106,
  "endLine" : 122,
  "identifiers" : [ "try", "RevWalk", "walk", "new", "RevWalk", "repository", "RevCommit", "commit", "walk", "parseCommit", "ObjectId", "fromString", "objectId", "RevTree", "tree", "walk", "parseTree", "commit", "getTree", "getId", "CanonicalTreeParser", "treeParser", "new", "CanonicalTreeParser", "try", "ObjectReader", "reader", "repository", "newObjectReader", "treeParser", "reset", "reader", "tree", "getId", "walk", "dispose", "return", "treeParser" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 123,
  "endLine" : 153,
  "identifiers" : [ "if", "edits", "isEmpty", "return", "a", "for", "int", "i", "i", "edits", "size", "i", "final", "Edit", "e", "edits", "get", "i", "if", "a", "e", "getBeginA", "if", "i", "return", "a", "return", "e", "getBeginB", "e", "getBeginA", "a", "if", "e", "getBeginA", "a", "return", "e", "getBeginB", "if", "e", "getEndA", "a", "return", "e", "getEndB", "if", "e", "getBeginA", "a", "a", "e", "getEndA", "return", "final", "Edit", "last", "edits", "get", "edits", "size", "return", "last", "getEndB", "a", "last", "getEndA" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 170,
  "endLine" : 182,
  "identifiers" : [ "boolean", "isModified", "false", "for", "Edit", "edit", "editList", "int", "beginA", "edit", "getBeginA", "int", "endA", "edit", "getEndA", "if", "oldCloneInstance", "getStartLine", "beginA", "oldCloneInstance", "getEndLine", "endA", "isModified", "true", "return", "isModified" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 183,
  "endLine" : 199,
  "identifiers" : [ "DiffFormatter", "formatter", "new", "DiffFormatter", "NullOutputStream", "INSTANCE", "formatter", "setRepository", "repository", "formatter", "setContext", "formatter", "setDiffComparator", "RawTextComparator", "WS_IGNORE_ALL", "EditList", "editList", "new", "EditList", "String", "diffLogText", "null", "try", "formatter", "format", "diffEntry", "editList", "formatter", "toFileHeader", "diffEntry", "toEditList", "catch", "IOException", "e", "e", "printStackTrace", "return", "editList" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 201,
  "endLine" : 223,
  "identifiers" : [ "ByteArrayOutputStream", "byteArrayOutputStream", "new", "ByteArrayOutputStream", "DiffFormatter", "formatter", "new", "DiffFormatter", "byteArrayOutputStream", "formatter", "setRepository", "repository", "formatter", "setContext", "formatter", "setDiffComparator", "RawTextComparator", "WS_IGNORE_ALL", "EditList", "editList", "null", "String", "diffLogText", "null", "try", "formatter", "format", "diffEntry", "diffLogText", "byteArrayOutputStream", "toString", "byteArrayOutputStream", "close", "editList", "formatter", "toFileHeader", "diffEntry", "toEditList", "catch", "IOException", "e", "e", "printStackTrace", "Pair", "String", "EditList", "diffTextEditListPair", "new", "Pair", "diffLogText", "editList", "return", "diffTextEditListPair" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 225,
  "endLine" : 259,
  "identifiers" : [ "Status", "statusInNewCommit", "Status", "N", "int", "newStartLine", "int", "newEndLine", "newStartLine", "mapA2B", "oldCloneInstance", "getStartLine", "editList", "newEndLine", "mapA2B", "oldCloneInstance", "getEndLine", "editList", "if", "newStartLine", "newEndLine", "statusInNewCommit", "Status", "D", "else", "if", "newStartLine", "newStartLine", "getNewStartLine", "oldCloneInstance", "getStartLine", "editList", "statusInNewCommit", "Status", "E", "else", "if", "newEndLine", "newEndLine", "getNewEndLine", "oldCloneInstance", "getEndLine", "editList", "statusInNewCommit", "Status", "E", "else", "if", "newStartLine", "newEndLine", "statusInNewCommit", "Status", "D", "else", "if", "isModified", "oldCloneInstance", "editList", "statusInNewCommit", "Status", "M", "CloneInstanceWithStatus", "cloneInstanceWithStatus", "new", "CloneInstanceWithStatus", "oldCloneInstance", "getPath", "newStartLine", "newEndLine", "statusInNewCommit", "return", "cloneInstanceWithStatus" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 261,
  "endLine" : 294,
  "identifiers" : [ "List", "EditContent", "editContentListAfterCut", "new", "ArrayList", "int", "startLine", "oldCloneInstance", "getStartLine", "int", "endLine", "oldCloneInstance", "getEndLine", "for", "EditContent", "editContent", "fullEditContentList", "int", "beginA", "editContent", "getEdit", "getBeginA", "int", "endA", "editContent", "getEdit", "getEndA", "if", "startLine", "beginA", "endA", "endLine", "editContentListAfterCut", "add", "editContent", "else", "if", "beginA", "startLine", "startLine", "endA", "endA", "endLine", "Edit", "Type", "type", "editContent", "getEdit", "getType", "if", "type", "Edit", "Type", "INSERT", "editContentListAfterCut", "add", "editContent", "else", "if", "type", "Edit", "Type", "REPLACE", "int", "interval", "endA", "startLine", "Edit", "newEdit", "new", "Edit", "startLine", "endA", "editContent", "getEdit", "getEndB", "interval", "editContent", "getEdit", "getEndB", "else", "if", "beginA", "endLine", "endLine", "endA", "beginA", "startLine", "return", "editContentListAfterCut" ]
}, {
  "path" : "d:\\GitRepo\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 296,
  "endLine" : 321,
  "identifiers" : [ "List", "EditContent", "editContentListAfterCut", "new", "ArrayList", "int", "startLine", "oldCloneInstance", "getStartLine", "int", "endLine", "oldCloneInstance", "getEndLine", "for", "EditContent", "editContent", "fullEditContentList", "int", "beginA", "editContent", "getEdit", "getBeginA", "int", "endA", "editContent", "getEdit", "getEndA", "if", "startLine", "beginA", "endA", "endLine", "editContentListAfterCut", "add", "editContent", "continue", "else", "if", "beginA", "startLine", "startLine", "endA", "editContentListAfterCut", "add", "editContent", "continue", "else", "if", "beginA", "endLine", "endLine", "endA", "editContentListAfterCut", "add", "editContent", "continue", "return", "editContentListAfterCut" ]
}, {
  "path" : "d:\\GitRepo\\SAGABuilder\\src\\main\\java\\com\\fudan\\config\\Config.java",
  "startLine" : 32,
  "endLine" : 43,
  "identifiers" : [ "if", "new", "File", "CONFIG_FILE", "exists", "System", "out", "printf", "CONFIG_FILE", "save", "System", "exit", "properties", "load", "new", "FileReader", "CONFIG_FILE", "EXE_FILE", "properties", "getProperty", "MLCC", "Integer", "parseInt", "properties", "getProperty", "QUCIK_COMPARE_FILE", "properties", "getProperty" ]
}, {
  "path" : "d:\\GitRepo\\SAGABuilder\\src\\main\\java\\com\\fudan\\Main.java",
  "startLine" : 19,
  "endLine" : 37,
  "identifiers" : [ "long", "start", "System", "currentTimeMillis", "logger", "info", "Config", "load", "logger", "info", "initState", "logger", "info", "logger", "info", "logger", "info", "ProcessManager", "processManager", "new", "ProcessManager", "state", "getTokenIndexList", "if", "equals", "Config", "QUCIK_COMPARE_FILE", "processManager", "execRuntimeProgram", "else", "processManager", "quickCompare", "long", "end", "System", "currentTimeMillis", "logger", "info", "DateUtil", "convert", "end", "start" ]
}, {
  "path" : "d:\\GitRepo\\SAGABuilder\\src\\main\\java\\com\\fudan\\manager\\ProcessManager.java",
  "startLine" : 26,
  "endLine" : 84,
  "identifiers" : [ "int", "tokenFileNum", "tokenIndexList", "size", "if", "tokenFileNum", "File", "gpuData", "new", "File", "if", "gpuData", "exists", "return", "try", "File", "file", "new", "File", "File", "separator", "File", "separator", "file", "createNewFile", "String", "command", "Config", "EXE_FILE", "tokenIndexList", "get", "Config", "MLCC", "logger", "info", "command", "Process", "p", "Runtime", "getRuntime", "exec", "command", "p", "waitFor", "catch", "Exception", "e", "e", "printStackTrace", "else", "int", "totalCnt", "tokenFileNum", "tokenFileNum", "int", "cnt", "for", "int", "i", "i", "tokenFileNum", "i", "for", "int", "j", "i", "j", "tokenFileNum", "j", "try", "cnt", "logger", "info", "String", "format", "cnt", "f", "totalCnt", "Process", "p", "String", "command", "File", "gpuData", "new", "File", "i", "j", "if", "gpuData", "exists", "continue", "if", "i", "if", "j", "command", "Config", "EXE_FILE", "i", "j", "tokenIndexList", "get", "i", "tokenIndexList", "get", "j", "Config", "MLCC", "else", "command", "Config", "EXE_FILE", "i", "j", "tokenIndexList", "get", "i", "tokenIndexList", "get", "j", "Config", "MLCC", "else", "command", "Config", "EXE_FILE", "i", "j", "tokenIndexList", "get", "i", "tokenIndexList", "get", "j", "Config", "MLCC", "long", "allTokenCsvSize1", "FileUtil", "getSize", "i", "long", "allTokenCsvSize2", "FileUtil", "getSize", "j", "logger", "info", "allTokenCsvSize1", "allTokenCsvSize2", "if", "allTokenCsvSize1", "allTokenCsvSize2", "continue", "p", "Runtime", "getRuntime", "exec", "command", "logger", "info", "command", "p", "waitFor", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SAGABuilder\\src\\main\\java\\com\\fudan\\manager\\ProcessManager.java",
  "startLine" : 90,
  "endLine" : 143,
  "identifiers" : [ "try", "String", "content", "FileUtil", "readAllText", "Config", "QUCIK_COMPARE_FILE", "List", "List", "tokenIds", "JSONArray", "parseArray", "content", "List", "class", "for", "List", "tokenIdPair", "tokenIds", "if", "tokenIdPair", "size", "continue", "int", "tokenIndex1", "int", "tokenIdPair", "get", "int", "tokenIndex2", "int", "tokenIdPair", "get", "String", "tokenFile1", "tokenIndex1", "if", "new", "File", "tokenFile1", "exists", "logger", "info", "tokenFile1", "System", "exit", "String", "tokenFile2", "tokenIndex2", "if", "new", "File", "tokenFile2", "exists", "logger", "info", "tokenFile2", "System", "exit", "File", "gpuData", "new", "File", "String", "format", "tokenIndex1", "tokenIndex2", "if", "gpuData", "exists", "return", "String", "command", "if", "tokenIndex1", "if", "tokenIndex2", "command", "Config", "EXE_FILE", "tokenIndex1", "tokenIndex2", "tokenIndexList", "get", "tokenIndex1", "tokenIndexList", "get", "tokenIndex2", "Config", "MLCC", "else", "command", "Config", "EXE_FILE", "tokenIndex1", "tokenIndex2", "tokenIndexList", "get", "tokenIndex1", "tokenIndexList", "get", "tokenIndex2", "Config", "MLCC", "else", "command", "Config", "EXE_FILE", "tokenIndex1", "tokenIndex2", "tokenIndexList", "get", "tokenIndex1", "tokenIndexList", "get", "tokenIndex2", "Config", "MLCC", "long", "allTokenCsvSize1", "FileUtil", "getSize", "tokenFile1", "long", "allTokenCsvSize2", "FileUtil", "getSize", "tokenFile2", "logger", "info", "allTokenCsvSize1", "allTokenCsvSize2", "if", "allTokenCsvSize1", "allTokenCsvSize2", "logger", "info", "return", "Process", "p", "Runtime", "getRuntime", "exec", "command", "logger", "info", "command", "p", "waitFor", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SAGABuilder\\src\\main\\java\\com\\fudan\\util\\DateUtil.java",
  "startLine" : 10,
  "endLine" : 16,
  "identifiers" : [ "int", "seconds", "int", "timeMillis", "e3", "int", "hour", "seconds", "int", "minute", "seconds", "hour", "int", "second", "seconds", "hour", "minute", "return", "String", "format", "hour", "minute", "second" ]
}, {
  "path" : "d:\\GitRepo\\SAGABuilder\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 20,
  "endLine" : 29,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "StringBuilder", "builder", "new", "StringBuilder", "String", "line", "null", "while", "line", "reader", "readLine", "null", "builder", "append", "line", "reader", "close", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\SAGABuilder\\src\\main\\java\\com\\fudan\\util\\StateUtil.java",
  "startLine" : 18,
  "endLine" : 26,
  "identifiers" : [ "try", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "file", "String", "json", "JSONObject", "toJSONString", "state", "writer", "write", "json", "writer", "flush", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SAGABuilder\\src\\main\\java\\com\\fudan\\util\\StateUtil.java",
  "startLine" : 32,
  "endLine" : 49,
  "identifiers" : [ "if", "new", "File", "file", "exists", "return", "new", "State", "try", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "StringBuilder", "builder", "new", "StringBuilder", "String", "line", "null", "while", "line", "reader", "readLine", "null", "builder", "append", "line", "String", "json", "builder", "toString", "return", "JSONObject", "parseObject", "json", "State", "class", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "State" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\entity\\MethodInfo.java",
  "startLine" : 26,
  "endLine" : 38,
  "identifiers" : [ "this", "id", "id", "this", "path", "path", "this", "project", "project", "this", "startLine", "startLine", "this", "endLine", "endLine", "this", "groupId", "groupId", "this", "methodId", "methodId", "this", "hash1", "hash1", "this", "hash2", "hash2", "this", "hash3", "hash3", "this", "hash4", "hash4" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\Main.java",
  "startLine" : 21,
  "endLine" : 61,
  "identifiers" : [ "try", "long", "timeStart", "System", "currentTimeMillis", "logger", "info", "if", "new", "File", "Config", "CONFIG_FILE", "exists", "logger", "info", "Config", "CONFIG_FILE", "Config", "save", "Config", "CONFIG_FILE", "System", "exit", "Config", "config", "Config", "load", "Config", "CONFIG_FILE", "logger", "info", "MybatisUtil", "init", "config", "logger", "info", "IncrementFileManager", "incrementFileManager", "new", "IncrementFileManager", "config", "getIncrementFileFolder", "incrementFileManager", "process", "logger", "info", "DatabaseManager", "databaseManager", "new", "DatabaseManager", "config", "incrementFileManager", "databaseManager", "process", "logger", "info", "DetectResultManager", "detectResultManager", "new", "DetectResultManager", "config", "detectResultManager", "process", "logger", "info", "MethodAnalyzer", "analyzer", "new", "MethodAnalyzer", "config", "detectResultManager", "analyzer", "process", "long", "timeEnd", "System", "currentTimeMillis", "logger", "info", "TimeUtil", "convert", "timeEnd", "timeStart", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\manager\\DatabaseManager.java",
  "startLine" : 45,
  "endLine" : 108,
  "identifiers" : [ "SqlSession", "session", "MybatisUtil", "openSession", "if", "session", "null", "logger", "info", "System", "exit", "MethodInfoMapper", "mapper", "session", "getMapper", "MethodInfoMapper", "class", "MethodInfoExample", "example", "new", "MethodInfoExample", "List", "String", "files", "new", "ArrayList", "incrementFileManager", "getUpdatedFiles", "files", "addAll", "incrementFileManager", "getDeletedFiles", "files", "addAll", "incrementFileManager", "getNewFiles", "Map", "String", "List", "String", "projectMap", "new", "HashMap", "for", "String", "file", "files", "String", "tmp", "file", "split", "String", "project", "null", "if", "tmp", "contains", "project", "tmp", "substring", "tmp", "lastIndexOf", "else", "if", "tmp", "contains", "project", "tmp", "substring", "tmp", "lastIndexOf", "else", "project", "tmp", "String", "path", "tmp", "List", "String", "projectFiles", "projectMap", "getOrDefault", "project", "new", "ArrayList", "projectFiles", "add", "path", "projectMap", "put", "project", "projectFiles", "int", "resCnt", "int", "projectNum", "projectMap", "size", "int", "index", "for", "String", "project", "projectMap", "keySet", "example", "clear", "example", "setTableName", "config", "getJdbcTableName", "example", "createCriteria", "andProjectEqualTo", "project", "andPathIn", "projectMap", "get", "project", "int", "res", "mapper", "deleteByExample", "example", "resCnt", "res", "index", "logger", "info", "String", "format", "index", "f", "projectNum", "if", "incrementFileManager", "getDeletedRepos", "size", "example", "clear", "example", "setTableName", "config", "getJdbcTableName", "String", "sep", "if", "incrementFileManager", "getDeletedRepos", "size", "sep", "incrementFileManager", "getDeletedRepos", "get", "contains", "sep", "sep", "String", "finalSep", "sep", "List", "String", "projects", "incrementFileManager", "getDeletedRepos", "stream", "map", "s", "s", "substring", "s", "lastIndexOf", "finalSep", "collect", "Collectors", "toList", "example", "createCriteria", "andProjectIn", "projects", "int", "res", "mapper", "deleteByExample", "example", "resCnt", "res", "logger", "info", "resCnt", "session", "commit", "session", "close" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\manager\\DetectResultManager.java",
  "startLine" : 27,
  "endLine" : 36,
  "identifiers" : [ "this", "config", "config", "this", "groups", "new", "HashMap", "this", "measureId2GroupId", "new", "HashMap", "try", "measureReader", "new", "BufferedReader", "new", "FileReader", "config", "getDetectResultFolder", "FileNames", "MEASURE_INDEX_FILE", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\manager\\DetectResultManager.java",
  "startLine" : 41,
  "endLine" : 65,
  "identifiers" : [ "try", "if", "new", "File", "config", "getDetectResultFolder", "FileNames", "CLONE_GROUP_FILE", "exists", "return", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "config", "getDetectResultFolder", "FileNames", "CLONE_GROUP_FILE", "String", "line", "null", "int", "groupId", "while", "line", "reader", "readLine", "null", "groupId", "String", "tmp", "line", "trim", "split", "for", "String", "measureId", "tmp", "measureId2GroupId", "put", "Integer", "parseInt", "measureId", "groupId", "List", "Integer", "s", "groups", "getOrDefault", "groupId", "new", "ArrayList", "s", "add", "Integer", "parseInt", "measureId", "groups", "put", "groupId", "s", "reader", "close", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\manager\\DetectResultManager.java",
  "startLine" : 71,
  "endLine" : 129,
  "identifiers" : [ "try", "String", "line", "measureReader", "readLine", "if", "line", "null", "measureReader", "close", "return", "null", "line", "line", "trim", "String", "tmp", "line", "split", "int", "id", "Integer", "parseInt", "tmp", "String", "path", "line", "substring", "line", "indexOf", "line", "lastIndexOf", "path", "path", "substring", "path", "lastIndexOf", "int", "startLine", "Integer", "parseInt", "tmp", "tmp", "length", "int", "endLine", "Integer", "parseInt", "tmp", "tmp", "length", "int", "gId", "if", "measureId2GroupId", "containsKey", "id", "gId", "measureId2GroupId", "get", "id", "MethodInfo", "measureIndex", "new", "MethodInfo", "measureIndex", "setId", "id", "measureIndex", "setPath", "path", "measureIndex", "setStartLine", "startLine", "measureIndex", "setEndLine", "endLine", "measureIndex", "setGroupId", "gId", "List", "String", "codes", "new", "ArrayList", "try", "codes", "FileUtil", "readLines", "measureIndex", "getPath", "measureIndex", "getStartLine", "measureIndex", "getEndLine", "catch", "IOException", "e", "e", "printStackTrace", "String", "code", "String", "join", "codes", "code", "CommentUtil", "removeComments2", "code", "config", "getLanguage", "long", "measureHashVal", "SimHash", "computeOptimizedSimHashForString", "code", "long", "hashs", "SimHash", "divide4", "measureHashVal", "measureIndex", "setHash1", "hashs", "measureIndex", "setHash2", "hashs", "measureIndex", "setHash3", "hashs", "measureIndex", "setHash4", "hashs", "String", "snapshotsFolder", "config", "getIncrementFileFolder", "FileNames", "SNAPSHOTS_FOLDER", "String", "relativePath", "measureIndex", "getPath", "substring", "snapshotsFolder", "length", "String", "names", "null", "if", "relativePath", "contains", "names", "relativePath", "split", "else", "names", "relativePath", "split", "String", "repo", "names", "measureIndex", "setProject", "repo", "relativePath", "relativePath", "substring", "repo", "length", "relativePath", "relativePath", "replaceAll", "measureIndex", "setPath", "relativePath", "return", "measureIndex", "catch", "Exception", "e", "MethodInfo", "methodInfo", "new", "MethodInfo", "methodInfo", "setId", "return", "methodInfo" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\manager\\IncrementFileManager.java",
  "startLine" : 49,
  "endLine" : 61,
  "identifiers" : [ "try", "String", "file", "String", "format", "incrementFileFolder", "FileNames", "NEW_FILE", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "while", "line", "reader", "readLine", "null", "newFiles", "add", "line", "trim", "reader", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\manager\\IncrementFileManager.java",
  "startLine" : 66,
  "endLine" : 78,
  "identifiers" : [ "try", "String", "file", "String", "format", "incrementFileFolder", "FileNames", "UPDATED_FILE", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "while", "line", "reader", "readLine", "null", "updatedFiles", "add", "line", "trim", "reader", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\manager\\IncrementFileManager.java",
  "startLine" : 83,
  "endLine" : 95,
  "identifiers" : [ "try", "String", "file", "String", "format", "incrementFileFolder", "FileNames", "DELETED_FILE", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "while", "line", "reader", "readLine", "null", "deletedFiles", "add", "line", "trim", "reader", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\manager\\IncrementFileManager.java",
  "startLine" : 100,
  "endLine" : 112,
  "identifiers" : [ "try", "String", "file", "String", "format", "incrementFileFolder", "FileNames", "DELETED_REPO", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "while", "line", "reader", "readLine", "null", "deletedRepos", "add", "line", "trim", "reader", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\processor\\MethodAnalyzer.java",
  "startLine" : 40,
  "endLine" : 49,
  "identifiers" : [ "this", "config", "config", "this", "detectResultManager", "detectResultManager", "newRecords", "new", "ArrayList", "updateRecords", "new", "ArrayList", "oldGroup2newGroup", "new", "HashMap", "noGroup2newGroup", "new", "HashMap", "measureId2GroupId", "new", "HashMap", "this", "modifiedRecords", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\processor\\MethodAnalyzer.java",
  "startLine" : 51,
  "endLine" : 98,
  "identifiers" : [ "logger", "info", "maxGroupId", "getMax", "startGroupId", "maxGroupId", "maxMethodId", "getMax", "startMethodId", "maxMethodId", "int", "size", "FileUtil", "getFileLineNum", "config", "getDetectResultFolder", "FileNames", "MEASURE_INDEX_FILE", "int", "cnt", "MethodInfo", "measureIndex", "null", "while", "true", "try", "measureIndex", "detectResultManager", "next", "if", "measureIndex", "null", "break", "cnt", "if", "cnt", "logger", "info", "String", "format", "cnt", "size", "if", "measureIndex", "getId", "continue", "measureIndex", "setMethodId", "startMethodId", "measureIndex", "setId", "measureIndex", "getMethodId", "matchNewInstance", "measureIndex", "catch", "Exception", "e", "logger", "info", "newRecords", "size", "insertNewRecords", "logger", "info", "updateRecords", "size", "changeUpdatedRecords", "printMeasure2Group", "printModifiedRecords" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\processor\\MethodAnalyzer.java",
  "startLine" : 100,
  "endLine" : 169,
  "identifiers" : [ "if", "oldGroup2newGroup", "containsKey", "measureIndex", "getGroupId", "measureIndex", "setGroupId", "oldGroup2newGroup", "get", "measureIndex", "getGroupId", "measureId2GroupId", "put", "measureIndex", "getMethodId", "maxMethodId", "String", "format", "measureIndex", "getMethodId", "measureIndex", "getGroupId", "newRecords", "add", "measureIndex", "return", "SqlSession", "session", "MybatisUtil", "openSession", "MethodInfoMapper", "mapper", "session", "getMapper", "MethodInfoMapper", "class", "MethodInfoExample", "example", "new", "MethodInfoExample", "example", "setTableName", "config", "getJdbcTableName", "example", "or", "andHash1EqualTo", "measureIndex", "getHash1", "andHash2EqualTo", "measureIndex", "getHash2", "example", "or", "andHash3EqualTo", "measureIndex", "getHash3", "andHash4EqualTo", "measureIndex", "getHash4", "List", "MethodInfo", "methodInfos", "mapper", "selectByExample", "example", "MethodInfo", "matchedInstance", "null", "long", "measureHash", "measureIndex", "getHash1", "measureIndex", "getHash2", "measureIndex", "getHash3", "measureIndex", "getHash4", "for", "MethodInfo", "methodInfo", "methodInfos", "long", "hash", "methodInfo", "getHash1", "methodInfo", "getHash2", "methodInfo", "getHash3", "methodInfo", "getHash4", "int", "dis", "SimHash", "hammingDistance", "measureHash", "hash", "if", "dis", "config", "getHammingDistanceThreshold", "int", "line1", "measureIndex", "getEndLine", "measureIndex", "getStartLine", "int", "line2", "methodInfo", "getEndLine", "methodInfo", "getStartLine", "int", "lineGap", "Math", "abs", "line1", "line2", "float", "lineGapPercent", "lineGap", "f", "Math", "min", "line1", "line2", "if", "lineGapPercent", "config", "getLineGapPercent", "matchedInstance", "methodInfo", "break", "session", "close", "if", "matchedInstance", "null", "if", "measureIndex", "getGroupId", "measureId2GroupId", "put", "measureIndex", "getMethodId", "maxMethodId", "String", "format", "measureIndex", "getMethodId", "measureIndex", "getGroupId", "newRecords", "add", "measureIndex", "else", "int", "newGroupId", "startGroupId", "oldGroup2newGroup", "put", "measureIndex", "getGroupId", "newGroupId", "measureIndex", "setGroupId", "newGroupId", "measureId2GroupId", "put", "measureIndex", "getMethodId", "maxMethodId", "String", "format", "measureIndex", "getMethodId", "measureIndex", "getGroupId", "newRecords", "add", "measureIndex", "return", "modifiedRecords", "add", "String", "format", "measureIndex", "getId", "matchedInstance", "getId", "if", "matchedInstance", "getGroupId", "measureIndex", "setGroupId", "matchedInstance", "getGroupId", "measureId2GroupId", "put", "measureIndex", "getMethodId", "maxMethodId", "String", "format", "measureIndex", "getMethodId", "measureIndex", "getGroupId", "newRecords", "add", "measureIndex", "else", "if", "noGroup2newGroup", "containsKey", "matchedInstance", "getMethodId", "measureIndex", "setGroupId", "noGroup2newGroup", "get", "matchedInstance", "getMethodId", "else", "measureIndex", "setGroupId", "startGroupId", "noGroup2newGroup", "put", "matchedInstance", "getMethodId", "measureIndex", "getGroupId", "matchedInstance", "setGroupId", "measureIndex", "getGroupId", "updateRecords", "add", "matchedInstance", "measureId2GroupId", "put", "measureIndex", "getMethodId", "maxMethodId", "String", "format", "measureIndex", "getMethodId", "measureIndex", "getGroupId", "newRecords", "add", "measureIndex" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\processor\\MethodAnalyzer.java",
  "startLine" : 174,
  "endLine" : 187,
  "identifiers" : [ "SqlSession", "session", "MybatisUtil", "openSession", "MethodInfoMapper", "mapper", "session", "getMapper", "MethodInfoMapper", "class", "int", "buffer", "int", "size", "newRecords", "size", "buffer", "newRecords", "size", "buffer", "newRecords", "size", "buffer", "for", "int", "i", "i", "size", "i", "logger", "info", "String", "format", "i", "f", "size", "int", "fromIndex", "i", "buffer", "int", "toIndex", "Math", "min", "i", "buffer", "newRecords", "size", "mapper", "batchInsert", "config", "getJdbcTableName", "newRecords", "subList", "fromIndex", "toIndex", "session", "commit", "session", "close" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\processor\\MethodAnalyzer.java",
  "startLine" : 192,
  "endLine" : 211,
  "identifiers" : [ "SqlSession", "session", "MybatisUtil", "openSession", "MethodInfoMapper", "mapper", "session", "getMapper", "MethodInfoMapper", "class", "MethodInfoExample", "example", "new", "MethodInfoExample", "int", "size", "updateRecords", "size", "int", "cnt", "for", "MethodInfo", "methodInfo", "updateRecords", "cnt", "logger", "info", "String", "format", "cnt", "f", "size", "example", "clear", "example", "setTableName", "config", "getJdbcTableName", "example", "createCriteria", "andMethodIdEqualTo", "methodInfo", "getMethodId", "MethodInfo", "tmp", "new", "MethodInfo", "tmp", "setGroupId", "methodInfo", "getGroupId", "mapper", "updateByExampleSelective", "tmp", "example", "session", "commit", "session", "close" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\processor\\MethodAnalyzer.java",
  "startLine" : 218,
  "endLine" : 228,
  "identifiers" : [ "SqlSession", "session", "MybatisUtil", "openSession", "if", "session", "null", "return", "MethodInfoMapper", "mapper", "session", "getMapper", "MethodInfoMapper", "class", "Integer", "res", "mapper", "selectMax", "config", "getJdbcTableName", "field", "res", "res", "null", "res", "session", "close", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\processor\\MethodAnalyzer.java",
  "startLine" : 233,
  "endLine" : 246,
  "identifiers" : [ "BufferedWriter", "writer", "null", "try", "writer", "new", "BufferedWriter", "new", "FileWriter", "FileNames", "MEASURE_TO_GROUP_FILE", "for", "Integer", "measureId", "measureId2GroupId", "keySet", "writer", "write", "String", "format", "measureId", "measureId2GroupId", "get", "measureId", "writer", "newLine", "writer", "flush", "writer", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\processor\\MethodAnalyzer.java",
  "startLine" : 251,
  "endLine" : 264,
  "identifiers" : [ "BufferedWriter", "writer", "null", "try", "writer", "new", "BufferedWriter", "new", "FileWriter", "FileNames", "MODIFIED_RECORDS_FILE", "for", "String", "record", "modifiedRecords", "writer", "write", "record", "writer", "newLine", "writer", "flush", "writer", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 59,
  "endLine" : 67,
  "identifiers" : [ "Long", "l", "new", "Long", "polynomial", "FPGenerator", "fpgen", "FPGenerator", "generators", "get", "l", "if", "fpgen", "null", "fpgen", "new", "FPGenerator", "polynomial", "degree", "generators", "put", "l", "fpgen", "return", "fpgen" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 78,
  "endLine" : 87,
  "identifiers" : [ "int", "N", "degree", "long", "local", "N", "fp", "L", "N", "long", "temp", "zero", "for", "int", "i", "i", "N", "i", "temp", "ByteModTable", "i", "int", "fp", "xff", "fp", "return", "local", "temp" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 107,
  "endLine" : 115,
  "identifiers" : [ "f", "xffff", "v", "int", "i", "int", "f", "long", "result", "f", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 120,
  "endLine" : 132,
  "identifiers" : [ "f", "xffffffffL", "v", "int", "i", "int", "f", "long", "result", "f", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 137,
  "endLine" : 155,
  "identifiers" : [ "f", "v", "long", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 270,
  "endLine" : 277,
  "identifiers" : [ "int", "n", "s", "length", "for", "int", "i", "i", "n", "i", "int", "v", "int", "s", "charAt", "i", "f", "extend_char", "f", "v", "return", "reduce", "f" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 314,
  "endLine" : 321,
  "identifiers" : [ "int", "n", "s", "length", "for", "int", "i", "i", "n", "i", "int", "x", "int", "s", "charAt", "i", "f", "extend_byte", "f", "x", "return", "reduce", "f" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 363,
  "endLine" : 402,
  "identifiers" : [ "this", "degree", "degree", "this", "polynomial", "polynomial", "ByteModTable", "new", "long", "long", "PowerTable", "new", "long", "long", "x_to_the_i", "one", "long", "x_to_the_degree_minus_one", "one", "degree", "for", "int", "i", "i", "i", "PowerTable", "i", "x_to_the_i", "boolean", "overflow", "x_to_the_i", "x_to_the_degree_minus_one", "x_to_the_i", "if", "overflow", "x_to_the_i", "polynomial", "this", "empty", "PowerTable", "for", "int", "i", "i", "i", "for", "int", "j", "j", "j", "long", "v", "zero", "for", "int", "k", "k", "k", "if", "j", "k", "v", "PowerTable", "i", "k", "ByteModTable", "i", "j", "v" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 410,
  "endLine" : 474,
  "identifiers" : [ "null", "xC000000000000000L", "xC000000000000000L", "xE000000000000000L", "xE000000000000000L", "xD000000000000000L", "xB000000000000000L", "xF800000000000000L", "xF800000000000000L", "xEC00000000000000L", "xBC00000000000000L", "xDA00000000000000L", "xB600000000000000L", "xE500000000000000L", "xE500000000000000L", "x9680000000000000L", "xD480000000000000L", "x80C0000000000000L", "x8840000000000000L", "xB0A0000000000000L", "xE9A0000000000000L", "xD9F0000000000000L", "xC9B0000000000000L", "xE758000000000000L", "xDE98000000000000L", "xE42C000000000000L", "x94E4000000000000L", "xD4CE000000000000L", "xB892000000000000L", "xE2AB000000000000L", "x9E39000000000000L", "xCCE4800000000000L", "x9783800000000000L", "xD8F8C00000000000L", "xA9CDC00000000000L", "x9A28200000000000L", "xFD79E00000000000L", "xC782500000000000L", "x96CD300000000000L", "xBEE6880000000000L", "xE902C80000000000L", "x86D7E40000000000L", "xF066340000000000L", "x9888060000000000L", "x910ABE0000000000L", "xFF30E30000000000L", "xB27EFB0000000000L", "x8E375B8000000000L", "xA03D948000000000L", "xD1415C4000000000L", "xF5357CC000000000L", "x91A916E000000000L", "xB6CE66E000000000L", "xE6D2FC5000000000L", "xD55882B000000000L", "x9A3BA0B800000000L", "xFBD654E800000000L", "xAEA5D2E400000000L", "xF0E533AC00000000L", "xDA88B7BE00000000L", "xAA3AAEDE00000000L", "xBA75BB4300000000L", "xF5A811C500000000L", "x9B6C9A2F80000000L", "x9603CCED80000000L", "xFABB538840000000L", "xE2747090C0000000L", "x8358898EA0000000L", "x8C698D3D20000000L", "xDA8ABD5BF0000000L", "xF6DF3A0AF0000000L", "xB090C3F758000000L", "xD3B4D3D298000000L", "xAD9882F5BC000000L", "x88DA4FB544000000L", "xC3C366272A000000L", "xDCCF2A2262000000L", "x9BC0224A97000000L", "xAF5D96F273000000L", "x8643FFF621800000L", "x8E390C6EDC800000L", "xE45C01919BC00000L", "xCBB34C8945C00000L", "x80D8141BC2E00000L", "x886AFC3912200000L", "xF605807C26500000L", "xA3B92D28F6300000L", "xCE9A2CFC76280000L", "x98400C1921280000L", "xF61894904C040000L", "xC8BE6DBCEC8C0000L", "xE3A44C104D160000L", "xCA84A59443760000L", "xC7E84953A11B0000L", "xD9D4F6AA02CB0000L", "xC26CDD1C9A358000L", "x8BE8478434328000L", "xAE125DBEB198C000L", "xFCC5DBFD5AAAC000L", "x86DE52A079A6A000L", "xC5F16BD883816000L", "xDF82486AAFE37000L", "xA293EC735692D000L", "xE91ABA275C272800L", "xD686192874E3C800L", "x963D0960DAB3FC00L", "xBA9DE62072621400L", "xA2188C4E8A46CE00L", "xD31F75BCB4977E00L", "xC43A416020A6CB00L", "x99F57FECA12B3900L", "xA4F72EF82A58AE80L", "xCECE4391B81DA380L", "xB39F119264BC0940L", "x80A277D20DABB9C0L", "xFD6616C0CBFA0B20L", "xED16E64117DC11A0L", "xFFA8BC44327B5390L", "xEDFB13DB3B66C210L", "xCAE8EB99E73AB548L", "xC86135B6EA2F0B98L", "xBA49BADCDD19B16CL", "x8F1944AFB18564C4L", "xECFC86D765EABBEEL", "x9190E1C46CC13702L", "xE1F8D6B3195D6D97L", "xDF70267FF5E4C979L", "xD74307D3FD3382DBL", "x9999B3FFDC769B48L" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 105,
  "endLine" : 155,
  "identifiers" : [ ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 225,
  "endLine" : 239,
  "identifiers" : [ "if", "f", "f", "throw", "new", "IllegalArgumentException", "if", "n", "throw", "new", "IllegalArgumentException", "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "n", "f", "if", "l", "l", "l", "free", "PRIMES", "p", "l", "this", "f", "f", "this", "maxFill", "int", "free", "f", "key", "new", "long", "free", "state", "new", "byte", "free" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 305,
  "endLine" : 315,
  "identifiers" : [ "if", "offset", "throw", "new", "ArrayIndexOutOfBoundsException", "offset", "if", "length", "throw", "new", "IllegalArgumentException", "length", "if", "offset", "length", "arrayLength", "throw", "new", "ArrayIndexOutOfBoundsException", "offset", "length", "arrayLength" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 436,
  "endLine" : 471,
  "identifiers" : [ "final", "long", "key", "this", "key", "final", "byte", "state", "this", "state", "final", "int", "n", "key", "length", "final", "int", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "int", "h1", "k2i", "n", "if", "state", "h1", "OCCUPIED", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "OCCUPIED", "k", "key", "h1", "if", "state", "h1", "FREE", "return", "h1", "if", "state", "h1", "OCCUPIED", "return", "h1", "final", "int", "i", "h1", "if", "ASSERTS", "assert", "state", "h1", "REMOVED", "if", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "k", "key", "h1", "return", "state", "h1", "OCCUPIED", "h1", "i" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 481,
  "endLine" : 501,
  "identifiers" : [ "final", "long", "key", "this", "key", "final", "byte", "state", "this", "state", "final", "int", "n", "key", "length", "final", "int", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "int", "h1", "k2i", "n", "if", "state", "h1", "FREE", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "k", "key", "h1", "return", "state", "h1", "OCCUPIED", "h1" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 503,
  "endLine" : 523,
  "identifiers" : [ "final", "int", "i", "findInsertionPoint", "k", "if", "i", "return", "false", "if", "state", "i", "FREE", "free", "state", "i", "OCCUPIED", "key", "i", "k", "if", "count", "maxFill", "int", "newP", "Math", "min", "p", "growthFactor", "PRIMES", "length", "while", "PRIMES", "newP", "PRIMES", "p", "newP", "rehash", "newP", "if", "free", "rehash", "p", "if", "ASSERTS", "checkTable", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 599,
  "endLine" : 611,
  "identifiers" : [ "long", "retVal", "final", "byte", "state", "LongOpenHashSet", "this", "state", "final", "int", "n", "state", "length", "if", "hasNext", "throw", "new", "NoSuchElementException", "retVal", "key", "last", "pos", "if", "c", "do", "pos", "while", "pos", "n", "state", "pos", "OCCUPIED", "return", "retVal" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 668,
  "endLine" : 680,
  "identifiers" : [ "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "count", "f", "if", "l", "l", "l", "if", "l", "p", "return", "true", "try", "rehash", "l", "catch", "OutOfMemoryError", "cantDoIt", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 704,
  "endLine" : 717,
  "identifiers" : [ "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "Math", "min", "Integer", "MAX_VALUE", "Math", "max", "n", "count", "f", "if", "l", "l", "l", "if", "p", "l", "return", "true", "try", "rehash", "l", "catch", "OutOfMemoryError", "cantDoIt", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 732,
  "endLine" : 761,
  "identifiers" : [ "int", "i", "j", "count", "k2i", "h1", "h2", "final", "byte", "state", "this", "state", "long", "k", "final", "int", "newN", "PRIMES", "newP", "final", "long", "key", "this", "key", "newKey", "new", "long", "newN", "final", "byte", "newState", "new", "byte", "newN", "while", "j", "while", "state", "i", "OCCUPIED", "i", "k", "key", "i", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "h1", "k2i", "newN", "if", "newState", "h1", "FREE", "h2", "k2i", "newN", "do", "h1", "h1", "h2", "newN", "while", "newState", "h1", "FREE", "newState", "h1", "OCCUPIED", "newKey", "h1", "k", "i", "p", "newP", "free", "newN", "count", "maxFill", "int", "newN", "f", "this", "key", "newKey", "this", "state", "newState" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 782,
  "endLine" : 792,
  "identifiers" : [ "LongOpenHashSet", "c", "try", "c", "LongOpenHashSet", "super", "clone", "catch", "CloneNotSupportedException", "cantHappen", "throw", "new", "InternalError", "c", "key", "key", "clone", "c", "state", "state", "clone", "return", "c" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 804,
  "endLine" : 813,
  "identifiers" : [ "int", "h", "i", "j", "count", "while", "j", "while", "state", "i", "OCCUPIED", "i", "h", "longHash2IntHash", "key", "i", "i", "return", "h" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 826,
  "endLine" : 858,
  "identifiers" : [ "s", "defaultReadObject", "growthFactor", "DEFAULT_GROWTH_FACTOR", "p", "Arrays", "binarySearch", "PRIMES", "int", "count", "f", "if", "p", "p", "p", "final", "int", "n", "PRIMES", "p", "maxFill", "int", "n", "f", "free", "n", "count", "final", "long", "key", "this", "key", "new", "long", "n", "final", "byte", "state", "this", "state", "new", "byte", "n", "int", "i", "k2i", "h1", "h2", "long", "k", "i", "count", "while", "i", "k", "s", "readLong", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "h1", "k2i", "n", "if", "state", "h1", "FREE", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "state", "h1", "OCCUPIED", "key", "h1", "k", "if", "ASSERTS", "checkTable" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 53,
  "endLine" : 99,
  "identifiers" : [ "LongOpenHashSet", "shingles", "new", "LongOpenHashSet", "Math", "min", "s", "length", "int", "length", "s", "length", "for", "int", "i", "i", "length", "FIXED_CGRAM_LENGTH", "i", "long", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingles", "add", "shingle", "int", "v", "new", "int", "HASH_SIZE", "byte", "longAsBytes", "new", "byte", "for", "long", "shingle", "shingles", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "long", "longHash", "FPGenerator", "std64", "fp", "longAsBytes", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 101,
  "endLine" : 155,
  "identifiers" : [ "LongOpenHashSet", "shingles", "new", "LongOpenHashSet", "Math", "min", "length", "FIXED_BGRAM_LENGTH", "for", "int", "i", "offset", "i", "length", "FIXED_BGRAM_LENGTH", "i", "int", "pos", "i", "long", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingles", "add", "shingle", "int", "v", "new", "int", "HASH_SIZE", "byte", "longAsBytes", "new", "byte", "for", "long", "shingle", "shingles", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "long", "longHash", "FPGenerator", "std64", "fp", "longAsBytes", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 157,
  "endLine" : 180,
  "identifiers" : [ "int", "v", "new", "int", "HASH_SIZE", "for", "String", "shingle", "shingles", "byte", "bytes", "shingle", "getBytes", "long", "longHash", "FPGenerator", "std64", "fp", "bytes", "bytes", "length", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 209,
  "endLine" : 216,
  "identifiers" : [ "long", "res", "new", "long", "res", "hash", "xffff000000000000L", "res", "hash", "x0000ffff00000000L", "res", "hash", "x00000000ffff0000L", "res", "hash", "x000000000000ffffL", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CodeUtils.java",
  "startLine" : 16,
  "endLine" : 85,
  "identifiers" : [ "try", "List", "Byte", "tokens1", "lexer", "code1", "List", "Byte", "tokens2", "lexer", "code2", "List", "Fragment", "fragments", "new", "ArrayList", "fragments", "add", "new", "Fragment", "tokens1", "size", "fragments", "add", "new", "Fragment", "tokens1", "size", "tokens1", "size", "tokens2", "size", "List", "Byte", "tokens", "new", "ArrayList", "tokens", "addAll", "tokens1", "tokens", "addAll", "tokens2", "SuffixArray", "suffixArray", "new", "SuffixArray", "suffixArray", "init", "tokens", "List", "Integer", "result", "suffixArray", "process", "List", "ClonePair", "clonePairs", "new", "ArrayList", "for", "int", "i", "i", "result", "size", "i", "if", "result", "get", "i", "continue", "int", "x1", "result", "get", "i", "int", "x2", "result", "get", "i", "int", "cloneLen", "result", "get", "i", "int", "firstFrom", "searchFragment", "fragments", "x1", "int", "firstTo", "searchFragment", "fragments", "x1", "cloneLen", "int", "secondFrom", "searchFragment", "fragments", "x2", "int", "secondTo", "searchFragment", "fragments", "x2", "cloneLen", "if", "firstFrom", "secondFrom", "continue", "if", "firstFrom", "firstTo", "secondFrom", "secondTo", "continue", "if", "cloneLen", "continue", "if", "firstFrom", "clonePairs", "add", "new", "ClonePair", "x1", "x2", "cloneLen", "else", "clonePairs", "add", "new", "ClonePair", "x2", "x1", "cloneLen", "Collections", "sort", "clonePairs", "new", "Comparator", "ClonePair", "Override", "public", "int", "compare", "ClonePair", "o1", "ClonePair", "o2", "if", "o1", "first", "o2", "first", "return", "else", "if", "o1", "first", "o2", "first", "return", "return", "int", "overlapping", "calculateOverlapping", "clonePairs", "return", "overlapping", "f", "Math", "max", "tokens1", "size", "tokens2", "size", "catch", "Exception", "e", "e", "printStackTrace", "return", "f" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CodeUtils.java",
  "startLine" : 93,
  "endLine" : 102,
  "identifiers" : [ "int", "index", "for", "int", "i", "i", "fragments", "size", "i", "if", "startIndex", "fragments", "get", "i", "start", "startIndex", "fragments", "get", "i", "end", "index", "i", "break", "return", "index" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CodeUtils.java",
  "startLine" : 109,
  "endLine" : 138,
  "identifiers" : [ "int", "index", "int", "startToken", "int", "size", "int", "totalSize", "while", "index", "pairs", "size", "int", "pairIndex", "pairs", "get", "index", "first", "int", "pairSize", "pairs", "get", "index", "size", "if", "index", "startToken", "pairIndex", "size", "pairSize", "index", "continue", "if", "startToken", "size", "pairIndex", "if", "startToken", "size", "pairIndex", "pairSize", "else", "size", "pairIndex", "startToken", "pairSize", "index", "else", "totalSize", "size", "startToken", "pairIndex", "size", "pairSize", "index", "return", "Math", "max", "totalSize", "size" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CodeUtils.java",
  "startLine" : 145,
  "endLine" : 181,
  "identifiers" : [ "int", "index", "List", "Byte", "res", "new", "ArrayList", "String", "token", "while", "index", "stat", "length", "char", "c", "stat", "charAt", "index", "if", "Character", "isSpaceChar", "c", "index", "continue", "if", "Character", "isDigit", "c", "while", "Character", "isDigit", "c", "token", "c", "if", "index", "stat", "length", "break", "c", "stat", "charAt", "index", "res", "add", "str2hash", "token", "token", "continue", "if", "Character", "isLetter", "c", "c", "_", "while", "Character", "isLetterOrDigit", "c", "c", "_", "token", "c", "if", "index", "stat", "length", "break", "c", "stat", "charAt", "index", "res", "add", "str2hash", "token", "token", "continue", "res", "add", "str2hash", "c", "index", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CodeUtils.java",
  "startLine" : 188,
  "endLine" : 201,
  "identifiers" : [ "str", "str", "toLowerCase", "if", "str", "length", "int", "h", "str", "toCharArray", "str", "length", "h", "return", "byte", "h", "x7f", "else", "int", "h1", "str", "toCharArray", "str", "length", "int", "h2", "str", "toCharArray", "str", "length", "h1", "int", "h", "h1", "h2", "return", "byte", "h", "x7f" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CodeUtils.java",
  "startLine" : 226,
  "endLine" : 253,
  "identifiers" : [ "for", "int", "i", "i", "sa", "length", "i", "sa", "i", "i", "for", "int", "i", "i", "tokens", "size", "i", "for", "int", "j", "i", "j", "tokens", "size", "j", "List", "Byte", "suffix1", "tokens", "subList", "sa", "i", "tokens", "size", "List", "Byte", "suffix2", "tokens", "subList", "sa", "j", "tokens", "size", "int", "size", "Math", "min", "suffix1", "size", "suffix2", "size", "boolean", "result", "suffix1", "size", "suffix2", "size", "for", "int", "m", "m", "size", "m", "if", "suffix1", "get", "m", "suffix2", "get", "m", "result", "true", "break", "else", "if", "suffix1", "get", "m", "suffix2", "get", "m", "result", "false", "break", "if", "result", "int", "tmp", "sa", "i", "sa", "i", "sa", "j", "sa", "j", "tmp" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CodeUtils.java",
  "startLine" : 258,
  "endLine" : 272,
  "identifiers" : [ "for", "int", "i", "i", "sa", "length", "i", "List", "Byte", "pre", "tokens", "subList", "sa", "i", "tokens", "size", "List", "Byte", "cur", "tokens", "subList", "sa", "i", "tokens", "size", "int", "cnt", "int", "size", "Math", "min", "pre", "size", "cur", "size", "for", "int", "j", "j", "size", "j", "if", "pre", "get", "j", "equals", "cur", "get", "j", "break", "cnt", "height", "i", "cnt" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CodeUtils.java",
  "startLine" : 278,
  "endLine" : 288,
  "identifiers" : [ "buildSuffixArray", "calculateHeight", "List", "Integer", "results", "new", "ArrayList", "for", "int", "i", "i", "height", "length", "i", "results", "add", "sa", "i", "results", "add", "sa", "i", "results", "add", "height", "i", "return", "results" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CommentUtil.java",
  "startLine" : 29,
  "endLine" : 43,
  "identifiers" : [ "if", "language", "equals", "Language", "JAVA", "language", "equals", "Language", "C", "language", "equals", "Language", "CPP", "language", "equals", "Language", "GO", "code", "removeComments", "code", "JAVA_COMMENT_SINGLE_LINE", "code", "removeComments", "code", "JAVA_COMMENT_MULTI_LINE", "else", "if", "language", "equals", "Language", "PYTHON", "code", "removeComments", "code", "PYTHON_COMMENT_SINGLE_LINE", "code", "removeComments", "code", "PYTHON_COMMENT_MULTI_LINE", "code", "removeComments", "code", "PYTHON_COMMENT_MULTI_LINE2", "code", "code", "replaceAll", "return", "code" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\DiffUtil.java",
  "startLine" : 19,
  "endLine" : 31,
  "identifiers" : [ "Patch", "String", "patch", "difflib", "DiffUtils", "diff", "original", "revised", "List", "String", "res", "new", "ArrayList", "for", "Delta", "String", "delta", "patch", "getDeltas", "int", "s1", "delta", "getOriginal", "getPosition", "int", "e1", "s1", "delta", "getOriginal", "size", "int", "s2", "delta", "getRevised", "getPosition", "int", "e2", "s2", "delta", "getRevised", "size", "String", "type", "delta", "getType", "name", "res", "add", "String", "format", "s1", "e1", "s2", "e2", "type", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 21,
  "endLine" : 43,
  "identifiers" : [ "List", "String", "files", "new", "ArrayList", "File", "root", "new", "File", "path", "File", "subs", "root", "listFiles", "if", "subs", "null", "subs", "length", "return", "files", "for", "File", "f", "subs", "if", "f", "isFile", "if", "f", "getName", "contains", "continue", "String", "extension", "f", "getName", "substring", "f", "getName", "lastIndexOf", "if", "fileExtensionsMap", "containsKey", "extension", "files", "add", "f", "getAbsolutePath", "else", "List", "String", "tmp", "listAllFiles", "f", "getAbsolutePath", "fileExtensionsMap", "files", "addAll", "tmp", "return", "files" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 51,
  "endLine" : 70,
  "identifiers" : [ "List", "String", "files", "new", "ArrayList", "File", "root", "new", "File", "path", "File", "subs", "root", "listFiles", "if", "subs", "null", "subs", "length", "return", "files", "for", "File", "f", "subs", "if", "f", "isFile", "if", "f", "getName", "contains", "continue", "files", "add", "f", "getAbsolutePath", "else", "List", "String", "tmp", "listAllFiles", "f", "getAbsolutePath", "files", "addAll", "tmp", "return", "files" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 79,
  "endLine" : 88,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "List", "String", "lines", "new", "ArrayList", "String", "line", "null", "while", "line", "reader", "readLine", "null", "lines", "add", "line", "reader", "close", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 99,
  "endLine" : 116,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "List", "String", "lines", "new", "ArrayList", "String", "line", "null", "int", "lineCnt", "while", "line", "reader", "readLine", "null", "lineCnt", "if", "lineCnt", "startLine", "continue", "if", "lineCnt", "endLine", "break", "lines", "add", "line", "reader", "close", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\MybatisUtil.java",
  "startLine" : 30,
  "endLine" : 38,
  "identifiers" : [ "Properties", "properties", "new", "Properties", "properties", "setProperty", "DRIVER", "config", "getJdbcDriver", "properties", "setProperty", "URL", "config", "getJdbcUrl", "properties", "setProperty", "USERNAME", "config", "getJdbcUsername", "properties", "setProperty", "PASSWORD", "config", "getJdbcPassword", "InputStream", "res", "Resources", "getResourceAsStream", "MYBATIS_CONFIG_FILE", "factory", "new", "SqlSessionFactoryBuilder", "build", "res", "properties" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\TimeUtil.java",
  "startLine" : 14,
  "endLine" : 20,
  "identifiers" : [ "int", "seconds", "int", "timeMillis", "e3", "int", "hour", "seconds", "int", "minute", "seconds", "hour", "int", "second", "seconds", "hour", "minute", "return", "String", "format", "hour", "minute", "second" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\test\\java\\com\\fudan\\manager\\IncrementFileManagerTests.java",
  "startLine" : 14,
  "endLine" : 23,
  "identifiers" : [ "Config", "config", "Config", "load", "Config", "CONFIG_FILE", "IncrementFileManager", "manager", "new", "IncrementFileManager", "config", "getIncrementFileFolder", "manager", "process", "List", "String", "newFiles", "manager", "getNewFiles", "List", "String", "updatedFiles", "manager", "getUpdatedFiles", "List", "String", "deletedFiles", "manager", "getDeletedFiles", "List", "String", "deletedRepos", "manager", "getDeletedRepos", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\test\\java\\com\\fudan\\mapper\\MapperTests.java",
  "startLine" : 15,
  "endLine" : 25,
  "identifiers" : [ "Config", "config", "Config", "load", "Config", "CONFIG_FILE", "MybatisUtil", "init", "config", "SqlSession", "sqlSession", "MybatisUtil", "openSession", "MethodInfoMapper", "methodInfoMapper", "sqlSession", "getMapper", "MethodInfoMapper", "class", "MethodInfoExample", "example", "new", "MethodInfoExample", "example", "createCriteria", "andGroupIdEqualTo", "List", "MethodInfo", "methodInfoList", "methodInfoMapper", "selectByExample", "example", "System", "out", "println", "methodInfoList", "size", "sqlSession", "close" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\test\\java\\com\\fudan\\simhash\\SimHashTests.java",
  "startLine" : 19,
  "endLine" : 31,
  "identifiers" : [ "long", "start", "System", "currentTimeMillis", "String", "a", "abcdefg", "long", "b", "SimHash", "computeOptimizedSimHashForString", "a", "long", "end", "System", "currentTimeMillis", "System", "out", "println", "end", "start", "System", "out", "println", "b" ]
}, {
  "path" : "d:\\GitRepo\\SagaIncrementAnalyzer\\src\\test\\java\\com\\fudan\\util\\FileUtilTests.java",
  "startLine" : 18,
  "endLine" : 26,
  "identifiers" : [ "List", "Integer", "nums", "new", "ArrayList", "nums", "add", "nums", "add", "nums", "add", "List", "Integer", "nums2", "nums", "subList", "System", "out", "println", "nums2" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\A\\A1.java",
  "startLine" : 12,
  "endLine" : 26,
  "identifiers" : [ "List", "byte", "keys", "new", "ArrayList", "try", "KeyPairGenerator", "generator", "KeyPairGenerator", "getInstance", "algorithm", "generator", "initialize", "keySize", "new", "SecureRandom", "KeyPair", "keyPair", "generator", "genKeyPair", "byte", "privateKey", "keyPair", "getPrivate", "getEncoded", "byte", "publicKey", "keyPair", "getPublic", "getEncoded", "keys", "add", "publicKey", "keys", "add", "privateKey", "catch", "Exception", "e", "e", "printStackTrace", "return", "keys" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\A\\A10.java",
  "startLine" : 10,
  "endLine" : 23,
  "identifiers" : [ "str", "str", "toLowerCase", "if", "str", "length", "int", "h", "str", "toCharArray", "str", "length", "h", "return", "byte", "h", "x7f", "else", "int", "h1", "str", "toCharArray", "str", "length", "int", "h2", "str", "toCharArray", "str", "length", "h1", "int", "h", "h1", "h2", "return", "byte", "h", "x7f" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\A\\A2.java",
  "startLine" : 12,
  "endLine" : 26,
  "identifiers" : [ "List", "byte", "keys", "new", "ArrayList", "try", "KeyPairGenerator", "generator", "KeyPairGenerator", "getInstance", "algorithm", "generator", "initialize", "keySize", "new", "SecureRandom", "KeyPair", "keyPair", "generator", "genKeyPair", "byte", "privateKey", "keyPair", "getPrivate", "getEncoded", "byte", "publicKey", "keyPair", "getPublic", "getEncoded", "keys", "add", "publicKey", "keys", "add", "privateKey", "catch", "Exception", "e", "e", "printStackTrace", "return", "keys" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\A\\A3.java",
  "startLine" : 13,
  "endLine" : 25,
  "identifiers" : [ "byte", "encodedMsg", "null", "try", "KeyFactory", "keyFactory", "KeyFactory", "getInstance", "algorithm", "PublicKey", "key", "keyFactory", "generatePublic", "new", "X509EncodedKeySpec", "publicKey", "Cipher", "cipher", "Cipher", "getInstance", "algorithm", "cipher", "init", "Cipher", "ENCRYPT_MODE", "key", "encodedMsg", "cipher", "doFinal", "msg", "catch", "Exception", "e", "e", "printStackTrace", "return", "encodedMsg" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\A\\A4.java",
  "startLine" : 13,
  "endLine" : 25,
  "identifiers" : [ "byte", "encodedMsg", "null", "try", "KeyFactory", "keyFactory", "KeyFactory", "getInstance", "algorithm", "PublicKey", "key", "keyFactory", "generatePublic", "new", "X509EncodedKeySpec", "publicKey", "Cipher", "cipher", "Cipher", "getInstance", "algorithm", "cipher", "init", "Cipher", "ENCRYPT_MODE", "key", "encodedMsg", "cipher", "doFinal", "msg", "catch", "Exception", "e", "e", "printStackTrace", "return", "encodedMsg" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\A\\A5.java",
  "startLine" : 10,
  "endLine" : 39,
  "identifiers" : [ "int", "index", "int", "startToken", "int", "size", "int", "totalSize", "while", "index", "pairs", "size", "int", "pairIndex", "pairs", "get", "index", "first", "int", "pairSize", "pairs", "get", "index", "size", "if", "index", "startToken", "pairIndex", "size", "pairSize", "index", "continue", "if", "startToken", "size", "pairIndex", "if", "startToken", "size", "pairIndex", "pairSize", "else", "size", "pairIndex", "startToken", "pairSize", "index", "else", "totalSize", "size", "startToken", "pairIndex", "size", "pairSize", "index", "return", "Math", "max", "totalSize", "size" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\A\\A6.java",
  "startLine" : 10,
  "endLine" : 39,
  "identifiers" : [ "int", "index", "int", "startToken", "int", "size", "int", "totalSize", "while", "index", "pairs", "size", "int", "pairIndex", "pairs", "get", "index", "first", "int", "pairSize", "pairs", "get", "index", "size", "if", "index", "startToken", "pairIndex", "size", "pairSize", "index", "continue", "if", "startToken", "size", "pairIndex", "if", "startToken", "size", "pairIndex", "pairSize", "else", "size", "pairIndex", "startToken", "pairSize", "index", "else", "totalSize", "size", "startToken", "pairIndex", "size", "pairSize", "index", "return", "Math", "max", "totalSize", "size" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\A\\A7.java",
  "startLine" : 10,
  "endLine" : 46,
  "identifiers" : [ "int", "index", "List", "Byte", "res", "new", "ArrayList", "String", "token", "while", "index", "stat", "length", "char", "c", "stat", "charAt", "index", "if", "Character", "isSpaceChar", "c", "index", "continue", "if", "Character", "isDigit", "c", "while", "Character", "isDigit", "c", "token", "c", "if", "index", "stat", "length", "break", "c", "stat", "charAt", "index", "res", "add", "str2hash", "token", "token", "continue", "if", "Character", "isLetter", "c", "c", "_", "while", "Character", "isLetterOrDigit", "c", "c", "_", "token", "c", "if", "index", "stat", "length", "break", "c", "stat", "charAt", "index", "res", "add", "str2hash", "token", "token", "continue", "res", "add", "str2hash", "c", "index", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\A\\A8.java",
  "startLine" : 10,
  "endLine" : 46,
  "identifiers" : [ "int", "index", "List", "Byte", "res", "new", "ArrayList", "String", "token", "while", "index", "stat", "length", "char", "c", "stat", "charAt", "index", "if", "Character", "isSpaceChar", "c", "index", "continue", "if", "Character", "isDigit", "c", "while", "Character", "isDigit", "c", "token", "c", "if", "index", "stat", "length", "break", "c", "stat", "charAt", "index", "res", "add", "str2hash", "token", "token", "continue", "if", "Character", "isLetter", "c", "c", "_", "while", "Character", "isLetterOrDigit", "c", "c", "_", "token", "c", "if", "index", "stat", "length", "break", "c", "stat", "charAt", "index", "res", "add", "str2hash", "token", "token", "continue", "res", "add", "str2hash", "c", "index", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\A\\A9.java",
  "startLine" : 10,
  "endLine" : 23,
  "identifiers" : [ "str", "str", "toLowerCase", "if", "str", "length", "int", "h", "str", "toCharArray", "str", "length", "h", "return", "byte", "h", "x7f", "else", "int", "h1", "str", "toCharArray", "str", "length", "int", "h2", "str", "toCharArray", "str", "length", "h1", "int", "h", "h1", "h2", "return", "byte", "h", "x7f" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\B\\B1.java",
  "startLine" : 8,
  "endLine" : 35,
  "identifiers" : [ "for", "int", "i", "i", "sa", "length", "i", "sa", "i", "i", "for", "int", "i", "i", "tokens", "size", "i", "for", "int", "j", "i", "j", "tokens", "size", "j", "List", "Byte", "suffix1", "tokens", "subList", "sa", "i", "tokens", "size", "List", "Byte", "suffix2", "tokens", "subList", "sa", "j", "tokens", "size", "int", "size", "Math", "min", "suffix1", "size", "suffix2", "size", "boolean", "result", "suffix1", "size", "suffix2", "size", "for", "int", "m", "m", "size", "m", "if", "suffix1", "get", "m", "suffix2", "get", "m", "result", "true", "break", "else", "if", "suffix1", "get", "m", "suffix2", "get", "m", "result", "false", "break", "if", "result", "int", "tmp", "sa", "i", "sa", "i", "sa", "j", "sa", "j", "tmp" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\B\\B10.java",
  "startLine" : 11,
  "endLine" : 33,
  "identifiers" : [ "int", "matrix", "new", "int", "tokensY", "length", "for", "int", "i", "i", "matrix", "length", "i", "matrix", "i", "i", "for", "int", "i", "i", "matrix", "length", "i", "matrix", "i", "i", "for", "int", "i", "i", "tokensX", "length", "i", "for", "int", "j", "j", "matrix", "length", "j", "Byte", "b1", "tokensX", "i", "Byte", "b2", "tokensY", "j", "int", "leftTop", "b1", "equals", "b2", "matrix", "j", "matrix", "j", "int", "left", "matrix", "j", "int", "top", "matrix", "j", "matrix", "j", "Math", "min", "leftTop", "Math", "min", "left", "top", "System", "arraycopy", "matrix", "matrix", "matrix", "length", "Arrays", "fill", "matrix", "matrix", "i", "return", "matrix", "matrix", "length" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\B\\B2.java",
  "startLine" : 8,
  "endLine" : 35,
  "identifiers" : [ "for", "int", "i", "i", "sa", "length", "i", "sa", "i", "i", "for", "int", "i", "i", "tokens", "size", "i", "for", "int", "j", "i", "j", "tokens", "size", "j", "List", "Byte", "suffix1", "tokens", "subList", "sa", "i", "tokens", "size", "List", "Byte", "suffix2", "tokens", "subList", "sa", "j", "tokens", "size", "int", "size", "Math", "min", "suffix1", "size", "suffix2", "size", "boolean", "result", "suffix1", "size", "suffix2", "size", "for", "int", "m", "m", "size", "m", "if", "suffix1", "get", "m", "suffix2", "get", "m", "result", "true", "break", "else", "if", "suffix1", "get", "m", "suffix2", "get", "m", "result", "false", "break", "if", "result", "int", "tmp", "sa", "i", "sa", "i", "sa", "j", "sa", "j", "tmp" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\B\\B3.java",
  "startLine" : 8,
  "endLine" : 22,
  "identifiers" : [ "for", "int", "i", "i", "sa", "length", "i", "List", "Byte", "pre", "tokens", "subList", "sa", "i", "tokens", "size", "List", "Byte", "cur", "tokens", "subList", "sa", "i", "tokens", "size", "int", "cnt", "int", "size", "Math", "min", "pre", "size", "cur", "size", "for", "int", "j", "j", "size", "j", "if", "pre", "get", "j", "equals", "cur", "get", "j", "break", "cnt", "height", "i", "cnt" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\B\\B4.java",
  "startLine" : 8,
  "endLine" : 22,
  "identifiers" : [ "for", "int", "i", "i", "sa", "length", "i", "List", "Byte", "pre", "tokens", "subList", "sa", "i", "tokens", "size", "List", "Byte", "cur", "tokens", "subList", "sa", "i", "tokens", "size", "int", "cnt", "int", "size", "Math", "min", "pre", "size", "cur", "size", "for", "int", "j", "j", "size", "j", "if", "pre", "get", "j", "equals", "cur", "get", "j", "break", "cnt", "height", "i", "cnt" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\B\\B5.java",
  "startLine" : 11,
  "endLine" : 22,
  "identifiers" : [ "Patch", "String", "patch", "difflib", "DiffUtils", "diff", "original", "revised", "List", "String", "res", "new", "ArrayList", "for", "Delta", "String", "delta", "patch", "getDeltas", "int", "s1", "delta", "getOriginal", "getPosition", "int", "e1", "s1", "delta", "getOriginal", "getLines", "size", "int", "s2", "delta", "getRevised", "getPosition", "int", "e2", "s2", "delta", "getRevised", "getLines", "size", "res", "add", "String", "format", "s1", "e1", "s2", "e2", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\B\\B6.java",
  "startLine" : 11,
  "endLine" : 22,
  "identifiers" : [ "Patch", "String", "patch", "difflib", "DiffUtils", "diff", "original", "revised", "List", "String", "res", "new", "ArrayList", "for", "Delta", "String", "delta", "patch", "getDeltas", "int", "s1", "delta", "getOriginal", "getPosition", "int", "e1", "s1", "delta", "getOriginal", "getLines", "size", "int", "s2", "delta", "getRevised", "getPosition", "int", "e2", "s2", "delta", "getRevised", "getLines", "size", "res", "add", "String", "format", "s1", "e1", "s2", "e2", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\B\\B7.java",
  "startLine" : 11,
  "endLine" : 38,
  "identifiers" : [ "List", "Byte", "allTokens", "new", "ArrayList", "allTokens", "addAll", "tokensX", "allTokens", "addAll", "tokensY", "Set", "Byte", "tokenSet", "new", "HashSet", "allTokens", "Map", "Byte", "Integer", "tokenMapX", "new", "HashMap", "Map", "Byte", "Integer", "tokenMapY", "new", "HashMap", "for", "Byte", "b", "tokensX", "tokenMapX", "put", "b", "tokenMapX", "getOrDefault", "b", "for", "Byte", "b", "tokensY", "tokenMapY", "put", "b", "tokenMapY", "getOrDefault", "b", "List", "Integer", "vecX", "new", "ArrayList", "List", "Integer", "vecY", "new", "ArrayList", "for", "Byte", "b", "tokenSet", "vecX", "add", "tokenMapX", "getOrDefault", "b", "vecY", "add", "tokenMapY", "getOrDefault", "b", "long", "x", "y", "xy", "for", "int", "i", "i", "tokenSet", "size", "i", "xy", "vecX", "get", "i", "vecY", "get", "i", "x", "vecX", "get", "i", "vecX", "get", "i", "y", "vecY", "get", "i", "vecY", "get", "i", "return", "xy", "Math", "sqrt", "x", "Math", "sqrt", "y" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\B\\B8.java",
  "startLine" : 11,
  "endLine" : 38,
  "identifiers" : [ "List", "Byte", "allTokens", "new", "ArrayList", "allTokens", "addAll", "tokensX", "allTokens", "addAll", "tokensY", "Set", "Byte", "tokenSet", "new", "HashSet", "allTokens", "Map", "Byte", "Integer", "tokenMapX", "new", "HashMap", "Map", "Byte", "Integer", "tokenMapY", "new", "HashMap", "for", "Byte", "b", "tokensX", "tokenMapX", "put", "b", "tokenMapX", "getOrDefault", "b", "for", "Byte", "b", "tokensY", "tokenMapY", "put", "b", "tokenMapY", "getOrDefault", "b", "List", "Integer", "vecX", "new", "ArrayList", "List", "Integer", "vecY", "new", "ArrayList", "for", "Byte", "b", "tokenSet", "vecX", "add", "tokenMapX", "getOrDefault", "b", "vecY", "add", "tokenMapY", "getOrDefault", "b", "long", "x", "y", "xy", "for", "int", "i", "i", "tokenSet", "size", "i", "xy", "vecX", "get", "i", "vecY", "get", "i", "x", "vecX", "get", "i", "vecX", "get", "i", "y", "vecY", "get", "i", "vecY", "get", "i", "return", "xy", "Math", "sqrt", "x", "Math", "sqrt", "y" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\B\\B9.java",
  "startLine" : 11,
  "endLine" : 33,
  "identifiers" : [ "int", "matrix", "new", "int", "tokensY", "length", "for", "int", "i", "i", "matrix", "length", "i", "matrix", "i", "i", "for", "int", "i", "i", "matrix", "length", "i", "matrix", "i", "i", "for", "int", "i", "i", "tokensX", "length", "i", "for", "int", "j", "j", "matrix", "length", "j", "Byte", "b1", "tokensX", "i", "Byte", "b2", "tokensY", "j", "int", "leftTop", "b1", "equals", "b2", "matrix", "j", "matrix", "j", "int", "left", "matrix", "j", "int", "top", "matrix", "j", "matrix", "j", "Math", "min", "leftTop", "Math", "min", "left", "top", "System", "arraycopy", "matrix", "matrix", "matrix", "length", "Arrays", "fill", "matrix", "matrix", "i", "return", "matrix", "matrix", "length" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\C\\C1.java",
  "startLine" : 11,
  "endLine" : 53,
  "identifiers" : [ "try", "List", "CommitRecord", "records", "new", "ArrayList", "List", "String", "lines", "FileUtil", "readLines", "file", "for", "String", "line", "lines", "String", "info", "line", "split", "if", "info", "length", "continue", "String", "realPath", "info", "int", "startLine", "Integer", "parseInt", "info", "int", "endLine", "Integer", "parseInt", "info", "int", "snippetStartLine", "Integer", "parseInt", "info", "int", "snippetEndLine", "Integer", "parseInt", "info", "String", "status", "info", "String", "commitId", "info", "String", "blobId", "info", "String", "commitTime", "info", "String", "submitter", "info", "String", "commitMessage", "if", "info", "length", "commitMessage", "info", "else", "if", "info", "length", "String", "tmp", "Arrays", "copyOfRange", "info", "info", "length", "commitMessage", "String", "join", "tmp", "CommitRecord", "record", "new", "CommitRecord", "groupId", "startLine", "endLine", "snippetStartLine", "snippetEndLine", "blobId", "commitId", "commitTime", "realPath", "submitter", "status", "commitMessage", "records", "add", "record", "Collections", "sort", "records", "new", "Comparator", "CommitRecord", "Override", "public", "int", "compare", "CommitRecord", "o1", "CommitRecord", "o2", "return", "DateUtil", "compare", "o1", "getDate", "o2", "getDate", "return", "records", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\C\\C10.java",
  "startLine" : 10,
  "endLine" : 38,
  "identifiers" : [ "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "String", "sql", "String", "format", "Config", "TABLE", "PreparedStatement", "statement", "connection", "prepareStatement", "sql", "ResultSet", "resultSet", "statement", "executeQuery", "int", "maxGroupId", "if", "resultSet", "next", "maxGroupId", "resultSet", "getInt", "try", "resultSet", "close", "statement", "close", "finally", "connection", "recycle", "return", "maxGroupId" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\C\\C2.java",
  "startLine" : 11,
  "endLine" : 53,
  "identifiers" : [ "try", "List", "CommitRecord", "records", "new", "ArrayList", "List", "String", "lines", "FileUtil", "readLines", "file", "for", "String", "line", "lines", "String", "info", "line", "split", "if", "info", "length", "continue", "String", "realPath", "info", "int", "startLine", "Integer", "parseInt", "info", "int", "endLine", "Integer", "parseInt", "info", "int", "snippetStartLine", "Integer", "parseInt", "info", "int", "snippetEndLine", "Integer", "parseInt", "info", "String", "status", "info", "String", "commitId", "info", "String", "blobId", "info", "String", "commitTime", "info", "String", "submitter", "info", "String", "commitMessage", "if", "info", "length", "commitMessage", "info", "else", "if", "info", "length", "String", "tmp", "Arrays", "copyOfRange", "info", "info", "length", "commitMessage", "String", "join", "tmp", "CommitRecord", "record", "new", "CommitRecord", "groupId", "startLine", "endLine", "snippetStartLine", "snippetEndLine", "blobId", "commitId", "commitTime", "realPath", "submitter", "status", "commitMessage", "records", "add", "record", "Collections", "sort", "records", "new", "Comparator", "CommitRecord", "Override", "public", "int", "compare", "CommitRecord", "o1", "CommitRecord", "o2", "return", "DateUtil", "compare", "o1", "getDate", "o2", "getDate", "return", "records", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\C\\C3.java",
  "startLine" : 5,
  "endLine" : 32,
  "identifiers" : [ "try", "filePath", "getVersedRelativePath", "filePath", "ObjectId", "lastCommitId", "repository", "resolve", "version", "revWalk", "reset", "RevCommit", "commit", "revWalk", "parseCommit", "lastCommitId", "RevTree", "tree", "commit", "getTree", "treeWalk", "reset", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "filePath", "if", "treeWalk", "next", "return", "new", "ArrayList", "ObjectId", "objectId", "treeWalk", "getObjectId", "ObjectLoader", "loader", "repository", "open", "objectId", "ByteArrayOutputStream", "outputStream", "new", "ByteArrayOutputStream", "loader", "copyTo", "outputStream", "String", "content", "outputStream", "toString", "List", "String", "lines", "Arrays", "asList", "content", "split", "outputStream", "close", "return", "lines", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\C\\C4.java",
  "startLine" : 5,
  "endLine" : 32,
  "identifiers" : [ "try", "filePath", "getVersedRelativePath", "filePath", "ObjectId", "lastCommitId", "repository", "resolve", "version", "revWalk", "reset", "RevCommit", "commit", "revWalk", "parseCommit", "lastCommitId", "RevTree", "tree", "commit", "getTree", "treeWalk", "reset", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "filePath", "if", "treeWalk", "next", "return", "new", "ArrayList", "ObjectId", "objectId", "treeWalk", "getObjectId", "ObjectLoader", "loader", "repository", "open", "objectId", "ByteArrayOutputStream", "outputStream", "new", "ByteArrayOutputStream", "loader", "copyTo", "outputStream", "String", "content", "outputStream", "toString", "List", "String", "lines", "Arrays", "asList", "content", "split", "outputStream", "close", "return", "lines", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\C\\C5.java",
  "startLine" : 11,
  "endLine" : 32,
  "identifiers" : [ "String", "blobId", "null", "try", "realPath", "getVersedRelativePath", "realPath", "ObjectId", "lastCommitId", "repository", "resolve", "commitId", "revWalk", "reset", "RevCommit", "commit", "revWalk", "parseCommit", "lastCommitId", "RevTree", "tree", "commit", "getTree", "treeWalk", "reset", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "realPath", "if", "treeWalk", "next", "return", "null", "ObjectId", "objectId", "treeWalk", "getObjectId", "blobId", "objectId", "getName", "catch", "Exception", "e", "e", "printStackTrace", "return", "blobId" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\C\\C6.java",
  "startLine" : 11,
  "endLine" : 32,
  "identifiers" : [ "String", "blobId", "null", "try", "realPath", "getVersedRelativePath", "realPath", "ObjectId", "lastCommitId", "repository", "resolve", "commitId", "revWalk", "reset", "RevCommit", "commit", "revWalk", "parseCommit", "lastCommitId", "RevTree", "tree", "commit", "getTree", "treeWalk", "reset", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "realPath", "if", "treeWalk", "next", "return", "null", "ObjectId", "objectId", "treeWalk", "getObjectId", "blobId", "objectId", "getName", "catch", "Exception", "e", "e", "printStackTrace", "return", "blobId" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\C\\C7.java",
  "startLine" : 5,
  "endLine" : 28,
  "identifiers" : [ "if", "blobId", "null", "blobId", "isEmpty", "return", "if", "groupContentInfo", "contentMap", "containsKey", "blobId", "String", "blobPath", "PathUtil", "getBlobPathByBlobId", "blobId", "try", "groupContentInfo", "contentMap", "put", "blobId", "FileUtil", "readLines", "blobPath", "catch", "IOException", "e", "e", "printStackTrace", "StringBuilder", "builder", "new", "StringBuilder", "List", "String", "content", "groupContentInfo", "contentMap", "get", "blobId", "for", "int", "i", "i", "content", "size", "i", "if", "i", "endLine", "break", "if", "i", "startLine", "i", "endLine", "builder", "append", "content", "get", "i", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\C\\C8.java",
  "startLine" : 5,
  "endLine" : 28,
  "identifiers" : [ "if", "blobId", "null", "blobId", "isEmpty", "return", "if", "groupContentInfo", "contentMap", "containsKey", "blobId", "String", "blobPath", "PathUtil", "getBlobPathByBlobId", "blobId", "try", "groupContentInfo", "contentMap", "put", "blobId", "FileUtil", "readLines", "blobPath", "catch", "IOException", "e", "e", "printStackTrace", "StringBuilder", "builder", "new", "StringBuilder", "List", "String", "content", "groupContentInfo", "contentMap", "get", "blobId", "for", "int", "i", "i", "content", "size", "i", "if", "i", "endLine", "break", "if", "i", "startLine", "i", "endLine", "builder", "append", "content", "get", "i", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\C\\C9.java",
  "startLine" : 10,
  "endLine" : 38,
  "identifiers" : [ "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "String", "sql", "String", "format", "Config", "TABLE", "PreparedStatement", "statement", "connection", "prepareStatement", "sql", "ResultSet", "resultSet", "statement", "executeQuery", "int", "maxGroupId", "if", "resultSet", "next", "maxGroupId", "resultSet", "getInt", "try", "resultSet", "close", "statement", "close", "finally", "connection", "recycle", "return", "maxGroupId" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\D\\D1.java",
  "startLine" : 5,
  "endLine" : 22,
  "identifiers" : [ "int", "minStartLine", "List", "Integer", "tempList", "new", "ArrayList", "for", "CommitRecord", "record", "recordList", "if", "record", "getStartLine", "minStartLine", "minStartLine", "record", "getStartLine", "for", "CommitRecord", "record", "recordList", "record", "setRelevantStartLine", "record", "getStartLine", "minStartLine", "tempList", "add", "record", "getStartLine", "minStartLine", "Collections", "sort", "tempList", "for", "CommitRecord", "record", "recordList", "int", "rl", "record", "getRelevantStartLine", "record", "setRelevantStartLine", "tempList", "indexOf", "rl" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\D\\D10.java",
  "startLine" : 9,
  "endLine" : 28,
  "identifiers" : [ "if", "dataSource", "null", "return", "dataSource", "new", "DruidDataSource", "dataSource", "setDriverClassName", "Config", "DRIVER", "dataSource", "setUrl", "Config", "URL", "dataSource", "setUsername", "Config", "USERNAME", "dataSource", "setPassword", "Config", "PASSWORD", "dataSource", "setInitialSize", "Config", "INITIAL_SIZE", "dataSource", "setMaxActive", "Config", "MAX_ACTIVE", "dataSource", "setMaxWait", "dataSource", "setMinIdle", "dataSource", "setTimeBetweenEvictionRunsMillis", "dataSource", "setTestWhileIdle", "true", "dataSource", "setValidationQuery", "dataSource", "setTestOnBorrow", "true", "dataSource", "setTestOnReturn", "false", "dataSource", "init" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\D\\D2.java",
  "startLine" : 5,
  "endLine" : 22,
  "identifiers" : [ "int", "minStartLine", "List", "Integer", "tempList", "new", "ArrayList", "for", "CommitRecord", "record", "recordList", "if", "record", "getStartLine", "minStartLine", "minStartLine", "record", "getStartLine", "for", "CommitRecord", "record", "recordList", "record", "setRelevantStartLine", "record", "getStartLine", "minStartLine", "tempList", "add", "record", "getStartLine", "minStartLine", "Collections", "sort", "tempList", "for", "CommitRecord", "record", "recordList", "int", "rl", "record", "getRelevantStartLine", "record", "setRelevantStartLine", "tempList", "indexOf", "rl" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\D\\D3.java",
  "startLine" : 5,
  "endLine" : 25,
  "identifiers" : [ "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "String", "sql", "String", "format", "groupId", "Config", "TABLE", "PreparedStatement", "statement", "connection", "prepareStatement", "sql", "ResultSet", "resultSet", "statement", "executeQuery", "int", "insCount", "if", "resultSet", "next", "insCount", "resultSet", "getInt", "try", "resultSet", "close", "statement", "close", "finally", "connection", "recycle", "return", "insCount" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\D\\D4.java",
  "startLine" : 5,
  "endLine" : 25,
  "identifiers" : [ "DruidPooledConnection", "connection", "DruidUtil", "getConnection", "if", "connection", "null", "throw", "new", "SQLException", "String", "sql", "String", "format", "groupId", "Config", "TABLE", "PreparedStatement", "statement", "connection", "prepareStatement", "sql", "ResultSet", "resultSet", "statement", "executeQuery", "int", "insCount", "if", "resultSet", "next", "insCount", "resultSet", "getInt", "try", "resultSet", "close", "statement", "close", "finally", "connection", "recycle", "return", "insCount" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\D\\D5.java",
  "startLine" : 5,
  "endLine" : 22,
  "identifiers" : [ "if", "blobId", "null", "return", "false", "BlobCommitsetInfo", "commitsetInfo", "String", "transformedBlobId", "blobId", "realPath", "hashCode", "if", "BlobCommitSetManager", "blobCommitSetManagerMap", "containsKey", "transformedBlobId", "commitsetInfo", "BlobCommitSetManager", "blobCommitSetManagerMap", "get", "transformedBlobId", "else", "commitsetInfo", "getBlobCommitSetByTransBlobId", "transformedBlobId", "repoName", "realPath", "if", "commitsetInfo", "commitSet", "contains", "commitId", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\D\\D6.java",
  "startLine" : 5,
  "endLine" : 22,
  "identifiers" : [ "if", "blobId", "null", "return", "false", "BlobCommitsetInfo", "commitsetInfo", "String", "transformedBlobId", "blobId", "realPath", "hashCode", "if", "BlobCommitSetManager", "blobCommitSetManagerMap", "containsKey", "transformedBlobId", "commitsetInfo", "BlobCommitSetManager", "blobCommitSetManagerMap", "get", "transformedBlobId", "else", "commitsetInfo", "getBlobCommitSetByTransBlobId", "transformedBlobId", "repoName", "realPath", "if", "commitsetInfo", "commitSet", "contains", "commitId", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\D\\D7.java",
  "startLine" : 5,
  "endLine" : 22,
  "identifiers" : [ "if", "instance", "null", "return", "instance", "try", "Class", "forName", "Config", "DRIVER", "conn", "DriverManager", "getConnection", "Config", "URL", "Config", "USERNAME", "Config", "PASSWORD", "if", "conn", "null", "instance", "new", "DB", "System", "out", "printf", "Config", "URL", "else", "System", "out", "println", "catch", "Exception", "e", "e", "printStackTrace", "return", "instance" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\D\\D8.java",
  "startLine" : 5,
  "endLine" : 22,
  "identifiers" : [ "if", "instance", "null", "return", "instance", "try", "Class", "forName", "Config", "DRIVER", "conn", "DriverManager", "getConnection", "Config", "URL", "Config", "USERNAME", "Config", "PASSWORD", "if", "conn", "null", "instance", "new", "DB", "System", "out", "printf", "Config", "URL", "else", "System", "out", "println", "catch", "Exception", "e", "e", "printStackTrace", "return", "instance" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\D\\D9.java",
  "startLine" : 9,
  "endLine" : 28,
  "identifiers" : [ "if", "dataSource", "null", "return", "dataSource", "new", "DruidDataSource", "dataSource", "setDriverClassName", "Config", "DRIVER", "dataSource", "setUrl", "Config", "URL", "dataSource", "setUsername", "Config", "USERNAME", "dataSource", "setPassword", "Config", "PASSWORD", "dataSource", "setInitialSize", "Config", "INITIAL_SIZE", "dataSource", "setMaxActive", "Config", "MAX_ACTIVE", "dataSource", "setMaxWait", "dataSource", "setMinIdle", "dataSource", "setTimeBetweenEvictionRunsMillis", "dataSource", "setTestWhileIdle", "true", "dataSource", "setValidationQuery", "dataSource", "setTestOnBorrow", "true", "dataSource", "setTestOnReturn", "false", "dataSource", "init" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\E\\E1.java",
  "startLine" : 13,
  "endLine" : 30,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "StringBuilder", "builder", "new", "StringBuilder", "int", "lineNumber", "while", "line", "reader", "readLine", "null", "lineNumber", "if", "lineNumber", "startLine", "continue", "if", "lineNumber", "endLine", "break", "builder", "append", "line", "reader", "close", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\E\\E10.java",
  "startLine" : 5,
  "endLine" : 31,
  "identifiers" : [ "List", "Integer", "instanceNumber", "new", "ArrayList", "instanceList", "keySet", "Collections", "sort", "instanceNumber", "for", "String", "commitId", "commitIdList", "VisualCommitInfo", "curInfo", "new", "VisualCommitInfo", "RawCommitInfo", "rawCommitInfo", "RawCommitManager", "rawCommitInfoMap", "get", "commitId", "curInfo", "setCommitId", "rawCommitInfo", "commitId", "curInfo", "setDate", "rawCommitInfo", "date", "curInfo", "setSubmitter", "rawCommitInfo", "author", "curInfo", "setCommitMessage", "rawCommitInfo", "commitMessage", "List", "CommitRecord", "curRecords", "new", "ArrayList", "Boolean", "needAdd", "false", "for", "int", "insNumber", "instanceNumber", "CommitRecord", "curInsRecord", "instanceList", "get", "insNumber", "get", "commitId", "curRecords", "add", "curInsRecord", "if", "curInsRecord", "getStatus", "curInsRecord", "getStatus", "curInsRecord", "getStatus", "needAdd", "true", "if", "needAdd", "curInfo", "setCodes", "curRecords", "visualCommitInfoList", "add", "curInfo" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\E\\E2.java",
  "startLine" : 13,
  "endLine" : 30,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "StringBuilder", "builder", "new", "StringBuilder", "int", "lineNumber", "while", "line", "reader", "readLine", "null", "lineNumber", "if", "lineNumber", "startLine", "continue", "if", "lineNumber", "endLine", "break", "builder", "append", "line", "reader", "close", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\E\\E3.java",
  "startLine" : 10,
  "endLine" : 39,
  "identifiers" : [ "if", "Config", "IS_MULTI", "equals", "repository", "new", "FileRepositoryBuilder", "setGitDir", "new", "File", "repoDir", "File", "separator", "build", "revWalk", "new", "RevWalk", "repository", "treeWalk", "new", "TreeWalk", "repository", "repositoryMap", "new", "HashMap", "if", "Config", "IS_MULTI", "equals", "File", "projectsDir", "new", "File", "repoDir", "if", "projectsDir", "exists", "System", "out", "printf", "repoDir", "System", "exit", "File", "projects", "projectsDir", "listFiles", "if", "projects", "null", "projects", "length", "System", "out", "printf", "repoDir", "System", "exit", "repositoryMap", "new", "HashMap", "for", "File", "project", "projects", "Repository", "repository", "new", "FileRepositoryBuilder", "setGitDir", "new", "File", "project", "getAbsolutePath", "File", "separator", "build", "repositoryMap", "put", "project", "getName", "repository" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\E\\E4.java",
  "startLine" : 10,
  "endLine" : 39,
  "identifiers" : [ "if", "Config", "IS_MULTI", "equals", "repository", "new", "FileRepositoryBuilder", "setGitDir", "new", "File", "repoDir", "File", "separator", "build", "revWalk", "new", "RevWalk", "repository", "treeWalk", "new", "TreeWalk", "repository", "repositoryMap", "new", "HashMap", "if", "Config", "IS_MULTI", "equals", "File", "projectsDir", "new", "File", "repoDir", "if", "projectsDir", "exists", "System", "out", "printf", "repoDir", "System", "exit", "File", "projects", "projectsDir", "listFiles", "if", "projects", "null", "projects", "length", "System", "out", "printf", "repoDir", "System", "exit", "repositoryMap", "new", "HashMap", "for", "File", "project", "projects", "Repository", "repository", "new", "FileRepositoryBuilder", "setGitDir", "new", "File", "project", "getAbsolutePath", "File", "separator", "build", "repositoryMap", "put", "project", "getName", "repository" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\E\\E5.java",
  "startLine" : 5,
  "endLine" : 30,
  "identifiers" : [ "String", "blobId", "null", "try", "realPath", "getVersedRelativePath", "realPath", "ObjectId", "lastCommitId", "repositoryMap", "get", "projectName", "resolve", "commitId", "revWalk", "new", "RevWalk", "repositoryMap", "get", "projectName", "RevCommit", "commit", "revWalk", "parseCommit", "lastCommitId", "RevTree", "tree", "commit", "getTree", "treeWalk", "new", "TreeWalk", "repositoryMap", "get", "projectName", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "realPath", "if", "treeWalk", "next", "revWalk", "close", "treeWalk", "close", "return", "null", "ObjectId", "objectId", "treeWalk", "getObjectId", "blobId", "objectId", "getName", "revWalk", "close", "treeWalk", "close", "catch", "Exception", "e", "e", "printStackTrace", "return", "blobId" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\E\\E6.java",
  "startLine" : 5,
  "endLine" : 30,
  "identifiers" : [ "String", "blobId", "null", "try", "realPath", "getVersedRelativePath", "realPath", "ObjectId", "lastCommitId", "repositoryMap", "get", "projectName", "resolve", "commitId", "revWalk", "new", "RevWalk", "repositoryMap", "get", "projectName", "RevCommit", "commit", "revWalk", "parseCommit", "lastCommitId", "RevTree", "tree", "commit", "getTree", "treeWalk", "new", "TreeWalk", "repositoryMap", "get", "projectName", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "realPath", "if", "treeWalk", "next", "revWalk", "close", "treeWalk", "close", "return", "null", "ObjectId", "objectId", "treeWalk", "getObjectId", "blobId", "objectId", "getName", "revWalk", "close", "treeWalk", "close", "catch", "Exception", "e", "e", "printStackTrace", "return", "blobId" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\E\\E7.java",
  "startLine" : 5,
  "endLine" : 21,
  "identifiers" : [ "String", "className", "List", "String", "classNameList", "new", "ArrayList", "classNameList", "add", "int", "lineNum", "for", "String", "line", "code", "lineNum", "if", "line", "contains", "classNameList", "add", "line", "replace", "if", "lineNum", "startLine", "className", "classNameList", "get", "classNameList", "size", "break", "return", "className" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\E\\E8.java",
  "startLine" : 5,
  "endLine" : 21,
  "identifiers" : [ "String", "className", "List", "String", "classNameList", "new", "ArrayList", "classNameList", "add", "int", "lineNum", "for", "String", "line", "code", "lineNum", "if", "line", "contains", "classNameList", "add", "line", "replace", "if", "lineNum", "startLine", "className", "classNameList", "get", "classNameList", "size", "break", "return", "className" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\E\\E9.java",
  "startLine" : 5,
  "endLine" : 31,
  "identifiers" : [ "List", "Integer", "instanceNumber", "new", "ArrayList", "instanceList", "keySet", "Collections", "sort", "instanceNumber", "for", "String", "commitId", "commitIdList", "VisualCommitInfo", "curInfo", "new", "VisualCommitInfo", "RawCommitInfo", "rawCommitInfo", "RawCommitManager", "rawCommitInfoMap", "get", "commitId", "curInfo", "setCommitId", "rawCommitInfo", "commitId", "curInfo", "setDate", "rawCommitInfo", "date", "curInfo", "setSubmitter", "rawCommitInfo", "author", "curInfo", "setCommitMessage", "rawCommitInfo", "commitMessage", "List", "CommitRecord", "curRecords", "new", "ArrayList", "Boolean", "needAdd", "false", "for", "int", "insNumber", "instanceNumber", "CommitRecord", "curInsRecord", "instanceList", "get", "insNumber", "get", "commitId", "curRecords", "add", "curInsRecord", "if", "curInsRecord", "getStatus", "curInsRecord", "getStatus", "curInsRecord", "getStatus", "needAdd", "true", "if", "needAdd", "curInfo", "setCodes", "curRecords", "visualCommitInfoList", "add", "curInfo" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\F\\F1.java",
  "startLine" : 5,
  "endLine" : 19,
  "identifiers" : [ "System", "out", "println", "Config", "COMMIT_INFO", "List", "String", "commitList", "FileUtil", "readLines", "Config", "COMMIT_INFO", "int", "lineNumber", "String", "latestCommitId", "for", "String", "line", "commitList", "String", "tempList", "line", "split", "if", "lineNumber", "latestCommitId", "tempList", "RawCommitInfo", "info", "new", "RawCommitInfo", "tempList", "tempList", "tempList", "tempList", "lineNumber", "tempList", "replaceAll", "RawCommitManager", "rawCommitInfoMap", "put", "tempList", "info", "RawCommitManager", "latestCommitId", "latestCommitId" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\F\\F10.java",
  "startLine" : 5,
  "endLine" : 22,
  "identifiers" : [ "double", "similarity", "String", "leftPreCode", "formatCode", "instanceLeft", "preCode", "String", "leftCurCode", "formatCode", "instanceLeft", "curCode", "String", "rightPreCode", "formatCode", "instanceRight", "preCode", "String", "rightCurCode", "formatCode", "instanceRight", "curCode", "LinkedList", "diff_match_patch", "Diff", "leftModifyList", "generateModifyInfo", "leftPreCode", "leftCurCode", "LinkedList", "diff_match_patch", "Diff", "rightModifyList", "generateModifyInfo", "rightPreCode", "rightCurCode", "cleanupOperation", "leftModifyList", "diff_match_patch", "Operation", "EQUAL", "cleanupOperation", "rightModifyList", "diff_match_patch", "Operation", "EQUAL", "similarity", "computeSimilarity", "leftModifyList", "rightModifyList", "return", "similarity" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\F\\F2.java",
  "startLine" : 5,
  "endLine" : 19,
  "identifiers" : [ "System", "out", "println", "Config", "COMMIT_INFO", "List", "String", "commitList", "FileUtil", "readLines", "Config", "COMMIT_INFO", "int", "lineNumber", "String", "latestCommitId", "for", "String", "line", "commitList", "String", "tempList", "line", "split", "if", "lineNumber", "latestCommitId", "tempList", "RawCommitInfo", "info", "new", "RawCommitInfo", "tempList", "tempList", "tempList", "tempList", "lineNumber", "tempList", "replaceAll", "RawCommitManager", "rawCommitInfoMap", "put", "tempList", "info", "RawCommitManager", "latestCommitId", "latestCommitId" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\F\\F3.java",
  "startLine" : 5,
  "endLine" : 25,
  "identifiers" : [ "try", "List", "String", "mappedId", "FileUtil", "readLines", "Config", "BLOB_SNAPSHOT_MAP_RESULT", "String", "groupZero", "for", "String", "line", "mappedId", "if", "line", "contains", "String", "ids", "line", "split", "if", "ids", "length", "continue", "List", "String", "blobGroupIds", "SnapshotToBlobGroupManager", "snapshotBlobGroupIdMapper", "getOrDefault", "ids", "new", "ArrayList", "if", "groupZero", "equals", "ids", "blobGroupIds", "add", "ids", "SnapshotToBlobGroupManager", "snapshotBlobGroupIdMapper", "put", "ids", "blobGroupIds", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\F\\F4.java",
  "startLine" : 5,
  "endLine" : 25,
  "identifiers" : [ "try", "List", "String", "mappedId", "FileUtil", "readLines", "Config", "BLOB_SNAPSHOT_MAP_RESULT", "String", "groupZero", "for", "String", "line", "mappedId", "if", "line", "contains", "String", "ids", "line", "split", "if", "ids", "length", "continue", "List", "String", "blobGroupIds", "SnapshotToBlobGroupManager", "snapshotBlobGroupIdMapper", "getOrDefault", "ids", "new", "ArrayList", "if", "groupZero", "equals", "ids", "blobGroupIds", "add", "ids", "SnapshotToBlobGroupManager", "snapshotBlobGroupIdMapper", "put", "ids", "blobGroupIds", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\F\\F5.java",
  "startLine" : 5,
  "endLine" : 37,
  "identifiers" : [ "EvolutionMergeResult", "EvolutionRecord", "newIns", "instance", "if", "instance", "status", "equals", "return", "newIns", "long", "time", "l", "try", "System", "out", "println", "instance", "instanceNumber", "String", "bornTime", "insBornMap", "get", "instance", "instanceNumber", "System", "out", "println", "commitDate", "bornTime", "time", "DateUtil", "getTimestamp", "commitDate", "DateUtil", "getTimestamp", "bornTime", "catch", "ParseException", "e", "e", "printStackTrace", "if", "time", "l", "if", "newIns", "status", "equals", "newIns", "status", "newIns", "preCode", "code", "newIns", "curCode", "code", "else", "newIns", "status", "newIns", "preCode", "newIns", "curCode", "else", "if", "time", "l", "if", "newIns", "status", "equals", "newIns", "status", "newIns", "preCode", "newIns", "curCode", "return", "newIns" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\F\\F6.java",
  "startLine" : 5,
  "endLine" : 37,
  "identifiers" : [ "EvolutionMergeResult", "EvolutionRecord", "newIns", "instance", "if", "instance", "status", "equals", "return", "newIns", "long", "time", "l", "try", "System", "out", "println", "instance", "instanceNumber", "String", "bornTime", "insBornMap", "get", "instance", "instanceNumber", "System", "out", "println", "commitDate", "bornTime", "time", "DateUtil", "getTimestamp", "commitDate", "DateUtil", "getTimestamp", "bornTime", "catch", "ParseException", "e", "e", "printStackTrace", "if", "time", "l", "if", "newIns", "status", "equals", "newIns", "status", "newIns", "preCode", "code", "newIns", "curCode", "code", "else", "newIns", "status", "newIns", "preCode", "newIns", "curCode", "else", "if", "time", "l", "if", "newIns", "status", "equals", "newIns", "status", "newIns", "preCode", "newIns", "curCode", "return", "newIns" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\F\\F7.java",
  "startLine" : 5,
  "endLine" : 22,
  "identifiers" : [ "Collections", "sort", "timeStampList", "Collections", "sort", "allTimestampList", "if", "timeStampList", "size", "timeStampList", "add", "l", "if", "allTimestampList", "size", "allTimestampList", "add", "l", "maxConsisTimeInterval", "timeStampList", "get", "timeStampList", "size", "midConsisTimeInterval", "median", "timeStampList", "quaterTimeInterval", "timeStampList", "get", "timeStampList", "size", "averageConsisTimeInterval", "computeAverageTimeStamp", "timeStampList", "maxConsisTimeInterval1", "allTimestampList", "get", "allTimestampList", "size", "midConsisTimeInterval1", "median", "allTimestampList", "quaterTimeInterval1", "allTimestampList", "get", "allTimestampList", "size", "averageConsisTimeInterval1", "computeAverageTimeStamp", "allTimestampList" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\F\\F8.java",
  "startLine" : 5,
  "endLine" : 22,
  "identifiers" : [ "Collections", "sort", "timeStampList", "Collections", "sort", "allTimestampList", "if", "timeStampList", "size", "timeStampList", "add", "l", "if", "allTimestampList", "size", "allTimestampList", "add", "l", "maxConsisTimeInterval", "timeStampList", "get", "timeStampList", "size", "midConsisTimeInterval", "median", "timeStampList", "quaterTimeInterval", "timeStampList", "get", "timeStampList", "size", "averageConsisTimeInterval", "computeAverageTimeStamp", "timeStampList", "maxConsisTimeInterval1", "allTimestampList", "get", "allTimestampList", "size", "midConsisTimeInterval1", "median", "allTimestampList", "quaterTimeInterval1", "allTimestampList", "get", "allTimestampList", "size", "averageConsisTimeInterval1", "computeAverageTimeStamp", "allTimestampList" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\F\\F9.java",
  "startLine" : 5,
  "endLine" : 22,
  "identifiers" : [ "double", "similarity", "String", "leftPreCode", "formatCode", "instanceLeft", "preCode", "String", "leftCurCode", "formatCode", "instanceLeft", "curCode", "String", "rightPreCode", "formatCode", "instanceRight", "preCode", "String", "rightCurCode", "formatCode", "instanceRight", "curCode", "LinkedList", "diff_match_patch", "Diff", "leftModifyList", "generateModifyInfo", "leftPreCode", "leftCurCode", "LinkedList", "diff_match_patch", "Diff", "rightModifyList", "generateModifyInfo", "rightPreCode", "rightCurCode", "cleanupOperation", "leftModifyList", "diff_match_patch", "Operation", "EQUAL", "cleanupOperation", "rightModifyList", "diff_match_patch", "Operation", "EQUAL", "similarity", "computeSimilarity", "leftModifyList", "rightModifyList", "return", "similarity" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\G\\G1.java",
  "startLine" : 5,
  "endLine" : 22,
  "identifiers" : [ "LinkedList", "diff_match_patch", "Diff", "editList", "new", "LinkedList", "for", "diff_match_patch", "Diff", "diff", "diffList", "diff_match_patch", "Operation", "operation", "diff", "operation", "String", "textList", "diff", "text", "split", "for", "String", "text", "textList", "text", "text", "replace", "text", "text", "replace", "if", "text", "equals", "continue", "diff_match_patch", "Diff", "edit", "new", "diff_match_patch", "Diff", "operation", "text", "editList", "add", "edit", "return", "editList" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\G\\G10.java",
  "startLine" : 5,
  "endLine" : 39,
  "identifiers" : [ "int", "sizeLeft", "leftDiff", "size", "int", "sizeRight", "rightDiff", "size", "LinkedList", "diff_match_patch", "Diff", "matchedDiffList", "new", "LinkedList", "LinkedList", "diff_match_patch", "Diff", "outterDiffList", "LinkedList", "diff_match_patch", "Diff", "innerDiffList", "String", "IDENTIFIER", "if", "sizeLeft", "sizeRight", "outterDiffList", "leftDiff", "innerDiffList", "rightDiff", "else", "outterDiffList", "rightDiff", "innerDiffList", "leftDiff", "for", "int", "i", "i", "outterDiffList", "size", "i", "for", "int", "j", "j", "innerDiffList", "size", "j", "if", "outterDiffList", "get", "i", "operation", "equals", "innerDiffList", "get", "j", "operation", "String", "outterEditString", "outterDiffList", "get", "i", "text", "replaceAll", "IDENTIFIER", "String", "innerEditString", "innerDiffList", "get", "j", "text", "replaceAll", "IDENTIFIER", "outterEditString", "outterEditString", "replaceAll", "innerEditString", "innerEditString", "replaceAll", "if", "outterEditString", "replaceAll", "equals", "innerEditString", "replaceAll", "equals", "continue", "if", "MinimumEditDistanceUtil", "stringSimilarity", "outterEditString", "innerEditString", "matchedDiffList", "add", "outterDiffList", "get", "i", "consistencyModifyDegree", "double", "matchedDiffList", "size", "outterDiffList", "size", "return", "matchedDiffList", "size" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\G\\G2.java",
  "startLine" : 5,
  "endLine" : 22,
  "identifiers" : [ "LinkedList", "diff_match_patch", "Diff", "editList", "new", "LinkedList", "for", "diff_match_patch", "Diff", "diff", "diffList", "diff_match_patch", "Operation", "operation", "diff", "operation", "String", "textList", "diff", "text", "split", "for", "String", "text", "textList", "text", "text", "replace", "text", "text", "replace", "if", "text", "equals", "continue", "diff_match_patch", "Diff", "edit", "new", "diff_match_patch", "Diff", "operation", "text", "editList", "add", "edit", "return", "editList" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\G\\G3.java",
  "startLine" : 5,
  "endLine" : 23,
  "identifiers" : [ "int", "dangerDegree", "double", "changePerInstance", "Double", "valueOf", "Analyser", "insModifyNum", "Analyser", "insNumber", "if", "changePerInstance", "Config", "CPI", "dangerDegree", "else", "if", "Analyser", "consistRatio", "Config", "lowCCP", "dangerDegree", "else", "if", "Analyser", "averageConsisTimeInterval", "Config", "lowCCD", "l", "dangerDegree", "else", "if", "Config", "lowCCD", "l", "Analyser", "averageConsisTimeInterval", "Analyser", "averageConsisTimeInterval", "Config", "highCCD", "l", "dangerDegree", "else", "if", "Analyser", "averageConsisTimeInterval", "Config", "highCCD", "l", "dangerDegree", "if", "Analyser", "bugsConsistCommitCount", "Config", "useBugInfo", "dangerDegree", "return", "dangerDegree" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\G\\G4.java",
  "startLine" : 5,
  "endLine" : 23,
  "identifiers" : [ "int", "dangerDegree", "double", "changePerInstance", "Double", "valueOf", "Analyser", "insModifyNum", "Analyser", "insNumber", "if", "changePerInstance", "Config", "CPI", "dangerDegree", "else", "if", "Analyser", "consistRatio", "Config", "lowCCP", "dangerDegree", "else", "if", "Analyser", "averageConsisTimeInterval", "Config", "lowCCD", "l", "dangerDegree", "else", "if", "Config", "lowCCD", "l", "Analyser", "averageConsisTimeInterval", "Analyser", "averageConsisTimeInterval", "Config", "highCCD", "l", "dangerDegree", "else", "if", "Analyser", "averageConsisTimeInterval", "Config", "highCCD", "l", "dangerDegree", "if", "Analyser", "bugsConsistCommitCount", "Config", "useBugInfo", "dangerDegree", "return", "dangerDegree" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\G\\G5.java",
  "startLine" : 5,
  "endLine" : 23,
  "identifiers" : [ "try", "List", "EvolutionMergeResult", "data", "loadData", "file", "String", "groupName", "name", "for", "EvolutionMergeResult", "ele", "data", "System", "out", "println", "ele", "toString", "String", "commitId", "ele", "commitId", "List", "EvolutionMergeResult", "EvolutionRecord", "codes", "ele", "getCodes", "List", "InstanceInfo", "insInfoList", "new", "ArrayList", "for", "EvolutionMergeResult", "EvolutionRecord", "record", "codes", "InstanceInfo", "info", "new", "InstanceInfo", "Integer", "toString", "record", "id", "commitId", "record", "status", "insInfoList", "add", "info", "tempInfo", "add", "insInfoList", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\G\\G6.java",
  "startLine" : 5,
  "endLine" : 23,
  "identifiers" : [ "try", "List", "EvolutionMergeResult", "data", "loadData", "file", "String", "groupName", "name", "for", "EvolutionMergeResult", "ele", "data", "System", "out", "println", "ele", "toString", "String", "commitId", "ele", "commitId", "List", "EvolutionMergeResult", "EvolutionRecord", "codes", "ele", "getCodes", "List", "InstanceInfo", "insInfoList", "new", "ArrayList", "for", "EvolutionMergeResult", "EvolutionRecord", "record", "codes", "InstanceInfo", "info", "new", "InstanceInfo", "Integer", "toString", "record", "id", "commitId", "record", "status", "insInfoList", "add", "info", "tempInfo", "add", "insInfoList", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\G\\G7.java",
  "startLine" : 5,
  "endLine" : 29,
  "identifiers" : [ "Long", "age", "l", "String", "time", "for", "int", "i", "i", "records", "size", "i", "int", "insNumber", "List", "EvolutionMergeResult", "EvolutionRecord", "curList", "records", "get", "i", "for", "int", "j", "j", "curList", "size", "j", "EvolutionMergeResult", "EvolutionRecord", "curRe", "curList", "get", "j", "if", "curRe", "status", "equals", "curRe", "status", "equals", "insNumber", "if", "insNumber", "curRe", "date", "equals", "time", "curRe", "date", "if", "insNumber", "try", "Long", "curTime", "DateUtil", "getTimestamp", "DateUtil", "format", "new", "Date", "Long", "bornTime", "DateUtil", "getTimestamp", "time", "cloneGroupAge", "Math", "abs", "curTime", "bornTime", "catch", "ParseException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\G\\G8.java",
  "startLine" : 5,
  "endLine" : 29,
  "identifiers" : [ "Long", "age", "l", "String", "time", "for", "int", "i", "i", "records", "size", "i", "int", "insNumber", "List", "EvolutionMergeResult", "EvolutionRecord", "curList", "records", "get", "i", "for", "int", "j", "j", "curList", "size", "j", "EvolutionMergeResult", "EvolutionRecord", "curRe", "curList", "get", "j", "if", "curRe", "status", "equals", "curRe", "status", "equals", "insNumber", "if", "insNumber", "curRe", "date", "equals", "time", "curRe", "date", "if", "insNumber", "try", "Long", "curTime", "DateUtil", "getTimestamp", "DateUtil", "format", "new", "Date", "Long", "bornTime", "DateUtil", "getTimestamp", "time", "cloneGroupAge", "Math", "abs", "curTime", "bornTime", "catch", "ParseException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\G\\G9.java",
  "startLine" : 5,
  "endLine" : 39,
  "identifiers" : [ "int", "sizeLeft", "leftDiff", "size", "int", "sizeRight", "rightDiff", "size", "LinkedList", "diff_match_patch", "Diff", "matchedDiffList", "new", "LinkedList", "LinkedList", "diff_match_patch", "Diff", "outterDiffList", "LinkedList", "diff_match_patch", "Diff", "innerDiffList", "String", "IDENTIFIER", "if", "sizeLeft", "sizeRight", "outterDiffList", "leftDiff", "innerDiffList", "rightDiff", "else", "outterDiffList", "rightDiff", "innerDiffList", "leftDiff", "for", "int", "i", "i", "outterDiffList", "size", "i", "for", "int", "j", "j", "innerDiffList", "size", "j", "if", "outterDiffList", "get", "i", "operation", "equals", "innerDiffList", "get", "j", "operation", "String", "outterEditString", "outterDiffList", "get", "i", "text", "replaceAll", "IDENTIFIER", "String", "innerEditString", "innerDiffList", "get", "j", "text", "replaceAll", "IDENTIFIER", "outterEditString", "outterEditString", "replaceAll", "innerEditString", "innerEditString", "replaceAll", "if", "outterEditString", "replaceAll", "equals", "innerEditString", "replaceAll", "equals", "continue", "if", "MinimumEditDistanceUtil", "stringSimilarity", "outterEditString", "innerEditString", "matchedDiffList", "add", "outterDiffList", "get", "i", "consistencyModifyDegree", "double", "matchedDiffList", "size", "outterDiffList", "size", "return", "matchedDiffList", "size" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\H\\H1.java",
  "startLine" : 5,
  "endLine" : 30,
  "identifiers" : [ "HashMap", "String", "Integer", "fileMap", "initFileMap", "fileList", "List", "String", "noSame_fileList", "new", "ArrayList", "fileMap", "keySet", "List", "String", "fileFragList", "new", "ArrayList", "int", "size_MIN", "for", "String", "fileString", "noSame_fileList", "String", "fileFrag", "fileString", "split", "if", "fileFrag", "length", "size_MIN", "size_MIN", "fileFrag", "length", "fileFragList", "add", "fileFrag", "int", "fatherNodeIndex", "computeFatherNodeIndex", "fileFragList", "size_MIN", "int", "distance", "for", "String", "fileFrag", "fileFragList", "int", "dist", "fileFrag", "length", "fatherNodeIndex", "distance", "dist", "return", "distance" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\H\\H10.java",
  "startLine" : 5,
  "endLine" : 32,
  "identifiers" : [ "String", "seed", "longtext", "substring", "i", "i", "longtext", "length", "int", "j", "String", "best_common", "String", "best_longtext_a", "best_longtext_b", "String", "best_shorttext_a", "best_shorttext_b", "while", "j", "shorttext", "indexOf", "seed", "j", "int", "prefixLength", "diff_commonPrefix", "longtext", "substring", "i", "shorttext", "substring", "j", "int", "suffixLength", "diff_commonSuffix", "longtext", "substring", "i", "shorttext", "substring", "j", "if", "best_common", "length", "suffixLength", "prefixLength", "best_common", "shorttext", "substring", "j", "suffixLength", "j", "shorttext", "substring", "j", "j", "prefixLength", "best_longtext_a", "longtext", "substring", "i", "suffixLength", "best_longtext_b", "longtext", "substring", "i", "prefixLength", "best_shorttext_a", "shorttext", "substring", "j", "suffixLength", "best_shorttext_b", "shorttext", "substring", "j", "prefixLength", "if", "best_common", "length", "longtext", "length", "return", "new", "String", "best_longtext_a", "best_longtext_b", "best_shorttext_a", "best_shorttext_b", "best_common", "else", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\H\\H2.java",
  "startLine" : 5,
  "endLine" : 30,
  "identifiers" : [ "HashMap", "String", "Integer", "fileMap", "initFileMap", "fileList", "List", "String", "noSame_fileList", "new", "ArrayList", "fileMap", "keySet", "List", "String", "fileFragList", "new", "ArrayList", "int", "size_MIN", "for", "String", "fileString", "noSame_fileList", "String", "fileFrag", "fileString", "split", "if", "fileFrag", "length", "size_MIN", "size_MIN", "fileFrag", "length", "fileFragList", "add", "fileFrag", "int", "fatherNodeIndex", "computeFatherNodeIndex", "fileFragList", "size_MIN", "int", "distance", "for", "String", "fileFrag", "fileFragList", "int", "dist", "fileFrag", "length", "fatherNodeIndex", "distance", "dist", "return", "distance" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\H\\H3.java",
  "startLine" : 5,
  "endLine" : 19,
  "identifiers" : [ "HashMap", "String", "Integer", "fileMap", "new", "HashMap", "for", "String", "fileString", "fileList", "int", "index", "fileString", "lastIndexOf", "if", "index", "index", "fileString", "fileString", "substring", "index", "if", "fileMap", "containsKey", "fileString", "fileMap", "put", "fileString", "fileMap", "get", "fileString", "else", "fileMap", "put", "fileString", "return", "fileMap" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\H\\H4.java",
  "startLine" : 5,
  "endLine" : 19,
  "identifiers" : [ "HashMap", "String", "Integer", "fileMap", "new", "HashMap", "for", "String", "fileString", "fileList", "int", "index", "fileString", "lastIndexOf", "if", "index", "index", "fileString", "fileString", "substring", "index", "if", "fileMap", "containsKey", "fileString", "fileMap", "put", "fileString", "fileMap", "get", "fileString", "else", "fileMap", "put", "fileString", "return", "fileMap" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\H\\H5.java",
  "startLine" : 5,
  "endLine" : 25,
  "identifiers" : [ "List", "String", "fileList", "new", "ArrayList", "fileList", "add", "fileList", "add", "fileList", "add", "fileList", "add", "fileList", "add", "fileList", "add", "List", "String", "fileList2", "new", "ArrayList", "fileList2", "add", "fileList2", "add", "System", "out", "println", "ComputeDistanceUtil", "computeDistance", "fileList2" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\H\\H6.java",
  "startLine" : 5,
  "endLine" : 25,
  "identifiers" : [ "List", "String", "fileList", "new", "ArrayList", "fileList", "add", "fileList", "add", "fileList", "add", "fileList", "add", "fileList", "add", "fileList", "add", "List", "String", "fileList2", "new", "ArrayList", "fileList2", "add", "fileList2", "add", "System", "out", "println", "ComputeDistanceUtil", "computeDistance", "fileList2" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\H\\H7.java",
  "startLine" : 6,
  "endLine" : 37,
  "identifiers" : [ "int", "lineStart", "int", "lineEnd", "String", "line", "StringBuilder", "chars", "new", "StringBuilder", "while", "lineEnd", "text", "length", "lineEnd", "text", "indexOf", "n", "lineStart", "if", "lineEnd", "lineEnd", "text", "length", "line", "text", "substring", "lineStart", "lineEnd", "if", "lineHash", "containsKey", "line", "chars", "append", "String", "valueOf", "char", "int", "lineHash", "get", "line", "else", "if", "lineArray", "size", "maxLines", "line", "text", "substring", "lineStart", "lineEnd", "text", "length", "lineArray", "add", "line", "lineHash", "put", "line", "lineArray", "size", "chars", "append", "String", "valueOf", "char", "lineArray", "size", "lineStart", "lineEnd", "return", "chars", "toString" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\H\\H8.java",
  "startLine" : 6,
  "endLine" : 37,
  "identifiers" : [ "int", "lineStart", "int", "lineEnd", "String", "line", "StringBuilder", "chars", "new", "StringBuilder", "while", "lineEnd", "text", "length", "lineEnd", "text", "indexOf", "n", "lineStart", "if", "lineEnd", "lineEnd", "text", "length", "line", "text", "substring", "lineStart", "lineEnd", "if", "lineHash", "containsKey", "line", "chars", "append", "String", "valueOf", "char", "int", "lineHash", "get", "line", "else", "if", "lineArray", "size", "maxLines", "line", "text", "substring", "lineStart", "lineEnd", "text", "length", "lineArray", "add", "line", "lineHash", "put", "line", "lineArray", "size", "chars", "append", "String", "valueOf", "char", "lineArray", "size", "lineStart", "lineEnd", "return", "chars", "toString" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\H\\H9.java",
  "startLine" : 5,
  "endLine" : 32,
  "identifiers" : [ "String", "seed", "longtext", "substring", "i", "i", "longtext", "length", "int", "j", "String", "best_common", "String", "best_longtext_a", "best_longtext_b", "String", "best_shorttext_a", "best_shorttext_b", "while", "j", "shorttext", "indexOf", "seed", "j", "int", "prefixLength", "diff_commonPrefix", "longtext", "substring", "i", "shorttext", "substring", "j", "int", "suffixLength", "diff_commonSuffix", "longtext", "substring", "i", "shorttext", "substring", "j", "if", "best_common", "length", "suffixLength", "prefixLength", "best_common", "shorttext", "substring", "j", "suffixLength", "j", "shorttext", "substring", "j", "j", "prefixLength", "best_longtext_a", "longtext", "substring", "i", "suffixLength", "best_longtext_b", "longtext", "substring", "i", "prefixLength", "best_shorttext_a", "shorttext", "substring", "j", "suffixLength", "best_shorttext_b", "shorttext", "substring", "j", "prefixLength", "if", "best_common", "length", "longtext", "length", "return", "new", "String", "best_longtext_a", "best_longtext_b", "best_shorttext_a", "best_shorttext_b", "best_common", "else", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\I\\I1.java",
  "startLine" : 5,
  "endLine" : 28,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "List", "String", "lines", "new", "ArrayList", "String", "line", "null", "while", "line", "reader", "readLine", "null", "lines", "add", "line", "reader", "close", "return", "lines", "System", "out", "println", "System", "out", "println", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "List", "String", "lines", "new", "ArrayList", "String", "line", "null", "while", "line", "reader", "readLine", "null", "lines", "add", "line", "reader", "close", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\I\\I10.java",
  "startLine" : 5,
  "endLine" : 56,
  "identifiers" : [ "for", "int", "i", "i", "edits", "size", "i", "final", "Edit", "e", "edits", "get", "i", "if", "a", "e", "getBeginA", "if", "i", "return", "a", "return", "e", "getBeginB", "e", "getBeginA", "a", "if", "e", "getBeginA", "a", "return", "e", "getBeginB", "if", "e", "getEndA", "a", "return", "e", "getEndB", "if", "e", "getBeginA", "a", "a", "e", "getEndA", "return", "final", "Edit", "last", "edits", "get", "edits", "size", "return", "last", "getEndB", "a", "last", "getEndA", "System", "out", "println", "System", "out", "println", "for", "int", "i", "i", "edits", "size", "i", "final", "Edit", "e", "edits", "get", "i", "if", "a", "e", "getBeginA", "if", "i", "return", "a", "return", "e", "getBeginB", "e", "getBeginA", "a", "if", "e", "getBeginA", "a", "return", "e", "getBeginB", "if", "e", "getEndA", "a", "return", "e", "getEndB", "if", "e", "getBeginA", "a", "a", "e", "getEndA", "return", "final", "Edit", "last", "edits", "get", "edits", "size", "return", "last", "getEndB", "a", "last", "getEndA" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\I\\I2.java",
  "startLine" : 5,
  "endLine" : 20,
  "identifiers" : [ "BufferedWriter", "writer", "new", "BufferedWriter", "new", "OutputStreamWriter", "new", "FileOutputStream", "file", "append", "StandardCharsets", "UTF_8", "writer", "write", "content", "writer", "newLine", "writer", "flush", "writer", "close", "Systen", "out", "println", "Systen", "out", "println", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "OutputStreamWriter", "new", "FileOutputStream", "file", "append", "StandardCharsets", "UTF_8", "writer", "write", "content", "writer", "newLine", "writer", "flush", "writer", "close" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\I\\I3.java",
  "startLine" : 6,
  "endLine" : 36,
  "identifiers" : [ "int", "sourceLength", "sourceStr", "length", "int", "targetLength", "targetString", "length", "sourceStr", "sourceStr", "toLowerCase", "targetString", "targetString", "toLowerCase", "int", "editMatrix", "new", "int", "sourceLength", "targetLength", "for", "int", "i", "i", "sourceLength", "i", "editMatrix", "i", "i", "for", "int", "j", "j", "targetLength", "j", "editMatrix", "j", "j", "editMatrix", "System", "out", "println", "System", "out", "println", "int", "sourceLength", "sourceStr", "length", "int", "targetLength", "targetString", "length", "sourceStr", "sourceStr", "toLowerCase", "targetString", "targetString", "toLowerCase", "int", "editMatrix", "new", "int", "sourceLength", "targetLength", "for", "int", "i", "i", "sourceLength", "i", "editMatrix", "i", "i", "for", "int", "j", "j", "targetLength", "j", "editMatrix", "j", "j", "editMatrix" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\I\\I4.java",
  "startLine" : 5,
  "endLine" : 31,
  "identifiers" : [ "properties", "setProperty", "suffix", "properties", "setProperty", "repoPath", "properties", "setProperty", "outputFolder", "properties", "setProperty", "startCommit", "properties", "setProperty", "endCommit", "properties", "setProperty", "commitInterval", "toString", "properties", "setProperty", "outputInterval", "toString", "properties", "setProperty", "traceCommit", "properties", "setProperty", "extractedPath", "properties", "store", "new", "FileWriter", "CONFIG_FILE", "COMMENT", "System", "out", "Println", "System", "out", "Println", "properties", "setProperty", "suffix", "properties", "setProperty", "repoPath", "properties", "setProperty", "outputFolder", "properties", "setProperty", "startCommit", "properties", "setProperty", "endCommit", "properties", "setProperty", "commitInterval", "toString", "properties", "setProperty", "outputInterval", "toString", "properties", "setProperty", "traceCommit", "properties", "setProperty", "extractedPath", "properties", "store", "new", "FileWriter", "CONFIG_FILE", "COMMENT" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\I\\I5.java",
  "startLine" : 5,
  "endLine" : 46,
  "identifiers" : [ "if", "new", "File", "CONFIG_FILE", "exists", "properties", "load", "new", "FileReader", "CONFIG_FILE", "suffix", "properties", "getProperty", "repoPath", "properties", "getProperty", "outputFolder", "properties", "getProperty", "startCommit", "properties", "getProperty", "endCommit", "properties", "getProperty", "commitInterval", "Integer", "parseInt", "properties", "getProperty", "outputInterval", "Integer", "parseInt", "properties", "getProperty", "trim", "traceCommit", "properties", "getProperty", "extractedPath", "properties", "getProperty", "else", "save", "System", "out", "println", "System", "exit", "System", "out", "println", "System", "out", "println", "if", "new", "File", "CONFIG_FILE", "exists", "properties", "load", "new", "FileReader", "CONFIG_FILE", "suffix", "properties", "getProperty", "repoPath", "properties", "getProperty", "outputFolder", "properties", "getProperty", "startCommit", "properties", "getProperty", "endCommit", "properties", "getProperty", "commitInterval", "Integer", "parseInt", "properties", "getProperty", "outputInterval", "Integer", "parseInt", "properties", "getProperty", "trim", "traceCommit", "properties", "getProperty", "extractedPath", "properties", "getProperty", "else", "save", "System", "out", "println", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\I\\I6.java",
  "startLine" : 5,
  "endLine" : 33,
  "identifiers" : [ "List", "RevCommit", "cutRevCommitList", "new", "ArrayList", "for", "RevCommit", "revCommit", "logRevCommitList", "if", "revCommit", "getCommitTime", "startRevCommit", "getCommitTime", "cutRevCommitList", "add", "revCommit", "else", "break", "System", "out", "println", "System", "out", "println", "List", "RevCommit", "cutRevCommitList", "new", "ArrayList", "for", "RevCommit", "revCommit", "logRevCommitList", "if", "revCommit", "getCommitTime", "startRevCommit", "getCommitTime", "cutRevCommitList", "add", "revCommit", "else", "break" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\I\\I7.java",
  "startLine" : 5,
  "endLine" : 39,
  "identifiers" : [ "if", "left", "getAddStringList", "size", "right", "getAddStringList", "size", "left", "getRemoveStringList", "size", "right", "getRemoveStringList", "size", "return", "false", "else", "if", "isTwoStringListEquals", "left", "getAddStringList", "right", "getAddStringList", "isTwoStringListEquals", "left", "getRemoveStringList", "right", "getRemoveStringList", "return", "true", "else", "return", "false", "System", "out", "println", "System", "out", "println", "if", "left", "getAddStringList", "size", "right", "getAddStringList", "size", "left", "getRemoveStringList", "size", "right", "getRemoveStringList", "size", "return", "false", "else", "if", "isTwoStringListEquals", "left", "getAddStringList", "right", "getAddStringList", "isTwoStringListEquals", "left", "getRemoveStringList", "right", "getRemoveStringList", "return", "true", "else", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\I\\I8.java",
  "startLine" : 5,
  "endLine" : 40,
  "identifiers" : [ "boolean", "result", "true", "for", "int", "i", "i", "leftStringList", "size", "i", "String", "leftString", "leftStringList", "get", "i", "String", "rightString", "rightStringList", "get", "i", "String", "pattern_whitespace", "String", "nows_leftString", "leftString", "replaceAll", "pattern_whitespace", "String", "nows_rightString", "rightString", "replaceAll", "pattern_whitespace", "if", "nows_leftString", "equals", "nows_rightString", "return", "false", "System", "out", "println", "System", "out", "println", "boolean", "result", "true", "for", "int", "i", "i", "leftStringList", "size", "i", "String", "leftString", "leftStringList", "get", "i", "String", "rightString", "rightStringList", "get", "i", "String", "pattern_whitespace", "String", "nows_leftString", "leftString", "replaceAll", "pattern_whitespace", "String", "nows_rightString", "rightString", "replaceAll", "pattern_whitespace", "if", "nows_leftString", "equals", "nows_rightString", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\I\\I9.java",
  "startLine" : 5,
  "endLine" : 38,
  "identifiers" : [ "try", "RevWalk", "walk", "new", "RevWalk", "repository", "RevCommit", "commit", "walk", "parseCommit", "ObjectId", "fromString", "objectId", "RevTree", "tree", "walk", "parseTree", "commit", "getTree", "getId", "CanonicalTreeParser", "treeParser", "new", "CanonicalTreeParser", "try", "ObjectReader", "reader", "repository", "newObjectReader", "treeParser", "reset", "reader", "tree", "getId", "walk", "dispose", "return", "treeParser", "System", "out", "println", "System", "out", "println", "try", "RevWalk", "walk", "new", "RevWalk", "repository", "RevCommit", "commit", "walk", "parseCommit", "ObjectId", "fromString", "objectId", "RevTree", "tree", "walk", "parseTree", "commit", "getTree", "getId", "CanonicalTreeParser", "treeParser", "new", "CanonicalTreeParser", "try", "ObjectReader", "reader", "repository", "newObjectReader", "treeParser", "reset", "reader", "tree", "getId", "walk", "dispose", "return", "treeParser" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\J\\J1.java",
  "startLine" : 5,
  "endLine" : 22,
  "identifiers" : [ "for", "Edit", "edit", "editList", "if", "edit", "getBeginA", "startLine", "startLine", "edit", "getEndA", "return", "edit", "getBeginB", "return", "System", "out", "println", "System", "out", "println", "for", "Edit", "edit", "editList", "if", "edit", "getBeginA", "startLine", "startLine", "edit", "getEndA", "return", "edit", "getBeginB", "return" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\J\\J10.java",
  "startLine" : 5,
  "endLine" : 40,
  "identifiers" : [ "List", "RevCommit", "cutRevCommitList", "new", "ArrayList", "int", "i", "for", "RevCommit", "revCommit", "logRevCommitList", "i", "if", "revCommit", "getCommitTime", "startRevCommit", "getCommitTime", "revCommit", "getCommitTime", "endRevCommit", "getCommitTime", "cutRevCommitList", "add", "revCommit", "else", "continue", "System", "out", "println", "System", "out", "println", "List", "RevCommit", "cutRevCommitList", "new", "ArrayList", "int", "i", "for", "RevCommit", "revCommit", "logRevCommitList", "i", "if", "revCommit", "getCommitTime", "startRevCommit", "getCommitTime", "revCommit", "getCommitTime", "endRevCommit", "getCommitTime", "cutRevCommitList", "add", "revCommit", "else", "continue" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\J\\J2.java",
  "startLine" : 5,
  "endLine" : 31,
  "identifiers" : [ "boolean", "isModified", "false", "for", "Edit", "edit", "editList", "int", "beginA", "edit", "getBeginA", "int", "endA", "edit", "getEndA", "if", "oldCloneInstance", "getStartLine", "beginA", "oldCloneInstance", "getEndLine", "endA", "isModified", "true", "return", "isModified", "System", "out", "println", "System", "out", "println", "boolean", "isModified", "false", "for", "Edit", "edit", "editList", "int", "beginA", "edit", "getBeginA", "int", "endA", "edit", "getEndA", "if", "oldCloneInstance", "getStartLine", "beginA", "oldCloneInstance", "getEndLine", "endA", "isModified", "true", "return", "isModified" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\J\\J3.java",
  "startLine" : 5,
  "endLine" : 40,
  "identifiers" : [ "DiffFormatter", "formatter", "new", "DiffFormatter", "NullOutputStream", "INSTANCE", "formatter", "setRepository", "repository", "formatter", "setContext", "formatter", "setDiffComparator", "RawTextComparator", "WS_IGNORE_ALL", "EditList", "editList", "new", "EditList", "String", "diffLogText", "null", "try", "formatter", "format", "diffEntry", "editList", "formatter", "toFileHeader", "diffEntry", "toEditList", "catch", "IOException", "e", "e", "printStackTrace", "return", "editList", "System", "out", "println", "System", "out", "println", "DiffFormatter", "formatter", "new", "DiffFormatter", "NullOutputStream", "INSTANCE", "formatter", "setRepository", "repository", "formatter", "setContext", "formatter", "setDiffComparator", "RawTextComparator", "WS_IGNORE_ALL", "EditList", "editList", "new", "EditList", "String", "diffLogText", "null", "try", "formatter", "format", "diffEntry", "editList", "formatter", "toFileHeader", "diffEntry", "toEditList", "catch", "IOException", "e", "e", "printStackTrace", "return", "editList" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\J\\J4.java",
  "startLine" : 5,
  "endLine" : 52,
  "identifiers" : [ "ByteArrayOutputStream", "byteArrayOutputStream", "new", "ByteArrayOutputStream", "DiffFormatter", "formatter", "new", "DiffFormatter", "byteArrayOutputStream", "formatter", "setRepository", "repository", "formatter", "setContext", "formatter", "setDiffComparator", "RawTextComparator", "WS_IGNORE_ALL", "EditList", "editList", "null", "String", "diffLogText", "null", "try", "formatter", "format", "diffEntry", "diffLogText", "byteArrayOutputStream", "toString", "byteArrayOutputStream", "close", "editList", "formatter", "toFileHeader", "diffEntry", "toEditList", "catch", "IOException", "e", "e", "printStackTrace", "Pair", "String", "EditList", "diffTextEditListPair", "new", "Pair", "diffLogText", "editList", "return", "diffTextEditListPair", "System", "out", "println", "System", "out", "println", "ByteArrayOutputStream", "byteArrayOutputStream", "new", "ByteArrayOutputStream", "DiffFormatter", "formatter", "new", "DiffFormatter", "byteArrayOutputStream", "formatter", "setRepository", "repository", "formatter", "setContext", "formatter", "setDiffComparator", "RawTextComparator", "WS_IGNORE_ALL", "EditList", "editList", "null", "String", "diffLogText", "null", "try", "formatter", "format", "diffEntry", "diffLogText", "byteArrayOutputStream", "toString", "byteArrayOutputStream", "close", "editList", "formatter", "toFileHeader", "diffEntry", "toEditList", "catch", "IOException", "e", "e", "printStackTrace", "Pair", "String", "EditList", "diffTextEditListPair", "new", "Pair", "diffLogText", "editList", "return", "diffTextEditListPair" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\J\\J5.java",
  "startLine" : 5,
  "endLine" : 53,
  "identifiers" : [ "if", "newStartLine", "newEndLine", "statusInNewCommit", "Status", "D", "else", "if", "newStartLine", "newStartLine", "getNewStartLine", "oldCloneInstance", "getStartLine", "editList", "statusInNewCommit", "Status", "E", "else", "if", "newEndLine", "newEndLine", "getNewEndLine", "oldCloneInstance", "getEndLine", "editList", "statusInNewCommit", "Status", "E", "else", "if", "newStartLine", "newEndLine", "statusInNewCommit", "Status", "D", "else", "if", "isModified", "oldCloneInstance", "editList", "statusInNewCommit", "Status", "M", "System", "out", "println", "System", "out", "println", "if", "newStartLine", "newEndLine", "statusInNewCommit", "Status", "D", "else", "if", "newStartLine", "newStartLine", "getNewStartLine", "oldCloneInstance", "getStartLine", "editList", "statusInNewCommit", "Status", "E", "else", "if", "newEndLine", "newEndLine", "getNewEndLine", "oldCloneInstance", "getEndLine", "editList", "statusInNewCommit", "Status", "E", "else", "if", "newStartLine", "newEndLine", "statusInNewCommit", "Status", "D", "else", "if", "isModified", "oldCloneInstance", "editList", "statusInNewCommit", "Status", "M" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\J\\J6.java",
  "startLine" : 5,
  "endLine" : 52,
  "identifiers" : [ "List", "EditContent", "editContentListAfterCut", "new", "ArrayList", "int", "startLine", "oldCloneInstance", "getStartLine", "int", "endLine", "oldCloneInstance", "getEndLine", "for", "EditContent", "editContent", "fullEditContentList", "int", "beginA", "editContent", "getEdit", "getBeginA", "int", "endA", "editContent", "getEdit", "getEndA", "if", "startLine", "beginA", "endA", "endLine", "editContentListAfterCut", "add", "editContent", "continue", "else", "if", "beginA", "startLine", "startLine", "endA", "editContentListAfterCut", "add", "editContent", "continue", "else", "if", "beginA", "endLine", "endLine", "endA", "editContentListAfterCut", "add", "editContent", "continue", "System", "out", "println", "System", "out", "println", "List", "EditContent", "editContentListAfterCut", "new", "ArrayList", "int", "startLine", "oldCloneInstance", "getStartLine", "int", "endLine", "oldCloneInstance", "getEndLine", "for", "EditContent", "editContent", "fullEditContentList", "int", "beginA", "editContent", "getEdit", "getBeginA", "int", "endA", "editContent", "getEdit", "getEndA", "if", "startLine", "beginA", "endA", "endLine", "editContentListAfterCut", "add", "editContent", "continue", "else", "if", "beginA", "startLine", "startLine", "endA", "editContentListAfterCut", "add", "editContent", "continue", "else", "if", "beginA", "endLine", "endLine", "endA", "editContentListAfterCut", "add", "editContent", "continue" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\J\\J7.java",
  "startLine" : 5,
  "endLine" : 50,
  "identifiers" : [ "List", "String", "itemList", "new", "ArrayList", "itemList", "add", "diffInfo", "getNewRevCommit", "getName", "int", "timestamp", "diffInfo", "getNewRevCommit", "getCommitTime", "String", "date", "TimeUtil", "getTime", "timestamp", "itemList", "add", "date", "itemList", "add", "diffInfo", "getNewCloneInstance", "getPath", "itemList", "add", "diffInfo", "getNewCloneInstance", "getStartLine", "toString", "itemList", "add", "diffInfo", "getNewCloneInstance", "getEndLine", "toString", "itemList", "add", "diffInfo", "getNewRevCommit", "getAuthorIdent", "getName", "itemList", "add", "diffInfo", "getStatus", "name", "String", "result", "String", "join", "itemList", "return", "result", "System", "out", "println", "System", "out", "println", "List", "String", "itemList", "new", "ArrayList", "itemList", "add", "diffInfo", "getNewRevCommit", "getName", "int", "timestamp", "diffInfo", "getNewRevCommit", "getCommitTime", "String", "date", "TimeUtil", "getTime", "timestamp", "itemList", "add", "date", "itemList", "add", "diffInfo", "getNewCloneInstance", "getPath", "itemList", "add", "diffInfo", "getNewCloneInstance", "getStartLine", "toString", "itemList", "add", "diffInfo", "getNewCloneInstance", "getEndLine", "toString", "itemList", "add", "diffInfo", "getNewRevCommit", "getAuthorIdent", "getName", "itemList", "add", "diffInfo", "getStatus", "name", "String", "result", "String", "join", "itemList", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\J\\J8.java",
  "startLine" : 5,
  "endLine" : 59,
  "identifiers" : [ "try", "TreeWalk", "treeWalk", "new", "TreeWalk", "repository", "RevTree", "tree", "revCommit", "getTree", "treeWalk", "reset", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "filePath", "if", "treeWalk", "next", "return", "new", "ArrayList", "ObjectId", "objectId", "treeWalk", "getObjectId", "ObjectLoader", "loader", "repository", "open", "objectId", "ByteArrayOutputStream", "outputStream", "new", "ByteArrayOutputStream", "loader", "copyTo", "outputStream", "String", "content", "outputStream", "toString", "List", "String", "lines", "Arrays", "asList", "content", "split", "outputStream", "close", "treeWalk", "close", "return", "lines", "catch", "Exception", "e", "e", "printStackTrace", "System", "out", "println", "System", "out", "println", "try", "TreeWalk", "treeWalk", "new", "TreeWalk", "repository", "RevTree", "tree", "revCommit", "getTree", "treeWalk", "reset", "treeWalk", "addTree", "tree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "filePath", "if", "treeWalk", "next", "return", "new", "ArrayList", "ObjectId", "objectId", "treeWalk", "getObjectId", "ObjectLoader", "loader", "repository", "open", "objectId", "ByteArrayOutputStream", "outputStream", "new", "ByteArrayOutputStream", "loader", "copyTo", "outputStream", "String", "content", "outputStream", "toString", "List", "String", "lines", "Arrays", "asList", "content", "split", "outputStream", "close", "treeWalk", "close", "return", "lines", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\SAGATestcases\\JavaProject\\J\\J9.java",
  "startLine" : 5,
  "endLine" : 49,
  "identifiers" : [ "while", "curCommit", "getParentCount", "revCommitList", "add", "curCommit", "String", "parentCommitStr", "curCommit", "getParent", "getName", "try", "curCommit", "revWalk", "parseCommit", "ObjectId", "fromString", "parentCommitStr", "catch", "IOException", "e", "e", "printStackTrace", "break", "if", "startRevCommit", "getName", "equals", "curCommit", "getName", "break", "if", "curCommit", "getCommitTime", "startRevCommit", "getCommitTime", "break", "return", "revCommitList", "System", "out", "println", "System", "out", "println", "while", "curCommit", "getParentCount", "revCommitList", "add", "curCommit", "String", "parentCommitStr", "curCommit", "getParent", "getName", "try", "curCommit", "revWalk", "parseCommit", "ObjectId", "fromString", "parentCommitStr", "catch", "IOException", "e", "e", "printStackTrace", "break", "if", "startRevCommit", "getName", "equals", "curCommit", "getName", "break", "if", "curCommit", "getCommitTime", "startRevCommit", "getCommitTime", "break", "return", "revCommitList" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\conf\\Config.java",
  "startLine" : 25,
  "endLine" : 35,
  "identifiers" : [ "properties", "setProperty", "MeasureIndexPath", "properties", "setProperty", "CompareType", "toString", "properties", "setProperty", "Similarity", "toString", "properties", "setProperty", "LineGapDis", "toString", "properties", "setProperty", "MinLine", "toString", "properties", "setProperty", "MaxLine", "toString", "FileWriter", "writer", "new", "FileWriter", "new", "File", "CONFIG_FILE", "properties", "store", "writer", "writer", "close" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\conf\\Config.java",
  "startLine" : 41,
  "endLine" : 52,
  "identifiers" : [ "FileReader", "reader", "new", "FileReader", "CONFIG_FILE", "properties", "load", "reader", "reader", "close", "MeasureIndexPath", "properties", "getProperty", "CompareType", "Integer", "parseInt", "properties", "getProperty", "Similarity", "Float", "parseFloat", "properties", "getProperty", "LineGapDis", "Float", "parseFloat", "properties", "getProperty", "MinLine", "Integer", "parseInt", "properties", "getProperty", "MaxLine", "Integer", "parseInt", "properties", "getProperty" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\manager\\IDPairGenerator.java",
  "startLine" : 18,
  "endLine" : 35,
  "identifiers" : [ "List", "String", "pairs", "new", "ArrayList", "if", "m", "size", "n", "size", "return", "pairs", "for", "m", "size", "m", "if", "n", "size", "n", "m", "for", "n", "size", "n", "if", "pairs", "size", "length", "return", "pairs", "pairs", "add", "m", "n", "return", "pairs" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\manager\\MeasureIDPairGenerator.java",
  "startLine" : 23,
  "endLine" : 46,
  "identifiers" : [ "List", "String", "pairs", "new", "ArrayList", "if", "m", "size", "n", "size", "return", "pairs", "for", "m", "size", "m", "if", "n", "size", "n", "m", "for", "n", "size", "n", "if", "pairs", "size", "length", "return", "pairs", "Measure", "m1", "measureList", "get", "m", "Measure", "m2", "measureList", "get", "n", "float", "lineGapDis", "Math", "abs", "m1", "getLineCount", "m2", "getLineCount", "f", "Math", "min", "m1", "getLineCount", "m2", "getLineCount", "if", "lineGapDis", "this", "lineGapDis", "continue", "pairs", "add", "m", "n", "return", "pairs" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\manager\\MeasureIndexManager.java",
  "startLine" : 29,
  "endLine" : 72,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "measureIndexPath", "List", "Measure", "measureList", "new", "ArrayList", "String", "line", "null", "int", "cnt", "while", "line", "reader", "readLine", "null", "try", "cnt", "if", "cnt", "log", "info", "cnt", "String", "tmp", "line", "split", "Integer", "id", "Integer", "parseInt", "tmp", "String", "path", "line", "substring", "line", "indexOf", "line", "lastIndexOf", "path", "path", "substring", "path", "lastIndexOf", "Integer", "startLine", "Integer", "parseInt", "tmp", "tmp", "length", "Integer", "endLine", "Integer", "parseInt", "tmp", "tmp", "length", "Integer", "lineCount", "endLine", "startLine", "if", "lineCount", "Config", "MinLine", "continue", "if", "Config", "MaxLine", "lineCount", "Config", "MaxLine", "continue", "List", "String", "lines", "FileUtils", "readLines", "new", "File", "path", "List", "String", "code", "lines", "subList", "startLine", "endLine", "code", "CommentUtil", "removeComments2", "code", "code", "code", "parallelStream", "map", "String", "trim", "collect", "Collectors", "toList", "code", "code", "parallelStream", "filter", "s", "s", "matches", "FILTER_WORDS_REGEX", "s", "isEmpty", "collect", "Collectors", "toList", "List", "Long", "hash", "null", "if", "Config", "CompareType", "hash", "code", "stream", "mapToLong", "SimHash", "computeOptimizedSimHashForString", "boxed", "collect", "Collectors", "toList", "Measure", "measure", "new", "Measure", "id", "path", "startLine", "endLine", "lineCount", "code", "hash", "measureList", "add", "measure", "catch", "Exception", "e", "e", "printStackTrace", "return", "measureList" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\manager\\MeasureIndexManager.java",
  "startLine" : 79,
  "endLine" : 92,
  "identifiers" : [ "measureList", "sort", "new", "Comparator", "Measure", "Override", "public", "int", "compare", "Measure", "o1", "Measure", "o2", "if", "o1", "getLineCount", "o2", "getLineCount", "return", "if", "o1", "getLineCount", "equals", "o2", "getLineCount", "return", "return" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\manager\\SimhashComparator.java",
  "startLine" : 23,
  "endLine" : 88,
  "identifiers" : [ "List", "Pair", "pairs", "new", "ArrayList", "if", "measureList", "size", "return", "pairs", "int", "buffer", "IDPairGenerator", "generator", "new", "MeasureIDPairGenerator", "measureList", "Config", "LineGapDis", "List", "String", "ids", "generator", "generate", "buffer", "int", "cnt", "while", "ids", "size", "ids", "parallelStream", "forEach", "new", "Consumer", "String", "Override", "public", "void", "accept", "String", "s", "String", "tmp", "s", "split", "int", "id1", "Integer", "parseInt", "tmp", "int", "id2", "Integer", "parseInt", "tmp", "Measure", "measure1", "measureList", "get", "id1", "Measure", "measure2", "measureList", "get", "id2", "float", "lineGapDis", "Math", "abs", "measure1", "getLineCount", "measure2", "getLineCount", "f", "Math", "min", "measure1", "getLineCount", "measure2", "getLineCount", "if", "lineGapDis", "Config", "LineGapDis", "return", "int", "sameCounter", "StringBuilder", "sequence", "new", "StringBuilder", "for", "long", "hash2", "measure2", "getHash", "boolean", "same", "false", "for", "long", "hash1", "measure1", "getHash", "if", "SimHash", "hammingDistance", "hash1", "hash2", "sameCounter", "same", "true", "if", "same", "sequence", "append", "else", "sequence", "append", "float", "similarity", "sameCounter", "f", "measure1", "getCode", "size", "if", "similarity", "Config", "Similarity", "return", "Matcher", "matcher", "Pattern", "compile", "matcher", "sequence", "int", "oneCounter", "while", "matcher", "find", "oneCounter", "int", "type", "oneCounter", "lock", "lock", "pairs", "add", "new", "Pair", "measure1", "getId", "measure2", "getId", "type", "lock", "unlock", "cnt", "ids", "size", "log", "info", "cnt", "ids", "generator", "generate", "buffer", "return", "pairs" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\manager\\StringComparator.java",
  "startLine" : 21,
  "endLine" : 84,
  "identifiers" : [ "List", "Pair", "pairs", "new", "ArrayList", "if", "measureList", "size", "return", "pairs", "int", "buffer", "IDPairGenerator", "generator", "new", "MeasureIDPairGenerator", "measureList", "Config", "LineGapDis", "List", "String", "ids", "generator", "generate", "buffer", "int", "cnt", "while", "ids", "size", "ids", "parallelStream", "forEach", "new", "Consumer", "String", "Override", "public", "void", "accept", "String", "s", "String", "tmp", "s", "split", "int", "id1", "Integer", "parseInt", "tmp", "int", "id2", "Integer", "parseInt", "tmp", "Measure", "measure1", "measureList", "get", "id1", "Measure", "measure2", "measureList", "get", "id2", "float", "lineGapDis", "Math", "abs", "measure1", "getLineCount", "measure2", "getLineCount", "f", "Math", "min", "measure1", "getLineCount", "measure2", "getLineCount", "if", "lineGapDis", "Config", "LineGapDis", "return", "int", "sameCounter", "StringBuilder", "sequence", "new", "StringBuilder", "for", "String", "line2", "measure2", "getCode", "boolean", "same", "false", "for", "String", "line1", "measure1", "getCode", "if", "line1", "equals", "line2", "sameCounter", "same", "true", "if", "same", "sequence", "append", "else", "sequence", "append", "float", "similarity", "sameCounter", "f", "measure1", "getCode", "size", "if", "similarity", "Config", "Similarity", "return", "Matcher", "matcher", "Pattern", "compile", "matcher", "sequence", "int", "oneCounter", "while", "matcher", "find", "oneCounter", "int", "type", "oneCounter", "lock", "lock", "pairs", "add", "new", "Pair", "measure1", "getId", "measure2", "getId", "type", "lock", "unlock", "cnt", "ids", "size", "log", "info", "cnt", "ids", "generator", "generate", "buffer", "return", "pairs" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\processor\\SRCFProcessor.java",
  "startLine" : 24,
  "endLine" : 68,
  "identifiers" : [ "long", "start", "System", "currentTimeMillis", "try", "log", "info", "loadConfig", "catch", "IOException", "e", "e", "printStackTrace", "System", "exit", "List", "Measure", "measureList", "null", "try", "log", "info", "measureList", "MeasureIndexManager", "loadMeasureList", "Config", "MeasureIndexPath", "MeasureIndexManager", "sortMeasureList", "measureList", "catch", "IOException", "e", "e", "printStackTrace", "log", "info", "Comparator", "comparator", "null", "if", "Config", "CompareType", "comparator", "new", "StringComparator", "else", "comparator", "new", "SimhashComparator", "log", "info", "List", "Pair", "pairList", "comparator", "findPairs", "measureList", "log", "info", "try", "output", "pairList", "catch", "IOException", "e", "e", "printStackTrace", "long", "end", "System", "currentTimeMillis", "log", "info", "Duration", "ofMillis", "end", "start", "toString" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\processor\\SRCFProcessor.java",
  "startLine" : 73,
  "endLine" : 81,
  "identifiers" : [ "File", "configFile", "new", "File", "Config", "CONFIG_FILE", "if", "configFile", "exists", "log", "info", "Config", "CONFIG_FILE", "Config", "save", "System", "exit", "Config", "load" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\processor\\SRCFProcessor.java",
  "startLine" : 83,
  "endLine" : 105,
  "identifiers" : [ "List", "Pair", "type1Pairs", "pairList", "parallelStream", "filter", "p", "p", "getType", "collect", "Collectors", "toList", "List", "Pair", "type2Pairs", "pairList", "parallelStream", "filter", "p", "p", "getType", "collect", "Collectors", "toList", "List", "String", "lines", "type1Pairs", "parallelStream", "map", "new", "Function", "Pair", "String", "Override", "public", "String", "apply", "Pair", "pair", "return", "pair", "getId1", "pair", "getId2", "collect", "Collectors", "toList", "FileUtils", "writeLines", "new", "File", "Constants", "COMMON_PAIR_OUTPUT_FILE", "lines", "lines", "type2Pairs", "parallelStream", "map", "new", "Function", "Pair", "String", "Override", "public", "String", "apply", "Pair", "pair", "return", "pair", "getId1", "pair", "getId2", "collect", "Collectors", "toList", "FileUtils", "writeLines", "new", "File", "Constants", "SPECIAL_PAIR_OUTPUT_FILE", "lines" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 59,
  "endLine" : 67,
  "identifiers" : [ "Long", "l", "new", "Long", "polynomial", "FPGenerator", "fpgen", "FPGenerator", "generators", "get", "l", "if", "fpgen", "null", "fpgen", "new", "FPGenerator", "polynomial", "degree", "generators", "put", "l", "fpgen", "return", "fpgen" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 78,
  "endLine" : 88,
  "identifiers" : [ "int", "N", "degree", "long", "local", "N", "fp", "L", "N", "long", "temp", "zero", "for", "int", "i", "i", "N", "i", "temp", "ByteModTable", "i", "int", "fp", "xff", "fp", "return", "local", "temp" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 108,
  "endLine" : 116,
  "identifiers" : [ "f", "xffff", "v", "int", "i", "int", "f", "long", "result", "f", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 121,
  "endLine" : 133,
  "identifiers" : [ "f", "xffffffffL", "v", "int", "i", "int", "f", "long", "result", "f", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 138,
  "endLine" : 156,
  "identifiers" : [ "f", "v", "long", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 271,
  "endLine" : 278,
  "identifiers" : [ "int", "n", "s", "length", "for", "int", "i", "i", "n", "i", "int", "v", "int", "s", "charAt", "i", "f", "extend_char", "f", "v", "return", "reduce", "f" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 315,
  "endLine" : 322,
  "identifiers" : [ "int", "n", "s", "length", "for", "int", "i", "i", "n", "i", "int", "x", "int", "s", "charAt", "i", "f", "extend_byte", "f", "x", "return", "reduce", "f" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 364,
  "endLine" : 403,
  "identifiers" : [ "this", "degree", "degree", "this", "polynomial", "polynomial", "ByteModTable", "new", "long", "long", "PowerTable", "new", "long", "long", "x_to_the_i", "one", "long", "x_to_the_degree_minus_one", "one", "degree", "for", "int", "i", "i", "i", "PowerTable", "i", "x_to_the_i", "boolean", "overflow", "x_to_the_i", "x_to_the_degree_minus_one", "x_to_the_i", "if", "overflow", "x_to_the_i", "polynomial", "this", "empty", "PowerTable", "for", "int", "i", "i", "i", "for", "int", "j", "j", "j", "long", "v", "zero", "for", "int", "k", "k", "k", "if", "j", "k", "v", "PowerTable", "i", "k", "ByteModTable", "i", "j", "v" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 411,
  "endLine" : 475,
  "identifiers" : [ "null", "xC000000000000000L", "xC000000000000000L", "xE000000000000000L", "xE000000000000000L", "xD000000000000000L", "xB000000000000000L", "xF800000000000000L", "xF800000000000000L", "xEC00000000000000L", "xBC00000000000000L", "xDA00000000000000L", "xB600000000000000L", "xE500000000000000L", "xE500000000000000L", "x9680000000000000L", "xD480000000000000L", "x80C0000000000000L", "x8840000000000000L", "xB0A0000000000000L", "xE9A0000000000000L", "xD9F0000000000000L", "xC9B0000000000000L", "xE758000000000000L", "xDE98000000000000L", "xE42C000000000000L", "x94E4000000000000L", "xD4CE000000000000L", "xB892000000000000L", "xE2AB000000000000L", "x9E39000000000000L", "xCCE4800000000000L", "x9783800000000000L", "xD8F8C00000000000L", "xA9CDC00000000000L", "x9A28200000000000L", "xFD79E00000000000L", "xC782500000000000L", "x96CD300000000000L", "xBEE6880000000000L", "xE902C80000000000L", "x86D7E40000000000L", "xF066340000000000L", "x9888060000000000L", "x910ABE0000000000L", "xFF30E30000000000L", "xB27EFB0000000000L", "x8E375B8000000000L", "xA03D948000000000L", "xD1415C4000000000L", "xF5357CC000000000L", "x91A916E000000000L", "xB6CE66E000000000L", "xE6D2FC5000000000L", "xD55882B000000000L", "x9A3BA0B800000000L", "xFBD654E800000000L", "xAEA5D2E400000000L", "xF0E533AC00000000L", "xDA88B7BE00000000L", "xAA3AAEDE00000000L", "xBA75BB4300000000L", "xF5A811C500000000L", "x9B6C9A2F80000000L", "x9603CCED80000000L", "xFABB538840000000L", "xE2747090C0000000L", "x8358898EA0000000L", "x8C698D3D20000000L", "xDA8ABD5BF0000000L", "xF6DF3A0AF0000000L", "xB090C3F758000000L", "xD3B4D3D298000000L", "xAD9882F5BC000000L", "x88DA4FB544000000L", "xC3C366272A000000L", "xDCCF2A2262000000L", "x9BC0224A97000000L", "xAF5D96F273000000L", "x8643FFF621800000L", "x8E390C6EDC800000L", "xE45C01919BC00000L", "xCBB34C8945C00000L", "x80D8141BC2E00000L", "x886AFC3912200000L", "xF605807C26500000L", "xA3B92D28F6300000L", "xCE9A2CFC76280000L", "x98400C1921280000L", "xF61894904C040000L", "xC8BE6DBCEC8C0000L", "xE3A44C104D160000L", "xCA84A59443760000L", "xC7E84953A11B0000L", "xD9D4F6AA02CB0000L", "xC26CDD1C9A358000L", "x8BE8478434328000L", "xAE125DBEB198C000L", "xFCC5DBFD5AAAC000L", "x86DE52A079A6A000L", "xC5F16BD883816000L", "xDF82486AAFE37000L", "xA293EC735692D000L", "xE91ABA275C272800L", "xD686192874E3C800L", "x963D0960DAB3FC00L", "xBA9DE62072621400L", "xA2188C4E8A46CE00L", "xD31F75BCB4977E00L", "xC43A416020A6CB00L", "x99F57FECA12B3900L", "xA4F72EF82A58AE80L", "xCECE4391B81DA380L", "xB39F119264BC0940L", "x80A277D20DABB9C0L", "xFD6616C0CBFA0B20L", "xED16E64117DC11A0L", "xFFA8BC44327B5390L", "xEDFB13DB3B66C210L", "xCAE8EB99E73AB548L", "xC86135B6EA2F0B98L", "xBA49BADCDD19B16CL", "x8F1944AFB18564C4L", "xECFC86D765EABBEEL", "x9190E1C46CC13702L", "xE1F8D6B3195D6D97L", "xDF70267FF5E4C979L", "xD74307D3FD3382DBL", "x9999B3FFDC769B48L" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 105,
  "endLine" : 155,
  "identifiers" : [ ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 225,
  "endLine" : 239,
  "identifiers" : [ "if", "f", "f", "throw", "new", "IllegalArgumentException", "if", "n", "throw", "new", "IllegalArgumentException", "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "n", "f", "if", "l", "l", "l", "free", "PRIMES", "p", "l", "this", "f", "f", "this", "maxFill", "int", "free", "f", "key", "new", "long", "free", "state", "new", "byte", "free" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 305,
  "endLine" : 315,
  "identifiers" : [ "if", "offset", "throw", "new", "ArrayIndexOutOfBoundsException", "offset", "if", "length", "throw", "new", "IllegalArgumentException", "length", "if", "offset", "length", "arrayLength", "throw", "new", "ArrayIndexOutOfBoundsException", "offset", "length", "arrayLength" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 436,
  "endLine" : 471,
  "identifiers" : [ "final", "long", "key", "this", "key", "final", "byte", "state", "this", "state", "final", "int", "n", "key", "length", "final", "int", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "int", "h1", "k2i", "n", "if", "state", "h1", "OCCUPIED", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "OCCUPIED", "k", "key", "h1", "if", "state", "h1", "FREE", "return", "h1", "if", "state", "h1", "OCCUPIED", "return", "h1", "final", "int", "i", "h1", "if", "ASSERTS", "assert", "state", "h1", "REMOVED", "if", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "k", "key", "h1", "return", "state", "h1", "OCCUPIED", "h1", "i" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 481,
  "endLine" : 501,
  "identifiers" : [ "final", "long", "key", "this", "key", "final", "byte", "state", "this", "state", "final", "int", "n", "key", "length", "final", "int", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "int", "h1", "k2i", "n", "if", "state", "h1", "FREE", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "k", "key", "h1", "return", "state", "h1", "OCCUPIED", "h1" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 503,
  "endLine" : 523,
  "identifiers" : [ "final", "int", "i", "findInsertionPoint", "k", "if", "i", "return", "false", "if", "state", "i", "FREE", "free", "state", "i", "OCCUPIED", "key", "i", "k", "if", "count", "maxFill", "int", "newP", "Math", "min", "p", "growthFactor", "PRIMES", "length", "while", "PRIMES", "newP", "PRIMES", "p", "newP", "rehash", "newP", "if", "free", "rehash", "p", "if", "ASSERTS", "checkTable", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 599,
  "endLine" : 611,
  "identifiers" : [ "long", "retVal", "final", "byte", "state", "LongOpenHashSet", "this", "state", "final", "int", "n", "state", "length", "if", "hasNext", "throw", "new", "NoSuchElementException", "retVal", "key", "last", "pos", "if", "c", "do", "pos", "while", "pos", "n", "state", "pos", "OCCUPIED", "return", "retVal" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 668,
  "endLine" : 680,
  "identifiers" : [ "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "count", "f", "if", "l", "l", "l", "if", "l", "p", "return", "true", "try", "rehash", "l", "catch", "OutOfMemoryError", "cantDoIt", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 704,
  "endLine" : 717,
  "identifiers" : [ "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "Math", "min", "Integer", "MAX_VALUE", "Math", "max", "n", "count", "f", "if", "l", "l", "l", "if", "p", "l", "return", "true", "try", "rehash", "l", "catch", "OutOfMemoryError", "cantDoIt", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 732,
  "endLine" : 761,
  "identifiers" : [ "int", "i", "j", "count", "k2i", "h1", "h2", "final", "byte", "state", "this", "state", "long", "k", "final", "int", "newN", "PRIMES", "newP", "final", "long", "key", "this", "key", "newKey", "new", "long", "newN", "final", "byte", "newState", "new", "byte", "newN", "while", "j", "while", "state", "i", "OCCUPIED", "i", "k", "key", "i", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "h1", "k2i", "newN", "if", "newState", "h1", "FREE", "h2", "k2i", "newN", "do", "h1", "h1", "h2", "newN", "while", "newState", "h1", "FREE", "newState", "h1", "OCCUPIED", "newKey", "h1", "k", "i", "p", "newP", "free", "newN", "count", "maxFill", "int", "newN", "f", "this", "key", "newKey", "this", "state", "newState" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 782,
  "endLine" : 792,
  "identifiers" : [ "LongOpenHashSet", "c", "try", "c", "LongOpenHashSet", "super", "clone", "catch", "CloneNotSupportedException", "cantHappen", "throw", "new", "InternalError", "c", "key", "key", "clone", "c", "state", "state", "clone", "return", "c" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 804,
  "endLine" : 813,
  "identifiers" : [ "int", "h", "i", "j", "count", "while", "j", "while", "state", "i", "OCCUPIED", "i", "h", "longHash2IntHash", "key", "i", "i", "return", "h" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 826,
  "endLine" : 858,
  "identifiers" : [ "s", "defaultReadObject", "growthFactor", "DEFAULT_GROWTH_FACTOR", "p", "Arrays", "binarySearch", "PRIMES", "int", "count", "f", "if", "p", "p", "p", "final", "int", "n", "PRIMES", "p", "maxFill", "int", "n", "f", "free", "n", "count", "final", "long", "key", "this", "key", "new", "long", "n", "final", "byte", "state", "this", "state", "new", "byte", "n", "int", "i", "k2i", "h1", "h2", "long", "k", "i", "count", "while", "i", "k", "s", "readLong", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "h1", "k2i", "n", "if", "state", "h1", "FREE", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "state", "h1", "OCCUPIED", "key", "h1", "k", "if", "ASSERTS", "checkTable" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\Shingle.java",
  "startLine" : 36,
  "endLine" : 47,
  "identifiers" : [ "HashSet", "String", "shingles", "new", "HashSet", "String", "for", "int", "i", "i", "line", "length", "CHAR_GRAM_LENGTH", "i", "String", "shingle", "line", "substring", "i", "i", "CHAR_GRAM_LENGTH", "shingles", "add", "shingle", "return", "shingles" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 56,
  "endLine" : 102,
  "identifiers" : [ "LongOpenHashSet", "shingles", "new", "LongOpenHashSet", "Math", "min", "s", "length", "int", "length", "s", "length", "for", "int", "i", "i", "length", "FIXED_CGRAM_LENGTH", "i", "long", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingles", "add", "shingle", "int", "v", "new", "int", "HASH_SIZE", "byte", "longAsBytes", "new", "byte", "for", "long", "shingle", "shingles", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "long", "longHash", "FPGenerator", "std64", "fp", "longAsBytes", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 104,
  "endLine" : 158,
  "identifiers" : [ "LongOpenHashSet", "shingles", "new", "LongOpenHashSet", "Math", "min", "length", "FIXED_BGRAM_LENGTH", "for", "int", "i", "offset", "i", "length", "FIXED_BGRAM_LENGTH", "i", "int", "pos", "i", "long", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingles", "add", "shingle", "int", "v", "new", "int", "HASH_SIZE", "byte", "longAsBytes", "new", "byte", "for", "long", "shingle", "shingles", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "long", "longHash", "FPGenerator", "std64", "fp", "longAsBytes", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 160,
  "endLine" : 183,
  "identifiers" : [ "int", "v", "new", "int", "HASH_SIZE", "for", "String", "shingle", "shingles", "byte", "bytes", "shingle", "getBytes", "long", "longHash", "FPGenerator", "std64", "fp", "bytes", "bytes", "length", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 197,
  "endLine" : 204,
  "identifiers" : [ "long", "res", "new", "long", "res", "hash", "xffff000000000000L", "res", "hash", "x0000ffff00000000L", "res", "hash", "x00000000ffff0000L", "res", "hash", "x000000000000ffffL", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\main\\java\\com\\fudan\\util\\CommentUtil.java",
  "startLine" : 17,
  "endLine" : 22,
  "identifiers" : [ "String", "content", "String", "join", "code", "content", "removeComments", "content", "COMMENT_SINGLE_LINE", "content", "removeComments", "content", "COMMENT_MULTI_LINE", "return", "Arrays", "stream", "content", "split", "collect", "Collectors", "toList" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\test\\java\\CommentUtilTests.java",
  "startLine" : 10,
  "endLine" : 24,
  "identifiers" : [ "List", "String", "code", "new", "ArrayList", "code", "add", "code", "add", "int", "a", "int", "b", "List", "String", "lines", "CommentUtil", "removeComments2", "code", "for", "String", "line", "lines", "System", "out", "println", "line" ]
}, {
  "path" : "d:\\GitRepo\\single-responsibility-code-finder\\src\\test\\java\\IDPairGeneratorTests.java",
  "startLine" : 14,
  "endLine" : 21,
  "identifiers" : [ "IDPairGenerator", "generator", "new", "IDPairGenerator", "List", "String", "pairs", "generator", "generate", "while", "pairs", "size", "System", "out", "println", "pairs", "pairs", "generator", "generate" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\bean\\Measure.java",
  "startLine" : 85,
  "endLine" : 100,
  "identifiers" : [ "int", "left", "int", "right", "measuresList", "size", "int", "mid", "while", "left", "right", "mid", "left", "right", "if", "key", "measuresList", "get", "mid", "getStartToken", "right", "mid", "else", "if", "key", "measuresList", "get", "mid", "getStartToken", "left", "mid", "else", "return", "mid", "return", "right" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\bean\\Measure.java",
  "startLine" : 103,
  "endLine" : 118,
  "identifiers" : [ "int", "left", "int", "right", "measuresList", "size", "int", "mid", "while", "left", "right", "mid", "left", "right", "if", "key", "measuresList", "get", "mid", "getEndToken", "right", "mid", "else", "if", "key", "measuresList", "get", "mid", "getEndToken", "left", "mid", "else", "return", "mid", "return", "left" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\common\\CTokens.java",
  "startLine" : 111,
  "endLine" : 205,
  "identifiers" : [ "tokenMap", "put", "AUTO", "tokenMap", "put", "BREAK", "tokenMap", "put", "CASE", "tokenMap", "put", "CHAR", "tokenMap", "put", "CONST", "tokenMap", "put", "CONTINUE", "tokenMap", "put", "DEFAULT", "tokenMap", "put", "DO", "tokenMap", "put", "DOUBLE", "tokenMap", "put", "ELSE", "tokenMap", "put", "ENUM", "tokenMap", "put", "EXTERN", "tokenMap", "put", "FLOAT", "tokenMap", "put", "FOR", "tokenMap", "put", "GOTO", "tokenMap", "put", "IF", "tokenMap", "put", "INLINE", "tokenMap", "put", "INT", "tokenMap", "put", "LONG", "tokenMap", "put", "REGISTER", "tokenMap", "put", "RESTRICT", "tokenMap", "put", "RETURN", "tokenMap", "put", "SHORT", "tokenMap", "put", "SIGNED", "tokenMap", "put", "SIZE_OF", "tokenMap", "put", "STATIC", "tokenMap", "put", "STRUCT", "tokenMap", "put", "SWITCH", "tokenMap", "put", "TYPE_OF", "tokenMap", "put", "UNION", "tokenMap", "put", "UNSIGNED", "tokenMap", "put", "VOID", "tokenMap", "put", "VOLATILE", "tokenMap", "put", "WHILE", "tokenMap", "put", "ALIGN_AS", "tokenMap", "put", "ALIGN_OF", "tokenMap", "put", "AUTOMIC", "tokenMap", "put", "BOOL", "tokenMap", "put", "COMPLEX", "tokenMap", "put", "GENERIC", "tokenMap", "put", "STATIC_ASSERT", "tokenMap", "put", "THREAD_LOCAL", "tokenMap", "put", "LEFT_PAREN", "tokenMap", "put", "RIGHT_PAREN", "tokenMap", "put", "LEFT_BRACKET", "tokenMap", "put", "RIGHT_BRACKET", "tokenMap", "put", "LEFT_BRACE", "tokenMap", "put", "RIGHT_BRACE", "tokenMap", "put", "LESS", "tokenMap", "put", "LESS_EQUAL", "tokenMap", "put", "GREATER", "tokenMap", "put", "GREATER_EQUAL", "tokenMap", "put", "LEFT_SHIFT", "tokenMap", "put", "RIGHT_SHIFT", "tokenMap", "put", "PLUS", "tokenMap", "put", "PLUS_PLUS", "tokenMap", "put", "MINUS", "tokenMap", "put", "MINUS_MINUS", "tokenMap", "put", "STAR", "tokenMap", "put", "DIV", "tokenMap", "put", "MOD", "tokenMap", "put", "AND", "tokenMap", "put", "OR", "tokenMap", "put", "AND_AND", "tokenMap", "put", "OR_OR", "tokenMap", "put", "CARET", "tokenMap", "put", "NOT", "tokenMap", "put", "TILDE", "tokenMap", "put", "QUESTION", "tokenMap", "put", "COLON", "tokenMap", "put", "SEMI", "tokenMap", "put", "COMMA", "tokenMap", "put", "ASSIGN", "tokenMap", "put", "STAR_ASSIGN", "tokenMap", "put", "DIV_ASSIGN", "tokenMap", "put", "MOD_ASSIGN", "tokenMap", "put", "PLUS_ASSIGN", "tokenMap", "put", "MINUS_ASSIGN", "tokenMap", "put", "LEFT_SHIFT_ASSIGN", "tokenMap", "put", "RIGHT_SHIFT_ASSIGN", "tokenMap", "put", "AND_ASSIGN", "tokenMap", "put", "XOR_ASSIGN", "tokenMap", "put", "OR_ASSIGN", "tokenMap", "put", "EQUAL", "tokenMap", "put", "NOT_EQUAL", "tokenMap", "put", "ARROW", "tokenMap", "put", "DOT", "tokenMap", "put", "ELLIPSIS", "tokenMap", "put", "IDENTIFIER", "tokenMap", "put", "DIGIT", "tokenMap", "put", "POUND" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\common\\JavaTokens.java",
  "startLine" : 70,
  "endLine" : 96,
  "identifiers" : [ "put", "BREAK", "put", "BYTE", "put", "CASE", "put", "CATCH", "put", "CHAR", "put", "STRING", "put", "CONTINUE", "put", "ELSE", "put", "FLOAT", "put", "DOUBLE", "put", "FOR", "put", "BYTE", "put", "LONG", "put", "SHORT", "put", "NEW", "put", "IF", "put", "RETURN", "put", "SWITCH", "put", "TRY", "put", "WHILE", "put", "SYSTEM", "put", "OUT", "put", "THIS" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\common\\JavaTokens.java",
  "startLine" : 109,
  "endLine" : 158,
  "identifiers" : [ "tokenMap", "put", "LEFT_SMALL_BRACKET", "tokenMap", "put", "LEFT_MID_BRACKET", "tokenMap", "put", "PLUS", "tokenMap", "put", "MIN", "tokenMap", "put", "PERCENT", "tokenMap", "put", "MUL", "tokenMap", "put", "DIV", "tokenMap", "put", "AND", "tokenMap", "put", "OR", "tokenMap", "put", "NOT", "tokenMap", "put", "DOT", "tokenMap", "put", "EQ", "tokenMap", "put", "LT", "tokenMap", "put", "LTE", "tokenMap", "put", "GT", "tokenMap", "put", "GTE", "tokenMap", "put", "UEQ", "tokenMap", "put", "RIGHT_SMALL_BRACKET", "tokenMap", "put", "RIGHT_MID_BRACKET", "tokenMap", "put", "BREAK", "tokenMap", "put", "BYTE", "tokenMap", "put", "CASE", "tokenMap", "put", "THIS", "tokenMap", "put", "CATCH", "tokenMap", "put", "CHAR", "tokenMap", "put", "STRING", "tokenMap", "put", "CONTINUE", "tokenMap", "put", "ELSE", "tokenMap", "put", "FLOAT", "tokenMap", "put", "DOUBLE", "tokenMap", "put", "FOR", "tokenMap", "put", "LONG", "tokenMap", "put", "SHORT", "tokenMap", "put", "NEW", "tokenMap", "put", "IF", "tokenMap", "put", "RETURN", "tokenMap", "put", "SWITCH", "tokenMap", "put", "WHILE", "tokenMap", "put", "LEFT_LARGE_BRACKET", "tokenMap", "put", "RIGHT_LARGE_BRACKET", "tokenMap", "put", "COMMA", "tokenMap", "put", "COLON", "tokenMap", "put", "TRY", "tokenMap", "put", "ASSIGNMENT", "tokenMap", "put", "CLASSFLAG", "tokenMap", "put", "SYSTEM", "tokenMap", "put", "OUT", "tokenMap", "put", "SEMICOLON" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\config\\Config.java",
  "startLine" : 22,
  "endLine" : 30,
  "identifiers" : [ "properties", "setProperty", "openStringHash", "properties", "setProperty", "minLine", "properties", "setProperty", "mlc", "properties", "setProperty", "snippetDetectionFile", "properties", "setProperty", "language", "properties", "setProperty", "outputPath", "properties", "store", "new", "FileWriter", "CONFIG_FILE" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\config\\Config.java",
  "startLine" : 32,
  "endLine" : 45,
  "identifiers" : [ "if", "new", "File", "CONFIG_FILE", "exists", "System", "out", "printf", "CONFIG_FILE", "save", "System", "exit", "properties", "load", "new", "FileReader", "CONFIG_FILE", "openStringHash", "Integer", "parseInt", "properties", "getProperty", "minLine", "Integer", "parseInt", "properties", "getProperty", "mlc", "Integer", "parseInt", "properties", "getProperty", "snippetDetectionFile", "properties", "getProperty", "language", "properties", "getProperty", "outputPath", "properties", "getProperty" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\lexer\\CLexer.java",
  "startLine" : 20,
  "endLine" : 271,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "peek", "t", "peek", "r", "else", "if", "peek", "n", "line", "line", "indexOfChar", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "line", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "line", "else", "if", "peek", "n", "line", "line", "else", "break", "wordIndexOfChar", "indexOfChar", "switch", "peek", "case", "getChar", "if", "peek", "n", "line", "indexOfChar", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "CTokens", "LEFT_BRACKET", "line", "case", "getChar", "return", "new", "Token", "CTokens", "RIGHT_BRACKET", "line", "case", "getChar", "return", "new", "Token", "CTokens", "LEFT_PAREN", "line", "case", "getChar", "return", "new", "Token", "CTokens", "RIGHT_PAREN", "line", "case", "getChar", "return", "new", "Token", "CTokens", "DOT", "line", "case", "getChar", "return", "new", "Token", "CTokens", "COMMA", "line", "case", "getChar", "return", "new", "Token", "CTokens", "COLON", "line", "case", "getChar", "return", "new", "Token", "CTokens", "SEMI", "line", "case", "getChar", "return", "new", "Token", "CTokens", "LEFT_BRACE", "line", "case", "getChar", "return", "new", "Token", "CTokens", "RIGHT_BRACE", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "PLUS_PLUS", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "PLUS_ASSIGN", "line", "else", "return", "new", "Token", "CTokens", "PLUS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "MINUS_MINUS", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "MINUS_ASSIGN", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "ARROW", "line", "else", "return", "new", "Token", "CTokens", "MINUS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "STAR_ASSIGN", "line", "else", "return", "new", "Token", "CTokens", "STAR", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "DIV_ASSIGN", "line", "else", "return", "new", "Token", "CTokens", "DIV", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "MOD_ASSIGN", "line", "else", "return", "new", "Token", "CTokens", "MOD", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "EQUAL", "line", "else", "return", "new", "Token", "CTokens", "ASSIGN", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "GREATER_EQUAL", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "RIGHT_SHIFT", "line", "else", "return", "new", "Token", "CTokens", "GREATER", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "LESS_EQUAL", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "LEFT_SHIFT", "line", "else", "return", "new", "Token", "CTokens", "LESS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "NOT_EQUAL", "line", "else", "return", "new", "Token", "CTokens", "NOT", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "AND_ASSIGN", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "AND_AND", "line", "else", "return", "new", "Token", "CTokens", "AND", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "OR_ASSIGN", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CTokens", "OR_OR", "line", "else", "return", "new", "Token", "CTokens", "OR", "line", "case", "getChar", "return", "new", "Token", "CTokens", "CARET", "line", "case", "getChar", "return", "new", "Token", "CTokens", "TILDE", "line", "if", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "builder", "toString", "line", "return", "new", "Token", "CTokens", "IDENTIFIER", "line", "if", "Character", "isDigit", "peek", "int", "value", "do", "value", "value", "Character", "digit", "peek", "getChar", "while", "Character", "isDigit", "peek", "return", "new", "Token", "CTokens", "DIGIT", "line", "if", "Character", "isLetter", "peek", "StringBuilder", "buffer", "new", "StringBuilder", "do", "buffer", "append", "peek", "getChar", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "String", "s", "buffer", "toString", "if", "s", "equals", "reader", "readLine", "getChar", "indexOfChar", "line", "line", "return", "new", "Token", "byte", "line", "else", "Byte", "token", "CTokens", "tokenMap", "get", "s", "if", "token", "null", "return", "new", "Token", "token", "line", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "s", "line", "return", "new", "Token", "CTokens", "IDENTIFIER", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\lexer\\CommonLexer.java",
  "startLine" : 15,
  "endLine" : 69,
  "identifiers" : [ "if", "peek", "n", "getChar", "line", "indexOfChar", "return", "new", "Token", "byte", "line", "if", "Character", "isSpaceChar", "peek", "getChar", "return", "new", "Token", "byte", "line", "if", "peek", "getReaderIsEnd", "getChar", "return", "new", "Token", "str2hash", "sb", "toString", "line", "String", "token", "if", "Character", "isDigit", "peek", "while", "Character", "isDigit", "peek", "token", "peek", "getChar", "if", "getReaderIsEnd", "break", "return", "new", "Token", "str2hash", "token", "line", "if", "Character", "isLetter", "peek", "peek", "_", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "token", "peek", "getChar", "if", "getReaderIsEnd", "break", "return", "new", "Token", "str2hash", "token", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\lexer\\CommonWord.java",
  "startLine" : 15,
  "endLine" : 52,
  "identifiers" : [ "try", "tokenHashList", "new", "ArrayList", "Measure", "measure", "new", "Measure", "measure", "setFileId", "fileID", "measure", "setStartLine", "measure", "setStartToken", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "new", "CommonLexer", "inputFileName", "Token", "token", "null", "tokenHashList", "add", "new", "Token", "CommonTokens", "BOUND_LEFT", "lexer", "line", "while", "lexer", "getReaderIsEnd", "token", "lexer", "scan", "if", "token", "getWord", "token", "getWord", "tokenHashList", "add", "token", "tokenHashList", "add", "new", "Token", "CommonTokens", "BOUND_RIGHT", "lexer", "line", "if", "tokenHashList", "size", "mlc", "tokenHashList", "clear", "return", "lineTokenNumList", "measure", "setEndToken", "tokenID", "addAndGet", "tokenHashList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "measureID", "incrementAndGet", "measureList", "add", "measure", "line", "addAndGet", "lexer", "line", "return", "lineTokenNumList", "catch", "Exception", "e", "e", "printStackTrace", "finally", "lexer", "closeReader", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\lexer\\CPPLexer.java",
  "startLine" : 17,
  "endLine" : 263,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "peek", "t", "peek", "r", "else", "if", "peek", "n", "line", "line", "indexOfChar", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "line", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "line", "else", "if", "peek", "n", "line", "line", "else", "break", "wordIndexOfChar", "indexOfChar", "switch", "peek", "case", "getChar", "if", "peek", "n", "line", "indexOfChar", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "LEFT_BRACKET", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "RIGHT_BRACKET", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "LEFT_PAREN", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "RIGHT_PAREN", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "DOT", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "COMMA", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "COLON", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "SEMI", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "LEFT_BRACE", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "RIGHT_BRACE", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "PLUS_PLUS", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "PLUS_ASSIGN", "line", "else", "return", "new", "Token", "CPPTokens", "PLUS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "MINUS_MINUS", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "MINUS_ASSIGN", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "ARROW", "line", "else", "return", "new", "Token", "CPPTokens", "MINUS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "STAR_ASSIGN", "line", "else", "return", "new", "Token", "CPPTokens", "STAR", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "DIV_ASSIGN", "line", "else", "return", "new", "Token", "CPPTokens", "DIV", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "MOD_ASSIGN", "line", "else", "return", "new", "Token", "CPPTokens", "MOD", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "EQUAL", "line", "else", "return", "new", "Token", "CPPTokens", "ASSIGN", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "GREATER_EQUAL", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "RIGHT_SHIFT", "line", "else", "return", "new", "Token", "CPPTokens", "GREATER", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "LESS_EQUAL", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "LEFT_SHIFT", "line", "else", "return", "new", "Token", "CPPTokens", "LESS", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "NOT_EQUAL", "line", "else", "return", "new", "Token", "CPPTokens", "NOT", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "AND_ASSIGN", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "AND_AND", "line", "else", "return", "new", "Token", "CPPTokens", "AND", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "OR_ASSIGN", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "CPPTokens", "OR_OR", "line", "else", "return", "new", "Token", "CPPTokens", "OR", "line", "if", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "builder", "toString", "line", "return", "new", "Token", "CPPTokens", "IDENTIFIER", "line", "if", "Character", "isDigit", "peek", "int", "value", "do", "value", "value", "Character", "digit", "peek", "getChar", "while", "Character", "isDigit", "peek", "return", "new", "Token", "CPPTokens", "DIGIT", "line", "if", "Character", "isLetter", "peek", "StringBuilder", "buffer", "new", "StringBuilder", "do", "buffer", "append", "peek", "getChar", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "String", "s", "buffer", "toString", "if", "s", "equals", "reader", "readLine", "getChar", "indexOfChar", "line", "line", "return", "new", "Token", "byte", "line", "else", "Byte", "token", "CPPTokens", "tokenMap", "get", "s", "if", "token", "null", "return", "new", "Token", "token", "line", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "s", "line", "return", "new", "Token", "CPPTokens", "IDENTIFIER", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\lexer\\CPPWord.java",
  "startLine" : 24,
  "endLine" : 102,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "CPPLexer", "inputFileName", "Token", "token", "null", "int", "namespaceCnt", "int", "classCnt", "int", "methodScope", "namespaceCnt", "classCnt", "Stack", "Integer", "braceTypeStack", "new", "Stack", "while", "lexer", "getReaderIsEnd", "do", "token", "lexer", "scan", "if", "token", "getWord", "token", "getWord", "tmpList", "add", "token", "if", "token", "getWord", "CPPTokens", "LEFT_BRACE", "stack", "push", "lexer", "line", "List", "Byte", "suffixList", "tmpList", "stream", "map", "Token", "getWord", "collect", "Collectors", "toList", "if", "tmpList", "size", "suffixList", "suffixList", "subList", "tmpList", "size", "tmpList", "size", "if", "suffixList", "contains", "CPPTokens", "NAMESPACE", "braceTypeStack", "push", "BRACE_TYPE_NAMESPACE", "namespaceCnt", "tmpList", "clear", "else", "if", "suffixList", "contains", "CPPTokens", "CLASS", "suffixList", "contains", "CPPTokens", "EXTERN", "braceTypeStack", "push", "BRACE_TYPE_CLASS", "classCnt", "tmpList", "clear", "else", "braceTypeStack", "push", "BRACE_TYPE_METHOD", "methodScope", "namespaceCnt", "classCnt", "if", "stack", "size", "methodScope", "tmpList", "clear", "tmpList", "add", "new", "Token", "CPPTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "int", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "else", "if", "token", "getWord", "CPPTokens", "RIGHT_BRACE", "if", "stack", "size", "if", "stack", "size", "methodScope", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "add", "new", "Token", "CPPTokens", "BOUND_RIGHT", "lexer", "line", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "int", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "tmpList", "clear", "measureID", "incrementAndGet", "measureList", "add", "measure", "if", "braceTypeStack", "peek", "BRACE_TYPE_NAMESPACE", "namespaceCnt", "else", "if", "braceTypeStack", "peek", "BRACE_TYPE_CLASS", "classCnt", "stack", "pop", "braceTypeStack", "pop", "while", "token", "getWord", "lexer", "getReaderIsEnd", "line", "addAndGet", "lexer", "line", "return", "lineTokenNumList", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList", "finally", "lexer", "closeReader" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\lexer\\CWord.java",
  "startLine" : 20,
  "endLine" : 91,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "CLexer", "inputFileName", "Token", "token", "new", "Token", "int", "externCnt", "int", "methodScope", "externCnt", "Stack", "Integer", "braceTypeStack", "new", "Stack", "while", "lexer", "getReaderIsEnd", "do", "token", "lexer", "scan", "if", "token", "getWord", "token", "getWord", "tmpList", "add", "token", "if", "token", "getWord", "CTokens", "LEFT_BRACE", "stack", "push", "lexer", "line", "List", "Byte", "suffixList", "tmpList", "stream", "map", "Token", "getWord", "collect", "Collectors", "toList", "if", "tmpList", "size", "suffixList", "suffixList", "subList", "tmpList", "size", "tmpList", "size", "if", "suffixList", "contains", "CTokens", "EXTERN", "braceTypeStack", "push", "BRACE_TYPE_EXTERN", "externCnt", "tmpList", "clear", "else", "braceTypeStack", "push", "BRACE_TYPE_METHOD", "methodScope", "externCnt", "if", "stack", "size", "methodScope", "tmpList", "clear", "tmpList", "add", "new", "Token", "CTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "int", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "else", "if", "token", "getWord", "CTokens", "RIGHT_BRACE", "if", "stack", "size", "if", "stack", "size", "methodScope", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "add", "new", "Token", "CTokens", "BOUND_RIGHT", "lexer", "line", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "int", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "tmpList", "clear", "measureID", "incrementAndGet", "measureList", "add", "measure", "if", "braceTypeStack", "peek", "BRACE_TYPE_EXTERN", "externCnt", "stack", "pop", "braceTypeStack", "pop", "while", "token", "getWord", "lexer", "getReaderIsEnd", "line", "addAndGet", "lexer", "line", "return", "lineTokenNumList", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList", "finally", "lexer", "closeReader" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\lexer\\JavaLexer.java",
  "startLine" : 18,
  "endLine" : 249,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "peek", "t", "continue", "else", "if", "peek", "n", "lastPeek", "line", "line", "indexOfChar", "continue", "else", "if", "lastPeek", "r", "peek", "r", "line", "line", "indexOfChar", "continue", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "if", "lastPeek", "r", "peek", "r", "line", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "line", "else", "if", "peek", "n", "line", "line", "else", "break", "wordIndexOfChar", "indexOfChar", "switch", "peek", "case", "getChar", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "LEFT_MID_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "RIGHT_MID_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "LEFT_SMALL_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "RIGHT_SMALL_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "DOT", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "COMMA", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "COLON", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "SEMICOLON", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "LEFT_LARGE_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "RIGHT_LARGE_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "PLUS", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "MIN", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "MUL", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "DIV", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "PERCENT", "line", "case", "if", "getChar", "return", "new", "Token", "JavaTokens", "EQ", "line", "else", "return", "new", "Token", "JavaTokens", "ASSIGNMENT", "line", "case", "if", "getChar", "return", "new", "Token", "JavaTokens", "GTE", "line", "else", "return", "new", "Token", "JavaTokens", "GT", "line", "case", "if", "getChar", "return", "new", "Token", "JavaTokens", "LT", "line", "else", "return", "new", "Token", "JavaTokens", "LTE", "line", "case", "if", "getChar", "return", "new", "Token", "JavaTokens", "UEQ", "line", "else", "return", "new", "Token", "JavaTokens", "NOT", "line", "case", "if", "getChar", "return", "new", "Token", "JavaTokens", "AND", "line", "else", "return", "new", "Token", "JavaTokens", "AND", "line", "case", "if", "getChar", "return", "new", "Token", "JavaTokens", "OR", "line", "else", "return", "new", "Token", "JavaTokens", "OR", "line", "if", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "sb", "toString", "line", "return", "new", "Token", "JavaTokens", "ID", "line", "if", "peek", "StringBuffer", "sb", "new", "StringBuffer", "sb", "append", "peek", "do", "if", "peek", "getChar", "sb", "append", "peek", "getChar", "else", "getChar", "sb", "append", "peek", "while", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "sb", "toString", "line", "return", "new", "Token", "JavaTokens", "ID", "line", "if", "Character", "isDigit", "peek", "int", "value", "do", "value", "value", "Character", "digit", "peek", "getChar", "while", "Character", "isDigit", "peek", "return", "new", "Token", "JavaTokens", "DIGIT", "line", "if", "Character", "isLetter", "peek", "StringBuffer", "sb", "new", "StringBuffer", "do", "sb", "append", "peek", "getChar", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "peek", "String", "s", "sb", "toString", "if", "s", "equals", "s", "equals", "reader", "readLine", "indexOfChar", "line", "line", "return", "new", "Token", "byte", "line", "else", "if", "s", "equals", "JavaTokens", "classKeyword", "return", "new", "Token", "JavaTokens", "CLASSFLAG", "line", "else", "if", "s", "endsWith", "JavaTokens", "exceptionKeyword", "return", "new", "Token", "byte", "line", "if", "JavaTokens", "neglectfulKeyword", "contains", "s", "return", "new", "Token", "byte", "line", "Byte", "isKeyWord", "JavaTokens", "map", "get", "s", "if", "isKeyWord", "null", "return", "new", "Token", "isKeyWord", "line", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "s", "line", "return", "new", "Token", "JavaTokens", "ID", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\lexer\\JavaWord.java",
  "startLine" : 16,
  "endLine" : 79,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "JavaLexer", "inputFileName", "Token", "lastToken", "null", "Token", "token", "null", "int", "innerClass", "while", "lexer", "getReaderIsEnd", "do", "lastToken", "token", "token", "lexer", "scan", "if", "token", "getWord", "token", "getWord", "tmpList", "add", "token", "if", "stack", "size", "token", "getWord", "JavaTokens", "CLASSFLAG", "lastToken", "getWord", "JavaTokens", "DOT", "innerClass", "else", "if", "token", "getWord", "JavaTokens", "LEFT_LARGE_BRACKET", "stack", "push", "lexer", "line", "if", "stack", "size", "innerClass", "tmpList", "new", "ArrayList", "tmpList", "add", "new", "Token", "JavaTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "int", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "measure", "setFileId", "fileID", "else", "tmpList", "remove", "tmpList", "size", "else", "if", "token", "getWord", "JavaTokens", "RIGHT_LARGE_BRACKET", "if", "stack", "size", "if", "stack", "size", "innerClass", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "add", "new", "Token", "JavaTokens", "BOUND_RIGHT", "lexer", "line", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "int", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "tmpList", "clear", "measureID", "incrementAndGet", "measureList", "add", "measure", "else", "tmpList", "remove", "tmpList", "size", "if", "stack", "size", "innerClass", "innerClass", "innerClass", "stack", "pop", "while", "token", "getWord", "lexer", "getReaderIsEnd", "line", "addAndGet", "lexer", "line", "return", "lineTokenNumList", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList", "finally", "lexer", "closeReader" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\lexer\\Lexer.java",
  "startLine" : 35,
  "endLine" : 50,
  "identifiers" : [ "FileWriter", "writer", "new", "FileWriter", "outputFileName", "writer", "write", "writer", "write", "if", "list", "size", "for", "SimToken", "x", "list", "writer", "write", "x", "toString", "writer", "flush", "writer", "close" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\lexer\\Lexer.java",
  "startLine" : 93,
  "endLine" : 106,
  "identifiers" : [ "str", "str", "toLowerCase", "if", "str", "length", "int", "h", "str", "toCharArray", "str", "length", "h", "return", "byte", "h", "x7f", "else", "int", "h1", "str", "toCharArray", "str", "length", "int", "h2", "str", "toCharArray", "str", "length", "h1", "int", "h", "h1", "h2", "return", "byte", "h", "x7f" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\lexer\\Word.java",
  "startLine" : 103,
  "endLine" : 109,
  "identifiers" : [ "byte", "temp", "new", "byte", "lineTokenNumList", "size", "for", "int", "i", "i", "lineTokenNumList", "size", "i", "temp", "i", "lineTokenNumList", "get", "i", "tokenHash", "return", "new", "String", "temp" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\lexer\\Word.java",
  "startLine" : 111,
  "endLine" : 117,
  "identifiers" : [ "byte", "temp", "new", "byte", "list", "size", "for", "int", "i", "i", "list", "size", "i", "temp", "i", "list", "get", "i", "return", "temp" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\lexer\\Word.java",
  "startLine" : 119,
  "endLine" : 125,
  "identifiers" : [ "byte", "temp", "new", "byte", "lineTokenNumList", "size", "for", "int", "i", "i", "lineTokenNumList", "size", "i", "temp", "i", "lineTokenNumList", "get", "i", "tokenHash", "return", "temp" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\Main.java",
  "startLine" : 23,
  "endLine" : 31,
  "identifiers" : [ "System", "out", "println", "Config", "load", "System", "out", "println", "initWord", "System", "out", "println", "process", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\Main.java",
  "startLine" : 33,
  "endLine" : 45,
  "identifiers" : [ "if", "Config", "language", "equals", "DetectLanguage", "JAVA", "word", "new", "JavaWord", "else", "if", "Config", "language", "equals", "DetectLanguage", "C", "word", "new", "CWord", "else", "if", "Config", "language", "equals", "DetectLanguage", "CPP", "word", "new", "CPPWord", "else", "if", "Config", "language", "equals", "DetectLanguage", "COMMON", "word", "new", "CommonWord", "word", "setMinLine", "Config", "minLine", "word", "setMlc", "Config", "mlc" ]
}, {
  "path" : "d:\\GitRepo\\SnippetViewer\\src\\main\\java\\com\\fudan\\codeclone\\Main.java",
  "startLine" : 57,
  "endLine" : 103,
  "identifiers" : [ "LineReader", "reader", "new", "LineReader", "Config", "snippetDetectionFile", "LineWriter", "writer", "new", "LineWriter", "Config", "outputPath", "String", "line", "null", "int", "idx", "while", "line", "reader", "readLine", "null", "if", "line", "isEmpty", "continue", "try", "if", "idx", "System", "out", "printf", "idx", "String", "infos", "line", "split", "String", "path", "infos", "int", "startLine", "Integer", "parseInt", "infos", "int", "endLine", "Integer", "parseInt", "infos", "long", "startToken", "Long", "parseLong", "infos", "long", "endToken", "Long", "parseLong", "infos", "List", "Token", "tokenList", "null", "List", "Measure", "measureList", "null", "if", "fileTokenMap", "containsKey", "path", "tokenList", "fileTokenMap", "get", "path", "measureList", "fileMeasureMap", "get", "path", "else", "tokenList", "tokenize", "path", "fileTokenMap", "put", "path", "tokenList", "fileMeasureMap", "put", "path", "new", "ArrayList", "word", "measureList", "measureList", "fileMeasureMap", "get", "path", "word", "reset", "Measure", "measure", "measureList", "stream", "filter", "s", "s", "getStartLine", "startLine", "s", "getEndLine", "endLine", "findFirst", "get", "int", "tokenIndex", "int", "measure", "getStartToken", "Integer", "MAX_VALUE", "int", "snippetStartIndex", "int", "tokenIndex", "startToken", "int", "snippetEndIndex", "int", "tokenIndex", "endToken", "int", "snippetStartLine", "tokenList", "get", "snippetStartIndex", "getLine", "int", "snippetEndLine", "tokenList", "get", "snippetEndIndex", "getLine", "writer", "write", "String", "format", "line", "snippetStartLine", "snippetEndLine", "catch", "Exception", "e", "e", "printStackTrace", "reader", "close", "writer", "close" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitExtractor\\src\\main\\java\\com\\fudan\\config\\Config.java",
  "startLine" : 37,
  "endLine" : 43,
  "identifiers" : [ "properties", "setProperty", "REPO_FOLDER", "properties", "setProperty", "FILE_EXTENSIONS", "properties", "setProperty", "LAST_COMMIT_FILE", "properties", "setProperty", "OUTPUT_SNAPSHOTS", "toString", "properties", "store", "new", "FileWriter", "CONFIG_FILE" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitExtractor\\src\\main\\java\\com\\fudan\\config\\Config.java",
  "startLine" : 45,
  "endLine" : 69,
  "identifiers" : [ "if", "new", "File", "CONFIG_FILE", "exists", "save", "System", "out", "printf", "CONFIG_FILE", "System", "exit", "properties", "load", "new", "FileReader", "CONFIG_FILE", "REPO_FOLDER", "properties", "getProperty", "LAST_COMMIT_FILE", "properties", "getProperty", "OUTPUT_SNAPSHOTS", "Integer", "parseInt", "properties", "getProperty", "OUTPUT_FOLDER", "DateUtil", "format", "new", "Date", "COMMIT_FILE", "OUTPUT_FOLDER", "File", "separator", "UPDATE_FILE", "OUTPUT_FOLDER", "File", "separator", "NEW_FILE", "OUTPUT_FOLDER", "File", "separator", "DELETED_FILE", "OUTPUT_FOLDER", "File", "separator", "DELETED_REPO", "OUTPUT_FOLDER", "File", "separator", "FILE_EXTENSIONS", "properties", "getProperty", "FILE_EXTENSIONS_MAP", "new", "HashMap", "String", "extensions", "FILE_EXTENSIONS", "split", "for", "String", "extension", "extensions", "FILE_EXTENSIONS_MAP", "put", "extension" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitExtractor\\src\\main\\java\\com\\fudan\\Main.java",
  "startLine" : 17,
  "endLine" : 43,
  "identifiers" : [ "checkArgs", "args", "long", "timeStart", "System", "currentTimeMillis", "try", "System", "out", "println", "Config", "load", "catch", "IOException", "e", "e", "printStackTrace", "System", "exit", "List", "String", "repos", "getRepos", "if", "repos", "size", "System", "out", "println", "System", "exit", "if", "args", "equals", "Constant", "COMMAND_ARGS_COMMIT", "CommitProcessor", "commitProcessor", "new", "CommitProcessor", "commitProcessor", "process", "repos", "else", "FileProcessor", "fileProcessor", "new", "FileProcessor", "fileProcessor", "process", "repos", "long", "timeEnd", "System", "currentTimeMillis", "System", "out", "printf", "DateUtil", "convert", "timeEnd", "timeStart" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitExtractor\\src\\main\\java\\com\\fudan\\Main.java",
  "startLine" : 50,
  "endLine" : 59,
  "identifiers" : [ "if", "args", "length", "System", "out", "println", "Constant", "USAGE_INFO", "System", "exit", "if", "args", "equals", "Constant", "COMMAND_ARGS_COMMIT", "args", "equals", "Constant", "COMMAND_ARGS_FILE", "System", "out", "println", "Constant", "USAGE_INFO", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitExtractor\\src\\main\\java\\com\\fudan\\Main.java",
  "startLine" : 66,
  "endLine" : 80,
  "identifiers" : [ "List", "String", "repos", "new", "ArrayList", "File", "repoFolder", "new", "File", "Config", "REPO_FOLDER", "if", "repoFolder", "exists", "repoFolder", "isDirectory", "File", "repoFiles", "repoFolder", "listFiles", "if", "repoFiles", "null", "repoFiles", "length", "for", "File", "repo", "repoFiles", "if", "repo", "isDirectory", "repos", "add", "repo", "getAbsolutePath", "return", "repos" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitExtractor\\src\\main\\java\\com\\fudan\\processor\\CommitProcessor.java",
  "startLine" : 22,
  "endLine" : 55,
  "identifiers" : [ "try", "File", "outputFolder", "new", "File", "Config", "OUTPUT_FOLDER", "if", "outputFolder", "exists", "outputFolder", "mkdirs", "catch", "Exception", "e", "e", "printStackTrace", "try", "System", "out", "println", "GitManager", "init", "repos", "catch", "Exception", "e", "e", "printStackTrace", "System", "exit", "try", "System", "out", "println", "Map", "String", "String", "commits", "GitManager", "getLatestCommit", "String", "json", "JSONObject", "toJSONString", "commits", "FileUtil", "write", "Config", "COMMIT_FILE", "json", "false", "catch", "Exception", "e", "e", "printStackTrace", "System", "out", "println", "GitManager", "release", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitExtractor\\src\\main\\java\\com\\fudan\\processor\\FileProcessor.java",
  "startLine" : 22,
  "endLine" : 198,
  "identifiers" : [ "try", "File", "outputFolder", "new", "File", "Config", "OUTPUT_FOLDER", "if", "outputFolder", "exists", "outputFolder", "mkdirs", "catch", "Exception", "e", "e", "printStackTrace", "try", "System", "out", "println", "GitManager", "init", "repos", "catch", "Exception", "e", "e", "printStackTrace", "System", "exit", "try", "System", "out", "println", "String", "json", "new", "String", "Files", "readAllBytes", "Paths", "get", "Config", "LAST_COMMIT_FILE", "Map", "lastCommits", "JSONObject", "parseObject", "json", "Map", "class", "System", "out", "println", "Map", "String", "String", "currentCommits", "GitManager", "getLatestCommit", "List", "String", "newFiles", "new", "ArrayList", "Map", "String", "String", "updateFiles", "new", "HashMap", "List", "String", "deletedFiles", "new", "ArrayList", "System", "out", "println", "int", "cnt", "int", "size", "currentCommits", "size", "for", "String", "repo", "currentCommits", "keySet", "cnt", "System", "out", "printf", "cnt", "size", "if", "lastCommits", "containsKey", "repo", "List", "String", "files", "FileUtil", "listAllFiles", "repo", "Config", "FILE_EXTENSIONS_MAP", "for", "String", "file", "files", "String", "realPath", "file", "substring", "repo", "length", "newFiles", "add", "String", "format", "repo", "realPath", "else", "String", "lastCommit", "String", "lastCommits", "get", "repo", "String", "currentCommit", "currentCommits", "get", "repo", "if", "lastCommit", "equals", "currentCommit", "continue", "Map", "String", "String", "files", "GitManager", "getUpdateFiles", "repo", "lastCommit", "currentCommit", "for", "String", "newPath", "files", "keySet", "String", "oldPath", "files", "get", "newPath", "if", "newPath", "contains", "oldPath", "contains", "continue", "String", "extension", "null", "if", "newPath", "contains", "extension", "newPath", "substring", "newPath", "lastIndexOf", "else", "extension", "oldPath", "substring", "oldPath", "lastIndexOf", "if", "Config", "FILE_EXTENSIONS_MAP", "containsKey", "extension", "String", "absoluteNewPath", "repo", "newPath", "String", "absoluteOldPath", "repo", "files", "get", "newPath", "if", "newPath", "equals", "Constant", "NULL_FILE", "files", "get", "newPath", "equals", "Constant", "NULL_FILE", "deletedFiles", "add", "absoluteOldPath", "else", "if", "files", "get", "newPath", "equals", "Constant", "NULL_FILE", "newPath", "equals", "Constant", "NULL_FILE", "newFiles", "add", "absoluteNewPath", "else", "updateFiles", "put", "absoluteNewPath", "absoluteOldPath", "System", "out", "println", "Set", "String", "oldRepoSet", "new", "HashSet", "lastCommits", "keySet", "Set", "String", "newRepoSet", "currentCommits", "keySet", "oldRepoSet", "removeAll", "newRepoSet", "try", "System", "out", "println", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "Config", "UPDATE_FILE", "for", "String", "path", "updateFiles", "keySet", "writer", "write", "path", "writer", "newLine", "writer", "flush", "writer", "close", "System", "out", "println", "writer", "new", "BufferedWriter", "new", "FileWriter", "Config", "NEW_FILE", "for", "String", "path", "newFiles", "writer", "write", "path", "writer", "newLine", "writer", "flush", "writer", "close", "System", "out", "println", "writer", "new", "BufferedWriter", "new", "FileWriter", "Config", "DELETED_FILE", "for", "String", "path", "deletedFiles", "writer", "write", "path", "writer", "newLine", "writer", "flush", "writer", "close", "System", "out", "println", "writer", "new", "BufferedWriter", "new", "FileWriter", "Config", "DELETED_REPO", "for", "String", "path", "oldRepoSet", "writer", "write", "path", "writer", "newLine", "writer", "flush", "writer", "close", "if", "Config", "OUTPUT_SNAPSHOTS", "System", "out", "println", "newFiles", "addAll", "updateFiles", "keySet", "for", "String", "path", "newFiles", "String", "tmp", "path", "split", "String", "src", "tmp", "File", "separator", "tmp", "String", "realPath", "tmp", "String", "repoName", "tmp", "substring", "tmp", "lastIndexOf", "File", "separator", "String", "dst", "String", "format", "Config", "OUTPUT_FOLDER", "repoName", "realPath", "File", "dstFile", "new", "File", "dst", "dstFile", "getParentFile", "mkdirs", "OutputStream", "outputStream", "new", "FileOutputStream", "dstFile", "Files", "copy", "Paths", "get", "src", "outputStream", "outputStream", "close", "json", "JSONObject", "toJSONString", "currentCommits", "FileUtil", "write", "Config", "COMMIT_FILE", "json", "false", "catch", "IOException", "e", "e", "printStackTrace", "catch", "Exception", "e", "e", "printStackTrace", "System", "out", "println", "GitManager", "release", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\DateUtil.java",
  "startLine" : 31,
  "endLine" : 37,
  "identifiers" : [ "int", "seconds", "int", "timeMillis", "e3", "int", "hour", "seconds", "int", "minute", "seconds", "hour", "int", "second", "seconds", "hour", "minute", "return", "String", "format", "hour", "minute", "second" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 20,
  "endLine" : 42,
  "identifiers" : [ "List", "String", "files", "new", "ArrayList", "File", "root", "new", "File", "path", "File", "subs", "root", "listFiles", "if", "subs", "null", "subs", "length", "return", "files", "for", "File", "f", "subs", "if", "f", "isFile", "if", "f", "getName", "contains", "continue", "String", "extension", "f", "getName", "substring", "f", "getName", "lastIndexOf", "if", "fileExtensionsMap", "containsKey", "extension", "files", "add", "f", "getAbsolutePath", "else", "List", "String", "tmp", "listAllFiles", "f", "getAbsolutePath", "fileExtensionsMap", "files", "addAll", "tmp", "return", "files" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 51,
  "endLine" : 60,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "List", "String", "lines", "new", "ArrayList", "String", "line", "null", "while", "line", "reader", "readLine", "null", "lines", "add", "line", "reader", "close", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\GitManager.java",
  "startLine" : 36,
  "endLine" : 47,
  "identifiers" : [ "for", "String", "repo", "repos", "try", "Git", "git", "Git", "open", "new", "File", "repo", "repoMap", "put", "repo", "git", "repoWalkMap", "put", "repo", "new", "RevWalk", "git", "getRepository", "repoTreeMap", "put", "repo", "new", "TreeWalk", "git", "getRepository", "git", "getRepository", "newObjectReader", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\GitManager.java",
  "startLine" : 52,
  "endLine" : 61,
  "identifiers" : [ "if", "repoMap", "null", "return", "for", "String", "repo", "repoMap", "keySet", "repoMap", "get", "repo", "close", "repoWalkMap", "get", "repo", "close", "repoTreeMap", "get", "repo", "close" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\GitManager.java",
  "startLine" : 68,
  "endLine" : 82,
  "identifiers" : [ "Map", "String", "String", "latestCommits", "new", "HashMap", "for", "String", "repo", "repoMap", "keySet", "String", "commit", "try", "Git", "git", "repoMap", "get", "repo", "Iterator", "RevCommit", "commits", "git", "log", "call", "iterator", "commit", "commits", "next", "name", "catch", "Exception", "e", "e", "printStackTrace", "latestCommits", "put", "repo", "commit", "return", "latestCommits" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\GitManager.java",
  "startLine" : 92,
  "endLine" : 108,
  "identifiers" : [ "Map", "String", "String", "updateFiles", "new", "HashMap", "try", "Git", "git", "repoMap", "get", "repo", "RevCommit", "early", "searchCommit", "repo", "earlyCommit", "RevCommit", "current", "searchCommit", "repo", "currentCommit", "AbstractTreeIterator", "earlyTree", "getAbstractTreeIterator", "early", "git", "getRepository", "AbstractTreeIterator", "currentTree", "getAbstractTreeIterator", "current", "git", "getRepository", "List", "DiffEntry", "diffEntries", "git", "diff", "setOldTree", "earlyTree", "setNewTree", "currentTree", "call", "for", "DiffEntry", "diffEntry", "diffEntries", "updateFiles", "put", "diffEntry", "getNewPath", "diffEntry", "getOldPath", "catch", "Exception", "e", "e", "printStackTrace", "return", "updateFiles" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\GitManager.java",
  "startLine" : 117,
  "endLine" : 133,
  "identifiers" : [ "Git", "git", "repoMap", "get", "repo", "RevCommit", "target", "null", "RevWalk", "revWalk", "null", "try", "Repository", "repository", "git", "getRepository", "revWalk", "new", "RevWalk", "repository", "target", "revWalk", "parseCommit", "ObjectId", "fromString", "commit", "catch", "Exception", "e", "e", "printStackTrace", "finally", "if", "revWalk", "null", "revWalk", "close", "return", "target" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\GitManager.java",
  "startLine" : 143,
  "endLine" : 156,
  "identifiers" : [ "RevWalk", "revWalk", "new", "RevWalk", "repository", "CanonicalTreeParser", "treeParser", "null", "try", "RevTree", "revTree", "revWalk", "parseTree", "commit", "getTree", "getId", "treeParser", "new", "CanonicalTreeParser", "treeParser", "reset", "repository", "newObjectReader", "revTree", "getId", "catch", "IOException", "e", "e", "printStackTrace", "finally", "revWalk", "dispose", "return", "treeParser" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitExtractor\\src\\main\\java\\com\\fudan\\util\\GitManager.java",
  "startLine" : 158,
  "endLine" : 183,
  "identifiers" : [ "try", "Git", "git", "repoMap", "get", "repo", "RevWalk", "revWalk", "repoWalkMap", "get", "repo", "TreeWalk", "treeWalk", "repoTreeMap", "get", "repo", "realPath", "getVersedRelativePath", "realPath", "ObjectId", "lastCommitId", "git", "getRepository", "resolve", "commit", "revWalk", "reset", "RevCommit", "revCommit", "revWalk", "parseCommit", "lastCommitId", "treeWalk", "reset", "treeWalk", "addTree", "revCommit", "getTree", "treeWalk", "setRecursive", "true", "treeWalk", "setFilter", "PathFilter", "create", "realPath", "if", "treeWalk", "next", "return", "ObjectId", "objectId", "treeWalk", "getObjectId", "ObjectLoader", "loader", "git", "getRepository", "open", "objectId", "FileOutputStream", "outputStream", "new", "FileOutputStream", "outputFile", "loader", "copyTo", "outputStream", "outputStream", "flush", "outputStream", "close", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 21,
  "endLine" : 159,
  "identifiers" : [ "NEW_FILE", "RENAMED_FILE", "DELETED_FILE", "TOO_LARGE", "public", "static", "final", "int", "NEW_FILE_VALUE", "public", "static", "final", "int", "RENAMED_FILE_VALUE", "public", "static", "final", "int", "DELETED_FILE_VALUE", "public", "static", "final", "int", "TOO_LARGE_VALUE", "Override", "public", "final", "int", "getNumber", "return", "value", "java", "lang", "Deprecated", "public", "static", "FileStatus", "valueOf", "int", "value", "return", "forNumber", "value", "public", "static", "FileStatus", "forNumber", "int", "value", "switch", "value", "case", "return", "NEW_FILE", "case", "return", "RENAMED_FILE", "case", "return", "DELETED_FILE", "case", "return", "TOO_LARGE", "default", "return", "null", "public", "static", "com", "google", "protobuf", "Internal", "EnumLiteMap", "FileStatus", "internalGetValueMap", "return", "internalValueMap", "private", "static", "final", "com", "google", "protobuf", "Internal", "EnumLiteMap", "FileStatus", "internalValueMap", "new", "com", "google", "protobuf", "Internal", "EnumLiteMap", "FileStatus", "Override", "public", "FileStatus", "findValueByNumber", "int", "number", "return", "FileStatus", "forNumber", "number", "Override", "public", "final", "com", "google", "protobuf", "Descriptors", "EnumValueDescriptor", "getValueDescriptor", "return", "getDescriptor", "getValues", "get", "ordinal", "Override", "public", "final", "com", "google", "protobuf", "Descriptors", "EnumDescriptor", "getDescriptorForType", "return", "getDescriptor", "public", "static", "final", "com", "google", "protobuf", "Descriptors", "EnumDescriptor", "getDescriptor", "return", "com", "fudan", "se", "bean", "GitMessage", "getDescriptor", "getEnumTypes", "get", "private", "static", "final", "FileStatus", "VALUES", "values", "public", "static", "FileStatus", "valueOf", "com", "google", "protobuf", "Descriptors", "EnumValueDescriptor", "desc", "if", "desc", "getType", "getDescriptor", "throw", "new", "java", "lang", "IllegalArgumentException", "return", "VALUES", "desc", "getIndex", "private", "final", "int", "value", "private", "FileStatus", "int", "value", "this", "value", "value" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 163,
  "endLine" : 295,
  "identifiers" : [ "boolean", "hasName", "com", "google", "protobuf", "ByteString", "getName", "boolean", "hasUrl", "java", "lang", "String", "getUrl", "com", "google", "protobuf", "ByteString", "getUrlBytes", "boolean", "hasDescription", "com", "google", "protobuf", "ByteString", "getDescription", "boolean", "hasHomepage", "java", "lang", "String", "getHomepage", "com", "google", "protobuf", "ByteString", "getHomepageBytes", "boolean", "hasGitHttpUrl", "java", "lang", "String", "getGitHttpUrl", "com", "google", "protobuf", "ByteString", "getGitHttpUrlBytes", "boolean", "hasGitSshUrl", "java", "lang", "String", "getGitSshUrl", "com", "google", "protobuf", "ByteString", "getGitSshUrlBytes", "boolean", "hasVisibilityLevel", "int", "getVisibilityLevel", "boolean", "hasProjectId", "long", "getProjectId", "boolean", "hasNamespaceId", "long", "getNamespaceId" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 307,
  "endLine" : 317,
  "identifiers" : [ "name_", "com", "google", "protobuf", "ByteString", "EMPTY", "url_", "description_", "com", "google", "protobuf", "ByteString", "EMPTY", "homepage_", "gitHttpUrl_", "gitSshUrl_", "visibilityLevel_", "projectId_", "L", "namespaceId_", "L" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 327,
  "endLine" : 407,
  "identifiers" : [ "this", "int", "mutable_bitField0_", "com", "google", "protobuf", "UnknownFieldSet", "Builder", "unknownFields", "com", "google", "protobuf", "UnknownFieldSet", "newBuilder", "try", "boolean", "done", "false", "while", "done", "int", "tag", "input", "readTag", "switch", "tag", "case", "done", "true", "break", "default", "if", "parseUnknownField", "input", "unknownFields", "extensionRegistry", "tag", "done", "true", "break", "case", "bitField0_", "x00000001", "name_", "input", "readBytes", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000002", "url_", "bs", "break", "case", "bitField0_", "x00000004", "description_", "input", "readBytes", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000008", "homepage_", "bs", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000010", "gitHttpUrl_", "bs", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000020", "gitSshUrl_", "bs", "break", "case", "bitField0_", "x00000040", "visibilityLevel_", "input", "readInt32", "break", "case", "bitField0_", "x00000080", "projectId_", "input", "readUInt64", "break", "case", "bitField0_", "x00000100", "namespaceId_", "input", "readUInt64", "break", "catch", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "throw", "e", "setUnfinishedMessage", "this", "catch", "java", "io", "IOException", "e", "throw", "new", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "setUnfinishedMessage", "this", "finally", "this", "unknownFields", "unknownFields", "build", "makeExtensionsImmutable" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 460,
  "endLine" : 473,
  "identifiers" : [ "java", "lang", "Object", "ref", "url_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "url_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 479,
  "endLine" : 490,
  "identifiers" : [ "java", "lang", "Object", "ref", "url_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "url_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 530,
  "endLine" : 543,
  "identifiers" : [ "java", "lang", "Object", "ref", "homepage_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "homepage_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 549,
  "endLine" : 560,
  "identifiers" : [ "java", "lang", "Object", "ref", "homepage_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "homepage_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 575,
  "endLine" : 588,
  "identifiers" : [ "java", "lang", "Object", "ref", "gitHttpUrl_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "gitHttpUrl_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 594,
  "endLine" : 605,
  "identifiers" : [ "java", "lang", "Object", "ref", "gitHttpUrl_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "gitHttpUrl_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 620,
  "endLine" : 633,
  "identifiers" : [ "java", "lang", "Object", "ref", "gitSshUrl_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "gitSshUrl_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 639,
  "endLine" : 650,
  "identifiers" : [ "java", "lang", "Object", "ref", "gitSshUrl_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "gitSshUrl_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 738,
  "endLine" : 767,
  "identifiers" : [ "if", "bitField0_", "x00000001", "x00000001", "output", "writeBytes", "name_", "if", "bitField0_", "x00000002", "x00000002", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "url_", "if", "bitField0_", "x00000004", "x00000004", "output", "writeBytes", "description_", "if", "bitField0_", "x00000008", "x00000008", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "homepage_", "if", "bitField0_", "x00000010", "x00000010", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "gitHttpUrl_", "if", "bitField0_", "x00000020", "x00000020", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "gitSshUrl_", "if", "bitField0_", "x00000040", "x00000040", "output", "writeInt32", "visibilityLevel_", "if", "bitField0_", "x00000080", "x00000080", "output", "writeUInt64", "projectId_", "if", "bitField0_", "x00000100", "x00000100", "output", "writeUInt64", "namespaceId_", "unknownFields", "writeTo", "output" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 770,
  "endLine" : 812,
  "identifiers" : [ "int", "size", "memoizedSize", "if", "size", "return", "size", "size", "if", "bitField0_", "x00000001", "x00000001", "size", "com", "google", "protobuf", "CodedOutputStream", "computeBytesSize", "name_", "if", "bitField0_", "x00000002", "x00000002", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "url_", "if", "bitField0_", "x00000004", "x00000004", "size", "com", "google", "protobuf", "CodedOutputStream", "computeBytesSize", "description_", "if", "bitField0_", "x00000008", "x00000008", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "homepage_", "if", "bitField0_", "x00000010", "x00000010", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "gitHttpUrl_", "if", "bitField0_", "x00000020", "x00000020", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "gitSshUrl_", "if", "bitField0_", "x00000040", "x00000040", "size", "com", "google", "protobuf", "CodedOutputStream", "computeInt32Size", "visibilityLevel_", "if", "bitField0_", "x00000080", "x00000080", "size", "com", "google", "protobuf", "CodedOutputStream", "computeUInt64Size", "projectId_", "if", "bitField0_", "x00000100", "x00000100", "size", "com", "google", "protobuf", "CodedOutputStream", "computeUInt64Size", "namespaceId_", "size", "unknownFields", "getSerializedSize", "memoizedSize", "size", "return", "size" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 816,
  "endLine" : 873,
  "identifiers" : [ "if", "obj", "this", "return", "true", "if", "obj", "instanceof", "com", "fudan", "se", "bean", "GitMessage", "Repository", "return", "super", "equals", "obj", "com", "fudan", "se", "bean", "GitMessage", "Repository", "other", "com", "fudan", "se", "bean", "GitMessage", "Repository", "obj", "boolean", "result", "true", "result", "result", "hasName", "other", "hasName", "if", "hasName", "result", "result", "getName", "equals", "other", "getName", "result", "result", "hasUrl", "other", "hasUrl", "if", "hasUrl", "result", "result", "getUrl", "equals", "other", "getUrl", "result", "result", "hasDescription", "other", "hasDescription", "if", "hasDescription", "result", "result", "getDescription", "equals", "other", "getDescription", "result", "result", "hasHomepage", "other", "hasHomepage", "if", "hasHomepage", "result", "result", "getHomepage", "equals", "other", "getHomepage", "result", "result", "hasGitHttpUrl", "other", "hasGitHttpUrl", "if", "hasGitHttpUrl", "result", "result", "getGitHttpUrl", "equals", "other", "getGitHttpUrl", "result", "result", "hasGitSshUrl", "other", "hasGitSshUrl", "if", "hasGitSshUrl", "result", "result", "getGitSshUrl", "equals", "other", "getGitSshUrl", "result", "result", "hasVisibilityLevel", "other", "hasVisibilityLevel", "if", "hasVisibilityLevel", "result", "result", "getVisibilityLevel", "other", "getVisibilityLevel", "result", "result", "hasProjectId", "other", "hasProjectId", "if", "hasProjectId", "result", "result", "getProjectId", "other", "getProjectId", "result", "result", "hasNamespaceId", "other", "hasNamespaceId", "if", "hasNamespaceId", "result", "result", "getNamespaceId", "other", "getNamespaceId", "result", "result", "unknownFields", "equals", "other", "unknownFields", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 876,
  "endLine" : 923,
  "identifiers" : [ "if", "memoizedHashCode", "return", "memoizedHashCode", "int", "hash", "hash", "hash", "getDescriptorForType", "hashCode", "if", "hasName", "hash", "hash", "NAME_FIELD_NUMBER", "hash", "hash", "getName", "hashCode", "if", "hasUrl", "hash", "hash", "URL_FIELD_NUMBER", "hash", "hash", "getUrl", "hashCode", "if", "hasDescription", "hash", "hash", "DESCRIPTION_FIELD_NUMBER", "hash", "hash", "getDescription", "hashCode", "if", "hasHomepage", "hash", "hash", "HOMEPAGE_FIELD_NUMBER", "hash", "hash", "getHomepage", "hashCode", "if", "hasGitHttpUrl", "hash", "hash", "GIT_HTTP_URL_FIELD_NUMBER", "hash", "hash", "getGitHttpUrl", "hashCode", "if", "hasGitSshUrl", "hash", "hash", "GIT_SSH_URL_FIELD_NUMBER", "hash", "hash", "getGitSshUrl", "hashCode", "if", "hasVisibilityLevel", "hash", "hash", "VISIBILITY_LEVEL_FIELD_NUMBER", "hash", "hash", "getVisibilityLevel", "if", "hasProjectId", "hash", "hash", "PROJECT_ID_FIELD_NUMBER", "hash", "hash", "com", "google", "protobuf", "Internal", "hashLong", "getProjectId", "if", "hasNamespaceId", "hash", "hash", "NAMESPACE_ID_FIELD_NUMBER", "hash", "hash", "com", "google", "protobuf", "Internal", "hashLong", "getNamespaceId", "hash", "hash", "unknownFields", "hashCode", "memoizedHashCode", "hash", "return", "hash" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 1040,
  "endLine" : 1061,
  "identifiers" : [ "super", "clear", "name_", "com", "google", "protobuf", "ByteString", "EMPTY", "bitField0_", "bitField0_", "x00000001", "url_", "bitField0_", "bitField0_", "x00000002", "description_", "com", "google", "protobuf", "ByteString", "EMPTY", "bitField0_", "bitField0_", "x00000004", "homepage_", "bitField0_", "bitField0_", "x00000008", "gitHttpUrl_", "bitField0_", "bitField0_", "x00000010", "gitSshUrl_", "bitField0_", "bitField0_", "x00000020", "visibilityLevel_", "bitField0_", "bitField0_", "x00000040", "projectId_", "L", "bitField0_", "bitField0_", "x00000080", "namespaceId_", "L", "bitField0_", "bitField0_", "x00000100", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 1084,
  "endLine" : 1127,
  "identifiers" : [ "com", "fudan", "se", "bean", "GitMessage", "Repository", "result", "new", "com", "fudan", "se", "bean", "GitMessage", "Repository", "this", "int", "from_bitField0_", "bitField0_", "int", "to_bitField0_", "if", "from_bitField0_", "x00000001", "x00000001", "to_bitField0_", "x00000001", "result", "name_", "name_", "if", "from_bitField0_", "x00000002", "x00000002", "to_bitField0_", "x00000002", "result", "url_", "url_", "if", "from_bitField0_", "x00000004", "x00000004", "to_bitField0_", "x00000004", "result", "description_", "description_", "if", "from_bitField0_", "x00000008", "x00000008", "to_bitField0_", "x00000008", "result", "homepage_", "homepage_", "if", "from_bitField0_", "x00000010", "x00000010", "to_bitField0_", "x00000010", "result", "gitHttpUrl_", "gitHttpUrl_", "if", "from_bitField0_", "x00000020", "x00000020", "to_bitField0_", "x00000020", "result", "gitSshUrl_", "gitSshUrl_", "if", "from_bitField0_", "x00000040", "x00000040", "to_bitField0_", "x00000040", "result", "visibilityLevel_", "visibilityLevel_", "if", "from_bitField0_", "x00000080", "x00000080", "to_bitField0_", "x00000080", "result", "projectId_", "projectId_", "if", "from_bitField0_", "x00000100", "x00000100", "to_bitField0_", "x00000100", "result", "namespaceId_", "namespaceId_", "result", "bitField0_", "to_bitField0_", "onBuilt", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 1171,
  "endLine" : 1213,
  "identifiers" : [ "if", "other", "com", "fudan", "se", "bean", "GitMessage", "Repository", "getDefaultInstance", "return", "this", "if", "other", "hasName", "setName", "other", "getName", "if", "other", "hasUrl", "bitField0_", "x00000002", "url_", "other", "url_", "onChanged", "if", "other", "hasDescription", "setDescription", "other", "getDescription", "if", "other", "hasHomepage", "bitField0_", "x00000008", "homepage_", "other", "homepage_", "onChanged", "if", "other", "hasGitHttpUrl", "bitField0_", "x00000010", "gitHttpUrl_", "other", "gitHttpUrl_", "onChanged", "if", "other", "hasGitSshUrl", "bitField0_", "x00000020", "gitSshUrl_", "other", "gitSshUrl_", "onChanged", "if", "other", "hasVisibilityLevel", "setVisibilityLevel", "other", "getVisibilityLevel", "if", "other", "hasProjectId", "setProjectId", "other", "getProjectId", "if", "other", "hasNamespaceId", "setNamespaceId", "other", "getNamespaceId", "this", "mergeUnknownFields", "other", "unknownFields", "onChanged", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 1227,
  "endLine" : 1240,
  "identifiers" : [ "com", "fudan", "se", "bean", "GitMessage", "Repository", "parsedMessage", "null", "try", "parsedMessage", "PARSER", "parsePartialFrom", "input", "extensionRegistry", "catch", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "parsedMessage", "com", "fudan", "se", "bean", "GitMessage", "Repository", "e", "getUnfinishedMessage", "throw", "e", "unwrapIOException", "finally", "if", "parsedMessage", "null", "mergeFrom", "parsedMessage", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 1308,
  "endLine" : 1321,
  "identifiers" : [ "java", "lang", "Object", "ref", "url_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "url_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 1327,
  "endLine" : 1338,
  "identifiers" : [ "java", "lang", "Object", "ref", "url_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "url_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 1440,
  "endLine" : 1453,
  "identifiers" : [ "java", "lang", "Object", "ref", "homepage_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "homepage_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 1459,
  "endLine" : 1470,
  "identifiers" : [ "java", "lang", "Object", "ref", "homepage_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "homepage_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 1519,
  "endLine" : 1532,
  "identifiers" : [ "java", "lang", "Object", "ref", "gitHttpUrl_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "gitHttpUrl_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 1538,
  "endLine" : 1549,
  "identifiers" : [ "java", "lang", "Object", "ref", "gitHttpUrl_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "gitHttpUrl_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 1598,
  "endLine" : 1611,
  "identifiers" : [ "java", "lang", "Object", "ref", "gitSshUrl_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "gitSshUrl_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 1617,
  "endLine" : 1628,
  "identifiers" : [ "java", "lang", "Object", "ref", "gitSshUrl_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "gitSshUrl_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 1849,
  "endLine" : 1916,
  "identifiers" : [ "boolean", "hasName", "com", "google", "protobuf", "ByteString", "getName", "boolean", "hasUsername", "java", "lang", "String", "getUsername", "com", "google", "protobuf", "ByteString", "getUsernameBytes", "boolean", "hasWebUrl", "java", "lang", "String", "getWebUrl", "com", "google", "protobuf", "ByteString", "getWebUrlBytes", "boolean", "hasId", "long", "getId" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 1943,
  "endLine" : 1996,
  "identifiers" : [ "this", "int", "mutable_bitField0_", "com", "google", "protobuf", "UnknownFieldSet", "Builder", "unknownFields", "com", "google", "protobuf", "UnknownFieldSet", "newBuilder", "try", "boolean", "done", "false", "while", "done", "int", "tag", "input", "readTag", "switch", "tag", "case", "done", "true", "break", "default", "if", "parseUnknownField", "input", "unknownFields", "extensionRegistry", "tag", "done", "true", "break", "case", "bitField0_", "x00000001", "name_", "input", "readBytes", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000002", "username_", "bs", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000004", "webUrl_", "bs", "break", "case", "bitField0_", "x00000008", "id_", "input", "readUInt64", "break", "catch", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "throw", "e", "setUnfinishedMessage", "this", "catch", "java", "io", "IOException", "e", "throw", "new", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "setUnfinishedMessage", "this", "finally", "this", "unknownFields", "unknownFields", "build", "makeExtensionsImmutable" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2057,
  "endLine" : 2070,
  "identifiers" : [ "java", "lang", "Object", "ref", "username_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "username_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2080,
  "endLine" : 2091,
  "identifiers" : [ "java", "lang", "Object", "ref", "username_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "username_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2106,
  "endLine" : 2119,
  "identifiers" : [ "java", "lang", "Object", "ref", "webUrl_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "webUrl_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2125,
  "endLine" : 2136,
  "identifiers" : [ "java", "lang", "Object", "ref", "webUrl_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "webUrl_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2157,
  "endLine" : 2180,
  "identifiers" : [ "byte", "isInitialized", "memoizedIsInitialized", "if", "isInitialized", "return", "true", "if", "isInitialized", "return", "false", "if", "hasName", "memoizedIsInitialized", "return", "false", "if", "hasUsername", "memoizedIsInitialized", "return", "false", "if", "hasId", "memoizedIsInitialized", "return", "false", "memoizedIsInitialized", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2184,
  "endLine" : 2198,
  "identifiers" : [ "if", "bitField0_", "x00000001", "x00000001", "output", "writeBytes", "name_", "if", "bitField0_", "x00000002", "x00000002", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "username_", "if", "bitField0_", "x00000004", "x00000004", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "webUrl_", "if", "bitField0_", "x00000008", "x00000008", "output", "writeUInt64", "id_", "unknownFields", "writeTo", "output" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2201,
  "endLine" : 2225,
  "identifiers" : [ "int", "size", "memoizedSize", "if", "size", "return", "size", "size", "if", "bitField0_", "x00000001", "x00000001", "size", "com", "google", "protobuf", "CodedOutputStream", "computeBytesSize", "name_", "if", "bitField0_", "x00000002", "x00000002", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "username_", "if", "bitField0_", "x00000004", "x00000004", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "webUrl_", "if", "bitField0_", "x00000008", "x00000008", "size", "com", "google", "protobuf", "CodedOutputStream", "computeUInt64Size", "id_", "size", "unknownFields", "getSerializedSize", "memoizedSize", "size", "return", "size" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2229,
  "endLine" : 2261,
  "identifiers" : [ "if", "obj", "this", "return", "true", "if", "obj", "instanceof", "com", "fudan", "se", "bean", "GitMessage", "User", "return", "super", "equals", "obj", "com", "fudan", "se", "bean", "GitMessage", "User", "other", "com", "fudan", "se", "bean", "GitMessage", "User", "obj", "boolean", "result", "true", "result", "result", "hasName", "other", "hasName", "if", "hasName", "result", "result", "getName", "equals", "other", "getName", "result", "result", "hasUsername", "other", "hasUsername", "if", "hasUsername", "result", "result", "getUsername", "equals", "other", "getUsername", "result", "result", "hasWebUrl", "other", "hasWebUrl", "if", "hasWebUrl", "result", "result", "getWebUrl", "equals", "other", "getWebUrl", "result", "result", "hasId", "other", "hasId", "if", "hasId", "result", "result", "getId", "other", "getId", "result", "result", "unknownFields", "equals", "other", "unknownFields", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2264,
  "endLine" : 2290,
  "identifiers" : [ "if", "memoizedHashCode", "return", "memoizedHashCode", "int", "hash", "hash", "hash", "getDescriptorForType", "hashCode", "if", "hasName", "hash", "hash", "NAME_FIELD_NUMBER", "hash", "hash", "getName", "hashCode", "if", "hasUsername", "hash", "hash", "USERNAME_FIELD_NUMBER", "hash", "hash", "getUsername", "hashCode", "if", "hasWebUrl", "hash", "hash", "WEB_URL_FIELD_NUMBER", "hash", "hash", "getWebUrl", "hashCode", "if", "hasId", "hash", "hash", "ID_FIELD_NUMBER", "hash", "hash", "com", "google", "protobuf", "Internal", "hashLong", "getId", "hash", "hash", "unknownFields", "hashCode", "memoizedHashCode", "hash", "return", "hash" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2407,
  "endLine" : 2418,
  "identifiers" : [ "super", "clear", "name_", "com", "google", "protobuf", "ByteString", "EMPTY", "bitField0_", "bitField0_", "x00000001", "username_", "bitField0_", "bitField0_", "x00000002", "webUrl_", "bitField0_", "bitField0_", "x00000004", "id_", "L", "bitField0_", "bitField0_", "x00000008", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2441,
  "endLine" : 2464,
  "identifiers" : [ "com", "fudan", "se", "bean", "GitMessage", "User", "result", "new", "com", "fudan", "se", "bean", "GitMessage", "User", "this", "int", "from_bitField0_", "bitField0_", "int", "to_bitField0_", "if", "from_bitField0_", "x00000001", "x00000001", "to_bitField0_", "x00000001", "result", "name_", "name_", "if", "from_bitField0_", "x00000002", "x00000002", "to_bitField0_", "x00000002", "result", "username_", "username_", "if", "from_bitField0_", "x00000004", "x00000004", "to_bitField0_", "x00000004", "result", "webUrl_", "webUrl_", "if", "from_bitField0_", "x00000008", "x00000008", "to_bitField0_", "x00000008", "result", "id_", "id_", "result", "bitField0_", "to_bitField0_", "onBuilt", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2508,
  "endLine" : 2531,
  "identifiers" : [ "if", "other", "com", "fudan", "se", "bean", "GitMessage", "User", "getDefaultInstance", "return", "this", "if", "other", "hasName", "setName", "other", "getName", "if", "other", "hasUsername", "bitField0_", "x00000002", "username_", "other", "username_", "onChanged", "if", "other", "hasWebUrl", "bitField0_", "x00000004", "webUrl_", "other", "webUrl_", "onChanged", "if", "other", "hasId", "setId", "other", "getId", "this", "mergeUnknownFields", "other", "unknownFields", "onChanged", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2551,
  "endLine" : 2564,
  "identifiers" : [ "com", "fudan", "se", "bean", "GitMessage", "User", "parsedMessage", "null", "try", "parsedMessage", "PARSER", "parsePartialFrom", "input", "extensionRegistry", "catch", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "parsedMessage", "com", "fudan", "se", "bean", "GitMessage", "User", "e", "getUnfinishedMessage", "throw", "e", "unwrapIOException", "finally", "if", "parsedMessage", "null", "mergeFrom", "parsedMessage", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2640,
  "endLine" : 2653,
  "identifiers" : [ "java", "lang", "Object", "ref", "username_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "username_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2663,
  "endLine" : 2674,
  "identifiers" : [ "java", "lang", "Object", "ref", "username_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "username_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2735,
  "endLine" : 2748,
  "identifiers" : [ "java", "lang", "Object", "ref", "webUrl_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "webUrl_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2754,
  "endLine" : 2765,
  "identifiers" : [ "java", "lang", "Object", "ref", "webUrl_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "webUrl_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 2890,
  "endLine" : 2994,
  "identifiers" : [ "boolean", "hasId", "java", "lang", "String", "getId", "com", "google", "protobuf", "ByteString", "getIdBytes", "boolean", "hasShortId", "java", "lang", "String", "getShortId", "com", "google", "protobuf", "ByteString", "getShortIdBytes", "boolean", "hasTitle", "com", "google", "protobuf", "ByteString", "getTitle", "boolean", "hasMemssage", "com", "google", "protobuf", "ByteString", "getMemssage", "boolean", "hasTimestamp", "java", "lang", "String", "getTimestamp", "com", "google", "protobuf", "ByteString", "getTimestampBytes", "boolean", "hasUrl", "java", "lang", "String", "getUrl", "com", "google", "protobuf", "ByteString", "getUrlBytes", "boolean", "hasAuthorName", "com", "google", "protobuf", "ByteString", "getAuthorName" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3010,
  "endLine" : 3018,
  "identifiers" : [ "id_", "shortId_", "title_", "com", "google", "protobuf", "ByteString", "EMPTY", "memssage_", "com", "google", "protobuf", "ByteString", "EMPTY", "timestamp_", "url_", "authorName_", "com", "google", "protobuf", "ByteString", "EMPTY" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3028,
  "endLine" : 3098,
  "identifiers" : [ "this", "int", "mutable_bitField0_", "com", "google", "protobuf", "UnknownFieldSet", "Builder", "unknownFields", "com", "google", "protobuf", "UnknownFieldSet", "newBuilder", "try", "boolean", "done", "false", "while", "done", "int", "tag", "input", "readTag", "switch", "tag", "case", "done", "true", "break", "default", "if", "parseUnknownField", "input", "unknownFields", "extensionRegistry", "tag", "done", "true", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000001", "id_", "bs", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000002", "shortId_", "bs", "break", "case", "bitField0_", "x00000004", "title_", "input", "readBytes", "break", "case", "bitField0_", "x00000008", "memssage_", "input", "readBytes", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000010", "timestamp_", "bs", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000020", "url_", "bs", "break", "case", "bitField0_", "x00000040", "authorName_", "input", "readBytes", "break", "catch", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "throw", "e", "setUnfinishedMessage", "this", "catch", "java", "io", "IOException", "e", "throw", "new", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "setUnfinishedMessage", "this", "finally", "this", "unknownFields", "unknownFields", "build", "makeExtensionsImmutable" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3126,
  "endLine" : 3139,
  "identifiers" : [ "java", "lang", "Object", "ref", "id_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "id_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3145,
  "endLine" : 3156,
  "identifiers" : [ "java", "lang", "Object", "ref", "id_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "id_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3179,
  "endLine" : 3192,
  "identifiers" : [ "java", "lang", "Object", "ref", "shortId_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "shortId_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3202,
  "endLine" : 3213,
  "identifiers" : [ "java", "lang", "Object", "ref", "shortId_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "shortId_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3270,
  "endLine" : 3283,
  "identifiers" : [ "java", "lang", "Object", "ref", "timestamp_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "timestamp_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3289,
  "endLine" : 3300,
  "identifiers" : [ "java", "lang", "Object", "ref", "timestamp_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "timestamp_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3315,
  "endLine" : 3328,
  "identifiers" : [ "java", "lang", "Object", "ref", "url_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "url_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3334,
  "endLine" : 3345,
  "identifiers" : [ "java", "lang", "Object", "ref", "url_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "url_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3366,
  "endLine" : 3397,
  "identifiers" : [ "byte", "isInitialized", "memoizedIsInitialized", "if", "isInitialized", "return", "true", "if", "isInitialized", "return", "false", "if", "hasId", "memoizedIsInitialized", "return", "false", "if", "hasShortId", "memoizedIsInitialized", "return", "false", "if", "hasMemssage", "memoizedIsInitialized", "return", "false", "if", "hasTimestamp", "memoizedIsInitialized", "return", "false", "if", "hasUrl", "memoizedIsInitialized", "return", "false", "memoizedIsInitialized", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3401,
  "endLine" : 3424,
  "identifiers" : [ "if", "bitField0_", "x00000001", "x00000001", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "id_", "if", "bitField0_", "x00000002", "x00000002", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "shortId_", "if", "bitField0_", "x00000004", "x00000004", "output", "writeBytes", "title_", "if", "bitField0_", "x00000008", "x00000008", "output", "writeBytes", "memssage_", "if", "bitField0_", "x00000010", "x00000010", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "timestamp_", "if", "bitField0_", "x00000020", "x00000020", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "url_", "if", "bitField0_", "x00000040", "x00000040", "output", "writeBytes", "authorName_", "unknownFields", "writeTo", "output" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3427,
  "endLine" : 3461,
  "identifiers" : [ "int", "size", "memoizedSize", "if", "size", "return", "size", "size", "if", "bitField0_", "x00000001", "x00000001", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "id_", "if", "bitField0_", "x00000002", "x00000002", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "shortId_", "if", "bitField0_", "x00000004", "x00000004", "size", "com", "google", "protobuf", "CodedOutputStream", "computeBytesSize", "title_", "if", "bitField0_", "x00000008", "x00000008", "size", "com", "google", "protobuf", "CodedOutputStream", "computeBytesSize", "memssage_", "if", "bitField0_", "x00000010", "x00000010", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "timestamp_", "if", "bitField0_", "x00000020", "x00000020", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "url_", "if", "bitField0_", "x00000040", "x00000040", "size", "com", "google", "protobuf", "CodedOutputStream", "computeBytesSize", "authorName_", "size", "unknownFields", "getSerializedSize", "memoizedSize", "size", "return", "size" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3465,
  "endLine" : 3512,
  "identifiers" : [ "if", "obj", "this", "return", "true", "if", "obj", "instanceof", "com", "fudan", "se", "bean", "GitMessage", "Commit", "return", "super", "equals", "obj", "com", "fudan", "se", "bean", "GitMessage", "Commit", "other", "com", "fudan", "se", "bean", "GitMessage", "Commit", "obj", "boolean", "result", "true", "result", "result", "hasId", "other", "hasId", "if", "hasId", "result", "result", "getId", "equals", "other", "getId", "result", "result", "hasShortId", "other", "hasShortId", "if", "hasShortId", "result", "result", "getShortId", "equals", "other", "getShortId", "result", "result", "hasTitle", "other", "hasTitle", "if", "hasTitle", "result", "result", "getTitle", "equals", "other", "getTitle", "result", "result", "hasMemssage", "other", "hasMemssage", "if", "hasMemssage", "result", "result", "getMemssage", "equals", "other", "getMemssage", "result", "result", "hasTimestamp", "other", "hasTimestamp", "if", "hasTimestamp", "result", "result", "getTimestamp", "equals", "other", "getTimestamp", "result", "result", "hasUrl", "other", "hasUrl", "if", "hasUrl", "result", "result", "getUrl", "equals", "other", "getUrl", "result", "result", "hasAuthorName", "other", "hasAuthorName", "if", "hasAuthorName", "result", "result", "getAuthorName", "equals", "other", "getAuthorName", "result", "result", "unknownFields", "equals", "other", "unknownFields", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3515,
  "endLine" : 3552,
  "identifiers" : [ "if", "memoizedHashCode", "return", "memoizedHashCode", "int", "hash", "hash", "hash", "getDescriptorForType", "hashCode", "if", "hasId", "hash", "hash", "ID_FIELD_NUMBER", "hash", "hash", "getId", "hashCode", "if", "hasShortId", "hash", "hash", "SHORT_ID_FIELD_NUMBER", "hash", "hash", "getShortId", "hashCode", "if", "hasTitle", "hash", "hash", "TITLE_FIELD_NUMBER", "hash", "hash", "getTitle", "hashCode", "if", "hasMemssage", "hash", "hash", "MEMSSAGE_FIELD_NUMBER", "hash", "hash", "getMemssage", "hashCode", "if", "hasTimestamp", "hash", "hash", "TIMESTAMP_FIELD_NUMBER", "hash", "hash", "getTimestamp", "hashCode", "if", "hasUrl", "hash", "hash", "URL_FIELD_NUMBER", "hash", "hash", "getUrl", "hashCode", "if", "hasAuthorName", "hash", "hash", "AUTHOR_NAME_FIELD_NUMBER", "hash", "hash", "getAuthorName", "hashCode", "hash", "hash", "unknownFields", "hashCode", "memoizedHashCode", "hash", "return", "hash" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3673,
  "endLine" : 3690,
  "identifiers" : [ "super", "clear", "id_", "bitField0_", "bitField0_", "x00000001", "shortId_", "bitField0_", "bitField0_", "x00000002", "title_", "com", "google", "protobuf", "ByteString", "EMPTY", "bitField0_", "bitField0_", "x00000004", "memssage_", "com", "google", "protobuf", "ByteString", "EMPTY", "bitField0_", "bitField0_", "x00000008", "timestamp_", "bitField0_", "bitField0_", "x00000010", "url_", "bitField0_", "bitField0_", "x00000020", "authorName_", "com", "google", "protobuf", "ByteString", "EMPTY", "bitField0_", "bitField0_", "x00000040", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3713,
  "endLine" : 3748,
  "identifiers" : [ "com", "fudan", "se", "bean", "GitMessage", "Commit", "result", "new", "com", "fudan", "se", "bean", "GitMessage", "Commit", "this", "int", "from_bitField0_", "bitField0_", "int", "to_bitField0_", "if", "from_bitField0_", "x00000001", "x00000001", "to_bitField0_", "x00000001", "result", "id_", "id_", "if", "from_bitField0_", "x00000002", "x00000002", "to_bitField0_", "x00000002", "result", "shortId_", "shortId_", "if", "from_bitField0_", "x00000004", "x00000004", "to_bitField0_", "x00000004", "result", "title_", "title_", "if", "from_bitField0_", "x00000008", "x00000008", "to_bitField0_", "x00000008", "result", "memssage_", "memssage_", "if", "from_bitField0_", "x00000010", "x00000010", "to_bitField0_", "x00000010", "result", "timestamp_", "timestamp_", "if", "from_bitField0_", "x00000020", "x00000020", "to_bitField0_", "x00000020", "result", "url_", "url_", "if", "from_bitField0_", "x00000040", "x00000040", "to_bitField0_", "x00000040", "result", "authorName_", "authorName_", "result", "bitField0_", "to_bitField0_", "onBuilt", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3792,
  "endLine" : 3828,
  "identifiers" : [ "if", "other", "com", "fudan", "se", "bean", "GitMessage", "Commit", "getDefaultInstance", "return", "this", "if", "other", "hasId", "bitField0_", "x00000001", "id_", "other", "id_", "onChanged", "if", "other", "hasShortId", "bitField0_", "x00000002", "shortId_", "other", "shortId_", "onChanged", "if", "other", "hasTitle", "setTitle", "other", "getTitle", "if", "other", "hasMemssage", "setMemssage", "other", "getMemssage", "if", "other", "hasTimestamp", "bitField0_", "x00000010", "timestamp_", "other", "timestamp_", "onChanged", "if", "other", "hasUrl", "bitField0_", "x00000020", "url_", "other", "url_", "onChanged", "if", "other", "hasAuthorName", "setAuthorName", "other", "getAuthorName", "this", "mergeUnknownFields", "other", "unknownFields", "onChanged", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3831,
  "endLine" : 3848,
  "identifiers" : [ "if", "hasId", "return", "false", "if", "hasShortId", "return", "false", "if", "hasMemssage", "return", "false", "if", "hasTimestamp", "return", "false", "if", "hasUrl", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3854,
  "endLine" : 3867,
  "identifiers" : [ "com", "fudan", "se", "bean", "GitMessage", "Commit", "parsedMessage", "null", "try", "parsedMessage", "PARSER", "parsePartialFrom", "input", "extensionRegistry", "catch", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "parsedMessage", "com", "fudan", "se", "bean", "GitMessage", "Commit", "e", "getUnfinishedMessage", "throw", "e", "unwrapIOException", "finally", "if", "parsedMessage", "null", "mergeFrom", "parsedMessage", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3882,
  "endLine" : 3895,
  "identifiers" : [ "java", "lang", "Object", "ref", "id_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "id_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3901,
  "endLine" : 3912,
  "identifiers" : [ "java", "lang", "Object", "ref", "id_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "id_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3969,
  "endLine" : 3982,
  "identifiers" : [ "java", "lang", "Object", "ref", "shortId_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "shortId_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 3992,
  "endLine" : 4003,
  "identifiers" : [ "java", "lang", "Object", "ref", "shortId_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "shortId_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4154,
  "endLine" : 4167,
  "identifiers" : [ "java", "lang", "Object", "ref", "timestamp_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "timestamp_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4173,
  "endLine" : 4184,
  "identifiers" : [ "java", "lang", "Object", "ref", "timestamp_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "timestamp_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4233,
  "endLine" : 4246,
  "identifiers" : [ "java", "lang", "Object", "ref", "url_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "url_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4252,
  "endLine" : 4263,
  "identifiers" : [ "java", "lang", "Object", "ref", "url_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "url_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4391,
  "endLine" : 4504,
  "identifiers" : [ "boolean", "hasOldPath", "java", "lang", "String", "getOldPath", "com", "google", "protobuf", "ByteString", "getOldPathBytes", "boolean", "hasNewPath", "java", "lang", "String", "getNewPath", "com", "google", "protobuf", "ByteString", "getNewPathBytes", "boolean", "hasBlobId", "java", "lang", "String", "getBlobId", "com", "google", "protobuf", "ByteString", "getBlobIdBytes", "boolean", "hasEncoding", "java", "lang", "String", "getEncoding", "com", "google", "protobuf", "ByteString", "getEncodingBytes", "boolean", "hasIsBinary", "boolean", "getIsBinary", "boolean", "hasType", "java", "lang", "String", "getType", "com", "google", "protobuf", "ByteString", "getTypeBytes", "boolean", "hasContent", "com", "google", "protobuf", "ByteString", "getContent" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4538,
  "endLine" : 4609,
  "identifiers" : [ "this", "int", "mutable_bitField0_", "com", "google", "protobuf", "UnknownFieldSet", "Builder", "unknownFields", "com", "google", "protobuf", "UnknownFieldSet", "newBuilder", "try", "boolean", "done", "false", "while", "done", "int", "tag", "input", "readTag", "switch", "tag", "case", "done", "true", "break", "default", "if", "parseUnknownField", "input", "unknownFields", "extensionRegistry", "tag", "done", "true", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000001", "oldPath_", "bs", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000002", "newPath_", "bs", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000004", "blobId_", "bs", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000008", "encoding_", "bs", "break", "case", "bitField0_", "x00000010", "isBinary_", "input", "readBool", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000020", "type_", "bs", "break", "case", "bitField0_", "x00000040", "content_", "input", "readBytes", "break", "catch", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "throw", "e", "setUnfinishedMessage", "this", "catch", "java", "io", "IOException", "e", "throw", "new", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "setUnfinishedMessage", "this", "finally", "this", "unknownFields", "unknownFields", "build", "makeExtensionsImmutable" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4637,
  "endLine" : 4650,
  "identifiers" : [ "java", "lang", "Object", "ref", "oldPath_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "oldPath_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4656,
  "endLine" : 4667,
  "identifiers" : [ "java", "lang", "Object", "ref", "oldPath_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "oldPath_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4682,
  "endLine" : 4695,
  "identifiers" : [ "java", "lang", "Object", "ref", "newPath_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "newPath_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4701,
  "endLine" : 4712,
  "identifiers" : [ "java", "lang", "Object", "ref", "newPath_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "newPath_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4727,
  "endLine" : 4740,
  "identifiers" : [ "java", "lang", "Object", "ref", "blobId_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "blobId_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4746,
  "endLine" : 4757,
  "identifiers" : [ "java", "lang", "Object", "ref", "blobId_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "blobId_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4780,
  "endLine" : 4793,
  "identifiers" : [ "java", "lang", "Object", "ref", "encoding_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "encoding_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4803,
  "endLine" : 4814,
  "identifiers" : [ "java", "lang", "Object", "ref", "encoding_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "encoding_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4854,
  "endLine" : 4867,
  "identifiers" : [ "java", "lang", "Object", "ref", "type_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "type_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4877,
  "endLine" : 4888,
  "identifiers" : [ "java", "lang", "Object", "ref", "type_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "type_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4909,
  "endLine" : 4928,
  "identifiers" : [ "byte", "isInitialized", "memoizedIsInitialized", "if", "isInitialized", "return", "true", "if", "isInitialized", "return", "false", "if", "hasOldPath", "memoizedIsInitialized", "return", "false", "if", "hasNewPath", "memoizedIsInitialized", "return", "false", "memoizedIsInitialized", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4932,
  "endLine" : 4955,
  "identifiers" : [ "if", "bitField0_", "x00000001", "x00000001", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "oldPath_", "if", "bitField0_", "x00000002", "x00000002", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "newPath_", "if", "bitField0_", "x00000004", "x00000004", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "blobId_", "if", "bitField0_", "x00000008", "x00000008", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "encoding_", "if", "bitField0_", "x00000010", "x00000010", "output", "writeBool", "isBinary_", "if", "bitField0_", "x00000020", "x00000020", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "type_", "if", "bitField0_", "x00000040", "x00000040", "output", "writeBytes", "content_", "unknownFields", "writeTo", "output" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4958,
  "endLine" : 4991,
  "identifiers" : [ "int", "size", "memoizedSize", "if", "size", "return", "size", "size", "if", "bitField0_", "x00000001", "x00000001", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "oldPath_", "if", "bitField0_", "x00000002", "x00000002", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "newPath_", "if", "bitField0_", "x00000004", "x00000004", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "blobId_", "if", "bitField0_", "x00000008", "x00000008", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "encoding_", "if", "bitField0_", "x00000010", "x00000010", "size", "com", "google", "protobuf", "CodedOutputStream", "computeBoolSize", "isBinary_", "if", "bitField0_", "x00000020", "x00000020", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "type_", "if", "bitField0_", "x00000040", "x00000040", "size", "com", "google", "protobuf", "CodedOutputStream", "computeBytesSize", "content_", "size", "unknownFields", "getSerializedSize", "memoizedSize", "size", "return", "size" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 4995,
  "endLine" : 5042,
  "identifiers" : [ "if", "obj", "this", "return", "true", "if", "obj", "instanceof", "com", "fudan", "se", "bean", "GitMessage", "File", "return", "super", "equals", "obj", "com", "fudan", "se", "bean", "GitMessage", "File", "other", "com", "fudan", "se", "bean", "GitMessage", "File", "obj", "boolean", "result", "true", "result", "result", "hasOldPath", "other", "hasOldPath", "if", "hasOldPath", "result", "result", "getOldPath", "equals", "other", "getOldPath", "result", "result", "hasNewPath", "other", "hasNewPath", "if", "hasNewPath", "result", "result", "getNewPath", "equals", "other", "getNewPath", "result", "result", "hasBlobId", "other", "hasBlobId", "if", "hasBlobId", "result", "result", "getBlobId", "equals", "other", "getBlobId", "result", "result", "hasEncoding", "other", "hasEncoding", "if", "hasEncoding", "result", "result", "getEncoding", "equals", "other", "getEncoding", "result", "result", "hasIsBinary", "other", "hasIsBinary", "if", "hasIsBinary", "result", "result", "getIsBinary", "other", "getIsBinary", "result", "result", "hasType", "other", "hasType", "if", "hasType", "result", "result", "getType", "equals", "other", "getType", "result", "result", "hasContent", "other", "hasContent", "if", "hasContent", "result", "result", "getContent", "equals", "other", "getContent", "result", "result", "unknownFields", "equals", "other", "unknownFields", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 5045,
  "endLine" : 5083,
  "identifiers" : [ "if", "memoizedHashCode", "return", "memoizedHashCode", "int", "hash", "hash", "hash", "getDescriptorForType", "hashCode", "if", "hasOldPath", "hash", "hash", "OLD_PATH_FIELD_NUMBER", "hash", "hash", "getOldPath", "hashCode", "if", "hasNewPath", "hash", "hash", "NEW_PATH_FIELD_NUMBER", "hash", "hash", "getNewPath", "hashCode", "if", "hasBlobId", "hash", "hash", "BLOB_ID_FIELD_NUMBER", "hash", "hash", "getBlobId", "hashCode", "if", "hasEncoding", "hash", "hash", "ENCODING_FIELD_NUMBER", "hash", "hash", "getEncoding", "hashCode", "if", "hasIsBinary", "hash", "hash", "IS_BINARY_FIELD_NUMBER", "hash", "hash", "com", "google", "protobuf", "Internal", "hashBoolean", "getIsBinary", "if", "hasType", "hash", "hash", "TYPE_FIELD_NUMBER", "hash", "hash", "getType", "hashCode", "if", "hasContent", "hash", "hash", "CONTENT_FIELD_NUMBER", "hash", "hash", "getContent", "hashCode", "hash", "hash", "unknownFields", "hashCode", "memoizedHashCode", "hash", "return", "hash" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 5204,
  "endLine" : 5221,
  "identifiers" : [ "super", "clear", "oldPath_", "bitField0_", "bitField0_", "x00000001", "newPath_", "bitField0_", "bitField0_", "x00000002", "blobId_", "bitField0_", "bitField0_", "x00000004", "encoding_", "bitField0_", "bitField0_", "x00000008", "isBinary_", "false", "bitField0_", "bitField0_", "x00000010", "type_", "bitField0_", "bitField0_", "x00000020", "content_", "com", "google", "protobuf", "ByteString", "EMPTY", "bitField0_", "bitField0_", "x00000040", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 5244,
  "endLine" : 5279,
  "identifiers" : [ "com", "fudan", "se", "bean", "GitMessage", "File", "result", "new", "com", "fudan", "se", "bean", "GitMessage", "File", "this", "int", "from_bitField0_", "bitField0_", "int", "to_bitField0_", "if", "from_bitField0_", "x00000001", "x00000001", "to_bitField0_", "x00000001", "result", "oldPath_", "oldPath_", "if", "from_bitField0_", "x00000002", "x00000002", "to_bitField0_", "x00000002", "result", "newPath_", "newPath_", "if", "from_bitField0_", "x00000004", "x00000004", "to_bitField0_", "x00000004", "result", "blobId_", "blobId_", "if", "from_bitField0_", "x00000008", "x00000008", "to_bitField0_", "x00000008", "result", "encoding_", "encoding_", "if", "from_bitField0_", "x00000010", "x00000010", "to_bitField0_", "x00000010", "result", "isBinary_", "isBinary_", "if", "from_bitField0_", "x00000020", "x00000020", "to_bitField0_", "x00000020", "result", "type_", "type_", "if", "from_bitField0_", "x00000040", "x00000040", "to_bitField0_", "x00000040", "result", "content_", "content_", "result", "bitField0_", "to_bitField0_", "onBuilt", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 5323,
  "endLine" : 5361,
  "identifiers" : [ "if", "other", "com", "fudan", "se", "bean", "GitMessage", "File", "getDefaultInstance", "return", "this", "if", "other", "hasOldPath", "bitField0_", "x00000001", "oldPath_", "other", "oldPath_", "onChanged", "if", "other", "hasNewPath", "bitField0_", "x00000002", "newPath_", "other", "newPath_", "onChanged", "if", "other", "hasBlobId", "bitField0_", "x00000004", "blobId_", "other", "blobId_", "onChanged", "if", "other", "hasEncoding", "bitField0_", "x00000008", "encoding_", "other", "encoding_", "onChanged", "if", "other", "hasIsBinary", "setIsBinary", "other", "getIsBinary", "if", "other", "hasType", "bitField0_", "x00000020", "type_", "other", "type_", "onChanged", "if", "other", "hasContent", "setContent", "other", "getContent", "this", "mergeUnknownFields", "other", "unknownFields", "onChanged", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 5378,
  "endLine" : 5391,
  "identifiers" : [ "com", "fudan", "se", "bean", "GitMessage", "File", "parsedMessage", "null", "try", "parsedMessage", "PARSER", "parsePartialFrom", "input", "extensionRegistry", "catch", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "parsedMessage", "com", "fudan", "se", "bean", "GitMessage", "File", "e", "getUnfinishedMessage", "throw", "e", "unwrapIOException", "finally", "if", "parsedMessage", "null", "mergeFrom", "parsedMessage", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 5406,
  "endLine" : 5419,
  "identifiers" : [ "java", "lang", "Object", "ref", "oldPath_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "oldPath_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 5425,
  "endLine" : 5436,
  "identifiers" : [ "java", "lang", "Object", "ref", "oldPath_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "oldPath_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 5485,
  "endLine" : 5498,
  "identifiers" : [ "java", "lang", "Object", "ref", "newPath_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "newPath_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 5504,
  "endLine" : 5515,
  "identifiers" : [ "java", "lang", "Object", "ref", "newPath_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "newPath_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 5564,
  "endLine" : 5577,
  "identifiers" : [ "java", "lang", "Object", "ref", "blobId_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "blobId_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 5583,
  "endLine" : 5594,
  "identifiers" : [ "java", "lang", "Object", "ref", "blobId_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "blobId_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 5651,
  "endLine" : 5664,
  "identifiers" : [ "java", "lang", "Object", "ref", "encoding_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "encoding_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 5674,
  "endLine" : 5685,
  "identifiers" : [ "java", "lang", "Object", "ref", "encoding_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "encoding_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 5788,
  "endLine" : 5801,
  "identifiers" : [ "java", "lang", "Object", "ref", "type_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "type_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 5811,
  "endLine" : 5822,
  "identifiers" : [ "java", "lang", "Object", "ref", "type_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "type_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 5962,
  "endLine" : 6149,
  "identifiers" : [ "boolean", "hasBefore", "java", "lang", "String", "getBefore", "com", "google", "protobuf", "ByteString", "getBeforeBytes", "boolean", "hasAfter", "java", "lang", "String", "getAfter", "com", "google", "protobuf", "ByteString", "getAfterBytes", "boolean", "hasRef", "java", "lang", "String", "getRef", "com", "google", "protobuf", "ByteString", "getRefBytes", "boolean", "hasUser", "com", "fudan", "se", "bean", "GitMessage", "User", "getUser", "com", "fudan", "se", "bean", "GitMessage", "UserOrBuilder", "getUserOrBuilder", "boolean", "hasRepo", "com", "fudan", "se", "bean", "GitMessage", "Repository", "getRepo", "com", "fudan", "se", "bean", "GitMessage", "RepositoryOrBuilder", "getRepoOrBuilder", "boolean", "hasPathWithNamespace", "java", "lang", "String", "getPathWithNamespace", "com", "google", "protobuf", "ByteString", "getPathWithNamespaceBytes", "java", "util", "List", "com", "fudan", "se", "bean", "GitMessage", "Commit", "getCommitsList", "com", "fudan", "se", "bean", "GitMessage", "Commit", "getCommits", "int", "index", "int", "getCommitsCount", "java", "util", "List", "extends", "com", "fudan", "se", "bean", "GitMessage", "CommitOrBuilder", "getCommitsOrBuilderList", "com", "fudan", "se", "bean", "GitMessage", "CommitOrBuilder", "getCommitsOrBuilder", "int", "index", "java", "util", "List", "com", "fudan", "se", "bean", "GitMessage", "File", "getFilesList", "com", "fudan", "se", "bean", "GitMessage", "File", "getFiles", "int", "index", "int", "getFilesCount", "java", "util", "List", "extends", "com", "fudan", "se", "bean", "GitMessage", "FileOrBuilder", "getFilesOrBuilderList", "com", "fudan", "se", "bean", "GitMessage", "FileOrBuilder", "getFilesOrBuilder", "int", "index" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 6182,
  "endLine" : 6287,
  "identifiers" : [ "this", "int", "mutable_bitField0_", "com", "google", "protobuf", "UnknownFieldSet", "Builder", "unknownFields", "com", "google", "protobuf", "UnknownFieldSet", "newBuilder", "try", "boolean", "done", "false", "while", "done", "int", "tag", "input", "readTag", "switch", "tag", "case", "done", "true", "break", "default", "if", "parseUnknownField", "input", "unknownFields", "extensionRegistry", "tag", "done", "true", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000001", "before_", "bs", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000002", "after_", "bs", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000004", "ref_", "bs", "break", "case", "com", "fudan", "se", "bean", "GitMessage", "User", "Builder", "subBuilder", "null", "if", "bitField0_", "x00000008", "x00000008", "subBuilder", "user_", "toBuilder", "user_", "input", "readMessage", "com", "fudan", "se", "bean", "GitMessage", "User", "PARSER", "extensionRegistry", "if", "subBuilder", "null", "subBuilder", "mergeFrom", "user_", "user_", "subBuilder", "buildPartial", "bitField0_", "x00000008", "break", "case", "com", "fudan", "se", "bean", "GitMessage", "Repository", "Builder", "subBuilder", "null", "if", "bitField0_", "x00000010", "x00000010", "subBuilder", "repo_", "toBuilder", "repo_", "input", "readMessage", "com", "fudan", "se", "bean", "GitMessage", "Repository", "PARSER", "extensionRegistry", "if", "subBuilder", "null", "subBuilder", "mergeFrom", "repo_", "repo_", "subBuilder", "buildPartial", "bitField0_", "x00000010", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000020", "pathWithNamespace_", "bs", "break", "case", "if", "mutable_bitField0_", "x00000040", "x00000040", "commits_", "new", "java", "util", "ArrayList", "com", "fudan", "se", "bean", "GitMessage", "Commit", "mutable_bitField0_", "x00000040", "commits_", "add", "input", "readMessage", "com", "fudan", "se", "bean", "GitMessage", "Commit", "PARSER", "extensionRegistry", "break", "case", "if", "mutable_bitField0_", "x00000080", "x00000080", "files_", "new", "java", "util", "ArrayList", "com", "fudan", "se", "bean", "GitMessage", "File", "mutable_bitField0_", "x00000080", "files_", "add", "input", "readMessage", "com", "fudan", "se", "bean", "GitMessage", "File", "PARSER", "extensionRegistry", "break", "catch", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "throw", "e", "setUnfinishedMessage", "this", "catch", "java", "io", "IOException", "e", "throw", "new", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "setUnfinishedMessage", "this", "finally", "if", "mutable_bitField0_", "x00000040", "x00000040", "commits_", "java", "util", "Collections", "unmodifiableList", "commits_", "if", "mutable_bitField0_", "x00000080", "x00000080", "files_", "java", "util", "Collections", "unmodifiableList", "files_", "this", "unknownFields", "unknownFields", "build", "makeExtensionsImmutable" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 6323,
  "endLine" : 6336,
  "identifiers" : [ "java", "lang", "Object", "ref", "before_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "before_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 6346,
  "endLine" : 6357,
  "identifiers" : [ "java", "lang", "Object", "ref", "before_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "before_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 6380,
  "endLine" : 6393,
  "identifiers" : [ "java", "lang", "Object", "ref", "after_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "after_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 6403,
  "endLine" : 6414,
  "identifiers" : [ "java", "lang", "Object", "ref", "after_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "after_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 6437,
  "endLine" : 6450,
  "identifiers" : [ "java", "lang", "Object", "ref", "ref_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "ref_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 6460,
  "endLine" : 6471,
  "identifiers" : [ "java", "lang", "Object", "ref", "ref_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "ref_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 6534,
  "endLine" : 6547,
  "identifiers" : [ "java", "lang", "Object", "ref", "pathWithNamespace_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "pathWithNamespace_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 6553,
  "endLine" : 6564,
  "identifiers" : [ "java", "lang", "Object", "ref", "pathWithNamespace_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "pathWithNamespace_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 6668,
  "endLine" : 6719,
  "identifiers" : [ "byte", "isInitialized", "memoizedIsInitialized", "if", "isInitialized", "return", "true", "if", "isInitialized", "return", "false", "if", "hasBefore", "memoizedIsInitialized", "return", "false", "if", "hasAfter", "memoizedIsInitialized", "return", "false", "if", "hasRef", "memoizedIsInitialized", "return", "false", "if", "hasUser", "memoizedIsInitialized", "return", "false", "if", "hasRepo", "memoizedIsInitialized", "return", "false", "if", "getUser", "isInitialized", "memoizedIsInitialized", "return", "false", "if", "getRepo", "isInitialized", "memoizedIsInitialized", "return", "false", "for", "int", "i", "i", "getCommitsCount", "i", "if", "getCommits", "i", "isInitialized", "memoizedIsInitialized", "return", "false", "for", "int", "i", "i", "getFilesCount", "i", "if", "getFiles", "i", "isInitialized", "memoizedIsInitialized", "return", "false", "memoizedIsInitialized", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 6723,
  "endLine" : 6749,
  "identifiers" : [ "if", "bitField0_", "x00000001", "x00000001", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "before_", "if", "bitField0_", "x00000002", "x00000002", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "after_", "if", "bitField0_", "x00000004", "x00000004", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "ref_", "if", "bitField0_", "x00000008", "x00000008", "output", "writeMessage", "getUser", "if", "bitField0_", "x00000010", "x00000010", "output", "writeMessage", "getRepo", "if", "bitField0_", "x00000020", "x00000020", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "pathWithNamespace_", "for", "int", "i", "i", "commits_", "size", "i", "output", "writeMessage", "commits_", "get", "i", "for", "int", "i", "i", "files_", "size", "i", "output", "writeMessage", "files_", "get", "i", "unknownFields", "writeTo", "output" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 6752,
  "endLine" : 6790,
  "identifiers" : [ "int", "size", "memoizedSize", "if", "size", "return", "size", "size", "if", "bitField0_", "x00000001", "x00000001", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "before_", "if", "bitField0_", "x00000002", "x00000002", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "after_", "if", "bitField0_", "x00000004", "x00000004", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "ref_", "if", "bitField0_", "x00000008", "x00000008", "size", "com", "google", "protobuf", "CodedOutputStream", "computeMessageSize", "getUser", "if", "bitField0_", "x00000010", "x00000010", "size", "com", "google", "protobuf", "CodedOutputStream", "computeMessageSize", "getRepo", "if", "bitField0_", "x00000020", "x00000020", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "pathWithNamespace_", "for", "int", "i", "i", "commits_", "size", "i", "size", "com", "google", "protobuf", "CodedOutputStream", "computeMessageSize", "commits_", "get", "i", "for", "int", "i", "i", "files_", "size", "i", "size", "com", "google", "protobuf", "CodedOutputStream", "computeMessageSize", "files_", "get", "i", "size", "unknownFields", "getSerializedSize", "memoizedSize", "size", "return", "size" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 6794,
  "endLine" : 6840,
  "identifiers" : [ "if", "obj", "this", "return", "true", "if", "obj", "instanceof", "com", "fudan", "se", "bean", "GitMessage", "Push", "return", "super", "equals", "obj", "com", "fudan", "se", "bean", "GitMessage", "Push", "other", "com", "fudan", "se", "bean", "GitMessage", "Push", "obj", "boolean", "result", "true", "result", "result", "hasBefore", "other", "hasBefore", "if", "hasBefore", "result", "result", "getBefore", "equals", "other", "getBefore", "result", "result", "hasAfter", "other", "hasAfter", "if", "hasAfter", "result", "result", "getAfter", "equals", "other", "getAfter", "result", "result", "hasRef", "other", "hasRef", "if", "hasRef", "result", "result", "getRef", "equals", "other", "getRef", "result", "result", "hasUser", "other", "hasUser", "if", "hasUser", "result", "result", "getUser", "equals", "other", "getUser", "result", "result", "hasRepo", "other", "hasRepo", "if", "hasRepo", "result", "result", "getRepo", "equals", "other", "getRepo", "result", "result", "hasPathWithNamespace", "other", "hasPathWithNamespace", "if", "hasPathWithNamespace", "result", "result", "getPathWithNamespace", "equals", "other", "getPathWithNamespace", "result", "result", "getCommitsList", "equals", "other", "getCommitsList", "result", "result", "getFilesList", "equals", "other", "getFilesList", "result", "result", "unknownFields", "equals", "other", "unknownFields", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 6843,
  "endLine" : 6884,
  "identifiers" : [ "if", "memoizedHashCode", "return", "memoizedHashCode", "int", "hash", "hash", "hash", "getDescriptorForType", "hashCode", "if", "hasBefore", "hash", "hash", "BEFORE_FIELD_NUMBER", "hash", "hash", "getBefore", "hashCode", "if", "hasAfter", "hash", "hash", "AFTER_FIELD_NUMBER", "hash", "hash", "getAfter", "hashCode", "if", "hasRef", "hash", "hash", "REF_FIELD_NUMBER", "hash", "hash", "getRef", "hashCode", "if", "hasUser", "hash", "hash", "USER_FIELD_NUMBER", "hash", "hash", "getUser", "hashCode", "if", "hasRepo", "hash", "hash", "REPO_FIELD_NUMBER", "hash", "hash", "getRepo", "hashCode", "if", "hasPathWithNamespace", "hash", "hash", "PATHWITHNAMESPACE_FIELD_NUMBER", "hash", "hash", "getPathWithNamespace", "hashCode", "if", "getCommitsCount", "hash", "hash", "COMMITS_FIELD_NUMBER", "hash", "hash", "getCommitsList", "hashCode", "if", "getFilesCount", "hash", "hash", "FILES_FIELD_NUMBER", "hash", "hash", "getFilesList", "hashCode", "hash", "hash", "unknownFields", "hashCode", "memoizedHashCode", "hash", "return", "hash" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 7009,
  "endLine" : 7044,
  "identifiers" : [ "super", "clear", "before_", "bitField0_", "bitField0_", "x00000001", "after_", "bitField0_", "bitField0_", "x00000002", "ref_", "bitField0_", "bitField0_", "x00000004", "if", "userBuilder_", "null", "user_", "null", "else", "userBuilder_", "clear", "bitField0_", "bitField0_", "x00000008", "if", "repoBuilder_", "null", "repo_", "null", "else", "repoBuilder_", "clear", "bitField0_", "bitField0_", "x00000010", "pathWithNamespace_", "bitField0_", "bitField0_", "x00000020", "if", "commitsBuilder_", "null", "commits_", "java", "util", "Collections", "emptyList", "bitField0_", "bitField0_", "x00000040", "else", "commitsBuilder_", "clear", "if", "filesBuilder_", "null", "files_", "java", "util", "Collections", "emptyList", "bitField0_", "bitField0_", "x00000080", "else", "filesBuilder_", "clear", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 7067,
  "endLine" : 7124,
  "identifiers" : [ "com", "fudan", "se", "bean", "GitMessage", "Push", "result", "new", "com", "fudan", "se", "bean", "GitMessage", "Push", "this", "int", "from_bitField0_", "bitField0_", "int", "to_bitField0_", "if", "from_bitField0_", "x00000001", "x00000001", "to_bitField0_", "x00000001", "result", "before_", "before_", "if", "from_bitField0_", "x00000002", "x00000002", "to_bitField0_", "x00000002", "result", "after_", "after_", "if", "from_bitField0_", "x00000004", "x00000004", "to_bitField0_", "x00000004", "result", "ref_", "ref_", "if", "from_bitField0_", "x00000008", "x00000008", "to_bitField0_", "x00000008", "if", "userBuilder_", "null", "result", "user_", "user_", "else", "result", "user_", "userBuilder_", "build", "if", "from_bitField0_", "x00000010", "x00000010", "to_bitField0_", "x00000010", "if", "repoBuilder_", "null", "result", "repo_", "repo_", "else", "result", "repo_", "repoBuilder_", "build", "if", "from_bitField0_", "x00000020", "x00000020", "to_bitField0_", "x00000020", "result", "pathWithNamespace_", "pathWithNamespace_", "if", "commitsBuilder_", "null", "if", "bitField0_", "x00000040", "x00000040", "commits_", "java", "util", "Collections", "unmodifiableList", "commits_", "bitField0_", "bitField0_", "x00000040", "result", "commits_", "commits_", "else", "result", "commits_", "commitsBuilder_", "build", "if", "filesBuilder_", "null", "if", "bitField0_", "x00000080", "x00000080", "files_", "java", "util", "Collections", "unmodifiableList", "files_", "bitField0_", "bitField0_", "x00000080", "result", "files_", "files_", "else", "result", "files_", "filesBuilder_", "build", "result", "bitField0_", "to_bitField0_", "onBuilt", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 7168,
  "endLine" : 7253,
  "identifiers" : [ "if", "other", "com", "fudan", "se", "bean", "GitMessage", "Push", "getDefaultInstance", "return", "this", "if", "other", "hasBefore", "bitField0_", "x00000001", "before_", "other", "before_", "onChanged", "if", "other", "hasAfter", "bitField0_", "x00000002", "after_", "other", "after_", "onChanged", "if", "other", "hasRef", "bitField0_", "x00000004", "ref_", "other", "ref_", "onChanged", "if", "other", "hasUser", "mergeUser", "other", "getUser", "if", "other", "hasRepo", "mergeRepo", "other", "getRepo", "if", "other", "hasPathWithNamespace", "bitField0_", "x00000020", "pathWithNamespace_", "other", "pathWithNamespace_", "onChanged", "if", "commitsBuilder_", "null", "if", "other", "commits_", "isEmpty", "if", "commits_", "isEmpty", "commits_", "other", "commits_", "bitField0_", "bitField0_", "x00000040", "else", "ensureCommitsIsMutable", "commits_", "addAll", "other", "commits_", "onChanged", "else", "if", "other", "commits_", "isEmpty", "if", "commitsBuilder_", "isEmpty", "commitsBuilder_", "dispose", "commitsBuilder_", "null", "commits_", "other", "commits_", "bitField0_", "bitField0_", "x00000040", "commitsBuilder_", "com", "google", "protobuf", "GeneratedMessageV3", "alwaysUseFieldBuilders", "getCommitsFieldBuilder", "null", "else", "commitsBuilder_", "addAllMessages", "other", "commits_", "if", "filesBuilder_", "null", "if", "other", "files_", "isEmpty", "if", "files_", "isEmpty", "files_", "other", "files_", "bitField0_", "bitField0_", "x00000080", "else", "ensureFilesIsMutable", "files_", "addAll", "other", "files_", "onChanged", "else", "if", "other", "files_", "isEmpty", "if", "filesBuilder_", "isEmpty", "filesBuilder_", "dispose", "filesBuilder_", "null", "files_", "other", "files_", "bitField0_", "bitField0_", "x00000080", "filesBuilder_", "com", "google", "protobuf", "GeneratedMessageV3", "alwaysUseFieldBuilders", "getFilesFieldBuilder", "null", "else", "filesBuilder_", "addAllMessages", "other", "files_", "this", "mergeUnknownFields", "other", "unknownFields", "onChanged", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 7256,
  "endLine" : 7289,
  "identifiers" : [ "if", "hasBefore", "return", "false", "if", "hasAfter", "return", "false", "if", "hasRef", "return", "false", "if", "hasUser", "return", "false", "if", "hasRepo", "return", "false", "if", "getUser", "isInitialized", "return", "false", "if", "getRepo", "isInitialized", "return", "false", "for", "int", "i", "i", "getCommitsCount", "i", "if", "getCommits", "i", "isInitialized", "return", "false", "for", "int", "i", "i", "getFilesCount", "i", "if", "getFiles", "i", "isInitialized", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 7295,
  "endLine" : 7308,
  "identifiers" : [ "com", "fudan", "se", "bean", "GitMessage", "Push", "parsedMessage", "null", "try", "parsedMessage", "PARSER", "parsePartialFrom", "input", "extensionRegistry", "catch", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "parsedMessage", "com", "fudan", "se", "bean", "GitMessage", "Push", "e", "getUnfinishedMessage", "throw", "e", "unwrapIOException", "finally", "if", "parsedMessage", "null", "mergeFrom", "parsedMessage", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 7331,
  "endLine" : 7344,
  "identifiers" : [ "java", "lang", "Object", "ref", "before_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "before_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 7354,
  "endLine" : 7365,
  "identifiers" : [ "java", "lang", "Object", "ref", "before_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "before_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 7434,
  "endLine" : 7447,
  "identifiers" : [ "java", "lang", "Object", "ref", "after_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "after_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 7457,
  "endLine" : 7468,
  "identifiers" : [ "java", "lang", "Object", "ref", "after_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "after_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 7537,
  "endLine" : 7550,
  "identifiers" : [ "java", "lang", "Object", "ref", "ref_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "ref_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 7560,
  "endLine" : 7571,
  "identifiers" : [ "java", "lang", "Object", "ref", "ref_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "ref_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 7674,
  "endLine" : 7690,
  "identifiers" : [ "if", "userBuilder_", "null", "if", "bitField0_", "x00000008", "x00000008", "user_", "null", "user_", "com", "fudan", "se", "bean", "GitMessage", "User", "getDefaultInstance", "user_", "com", "fudan", "se", "bean", "GitMessage", "User", "newBuilder", "user_", "mergeFrom", "value", "buildPartial", "else", "user_", "value", "onChanged", "else", "userBuilder_", "mergeFrom", "value", "bitField0_", "x00000008", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 7729,
  "endLine" : 7739,
  "identifiers" : [ "if", "userBuilder_", "null", "userBuilder_", "new", "com", "google", "protobuf", "SingleFieldBuilderV3", "com", "fudan", "se", "bean", "GitMessage", "User", "com", "fudan", "se", "bean", "GitMessage", "User", "Builder", "com", "fudan", "se", "bean", "GitMessage", "UserOrBuilder", "getUser", "getParentForChildren", "isClean", "user_", "null", "return", "userBuilder_" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 7795,
  "endLine" : 7811,
  "identifiers" : [ "if", "repoBuilder_", "null", "if", "bitField0_", "x00000010", "x00000010", "repo_", "null", "repo_", "com", "fudan", "se", "bean", "GitMessage", "Repository", "getDefaultInstance", "repo_", "com", "fudan", "se", "bean", "GitMessage", "Repository", "newBuilder", "repo_", "mergeFrom", "value", "buildPartial", "else", "repo_", "value", "onChanged", "else", "repoBuilder_", "mergeFrom", "value", "bitField0_", "x00000010", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 7850,
  "endLine" : 7860,
  "identifiers" : [ "if", "repoBuilder_", "null", "repoBuilder_", "new", "com", "google", "protobuf", "SingleFieldBuilderV3", "com", "fudan", "se", "bean", "GitMessage", "Repository", "com", "fudan", "se", "bean", "GitMessage", "Repository", "Builder", "com", "fudan", "se", "bean", "GitMessage", "RepositoryOrBuilder", "getRepo", "getParentForChildren", "isClean", "repo_", "null", "return", "repoBuilder_" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 7874,
  "endLine" : 7887,
  "identifiers" : [ "java", "lang", "Object", "ref", "pathWithNamespace_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "pathWithNamespace_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 7893,
  "endLine" : 7904,
  "identifiers" : [ "java", "lang", "Object", "ref", "pathWithNamespace_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "pathWithNamespace_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 8173,
  "endLine" : 8184,
  "identifiers" : [ "if", "commitsBuilder_", "null", "commitsBuilder_", "new", "com", "google", "protobuf", "RepeatedFieldBuilderV3", "com", "fudan", "se", "bean", "GitMessage", "Commit", "com", "fudan", "se", "bean", "GitMessage", "Commit", "Builder", "com", "fudan", "se", "bean", "GitMessage", "CommitOrBuilder", "commits_", "bitField0_", "x00000040", "x00000040", "getParentForChildren", "isClean", "commits_", "null", "return", "commitsBuilder_" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 8490,
  "endLine" : 8501,
  "identifiers" : [ "if", "filesBuilder_", "null", "filesBuilder_", "new", "com", "google", "protobuf", "RepeatedFieldBuilderV3", "com", "fudan", "se", "bean", "GitMessage", "File", "com", "fudan", "se", "bean", "GitMessage", "File", "Builder", "com", "fudan", "se", "bean", "GitMessage", "FileOrBuilder", "files_", "bitField0_", "x00000080", "x00000080", "getParentForChildren", "isClean", "files_", "null", "return", "filesBuilder_" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 8557,
  "endLine" : 8759,
  "identifiers" : [ "boolean", "hasUser", "com", "fudan", "se", "bean", "GitMessage", "User", "getUser", "com", "fudan", "se", "bean", "GitMessage", "UserOrBuilder", "getUserOrBuilder", "boolean", "hasRepo", "com", "fudan", "se", "bean", "GitMessage", "Repository", "getRepo", "com", "fudan", "se", "bean", "GitMessage", "RepositoryOrBuilder", "getRepoOrBuilder", "boolean", "hasId", "long", "getId", "boolean", "hasTitle", "com", "google", "protobuf", "ByteString", "getTitle", "boolean", "hasAuthorId", "long", "getAuthorId", "boolean", "hasProjectId", "long", "getProjectId", "boolean", "hasCreatedAt", "java", "lang", "String", "getCreatedAt", "com", "google", "protobuf", "ByteString", "getCreatedAtBytes", "boolean", "hasUpdatedAt", "java", "lang", "String", "getUpdatedAt", "com", "google", "protobuf", "ByteString", "getUpdatedAtBytes", "boolean", "hasPosition", "long", "getPosition", "boolean", "hasBranchName", "com", "google", "protobuf", "ByteString", "getBranchName", "boolean", "hasDescription", "com", "google", "protobuf", "ByteString", "getDescription", "boolean", "hasMilestoneId", "com", "google", "protobuf", "ByteString", "getMilestoneId", "boolean", "hasState", "java", "lang", "String", "getState", "com", "google", "protobuf", "ByteString", "getStateBytes", "boolean", "hasIid", "long", "getIid", "boolean", "hasUrl", "java", "lang", "String", "getUrl", "com", "google", "protobuf", "ByteString", "getUrlBytes", "boolean", "hasAction", "java", "lang", "String", "getAction", "com", "google", "protobuf", "ByteString", "getActionBytes" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 8775,
  "endLine" : 8790,
  "identifiers" : [ "id_", "L", "title_", "com", "google", "protobuf", "ByteString", "EMPTY", "authorId_", "L", "projectId_", "L", "createdAt_", "updatedAt_", "position_", "L", "branchName_", "com", "google", "protobuf", "ByteString", "EMPTY", "description_", "com", "google", "protobuf", "ByteString", "EMPTY", "milestoneId_", "com", "google", "protobuf", "ByteString", "EMPTY", "state_", "iid_", "L", "url_", "action_" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 8800,
  "endLine" : 8932,
  "identifiers" : [ "this", "int", "mutable_bitField0_", "com", "google", "protobuf", "UnknownFieldSet", "Builder", "unknownFields", "com", "google", "protobuf", "UnknownFieldSet", "newBuilder", "try", "boolean", "done", "false", "while", "done", "int", "tag", "input", "readTag", "switch", "tag", "case", "done", "true", "break", "default", "if", "parseUnknownField", "input", "unknownFields", "extensionRegistry", "tag", "done", "true", "break", "case", "com", "fudan", "se", "bean", "GitMessage", "User", "Builder", "subBuilder", "null", "if", "bitField0_", "x00000001", "x00000001", "subBuilder", "user_", "toBuilder", "user_", "input", "readMessage", "com", "fudan", "se", "bean", "GitMessage", "User", "PARSER", "extensionRegistry", "if", "subBuilder", "null", "subBuilder", "mergeFrom", "user_", "user_", "subBuilder", "buildPartial", "bitField0_", "x00000001", "break", "case", "com", "fudan", "se", "bean", "GitMessage", "Repository", "Builder", "subBuilder", "null", "if", "bitField0_", "x00000002", "x00000002", "subBuilder", "repo_", "toBuilder", "repo_", "input", "readMessage", "com", "fudan", "se", "bean", "GitMessage", "Repository", "PARSER", "extensionRegistry", "if", "subBuilder", "null", "subBuilder", "mergeFrom", "repo_", "repo_", "subBuilder", "buildPartial", "bitField0_", "x00000002", "break", "case", "bitField0_", "x00000004", "id_", "input", "readUInt64", "break", "case", "bitField0_", "x00000008", "title_", "input", "readBytes", "break", "case", "bitField0_", "x00000010", "authorId_", "input", "readUInt64", "break", "case", "bitField0_", "x00000020", "projectId_", "input", "readUInt64", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000040", "createdAt_", "bs", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000080", "updatedAt_", "bs", "break", "case", "bitField0_", "x00000100", "position_", "input", "readUInt64", "break", "case", "bitField0_", "x00000200", "branchName_", "input", "readBytes", "break", "case", "bitField0_", "x00000400", "description_", "input", "readBytes", "break", "case", "bitField0_", "x00000800", "milestoneId_", "input", "readBytes", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00001000", "state_", "bs", "break", "case", "bitField0_", "x00002000", "iid_", "input", "readUInt64", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00004000", "url_", "bs", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00008000", "action_", "bs", "break", "catch", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "throw", "e", "setUnfinishedMessage", "this", "catch", "java", "io", "IOException", "e", "throw", "new", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "setUnfinishedMessage", "this", "finally", "this", "unknownFields", "unknownFields", "build", "makeExtensionsImmutable" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 9084,
  "endLine" : 9097,
  "identifiers" : [ "java", "lang", "Object", "ref", "createdAt_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "createdAt_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 9103,
  "endLine" : 9114,
  "identifiers" : [ "java", "lang", "Object", "ref", "createdAt_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "createdAt_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 9129,
  "endLine" : 9142,
  "identifiers" : [ "java", "lang", "Object", "ref", "updatedAt_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "updatedAt_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 9148,
  "endLine" : 9159,
  "identifiers" : [ "java", "lang", "Object", "ref", "updatedAt_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "updatedAt_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 9258,
  "endLine" : 9271,
  "identifiers" : [ "java", "lang", "Object", "ref", "state_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "state_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 9277,
  "endLine" : 9288,
  "identifiers" : [ "java", "lang", "Object", "ref", "state_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "state_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 9320,
  "endLine" : 9333,
  "identifiers" : [ "java", "lang", "Object", "ref", "url_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "url_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 9339,
  "endLine" : 9350,
  "identifiers" : [ "java", "lang", "Object", "ref", "url_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "url_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 9365,
  "endLine" : 9378,
  "identifiers" : [ "java", "lang", "Object", "ref", "action_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "action_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 9384,
  "endLine" : 9395,
  "identifiers" : [ "java", "lang", "Object", "ref", "action_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "action_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 9399,
  "endLine" : 9430,
  "identifiers" : [ "byte", "isInitialized", "memoizedIsInitialized", "if", "isInitialized", "return", "true", "if", "isInitialized", "return", "false", "if", "hasUser", "memoizedIsInitialized", "return", "false", "if", "hasRepo", "memoizedIsInitialized", "return", "false", "if", "hasId", "memoizedIsInitialized", "return", "false", "if", "getUser", "isInitialized", "memoizedIsInitialized", "return", "false", "if", "getRepo", "isInitialized", "memoizedIsInitialized", "return", "false", "memoizedIsInitialized", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 9434,
  "endLine" : 9484,
  "identifiers" : [ "if", "bitField0_", "x00000001", "x00000001", "output", "writeMessage", "getUser", "if", "bitField0_", "x00000002", "x00000002", "output", "writeMessage", "getRepo", "if", "bitField0_", "x00000004", "x00000004", "output", "writeUInt64", "id_", "if", "bitField0_", "x00000008", "x00000008", "output", "writeBytes", "title_", "if", "bitField0_", "x00000010", "x00000010", "output", "writeUInt64", "authorId_", "if", "bitField0_", "x00000020", "x00000020", "output", "writeUInt64", "projectId_", "if", "bitField0_", "x00000040", "x00000040", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "createdAt_", "if", "bitField0_", "x00000080", "x00000080", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "updatedAt_", "if", "bitField0_", "x00000100", "x00000100", "output", "writeUInt64", "position_", "if", "bitField0_", "x00000200", "x00000200", "output", "writeBytes", "branchName_", "if", "bitField0_", "x00000400", "x00000400", "output", "writeBytes", "description_", "if", "bitField0_", "x00000800", "x00000800", "output", "writeBytes", "milestoneId_", "if", "bitField0_", "x00001000", "x00001000", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "state_", "if", "bitField0_", "x00002000", "x00002000", "output", "writeUInt64", "iid_", "if", "bitField0_", "x00004000", "x00004000", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "url_", "if", "bitField0_", "x00008000", "x00008000", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "action_", "unknownFields", "writeTo", "output" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 9487,
  "endLine" : 9556,
  "identifiers" : [ "int", "size", "memoizedSize", "if", "size", "return", "size", "size", "if", "bitField0_", "x00000001", "x00000001", "size", "com", "google", "protobuf", "CodedOutputStream", "computeMessageSize", "getUser", "if", "bitField0_", "x00000002", "x00000002", "size", "com", "google", "protobuf", "CodedOutputStream", "computeMessageSize", "getRepo", "if", "bitField0_", "x00000004", "x00000004", "size", "com", "google", "protobuf", "CodedOutputStream", "computeUInt64Size", "id_", "if", "bitField0_", "x00000008", "x00000008", "size", "com", "google", "protobuf", "CodedOutputStream", "computeBytesSize", "title_", "if", "bitField0_", "x00000010", "x00000010", "size", "com", "google", "protobuf", "CodedOutputStream", "computeUInt64Size", "authorId_", "if", "bitField0_", "x00000020", "x00000020", "size", "com", "google", "protobuf", "CodedOutputStream", "computeUInt64Size", "projectId_", "if", "bitField0_", "x00000040", "x00000040", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "createdAt_", "if", "bitField0_", "x00000080", "x00000080", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "updatedAt_", "if", "bitField0_", "x00000100", "x00000100", "size", "com", "google", "protobuf", "CodedOutputStream", "computeUInt64Size", "position_", "if", "bitField0_", "x00000200", "x00000200", "size", "com", "google", "protobuf", "CodedOutputStream", "computeBytesSize", "branchName_", "if", "bitField0_", "x00000400", "x00000400", "size", "com", "google", "protobuf", "CodedOutputStream", "computeBytesSize", "description_", "if", "bitField0_", "x00000800", "x00000800", "size", "com", "google", "protobuf", "CodedOutputStream", "computeBytesSize", "milestoneId_", "if", "bitField0_", "x00001000", "x00001000", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "state_", "if", "bitField0_", "x00002000", "x00002000", "size", "com", "google", "protobuf", "CodedOutputStream", "computeUInt64Size", "iid_", "if", "bitField0_", "x00004000", "x00004000", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "url_", "if", "bitField0_", "x00008000", "x00008000", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "action_", "size", "unknownFields", "getSerializedSize", "memoizedSize", "size", "return", "size" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 9560,
  "endLine" : 9652,
  "identifiers" : [ "if", "obj", "this", "return", "true", "if", "obj", "instanceof", "com", "fudan", "se", "bean", "GitMessage", "Issue", "return", "super", "equals", "obj", "com", "fudan", "se", "bean", "GitMessage", "Issue", "other", "com", "fudan", "se", "bean", "GitMessage", "Issue", "obj", "boolean", "result", "true", "result", "result", "hasUser", "other", "hasUser", "if", "hasUser", "result", "result", "getUser", "equals", "other", "getUser", "result", "result", "hasRepo", "other", "hasRepo", "if", "hasRepo", "result", "result", "getRepo", "equals", "other", "getRepo", "result", "result", "hasId", "other", "hasId", "if", "hasId", "result", "result", "getId", "other", "getId", "result", "result", "hasTitle", "other", "hasTitle", "if", "hasTitle", "result", "result", "getTitle", "equals", "other", "getTitle", "result", "result", "hasAuthorId", "other", "hasAuthorId", "if", "hasAuthorId", "result", "result", "getAuthorId", "other", "getAuthorId", "result", "result", "hasProjectId", "other", "hasProjectId", "if", "hasProjectId", "result", "result", "getProjectId", "other", "getProjectId", "result", "result", "hasCreatedAt", "other", "hasCreatedAt", "if", "hasCreatedAt", "result", "result", "getCreatedAt", "equals", "other", "getCreatedAt", "result", "result", "hasUpdatedAt", "other", "hasUpdatedAt", "if", "hasUpdatedAt", "result", "result", "getUpdatedAt", "equals", "other", "getUpdatedAt", "result", "result", "hasPosition", "other", "hasPosition", "if", "hasPosition", "result", "result", "getPosition", "other", "getPosition", "result", "result", "hasBranchName", "other", "hasBranchName", "if", "hasBranchName", "result", "result", "getBranchName", "equals", "other", "getBranchName", "result", "result", "hasDescription", "other", "hasDescription", "if", "hasDescription", "result", "result", "getDescription", "equals", "other", "getDescription", "result", "result", "hasMilestoneId", "other", "hasMilestoneId", "if", "hasMilestoneId", "result", "result", "getMilestoneId", "equals", "other", "getMilestoneId", "result", "result", "hasState", "other", "hasState", "if", "hasState", "result", "result", "getState", "equals", "other", "getState", "result", "result", "hasIid", "other", "hasIid", "if", "hasIid", "result", "result", "getIid", "other", "getIid", "result", "result", "hasUrl", "other", "hasUrl", "if", "hasUrl", "result", "result", "getUrl", "equals", "other", "getUrl", "result", "result", "hasAction", "other", "hasAction", "if", "hasAction", "result", "result", "getAction", "equals", "other", "getAction", "result", "result", "unknownFields", "equals", "other", "unknownFields", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 9655,
  "endLine" : 9733,
  "identifiers" : [ "if", "memoizedHashCode", "return", "memoizedHashCode", "int", "hash", "hash", "hash", "getDescriptorForType", "hashCode", "if", "hasUser", "hash", "hash", "USER_FIELD_NUMBER", "hash", "hash", "getUser", "hashCode", "if", "hasRepo", "hash", "hash", "REPO_FIELD_NUMBER", "hash", "hash", "getRepo", "hashCode", "if", "hasId", "hash", "hash", "ID_FIELD_NUMBER", "hash", "hash", "com", "google", "protobuf", "Internal", "hashLong", "getId", "if", "hasTitle", "hash", "hash", "TITLE_FIELD_NUMBER", "hash", "hash", "getTitle", "hashCode", "if", "hasAuthorId", "hash", "hash", "AUTHOR_ID_FIELD_NUMBER", "hash", "hash", "com", "google", "protobuf", "Internal", "hashLong", "getAuthorId", "if", "hasProjectId", "hash", "hash", "PROJECT_ID_FIELD_NUMBER", "hash", "hash", "com", "google", "protobuf", "Internal", "hashLong", "getProjectId", "if", "hasCreatedAt", "hash", "hash", "CREATED_AT_FIELD_NUMBER", "hash", "hash", "getCreatedAt", "hashCode", "if", "hasUpdatedAt", "hash", "hash", "UPDATED_AT_FIELD_NUMBER", "hash", "hash", "getUpdatedAt", "hashCode", "if", "hasPosition", "hash", "hash", "POSITION_FIELD_NUMBER", "hash", "hash", "com", "google", "protobuf", "Internal", "hashLong", "getPosition", "if", "hasBranchName", "hash", "hash", "BRANCH_NAME_FIELD_NUMBER", "hash", "hash", "getBranchName", "hashCode", "if", "hasDescription", "hash", "hash", "DESCRIPTION_FIELD_NUMBER", "hash", "hash", "getDescription", "hashCode", "if", "hasMilestoneId", "hash", "hash", "MILESTONE_ID_FIELD_NUMBER", "hash", "hash", "getMilestoneId", "hashCode", "if", "hasState", "hash", "hash", "STATE_FIELD_NUMBER", "hash", "hash", "getState", "hashCode", "if", "hasIid", "hash", "hash", "IID_FIELD_NUMBER", "hash", "hash", "com", "google", "protobuf", "Internal", "hashLong", "getIid", "if", "hasUrl", "hash", "hash", "URL_FIELD_NUMBER", "hash", "hash", "getUrl", "hashCode", "if", "hasAction", "hash", "hash", "ACTION_FIELD_NUMBER", "hash", "hash", "getAction", "hashCode", "hash", "hash", "unknownFields", "hashCode", "memoizedHashCode", "hash", "return", "hash" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 9856,
  "endLine" : 9899,
  "identifiers" : [ "super", "clear", "if", "userBuilder_", "null", "user_", "null", "else", "userBuilder_", "clear", "bitField0_", "bitField0_", "x00000001", "if", "repoBuilder_", "null", "repo_", "null", "else", "repoBuilder_", "clear", "bitField0_", "bitField0_", "x00000002", "id_", "L", "bitField0_", "bitField0_", "x00000004", "title_", "com", "google", "protobuf", "ByteString", "EMPTY", "bitField0_", "bitField0_", "x00000008", "authorId_", "L", "bitField0_", "bitField0_", "x00000010", "projectId_", "L", "bitField0_", "bitField0_", "x00000020", "createdAt_", "bitField0_", "bitField0_", "x00000040", "updatedAt_", "bitField0_", "bitField0_", "x00000080", "position_", "L", "bitField0_", "bitField0_", "x00000100", "branchName_", "com", "google", "protobuf", "ByteString", "EMPTY", "bitField0_", "bitField0_", "x00000200", "description_", "com", "google", "protobuf", "ByteString", "EMPTY", "bitField0_", "bitField0_", "x00000400", "milestoneId_", "com", "google", "protobuf", "ByteString", "EMPTY", "bitField0_", "bitField0_", "x00000800", "state_", "bitField0_", "bitField0_", "x00001000", "iid_", "L", "bitField0_", "bitField0_", "x00002000", "url_", "bitField0_", "bitField0_", "x00004000", "action_", "bitField0_", "bitField0_", "x00008000", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 9922,
  "endLine" : 10001,
  "identifiers" : [ "com", "fudan", "se", "bean", "GitMessage", "Issue", "result", "new", "com", "fudan", "se", "bean", "GitMessage", "Issue", "this", "int", "from_bitField0_", "bitField0_", "int", "to_bitField0_", "if", "from_bitField0_", "x00000001", "x00000001", "to_bitField0_", "x00000001", "if", "userBuilder_", "null", "result", "user_", "user_", "else", "result", "user_", "userBuilder_", "build", "if", "from_bitField0_", "x00000002", "x00000002", "to_bitField0_", "x00000002", "if", "repoBuilder_", "null", "result", "repo_", "repo_", "else", "result", "repo_", "repoBuilder_", "build", "if", "from_bitField0_", "x00000004", "x00000004", "to_bitField0_", "x00000004", "result", "id_", "id_", "if", "from_bitField0_", "x00000008", "x00000008", "to_bitField0_", "x00000008", "result", "title_", "title_", "if", "from_bitField0_", "x00000010", "x00000010", "to_bitField0_", "x00000010", "result", "authorId_", "authorId_", "if", "from_bitField0_", "x00000020", "x00000020", "to_bitField0_", "x00000020", "result", "projectId_", "projectId_", "if", "from_bitField0_", "x00000040", "x00000040", "to_bitField0_", "x00000040", "result", "createdAt_", "createdAt_", "if", "from_bitField0_", "x00000080", "x00000080", "to_bitField0_", "x00000080", "result", "updatedAt_", "updatedAt_", "if", "from_bitField0_", "x00000100", "x00000100", "to_bitField0_", "x00000100", "result", "position_", "position_", "if", "from_bitField0_", "x00000200", "x00000200", "to_bitField0_", "x00000200", "result", "branchName_", "branchName_", "if", "from_bitField0_", "x00000400", "x00000400", "to_bitField0_", "x00000400", "result", "description_", "description_", "if", "from_bitField0_", "x00000800", "x00000800", "to_bitField0_", "x00000800", "result", "milestoneId_", "milestoneId_", "if", "from_bitField0_", "x00001000", "x00001000", "to_bitField0_", "x00001000", "result", "state_", "state_", "if", "from_bitField0_", "x00002000", "x00002000", "to_bitField0_", "x00002000", "result", "iid_", "iid_", "if", "from_bitField0_", "x00004000", "x00004000", "to_bitField0_", "x00004000", "result", "url_", "url_", "if", "from_bitField0_", "x00008000", "x00008000", "to_bitField0_", "x00008000", "result", "action_", "action_", "result", "bitField0_", "to_bitField0_", "onBuilt", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 10045,
  "endLine" : 10110,
  "identifiers" : [ "if", "other", "com", "fudan", "se", "bean", "GitMessage", "Issue", "getDefaultInstance", "return", "this", "if", "other", "hasUser", "mergeUser", "other", "getUser", "if", "other", "hasRepo", "mergeRepo", "other", "getRepo", "if", "other", "hasId", "setId", "other", "getId", "if", "other", "hasTitle", "setTitle", "other", "getTitle", "if", "other", "hasAuthorId", "setAuthorId", "other", "getAuthorId", "if", "other", "hasProjectId", "setProjectId", "other", "getProjectId", "if", "other", "hasCreatedAt", "bitField0_", "x00000040", "createdAt_", "other", "createdAt_", "onChanged", "if", "other", "hasUpdatedAt", "bitField0_", "x00000080", "updatedAt_", "other", "updatedAt_", "onChanged", "if", "other", "hasPosition", "setPosition", "other", "getPosition", "if", "other", "hasBranchName", "setBranchName", "other", "getBranchName", "if", "other", "hasDescription", "setDescription", "other", "getDescription", "if", "other", "hasMilestoneId", "setMilestoneId", "other", "getMilestoneId", "if", "other", "hasState", "bitField0_", "x00001000", "state_", "other", "state_", "onChanged", "if", "other", "hasIid", "setIid", "other", "getIid", "if", "other", "hasUrl", "bitField0_", "x00004000", "url_", "other", "url_", "onChanged", "if", "other", "hasAction", "bitField0_", "x00008000", "action_", "other", "action_", "onChanged", "this", "mergeUnknownFields", "other", "unknownFields", "onChanged", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 10113,
  "endLine" : 10130,
  "identifiers" : [ "if", "hasUser", "return", "false", "if", "hasRepo", "return", "false", "if", "hasId", "return", "false", "if", "getUser", "isInitialized", "return", "false", "if", "getRepo", "isInitialized", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 10136,
  "endLine" : 10149,
  "identifiers" : [ "com", "fudan", "se", "bean", "GitMessage", "Issue", "parsedMessage", "null", "try", "parsedMessage", "PARSER", "parsePartialFrom", "input", "extensionRegistry", "catch", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "parsedMessage", "com", "fudan", "se", "bean", "GitMessage", "Issue", "e", "getUnfinishedMessage", "throw", "e", "unwrapIOException", "finally", "if", "parsedMessage", "null", "mergeFrom", "parsedMessage", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 10206,
  "endLine" : 10222,
  "identifiers" : [ "if", "userBuilder_", "null", "if", "bitField0_", "x00000001", "x00000001", "user_", "null", "user_", "com", "fudan", "se", "bean", "GitMessage", "User", "getDefaultInstance", "user_", "com", "fudan", "se", "bean", "GitMessage", "User", "newBuilder", "user_", "mergeFrom", "value", "buildPartial", "else", "user_", "value", "onChanged", "else", "userBuilder_", "mergeFrom", "value", "bitField0_", "x00000001", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 10261,
  "endLine" : 10271,
  "identifiers" : [ "if", "userBuilder_", "null", "userBuilder_", "new", "com", "google", "protobuf", "SingleFieldBuilderV3", "com", "fudan", "se", "bean", "GitMessage", "User", "com", "fudan", "se", "bean", "GitMessage", "User", "Builder", "com", "fudan", "se", "bean", "GitMessage", "UserOrBuilder", "getUser", "getParentForChildren", "isClean", "user_", "null", "return", "userBuilder_" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 10327,
  "endLine" : 10343,
  "identifiers" : [ "if", "repoBuilder_", "null", "if", "bitField0_", "x00000002", "x00000002", "repo_", "null", "repo_", "com", "fudan", "se", "bean", "GitMessage", "Repository", "getDefaultInstance", "repo_", "com", "fudan", "se", "bean", "GitMessage", "Repository", "newBuilder", "repo_", "mergeFrom", "value", "buildPartial", "else", "repo_", "value", "onChanged", "else", "repoBuilder_", "mergeFrom", "value", "bitField0_", "x00000002", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 10382,
  "endLine" : 10392,
  "identifiers" : [ "if", "repoBuilder_", "null", "repoBuilder_", "new", "com", "google", "protobuf", "SingleFieldBuilderV3", "com", "fudan", "se", "bean", "GitMessage", "Repository", "com", "fudan", "se", "bean", "GitMessage", "Repository", "Builder", "com", "fudan", "se", "bean", "GitMessage", "RepositoryOrBuilder", "getRepo", "getParentForChildren", "isClean", "repo_", "null", "return", "repoBuilder_" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 10561,
  "endLine" : 10574,
  "identifiers" : [ "java", "lang", "Object", "ref", "createdAt_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "createdAt_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 10580,
  "endLine" : 10591,
  "identifiers" : [ "java", "lang", "Object", "ref", "createdAt_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "createdAt_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 10640,
  "endLine" : 10653,
  "identifiers" : [ "java", "lang", "Object", "ref", "updatedAt_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "updatedAt_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 10659,
  "endLine" : 10670,
  "identifiers" : [ "java", "lang", "Object", "ref", "updatedAt_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "updatedAt_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 10896,
  "endLine" : 10909,
  "identifiers" : [ "java", "lang", "Object", "ref", "state_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "state_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 10915,
  "endLine" : 10926,
  "identifiers" : [ "java", "lang", "Object", "ref", "state_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "state_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11009,
  "endLine" : 11022,
  "identifiers" : [ "java", "lang", "Object", "ref", "url_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "url_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11028,
  "endLine" : 11039,
  "identifiers" : [ "java", "lang", "Object", "ref", "url_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "url_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11088,
  "endLine" : 11101,
  "identifiers" : [ "java", "lang", "Object", "ref", "action_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "action_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11107,
  "endLine" : 11118,
  "identifiers" : [ "java", "lang", "Object", "ref", "action_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "action_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11209,
  "endLine" : 11262,
  "identifiers" : [ "boolean", "hasMessageType", "java", "lang", "String", "getMessageType", "com", "google", "protobuf", "ByteString", "getMessageTypeBytes", "boolean", "hasCompress", "java", "lang", "String", "getCompress", "com", "google", "protobuf", "ByteString", "getCompressBytes" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11287,
  "endLine" : 11330,
  "identifiers" : [ "this", "int", "mutable_bitField0_", "com", "google", "protobuf", "UnknownFieldSet", "Builder", "unknownFields", "com", "google", "protobuf", "UnknownFieldSet", "newBuilder", "try", "boolean", "done", "false", "while", "done", "int", "tag", "input", "readTag", "switch", "tag", "case", "done", "true", "break", "default", "if", "parseUnknownField", "input", "unknownFields", "extensionRegistry", "tag", "done", "true", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000001", "messageType_", "bs", "break", "case", "com", "google", "protobuf", "ByteString", "bs", "input", "readBytes", "bitField0_", "x00000002", "compress_", "bs", "break", "catch", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "throw", "e", "setUnfinishedMessage", "this", "catch", "java", "io", "IOException", "e", "throw", "new", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "setUnfinishedMessage", "this", "finally", "this", "unknownFields", "unknownFields", "build", "makeExtensionsImmutable" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11366,
  "endLine" : 11379,
  "identifiers" : [ "java", "lang", "Object", "ref", "messageType_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "messageType_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11389,
  "endLine" : 11400,
  "identifiers" : [ "java", "lang", "Object", "ref", "messageType_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "messageType_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11423,
  "endLine" : 11436,
  "identifiers" : [ "java", "lang", "Object", "ref", "compress_", "if", "ref", "instanceof", "java", "lang", "String", "return", "java", "lang", "String", "ref", "else", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "compress_", "s", "return", "s" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11446,
  "endLine" : 11457,
  "identifiers" : [ "java", "lang", "Object", "ref", "compress_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "compress_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11461,
  "endLine" : 11480,
  "identifiers" : [ "byte", "isInitialized", "memoizedIsInitialized", "if", "isInitialized", "return", "true", "if", "isInitialized", "return", "false", "if", "hasMessageType", "memoizedIsInitialized", "return", "false", "if", "hasCompress", "memoizedIsInitialized", "return", "false", "memoizedIsInitialized", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11484,
  "endLine" : 11492,
  "identifiers" : [ "if", "bitField0_", "x00000001", "x00000001", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "messageType_", "if", "bitField0_", "x00000002", "x00000002", "com", "google", "protobuf", "GeneratedMessageV3", "writeString", "output", "compress_", "unknownFields", "writeTo", "output" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11495,
  "endLine" : 11511,
  "identifiers" : [ "int", "size", "memoizedSize", "if", "size", "return", "size", "size", "if", "bitField0_", "x00000001", "x00000001", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "messageType_", "if", "bitField0_", "x00000002", "x00000002", "size", "com", "google", "protobuf", "GeneratedMessageV3", "computeStringSize", "compress_", "size", "unknownFields", "getSerializedSize", "memoizedSize", "size", "return", "size" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11515,
  "endLine" : 11537,
  "identifiers" : [ "if", "obj", "this", "return", "true", "if", "obj", "instanceof", "com", "fudan", "se", "bean", "GitMessage", "HeadMeta", "return", "super", "equals", "obj", "com", "fudan", "se", "bean", "GitMessage", "HeadMeta", "other", "com", "fudan", "se", "bean", "GitMessage", "HeadMeta", "obj", "boolean", "result", "true", "result", "result", "hasMessageType", "other", "hasMessageType", "if", "hasMessageType", "result", "result", "getMessageType", "equals", "other", "getMessageType", "result", "result", "hasCompress", "other", "hasCompress", "if", "hasCompress", "result", "result", "getCompress", "equals", "other", "getCompress", "result", "result", "unknownFields", "equals", "other", "unknownFields", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11540,
  "endLine" : 11557,
  "identifiers" : [ "if", "memoizedHashCode", "return", "memoizedHashCode", "int", "hash", "hash", "hash", "getDescriptorForType", "hashCode", "if", "hasMessageType", "hash", "hash", "MESSAGE_TYPE_FIELD_NUMBER", "hash", "hash", "getMessageType", "hashCode", "if", "hasCompress", "hash", "hash", "COMPRESS_FIELD_NUMBER", "hash", "hash", "getCompress", "hashCode", "hash", "hash", "unknownFields", "hashCode", "memoizedHashCode", "hash", "return", "hash" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11704,
  "endLine" : 11719,
  "identifiers" : [ "com", "fudan", "se", "bean", "GitMessage", "HeadMeta", "result", "new", "com", "fudan", "se", "bean", "GitMessage", "HeadMeta", "this", "int", "from_bitField0_", "bitField0_", "int", "to_bitField0_", "if", "from_bitField0_", "x00000001", "x00000001", "to_bitField0_", "x00000001", "result", "messageType_", "messageType_", "if", "from_bitField0_", "x00000002", "x00000002", "to_bitField0_", "x00000002", "result", "compress_", "compress_", "result", "bitField0_", "to_bitField0_", "onBuilt", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11763,
  "endLine" : 11780,
  "identifiers" : [ "if", "other", "com", "fudan", "se", "bean", "GitMessage", "HeadMeta", "getDefaultInstance", "return", "this", "if", "other", "hasMessageType", "bitField0_", "x00000001", "messageType_", "other", "messageType_", "onChanged", "if", "other", "hasCompress", "bitField0_", "x00000002", "compress_", "other", "compress_", "onChanged", "this", "mergeUnknownFields", "other", "unknownFields", "onChanged", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11797,
  "endLine" : 11810,
  "identifiers" : [ "com", "fudan", "se", "bean", "GitMessage", "HeadMeta", "parsedMessage", "null", "try", "parsedMessage", "PARSER", "parsePartialFrom", "input", "extensionRegistry", "catch", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "parsedMessage", "com", "fudan", "se", "bean", "GitMessage", "HeadMeta", "e", "getUnfinishedMessage", "throw", "e", "unwrapIOException", "finally", "if", "parsedMessage", "null", "mergeFrom", "parsedMessage", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11833,
  "endLine" : 11846,
  "identifiers" : [ "java", "lang", "Object", "ref", "messageType_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "messageType_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11856,
  "endLine" : 11867,
  "identifiers" : [ "java", "lang", "Object", "ref", "messageType_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "messageType_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11936,
  "endLine" : 11949,
  "identifiers" : [ "java", "lang", "Object", "ref", "compress_", "if", "ref", "instanceof", "java", "lang", "String", "com", "google", "protobuf", "ByteString", "bs", "com", "google", "protobuf", "ByteString", "ref", "java", "lang", "String", "s", "bs", "toStringUtf8", "if", "bs", "isValidUtf8", "compress_", "s", "return", "s", "else", "return", "java", "lang", "String", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 11959,
  "endLine" : 11970,
  "identifiers" : [ "java", "lang", "Object", "ref", "compress_", "if", "ref", "instanceof", "String", "com", "google", "protobuf", "ByteString", "b", "com", "google", "protobuf", "ByteString", "copyFromUtf8", "java", "lang", "String", "ref", "compress_", "b", "return", "b", "else", "return", "com", "google", "protobuf", "ByteString", "ref" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 12073,
  "endLine" : 12104,
  "identifiers" : [ "boolean", "hasMeta", "com", "fudan", "se", "bean", "GitMessage", "HeadMeta", "getMeta", "com", "fudan", "se", "bean", "GitMessage", "HeadMetaOrBuilder", "getMetaOrBuilder", "boolean", "hasData", "com", "google", "protobuf", "ByteString", "getData" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 12128,
  "endLine" : 12177,
  "identifiers" : [ "this", "int", "mutable_bitField0_", "com", "google", "protobuf", "UnknownFieldSet", "Builder", "unknownFields", "com", "google", "protobuf", "UnknownFieldSet", "newBuilder", "try", "boolean", "done", "false", "while", "done", "int", "tag", "input", "readTag", "switch", "tag", "case", "done", "true", "break", "default", "if", "parseUnknownField", "input", "unknownFields", "extensionRegistry", "tag", "done", "true", "break", "case", "com", "fudan", "se", "bean", "GitMessage", "HeadMeta", "Builder", "subBuilder", "null", "if", "bitField0_", "x00000001", "x00000001", "subBuilder", "meta_", "toBuilder", "meta_", "input", "readMessage", "com", "fudan", "se", "bean", "GitMessage", "HeadMeta", "PARSER", "extensionRegistry", "if", "subBuilder", "null", "subBuilder", "mergeFrom", "meta_", "meta_", "subBuilder", "buildPartial", "bitField0_", "x00000001", "break", "case", "bitField0_", "x00000002", "data_", "input", "readBytes", "break", "catch", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "throw", "e", "setUnfinishedMessage", "this", "catch", "java", "io", "IOException", "e", "throw", "new", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "setUnfinishedMessage", "this", "finally", "this", "unknownFields", "unknownFields", "build", "makeExtensionsImmutable" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 12243,
  "endLine" : 12262,
  "identifiers" : [ "byte", "isInitialized", "memoizedIsInitialized", "if", "isInitialized", "return", "true", "if", "isInitialized", "return", "false", "if", "hasMeta", "memoizedIsInitialized", "return", "false", "if", "getMeta", "isInitialized", "memoizedIsInitialized", "return", "false", "memoizedIsInitialized", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 12266,
  "endLine" : 12274,
  "identifiers" : [ "if", "bitField0_", "x00000001", "x00000001", "output", "writeMessage", "getMeta", "if", "bitField0_", "x00000002", "x00000002", "output", "writeBytes", "data_", "unknownFields", "writeTo", "output" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 12277,
  "endLine" : 12295,
  "identifiers" : [ "int", "size", "memoizedSize", "if", "size", "return", "size", "size", "if", "bitField0_", "x00000001", "x00000001", "size", "com", "google", "protobuf", "CodedOutputStream", "computeMessageSize", "getMeta", "if", "bitField0_", "x00000002", "x00000002", "size", "com", "google", "protobuf", "CodedOutputStream", "computeBytesSize", "data_", "size", "unknownFields", "getSerializedSize", "memoizedSize", "size", "return", "size" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 12299,
  "endLine" : 12321,
  "identifiers" : [ "if", "obj", "this", "return", "true", "if", "obj", "instanceof", "com", "fudan", "se", "bean", "GitMessage", "Message", "return", "super", "equals", "obj", "com", "fudan", "se", "bean", "GitMessage", "Message", "other", "com", "fudan", "se", "bean", "GitMessage", "Message", "obj", "boolean", "result", "true", "result", "result", "hasMeta", "other", "hasMeta", "if", "hasMeta", "result", "result", "getMeta", "equals", "other", "getMeta", "result", "result", "hasData", "other", "hasData", "if", "hasData", "result", "result", "getData", "equals", "other", "getData", "result", "result", "unknownFields", "equals", "other", "unknownFields", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 12324,
  "endLine" : 12341,
  "identifiers" : [ "if", "memoizedHashCode", "return", "memoizedHashCode", "int", "hash", "hash", "hash", "getDescriptorForType", "hashCode", "if", "hasMeta", "hash", "hash", "META_FIELD_NUMBER", "hash", "hash", "getMeta", "hashCode", "if", "hasData", "hash", "hash", "DATA_FIELD_NUMBER", "hash", "hash", "getData", "hashCode", "hash", "hash", "unknownFields", "hashCode", "memoizedHashCode", "hash", "return", "hash" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 12459,
  "endLine" : 12470,
  "identifiers" : [ "super", "clear", "if", "metaBuilder_", "null", "meta_", "null", "else", "metaBuilder_", "clear", "bitField0_", "bitField0_", "x00000001", "data_", "com", "google", "protobuf", "ByteString", "EMPTY", "bitField0_", "bitField0_", "x00000002", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 12493,
  "endLine" : 12512,
  "identifiers" : [ "com", "fudan", "se", "bean", "GitMessage", "Message", "result", "new", "com", "fudan", "se", "bean", "GitMessage", "Message", "this", "int", "from_bitField0_", "bitField0_", "int", "to_bitField0_", "if", "from_bitField0_", "x00000001", "x00000001", "to_bitField0_", "x00000001", "if", "metaBuilder_", "null", "result", "meta_", "meta_", "else", "result", "meta_", "metaBuilder_", "build", "if", "from_bitField0_", "x00000002", "x00000002", "to_bitField0_", "x00000002", "result", "data_", "data_", "result", "bitField0_", "to_bitField0_", "onBuilt", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 12556,
  "endLine" : 12569,
  "identifiers" : [ "if", "other", "com", "fudan", "se", "bean", "GitMessage", "Message", "getDefaultInstance", "return", "this", "if", "other", "hasMeta", "mergeMeta", "other", "getMeta", "if", "other", "hasData", "setData", "other", "getData", "this", "mergeUnknownFields", "other", "unknownFields", "onChanged", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 12586,
  "endLine" : 12599,
  "identifiers" : [ "com", "fudan", "se", "bean", "GitMessage", "Message", "parsedMessage", "null", "try", "parsedMessage", "PARSER", "parsePartialFrom", "input", "extensionRegistry", "catch", "com", "google", "protobuf", "InvalidProtocolBufferException", "e", "parsedMessage", "com", "fudan", "se", "bean", "GitMessage", "Message", "e", "getUnfinishedMessage", "throw", "e", "unwrapIOException", "finally", "if", "parsedMessage", "null", "mergeFrom", "parsedMessage", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 12656,
  "endLine" : 12672,
  "identifiers" : [ "if", "metaBuilder_", "null", "if", "bitField0_", "x00000001", "x00000001", "meta_", "null", "meta_", "com", "fudan", "se", "bean", "GitMessage", "HeadMeta", "getDefaultInstance", "meta_", "com", "fudan", "se", "bean", "GitMessage", "HeadMeta", "newBuilder", "meta_", "mergeFrom", "value", "buildPartial", "else", "meta_", "value", "onChanged", "else", "metaBuilder_", "mergeFrom", "value", "bitField0_", "x00000001", "return", "this" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 12711,
  "endLine" : 12721,
  "identifiers" : [ "if", "metaBuilder_", "null", "metaBuilder_", "new", "com", "google", "protobuf", "SingleFieldBuilderV3", "com", "fudan", "se", "bean", "GitMessage", "HeadMeta", "com", "fudan", "se", "bean", "GitMessage", "HeadMeta", "Builder", "com", "fudan", "se", "bean", "GitMessage", "HeadMetaOrBuilder", "getMeta", "getParentForChildren", "isClean", "meta_", "null", "return", "metaBuilder_" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\bean\\GitMessage.java",
  "startLine" : 12875,
  "endLine" : 12977,
  "identifiers" : [ "java", "lang", "String", "descriptorData", "n", "nRepository", "n", "name", "n", "url", "t", "n", "description", "n", "homepage", "t", "n", "git_http_url", "t", "n", "git_ssh_url", "t", "n", "visibility_level", "n", "nproject_id", "n", "namespace_id", "t", "n", "Commit", "n", "n", "id", "t", "n", "short_id", "t", "r", "n", "title", "n", "memssage", "n", "ttimestamp", "t", "n", "url", "t", "n", "author_name", "n", "Push", "n", "before", "t", "r", "n", "after", "t", "n", "ref", "t", "n", "user", "com", "fudan", "se", "bean", "User", "n", "repo", "com", "tencent", "tgit", "search", "model", "proto", "Repository", "n", "pathWithNamespace", "t", "n", "commits", "com", "tencent", "tgit", "search", "model", "proto", "Commit", "n", "files", "com", "tencent", "tgit", "search", "model", "proto", "File", "n", "HeadMeta", "n", "message_type", "t", "n", "compress", "t", "com", "google", "protobuf", "Descriptors", "FileDescriptor", "InternalDescriptorAssigner", "assigner", "new", "com", "google", "protobuf", "Descriptors", "FileDescriptor", "InternalDescriptorAssigner", "Override", "public", "com", "google", "protobuf", "ExtensionRegistry", "assignDescriptors", "com", "google", "protobuf", "Descriptors", "FileDescriptor", "root", "descriptor", "root", "return", "null", "com", "google", "protobuf", "Descriptors", "FileDescriptor", "internalBuildGeneratedFileFrom", "descriptorData", "new", "com", "google", "protobuf", "Descriptors", "FileDescriptor", "assigner", "internal_static_com_tencent_tgit_search_model_proto_Repository_descriptor", "getDescriptor", "getMessageTypes", "get", "internal_static_com_tencent_tgit_search_model_proto_Repository_fieldAccessorTable", "new", "com", "google", "protobuf", "GeneratedMessageV3", "FieldAccessorTable", "internal_static_com_tencent_tgit_search_model_proto_Repository_descriptor", "new", "java", "lang", "String", "internal_static_com_tencent_tgit_search_model_proto_User_descriptor", "getDescriptor", "getMessageTypes", "get", "internal_static_com_tencent_tgit_search_model_proto_User_fieldAccessorTable", "new", "com", "google", "protobuf", "GeneratedMessageV3", "FieldAccessorTable", "internal_static_com_tencent_tgit_search_model_proto_User_descriptor", "new", "java", "lang", "String", "internal_static_com_tencent_tgit_search_model_proto_Commit_descriptor", "getDescriptor", "getMessageTypes", "get", "internal_static_com_tencent_tgit_search_model_proto_Commit_fieldAccessorTable", "new", "com", "google", "protobuf", "GeneratedMessageV3", "FieldAccessorTable", "internal_static_com_tencent_tgit_search_model_proto_Commit_descriptor", "new", "java", "lang", "String", "internal_static_com_tencent_tgit_search_model_proto_File_descriptor", "getDescriptor", "getMessageTypes", "get", "internal_static_com_tencent_tgit_search_model_proto_File_fieldAccessorTable", "new", "com", "google", "protobuf", "GeneratedMessageV3", "FieldAccessorTable", "internal_static_com_tencent_tgit_search_model_proto_File_descriptor", "new", "java", "lang", "String", "internal_static_com_tencent_tgit_search_model_proto_Push_descriptor", "getDescriptor", "getMessageTypes", "get", "internal_static_com_tencent_tgit_search_model_proto_Push_fieldAccessorTable", "new", "com", "google", "protobuf", "GeneratedMessageV3", "FieldAccessorTable", "internal_static_com_tencent_tgit_search_model_proto_Push_descriptor", "new", "java", "lang", "String", "internal_static_com_tencent_tgit_search_model_proto_Issue_descriptor", "getDescriptor", "getMessageTypes", "get", "internal_static_com_tencent_tgit_search_model_proto_Issue_fieldAccessorTable", "new", "com", "google", "protobuf", "GeneratedMessageV3", "FieldAccessorTable", "internal_static_com_tencent_tgit_search_model_proto_Issue_descriptor", "new", "java", "lang", "String", "internal_static_com_tencent_tgit_search_model_proto_HeadMeta_descriptor", "getDescriptor", "getMessageTypes", "get", "internal_static_com_tencent_tgit_search_model_proto_HeadMeta_fieldAccessorTable", "new", "com", "google", "protobuf", "GeneratedMessageV3", "FieldAccessorTable", "internal_static_com_tencent_tgit_search_model_proto_HeadMeta_descriptor", "new", "java", "lang", "String", "internal_static_com_tencent_tgit_search_model_proto_Message_descriptor", "getDescriptor", "getMessageTypes", "get", "internal_static_com_tencent_tgit_search_model_proto_Message_fieldAccessorTable", "new", "com", "google", "protobuf", "GeneratedMessageV3", "FieldAccessorTable", "internal_static_com_tencent_tgit_search_model_proto_Message_descriptor", "new", "java", "lang", "String" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\config\\Config.java",
  "startLine" : 47,
  "endLine" : 70,
  "identifiers" : [ "try", "properties", "setProperty", "KAFKA_BROKER_SERVERS", "properties", "setProperty", "KAFKA_TOPIC", "properties", "setProperty", "KAFKA_GROUP", "properties", "setProperty", "KAFKA_POLL_INTERVAL", "toString", "properties", "setProperty", "KAFKA_SUBSCRIBE_MODE", "toString", "properties", "setProperty", "KAFKA_ASSIGN_PARTITION", "toString", "properties", "setProperty", "KAFKA_ASSIGN_OFFSET", "toString", "properties", "setProperty", "KAFKA_FETCH_MESSAGE_MAX_BYTES", "toString", "properties", "setProperty", "KAFKA_MAX_POLL_RECORDS", "toString", "properties", "setProperty", "KAFKA_SASL_JAAS_CONFIG_SERVICE_NAME", "properties", "setProperty", "KAFKA_SASL_JAAS_CONFIG_USERNAME", "properties", "setProperty", "KAFKA_SASL_JAAS_CONFIG_PASSWORD", "properties", "setProperty", "KAFKA_SASL_MECHANISM", "properties", "setProperty", "KAFKA_SECURITY_PROTOCOL", "properties", "setProperty", "FILE_EXTENSIONS", "properties", "setProperty", "OUTPUT_TIME_INTERVAL", "toString", "properties", "setProperty", "OUTPUT_FOLDER", "properties", "store", "new", "FileWriter", "CONFIG_FILE", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\config\\Config.java",
  "startLine" : 76,
  "endLine" : 110,
  "identifiers" : [ "File", "configFile", "new", "File", "CONFIG_FILE", "if", "configFile", "exists", "log", "info", "CONFIG_FILE", "save", "System", "exit", "try", "properties", "load", "new", "FileReader", "CONFIG_FILE", "KAFKA_BROKER_SERVERS", "properties", "getProperty", "KAFKA_TOPIC", "properties", "getProperty", "KAFKA_GROUP", "properties", "getProperty", "KAFKA_POLL_INTERVAL", "Integer", "parseInt", "properties", "getProperty", "KAFKA_SUBSCRIBE_MODE", "Integer", "parseInt", "properties", "getProperty", "KAFKA_ASSIGN_PARTITION", "Integer", "parseInt", "properties", "getProperty", "KAFKA_ASSIGN_OFFSET", "Integer", "parseInt", "properties", "getProperty", "KAFKA_FETCH_MESSAGE_MAX_BYTES", "Integer", "parseInt", "properties", "getProperty", "KAFKA_MAX_POLL_RECORDS", "Integer", "parseInt", "properties", "getProperty", "KAFKA_SASL_JAAS_CONFIG_SERVICE_NAME", "properties", "getProperty", "KAFKA_SASL_JAAS_CONFIG_USERNAME", "properties", "getProperty", "KAFKA_SASL_JAAS_CONFIG_PASSWORD", "properties", "getProperty", "KAFKA_SASL_MECHANISM", "properties", "getProperty", "KAFKA_SECURITY_PROTOCOL", "properties", "getProperty", "OUTPUT_FOLDER", "properties", "getProperty", "FILE_EXTENSIONS", "properties", "getProperty", "String", "extensions", "FILE_EXTENSIONS", "split", "for", "String", "ext", "extensions", "fileExtensionMap", "put", "ext", "toLowerCase", "true", "OUTPUT_TIME_INTERVAL", "Integer", "parseInt", "properties", "getProperty", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\Main.java",
  "startLine" : 10,
  "endLine" : 26,
  "identifiers" : [ "log", "info", "log", "info", "Config", "load", "log", "info", "KafkaProcessor", "kafkaProcessor", "new", "KafkaProcessor", "kafkaProcessor", "init", "kafkaProcessor", "process", "kafkaProcessor", "close", "log", "info" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\processor\\KafkaProcessor.java",
  "startLine" : 36,
  "endLine" : 70,
  "identifiers" : [ "log", "info", "Properties", "kafkaProps", "new", "Properties", "kafkaProps", "put", "Config", "KAFKA_BROKER_SERVERS", "kafkaProps", "put", "Config", "KAFKA_GROUP", "kafkaProps", "put", "kafkaProps", "put", "kafkaProps", "put", "kafkaProps", "put", "Config", "KAFKA_FETCH_MESSAGE_MAX_BYTES", "kafkaProps", "put", "Config", "KAFKA_MAX_POLL_RECORDS", "String", "jaasConfig", "String", "format", "s", "s", "s", "Config", "KAFKA_SASL_JAAS_CONFIG_SERVICE_NAME", "Config", "KAFKA_SASL_JAAS_CONFIG_USERNAME", "Config", "KAFKA_SASL_JAAS_CONFIG_PASSWORD", "kafkaProps", "put", "jaasConfig", "kafkaProps", "put", "Config", "KAFKA_SASL_MECHANISM", "kafkaProps", "put", "Config", "KAFKA_SECURITY_PROTOCOL", "kafkaProps", "put", "ByteArrayDeserializer", "class", "kafkaProps", "put", "ByteArrayDeserializer", "class", "consumer", "new", "KafkaConsumer", "kafkaProps", "if", "Config", "KAFKA_SUBSCRIBE_MODE", "KafkaSubscribeMode", "SUBSCRIBE", "consumer", "subscribe", "Collections", "singletonList", "Config", "KAFKA_TOPIC", "else", "TopicPartition", "topicPartition", "new", "TopicPartition", "Config", "KAFKA_TOPIC", "Config", "KAFKA_ASSIGN_PARTITION", "consumer", "assign", "Collections", "singletonList", "topicPartition", "consumer", "seek", "topicPartition", "Config", "KAFKA_ASSIGN_OFFSET", "log", "info", "timeCache", "new", "Date", "folderCache", "Config", "OUTPUT_FOLDER", "File", "separator", "DateUtil", "now" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\processor\\KafkaProcessor.java",
  "startLine" : 84,
  "endLine" : 211,
  "identifiers" : [ "log", "info", "while", "true", "ConsumerRecords", "byte", "byte", "records", "consumer", "poll", "Duration", "ofMillis", "Config", "KAFKA_POLL_INTERVAL", "if", "records", "null", "records", "isEmpty", "continue", "Date", "now", "new", "Date", "if", "DateUtil", "getSecondsInterval", "timeCache", "now", "Config", "OUTPUT_TIME_INTERVAL", "log", "info", "flushRecords", "addFilesMap", "folderCache", "File", "separator", "Constants", "ADD_FILE", "log", "info", "flushRecords", "updateFilesMap", "folderCache", "File", "separator", "Constants", "UPDATE_FILE", "log", "info", "flushRecords", "deleteFilesMap", "folderCache", "File", "separator", "Constants", "DELETE_FILE", "log", "info", "Config", "OUTPUT_TIME_INTERVAL", "timeCache", "now", "folderCache", "Config", "OUTPUT_FOLDER", "File", "separator", "DateUtil", "now", "addFilesMap", "clear", "updateFilesMap", "clear", "deleteFilesMap", "clear", "for", "ConsumerRecord", "byte", "byte", "record", "records", "try", "byte", "bytes", "record", "value", "if", "bytes", "null", "bytes", "length", "continue", "GitMessage", "Push", "push", "GitMessageUtil", "getPush", "bytes", "if", "push", "null", "continue", "String", "branch", "GitMessageUtil", "getBranch", "push", "getRef", "if", "branch", "equals", "log", "info", "branch", "continue", "String", "project", "push", "getPathWithNamespace", "log", "info", "project", "long", "projectId", "push", "getRepo", "getProjectId", "log", "info", "projectId", "String", "tmp", "project", "split", "tmp", "tmp", "length", "String", "format", "tmp", "tmp", "length", "projectId", "project", "String", "join", "tmp", "log", "info", "project", "List", "GitMessage", "File", "files", "push", "getFilesList", "if", "files", "size", "log", "info", "continue", "for", "GitMessage", "File", "file", "files", "try", "String", "path", "file", "getOldPath", "equals", "Constants", "NULL_PATH", "file", "getNewPath", "file", "getOldPath", "if", "path", "contains", "log", "info", "path", "continue", "String", "fileExtension", "path", "substring", "path", "lastIndexOf", "toLowerCase", "if", "Config", "fileExtensionMap", "containsKey", "fileExtension", "log", "info", "path", "continue", "String", "localPath", "folderCache", "project", "path", "log", "info", "path", "log", "info", "localPath", "File", "localFile", "new", "File", "localPath", "localFile", "getParentFile", "mkdirs", "log", "info", "file", "getType", "String", "key", "linkProjectAndPath", "project", "path", "if", "file", "getType", "equals", "KafkaFileType", "ADD", "updateFilesMap", "remove", "key", "deleteFilesMap", "remove", "key", "addFilesMap", "put", "key", "true", "OutputStream", "outputStream", "new", "FileOutputStream", "localFile", "file", "getContent", "writeTo", "outputStream", "outputStream", "close", "else", "if", "file", "getType", "equals", "KafkaFileType", "MODIFY", "addFilesMap", "remove", "key", "deleteFilesMap", "remove", "key", "updateFilesMap", "put", "key", "true", "OutputStream", "outputStream", "new", "FileOutputStream", "localFile", "file", "getContent", "writeTo", "outputStream", "outputStream", "close", "else", "addFilesMap", "remove", "key", "updateFilesMap", "remove", "key", "deleteFilesMap", "put", "key", "true", "if", "localFile", "exists", "localFile", "delete", "log", "info", "addFilesMap", "size", "log", "info", "updateFilesMap", "size", "log", "info", "deleteFilesMap", "size", "catch", "Exception", "e", "e", "printStackTrace", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\processor\\KafkaProcessor.java",
  "startLine" : 228,
  "endLine" : 238,
  "identifiers" : [ "try", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "path", "for", "String", "key", "map", "keySet", "writer", "write", "key", "writer", "newLine", "writer", "flush", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\main\\java\\com\\fudan\\se\\util\\GitMessageUtil.java",
  "startLine" : 16,
  "endLine" : 32,
  "identifiers" : [ "try", "GitMessage", "Message", "message", "GitMessage", "Message", "parseFrom", "bytes", "GitMessage", "HeadMeta", "meta", "message", "getMeta", "if", "meta", "getMessageType", "equals", "KafkaMessageType", "PUSH", "return", "null", "return", "GitMessage", "Push", "parseFrom", "message", "getData", "catch", "InvalidProtocolBufferException", "e", "catch", "IllegalArgumentException", "e", "catch", "ExceptionInInitializerError", "e", "return", "null" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\CommitPuller\\src\\test\\java\\FileTests.java",
  "startLine" : 20,
  "endLine" : 26,
  "identifiers" : [ "Map", "String", "Boolean", "a", "new", "HashMap", "a", "put", "true", "System", "out", "println", "a", "a", "remove", "System", "out", "println", "a" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\config\\Config.java",
  "startLine" : 41,
  "endLine" : 58,
  "identifiers" : [ "properties", "setProperty", "detectFolder", "properties", "setProperty", "language", "properties", "setProperty", "dataset", "properties", "setProperty", "infoFolder", "properties", "setProperty", "granularity", "properties", "setProperty", "properties", "setProperty", "spring", "datasource", "usernamerootspring", "datasource", "passwordroot", "properties", "store", "new", "FileWriter", "CONFIG_FILE", "COMMENT" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\config\\Config.java",
  "startLine" : 63,
  "endLine" : 98,
  "identifiers" : [ "try", "if", "new", "File", "CONFIG_FILE", "exists", "properties", "load", "new", "FileReader", "CONFIG_FILE", "detectFolder", "properties", "getProperty", "language", "properties", "getProperty", "dataset", "properties", "getProperty", "infoFolder", "properties", "getProperty", "granularity", "properties", "getProperty", "measureIndexTbName", "language", "granularity", "fileInfoTbName", "language", "granularity", "projInfoTbName", "language", "granularity", "fileOPInfoTbName", "language", "redisPathLineKey", "language", "toLowerCase", "granularity", "toLowerCase", "redisGroupIdKey", "language", "toLowerCase", "granularity", "toLowerCase", "errorMeasureIndexCSV", "infoFolder", "File", "separator", "measureIndexTbName", "else", "save", "System", "out", "println", "CONFIG_FILE", "System", "exit", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\idproducer\\UpdateGroupId.java",
  "startLine" : 29,
  "endLine" : 41,
  "identifiers" : [ "Config", "load", "head_file", "new", "File", "Config", "detectFolder", "File", "separator", "File", "separator", "Constants", "MeasureIndexStr", "if", "head_file", "exists", "log", "error", "head_file", "getAbsolutePath", "System", "exit", "group_file", "new", "File", "Config", "detectFolder", "File", "separator", "File", "separator", "Constants", "Type123groupStr", "if", "group_file", "exists", "log", "error", "group_file", "getAbsolutePath", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\idproducer\\UpdateGroupId.java",
  "startLine" : 43,
  "endLine" : 70,
  "identifiers" : [ "try", "log", "info", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "group_file", "int", "total_id", "IOUtil", "getTotalLines", "group_file", "int", "group_id", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "group_id", "if", "str", "null", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "if", "ls", "length", "continue", "for", "String", "mea_id", "ls", "Integer", "meain_id", "Integer", "parseInt", "mea_id", "group_map", "put", "meain_id", "group_id", "if", "group_id", "log", "info", "group_id", "total_id", "bufferedReader", "close", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 59,
  "endLine" : 67,
  "identifiers" : [ "Long", "l", "new", "Long", "polynomial", "FPGenerator", "fpgen", "FPGenerator", "generators", "get", "l", "if", "fpgen", "null", "fpgen", "new", "FPGenerator", "polynomial", "degree", "generators", "put", "l", "fpgen", "return", "fpgen" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 78,
  "endLine" : 88,
  "identifiers" : [ "int", "N", "degree", "long", "local", "N", "fp", "L", "N", "long", "temp", "zero", "for", "int", "i", "i", "N", "i", "temp", "ByteModTable", "i", "int", "fp", "xff", "fp", "return", "local", "temp" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 108,
  "endLine" : 116,
  "identifiers" : [ "f", "xffff", "v", "int", "i", "int", "f", "long", "result", "f", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 121,
  "endLine" : 133,
  "identifiers" : [ "f", "xffffffffL", "v", "int", "i", "int", "f", "long", "result", "f", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 138,
  "endLine" : 156,
  "identifiers" : [ "f", "v", "long", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 271,
  "endLine" : 278,
  "identifiers" : [ "int", "n", "s", "length", "for", "int", "i", "i", "n", "i", "int", "v", "int", "s", "charAt", "i", "f", "extend_char", "f", "v", "return", "reduce", "f" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 315,
  "endLine" : 322,
  "identifiers" : [ "int", "n", "s", "length", "for", "int", "i", "i", "n", "i", "int", "x", "int", "s", "charAt", "i", "f", "extend_byte", "f", "x", "return", "reduce", "f" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 364,
  "endLine" : 403,
  "identifiers" : [ "this", "degree", "degree", "this", "polynomial", "polynomial", "ByteModTable", "new", "long", "long", "PowerTable", "new", "long", "long", "x_to_the_i", "one", "long", "x_to_the_degree_minus_one", "one", "degree", "for", "int", "i", "i", "i", "PowerTable", "i", "x_to_the_i", "boolean", "overflow", "x_to_the_i", "x_to_the_degree_minus_one", "x_to_the_i", "if", "overflow", "x_to_the_i", "polynomial", "this", "empty", "PowerTable", "for", "int", "i", "i", "i", "for", "int", "j", "j", "j", "long", "v", "zero", "for", "int", "k", "k", "k", "if", "j", "k", "v", "PowerTable", "i", "k", "ByteModTable", "i", "j", "v" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 411,
  "endLine" : 475,
  "identifiers" : [ "null", "xC000000000000000L", "xC000000000000000L", "xE000000000000000L", "xE000000000000000L", "xD000000000000000L", "xB000000000000000L", "xF800000000000000L", "xF800000000000000L", "xEC00000000000000L", "xBC00000000000000L", "xDA00000000000000L", "xB600000000000000L", "xE500000000000000L", "xE500000000000000L", "x9680000000000000L", "xD480000000000000L", "x80C0000000000000L", "x8840000000000000L", "xB0A0000000000000L", "xE9A0000000000000L", "xD9F0000000000000L", "xC9B0000000000000L", "xE758000000000000L", "xDE98000000000000L", "xE42C000000000000L", "x94E4000000000000L", "xD4CE000000000000L", "xB892000000000000L", "xE2AB000000000000L", "x9E39000000000000L", "xCCE4800000000000L", "x9783800000000000L", "xD8F8C00000000000L", "xA9CDC00000000000L", "x9A28200000000000L", "xFD79E00000000000L", "xC782500000000000L", "x96CD300000000000L", "xBEE6880000000000L", "xE902C80000000000L", "x86D7E40000000000L", "xF066340000000000L", "x9888060000000000L", "x910ABE0000000000L", "xFF30E30000000000L", "xB27EFB0000000000L", "x8E375B8000000000L", "xA03D948000000000L", "xD1415C4000000000L", "xF5357CC000000000L", "x91A916E000000000L", "xB6CE66E000000000L", "xE6D2FC5000000000L", "xD55882B000000000L", "x9A3BA0B800000000L", "xFBD654E800000000L", "xAEA5D2E400000000L", "xF0E533AC00000000L", "xDA88B7BE00000000L", "xAA3AAEDE00000000L", "xBA75BB4300000000L", "xF5A811C500000000L", "x9B6C9A2F80000000L", "x9603CCED80000000L", "xFABB538840000000L", "xE2747090C0000000L", "x8358898EA0000000L", "x8C698D3D20000000L", "xDA8ABD5BF0000000L", "xF6DF3A0AF0000000L", "xB090C3F758000000L", "xD3B4D3D298000000L", "xAD9882F5BC000000L", "x88DA4FB544000000L", "xC3C366272A000000L", "xDCCF2A2262000000L", "x9BC0224A97000000L", "xAF5D96F273000000L", "x8643FFF621800000L", "x8E390C6EDC800000L", "xE45C01919BC00000L", "xCBB34C8945C00000L", "x80D8141BC2E00000L", "x886AFC3912200000L", "xF605807C26500000L", "xA3B92D28F6300000L", "xCE9A2CFC76280000L", "x98400C1921280000L", "xF61894904C040000L", "xC8BE6DBCEC8C0000L", "xE3A44C104D160000L", "xCA84A59443760000L", "xC7E84953A11B0000L", "xD9D4F6AA02CB0000L", "xC26CDD1C9A358000L", "x8BE8478434328000L", "xAE125DBEB198C000L", "xFCC5DBFD5AAAC000L", "x86DE52A079A6A000L", "xC5F16BD883816000L", "xDF82486AAFE37000L", "xA293EC735692D000L", "xE91ABA275C272800L", "xD686192874E3C800L", "x963D0960DAB3FC00L", "xBA9DE62072621400L", "xA2188C4E8A46CE00L", "xD31F75BCB4977E00L", "xC43A416020A6CB00L", "x99F57FECA12B3900L", "xA4F72EF82A58AE80L", "xCECE4391B81DA380L", "xB39F119264BC0940L", "x80A277D20DABB9C0L", "xFD6616C0CBFA0B20L", "xED16E64117DC11A0L", "xFFA8BC44327B5390L", "xEDFB13DB3B66C210L", "xCAE8EB99E73AB548L", "xC86135B6EA2F0B98L", "xBA49BADCDD19B16CL", "x8F1944AFB18564C4L", "xECFC86D765EABBEEL", "x9190E1C46CC13702L", "xE1F8D6B3195D6D97L", "xDF70267FF5E4C979L", "xD74307D3FD3382DBL", "x9999B3FFDC769B48L" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 105,
  "endLine" : 155,
  "identifiers" : [ ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 225,
  "endLine" : 239,
  "identifiers" : [ "if", "f", "f", "throw", "new", "IllegalArgumentException", "if", "n", "throw", "new", "IllegalArgumentException", "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "n", "f", "if", "l", "l", "l", "free", "PRIMES", "p", "l", "this", "f", "f", "this", "maxFill", "int", "free", "f", "key", "new", "long", "free", "state", "new", "byte", "free" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 305,
  "endLine" : 315,
  "identifiers" : [ "if", "offset", "throw", "new", "ArrayIndexOutOfBoundsException", "offset", "if", "length", "throw", "new", "IllegalArgumentException", "length", "if", "offset", "length", "arrayLength", "throw", "new", "ArrayIndexOutOfBoundsException", "offset", "length", "arrayLength" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 436,
  "endLine" : 471,
  "identifiers" : [ "final", "long", "key", "this", "key", "final", "byte", "state", "this", "state", "final", "int", "n", "key", "length", "final", "int", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "int", "h1", "k2i", "n", "if", "state", "h1", "OCCUPIED", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "OCCUPIED", "k", "key", "h1", "if", "state", "h1", "FREE", "return", "h1", "if", "state", "h1", "OCCUPIED", "return", "h1", "final", "int", "i", "h1", "if", "ASSERTS", "assert", "state", "h1", "REMOVED", "if", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "k", "key", "h1", "return", "state", "h1", "OCCUPIED", "h1", "i" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 481,
  "endLine" : 501,
  "identifiers" : [ "final", "long", "key", "this", "key", "final", "byte", "state", "this", "state", "final", "int", "n", "key", "length", "final", "int", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "int", "h1", "k2i", "n", "if", "state", "h1", "FREE", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "k", "key", "h1", "return", "state", "h1", "OCCUPIED", "h1" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 503,
  "endLine" : 523,
  "identifiers" : [ "final", "int", "i", "findInsertionPoint", "k", "if", "i", "return", "false", "if", "state", "i", "FREE", "free", "state", "i", "OCCUPIED", "key", "i", "k", "if", "count", "maxFill", "int", "newP", "Math", "min", "p", "growthFactor", "PRIMES", "length", "while", "PRIMES", "newP", "PRIMES", "p", "newP", "rehash", "newP", "if", "free", "rehash", "p", "if", "ASSERTS", "checkTable", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 599,
  "endLine" : 611,
  "identifiers" : [ "long", "retVal", "final", "byte", "state", "LongOpenHashSet", "this", "state", "final", "int", "n", "state", "length", "if", "hasNext", "throw", "new", "NoSuchElementException", "retVal", "key", "last", "pos", "if", "c", "do", "pos", "while", "pos", "n", "state", "pos", "OCCUPIED", "return", "retVal" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 668,
  "endLine" : 680,
  "identifiers" : [ "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "count", "f", "if", "l", "l", "l", "if", "l", "p", "return", "true", "try", "rehash", "l", "catch", "OutOfMemoryError", "cantDoIt", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 704,
  "endLine" : 717,
  "identifiers" : [ "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "Math", "min", "Integer", "MAX_VALUE", "Math", "max", "n", "count", "f", "if", "l", "l", "l", "if", "p", "l", "return", "true", "try", "rehash", "l", "catch", "OutOfMemoryError", "cantDoIt", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 732,
  "endLine" : 761,
  "identifiers" : [ "int", "i", "j", "count", "k2i", "h1", "h2", "final", "byte", "state", "this", "state", "long", "k", "final", "int", "newN", "PRIMES", "newP", "final", "long", "key", "this", "key", "newKey", "new", "long", "newN", "final", "byte", "newState", "new", "byte", "newN", "while", "j", "while", "state", "i", "OCCUPIED", "i", "k", "key", "i", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "h1", "k2i", "newN", "if", "newState", "h1", "FREE", "h2", "k2i", "newN", "do", "h1", "h1", "h2", "newN", "while", "newState", "h1", "FREE", "newState", "h1", "OCCUPIED", "newKey", "h1", "k", "i", "p", "newP", "free", "newN", "count", "maxFill", "int", "newN", "f", "this", "key", "newKey", "this", "state", "newState" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 782,
  "endLine" : 792,
  "identifiers" : [ "LongOpenHashSet", "c", "try", "c", "LongOpenHashSet", "super", "clone", "catch", "CloneNotSupportedException", "cantHappen", "throw", "new", "InternalError", "c", "key", "key", "clone", "c", "state", "state", "clone", "return", "c" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 804,
  "endLine" : 813,
  "identifiers" : [ "int", "h", "i", "j", "count", "while", "j", "while", "state", "i", "OCCUPIED", "i", "h", "longHash2IntHash", "key", "i", "i", "return", "h" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 826,
  "endLine" : 858,
  "identifiers" : [ "s", "defaultReadObject", "growthFactor", "DEFAULT_GROWTH_FACTOR", "p", "Arrays", "binarySearch", "PRIMES", "int", "count", "f", "if", "p", "p", "p", "final", "int", "n", "PRIMES", "p", "maxFill", "int", "n", "f", "free", "n", "count", "final", "long", "key", "this", "key", "new", "long", "n", "final", "byte", "state", "this", "state", "new", "byte", "n", "int", "i", "k2i", "h1", "h2", "long", "k", "i", "count", "while", "i", "k", "s", "readLong", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "h1", "k2i", "n", "if", "state", "h1", "FREE", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "state", "h1", "OCCUPIED", "key", "h1", "k", "if", "ASSERTS", "checkTable" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\Shingle.java",
  "startLine" : 36,
  "endLine" : 47,
  "identifiers" : [ "HashSet", "String", "shingles", "new", "HashSet", "String", "for", "int", "i", "i", "line", "length", "CHAR_GRAM_LENGTH", "i", "String", "shingle", "line", "substring", "i", "i", "CHAR_GRAM_LENGTH", "shingles", "add", "shingle", "return", "shingles" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 56,
  "endLine" : 102,
  "identifiers" : [ "LongOpenHashSet", "shingles", "new", "LongOpenHashSet", "Math", "min", "s", "length", "int", "length", "s", "length", "for", "int", "i", "i", "length", "FIXED_CGRAM_LENGTH", "i", "long", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingles", "add", "shingle", "int", "v", "new", "int", "HASH_SIZE", "byte", "longAsBytes", "new", "byte", "for", "long", "shingle", "shingles", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "long", "longHash", "FPGenerator", "std64", "fp", "longAsBytes", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 104,
  "endLine" : 158,
  "identifiers" : [ "LongOpenHashSet", "shingles", "new", "LongOpenHashSet", "Math", "min", "length", "FIXED_BGRAM_LENGTH", "for", "int", "i", "offset", "i", "length", "FIXED_BGRAM_LENGTH", "i", "int", "pos", "i", "long", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingles", "add", "shingle", "int", "v", "new", "int", "HASH_SIZE", "byte", "longAsBytes", "new", "byte", "for", "long", "shingle", "shingles", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "long", "longHash", "FPGenerator", "std64", "fp", "longAsBytes", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 160,
  "endLine" : 183,
  "identifiers" : [ "int", "v", "new", "int", "HASH_SIZE", "for", "String", "shingle", "shingles", "byte", "bytes", "shingle", "getBytes", "long", "longHash", "FPGenerator", "std64", "fp", "bytes", "bytes", "length", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 197,
  "endLine" : 204,
  "identifiers" : [ "long", "res", "new", "long", "res", "hash", "xffff000000000000L", "res", "hash", "x0000ffff00000000L", "res", "hash", "x00000000ffff0000L", "res", "hash", "x000000000000ffffL", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\util\\CommentUtil.java",
  "startLine" : 29,
  "endLine" : 43,
  "identifiers" : [ "if", "language", "equals", "Constants", "LANGUAGE_JAVA", "language", "equals", "Constants", "LANGUAGE_C", "language", "equals", "Constants", "LANGUAGE_CPP", "language", "equals", "Constants", "LANGUAGE_GO", "code", "removeComments", "code", "JAVA_COMMENT_SINGLE_LINE", "code", "removeComments", "code", "JAVA_COMMENT_MULTI_LINE", "else", "if", "language", "equals", "Constants", "LANGUAGE_PYTHON", "code", "removeComments", "code", "PYTHON_COMMENT_SINGLE_LINE", "code", "removeComments", "code", "PYTHON_COMMENT_MULTI_LINE", "code", "removeComments", "code", "PYTHON_COMMENT_MULTI_LINE2", "code", "code", "replaceAll", "return", "code" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\util\\DateUtil.java",
  "startLine" : 31,
  "endLine" : 37,
  "identifiers" : [ "int", "seconds", "int", "timeMillis", "e3", "int", "hour", "seconds", "int", "minute", "seconds", "hour", "int", "second", "seconds", "hour", "minute", "return", "String", "format", "hour", "minute", "second" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 19,
  "endLine" : 34,
  "identifiers" : [ "List", "String", "lines", "new", "ArrayList", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "int", "lineCnt", "while", "line", "reader", "readLine", "null", "lineCnt", "if", "lineCnt", "startLine", "lineCnt", "endLine", "lines", "add", "line", "else", "if", "lineCnt", "endLine", "break", "reader", "close", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 41,
  "endLine" : 50,
  "identifiers" : [ "String", "text", "String", "line", "null", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "while", "line", "reader", "readLine", "null", "text", "line", "reader", "close", "return", "text" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\util\\IOUtil.java",
  "startLine" : 18,
  "endLine" : 37,
  "identifiers" : [ "if", "file", "exists", "try", "long", "startTime", "System", "currentTimeMillis", "FileReader", "in", "new", "FileReader", "file", "LineNumberReader", "reader", "new", "LineNumberReader", "in", "reader", "skip", "Long", "MAX_VALUE", "int", "lines", "reader", "getLineNumber", "reader", "close", "long", "endTime", "System", "currentTimeMillis", "log", "info", "endTime", "startTime", "return", "lines", "catch", "IOException", "e", "log", "error", "e", "getMessage", "return" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\com\\fudan\\util\\NameUtil.java",
  "startLine" : 27,
  "endLine" : 60,
  "identifiers" : [ "String", "path2", "path", "substring", "prefix", "length", "path2", "path2", "replaceAll", "String", "names", "path2", "split", "String", "info", "for", "int", "i", "i", "names", "length", "i", "int", "atCnt", "for", "char", "c", "names", "i", "toCharArray", "if", "c", "atCnt", "if", "atCnt", "String", "tmp", "names", "i", "split", "info", "tmp", "tmp", "length", "for", "int", "j", "j", "i", "j", "info", "names", "j", "info", "tmp", "info", "path2", "substring", "path2", "indexOf", "names", "i", "names", "i", "length", "break", "if", "info", "isEmpty", "String", "tmp", "path2", "split", "info", "tmp", "info", "info", "path2", "substring", "path2", "indexOf", "return", "info" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 35,
  "endLine" : 42,
  "identifiers" : [ "long", "timeStart", "System", "currentTimeMillis", "Pipeline", "pipeline", "new", "Pipeline", "pipeline", "init", "pipeline", "readMeasureIndex", "long", "timeEnd", "System", "currentTimeMillis", "log", "info", "DateUtil", "convert", "timeEnd", "timeStart" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 43,
  "endLine" : 66,
  "identifiers" : [ "Config", "load", "updateGroupId", "new", "UpdateGroupId", "log", "info", "String", "resource", "Properties", "prop", "Config", "getProperties", "try", "InputStream", "inputStream", "Resources", "getResourceAsStream", "resource", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "prop", "SqlSession", "session", "sqlSessionFactory", "openSession", "true", "MeasureIndexMapper", "measureIndexMapper", "session", "getMapper", "MeasureIndexMapper", "class", "measureIndexMapper", "dropTable", "Config", "measureIndexTbName", "measureIndexMapper", "createTable", "Config", "measureIndexTbName", "session", "close", "log", "info", "new", "File", "Config", "errorMeasureIndexCSV", "getParentFile", "mkdirs", "printer", "new", "CSVPrinter", "new", "FileWriter", "Config", "errorMeasureIndexCSV", "CSVFormat", "DEFAULT", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 67,
  "endLine" : 132,
  "identifiers" : [ "File", "headerFile", "new", "File", "Config", "detectFolder", "File", "separator", "File", "separator", "Constants", "MeasureIndexStr", "if", "headerFile", "exists", "log", "error", "log", "error", "headerFile", "getAbsolutePath", "try", "BufferedReader", "bufferedReader", "new", "BufferedReader", "new", "FileReader", "headerFile", "log", "info", "total", "IOUtil", "getTotalLines", "headerFile", "int", "i", "for", "String", "str", "str", "bufferedReader", "readLine", "null", "i", "try", "if", "str", "equals", "continue", "String", "ls", "str", "trim", "split", "String", "path", "str", "substring", "str", "indexOf", "str", "lastIndexOf", "path", "path", "substring", "path", "lastIndexOf", "Integer", "methodId", "Integer", "parseInt", "ls", "Integer", "groupId", "updateGroupId", "getGroupId", "methodId", "String", "projectInfo", "NameUtil", "getProjectInfo", "Config", "dataset", "path", "Integer", "startLine", "Integer", "parseInt", "ls", "ls", "length", "Integer", "endLine", "Integer", "parseInt", "ls", "ls", "length", "List", "String", "lines", "FileUtil", "readLines", "path", "startLine", "endLine", "String", "code", "String", "join", "lines", "code", "CommentUtil", "removeComments2", "code", "Config", "language", "long", "hashVal", "SimHash", "computeOptimizedSimHashForString", "code", "long", "hashs", "SimHash", "divide4", "hashVal", "MeasureIndex", "measureIndex", "new", "MeasureIndex", "methodId", "projectInfo", "projectInfo", "Long", "parseLong", "projectInfo", "startLine", "endLine", "groupId", "methodId", "hashs", "hashs", "hashs", "hashs", "bufferList", "add", "measureIndex", "if", "bufferList", "size", "log", "info", "methodId", "total", "methodId", "f", "total", "insertToDB", "catch", "Exception", "e", "e", "printStackTrace", "bufferedReader", "close", "catch", "IOException", "e", "e", "printStackTrace", "insertToDB", "log", "info", "try", "printer", "close", "catch", "IOException", "e", "e", "printStackTrace", "checkStatus" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 134,
  "endLine" : 152,
  "identifiers" : [ "try", "if", "bufferList", "size", "SqlSession", "session", "sqlSessionFactory", "openSession", "true", "MeasureIndexMapper", "measureIndexMapper", "session", "getMapper", "MeasureIndexMapper", "class", "measureIndexMapper", "insertList", "bufferList", "Config", "measureIndexTbName", "session", "close", "catch", "Exception", "e", "log", "error", "e", "getMessage", "e", "for", "MeasureIndex", "measureIndex", "bufferList", "printToErr", "measureIndex", "finally", "bufferList", "clear" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 153,
  "endLine" : 167,
  "identifiers" : [ "try", "printer", "printRecord", "measureIndex", "getId", "measureIndex", "getPath", "measureIndex", "getProject", "measureIndex", "getStartLine", "measureIndex", "getEndLine", "measureIndex", "getGroupId", "measureIndex", "getMethodId", "printer", "flush", "catch", "IOException", "e", "log", "error", "e", "getMessage", "e" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\main\\java\\Pipeline.java",
  "startLine" : 169,
  "endLine" : 177,
  "identifiers" : [ "SqlSession", "session", "sqlSessionFactory", "openSession", "true", "MeasureIndexMapper", "measureIndexMapper", "session", "getMapper", "MeasureIndexMapper", "class", "int", "tbCnt", "measureIndexMapper", "selectCnt", "Config", "measureIndexTbName", "log", "info", "total", "log", "info", "Config", "measureIndexTbName", "tbCnt", "session", "close" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\test\\java\\CommentUtilTests.java",
  "startLine" : 11,
  "endLine" : 19,
  "identifiers" : [ "String", "file", "List", "String", "lines", "FileUtil", "readLines", "file", "String", "code", "String", "join", "lines", "long", "start", "System", "currentTimeMillis", "code", "CommentUtil", "removeComments2", "code", "System", "out", "printf", "System", "currentTimeMillis", "start", "System", "out", "println", "code" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\test\\java\\DBTests.java",
  "startLine" : 17,
  "endLine" : 28,
  "identifiers" : [ "Config", "load", "String", "resource", "Properties", "prop", "Config", "getProperties", "InputStream", "inputStream", "Resources", "getResourceAsStream", "resource", "SqlSessionFactory", "sqlSessionFactory", "new", "SqlSessionFactoryBuilder", "build", "inputStream", "prop", "SqlSession", "session", "sqlSessionFactory", "openSession", "MeasureIndexMapper", "measureIndexMapper", "session", "getMapper", "MeasureIndexMapper", "class", "measureIndexMapper", "createTable", "Config", "measureIndexTbName", "session", "commit", "session", "close" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\test\\java\\NameUtilTests.java",
  "startLine" : 9,
  "endLine" : 17,
  "identifiers" : [ "String", "path", "String", "path2", "String", "prefix", "String", "project", "NameUtil", "getProjectInfo", "prefix", "path", "System", "out", "println", "project", "System", "out", "println", "project", "System", "out", "println", "project" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\DBInsertion\\src\\test\\java\\NameUtilTests.java",
  "startLine" : 20,
  "endLine" : 25,
  "identifiers" : [ "String", "record", "String", "path", "record", "substring", "record", "indexOf", "record", "lastIndexOf", "path", "path", "substring", "path", "lastIndexOf", "System", "out", "println", "path" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\bean\\MeasurePair.java",
  "startLine" : 53,
  "endLine" : 62,
  "identifiers" : [ "if", "obj", "instanceof", "MeasurePair", "return", "false", "MeasurePair", "other", "MeasurePair", "obj", "boolean", "equal1", "firstMeasureIndex", "other", "firstMeasureIndex", "secondMeasureIndex", "other", "secondMeasureIndex", "boolean", "equal2", "firstMeasureIndex", "other", "secondMeasureIndex", "secondMeasureIndex", "other", "firstMeasureIndex", "return", "equal1", "equal2" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\config\\Config.java",
  "startLine" : 66,
  "endLine" : 82,
  "identifiers" : [ "properties", "setProperty", "language", "properties", "setProperty", "extensions", "properties", "setProperty", "String", "valueOf", "threshold", "properties", "setProperty", "String", "valueOf", "mlc", "properties", "setProperty", "String", "valueOf", "mlcc", "properties", "setProperty", "String", "valueOf", "minLine", "properties", "setProperty", "String", "valueOf", "sepNum", "properties", "setProperty", "exe", "properties", "setProperty", "granularity", "properties", "setProperty", "String", "valueOf", "openStringHash", "properties", "setProperty", "String", "valueOf", "useLongType", "properties", "setProperty", "String", "valueOf", "useGPU", "properties", "setProperty", "String", "valueOf", "onlyTokenize", "properties", "setProperty", "String", "valueOf", "reduceToken", "properties", "store", "new", "FileWriter", "CONFIG_FILE", "COMMENT" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\config\\Config.java",
  "startLine" : 87,
  "endLine" : 117,
  "identifiers" : [ "try", "if", "new", "File", "CONFIG_FILE", "exists", "properties", "load", "new", "FileReader", "CONFIG_FILE", "language", "properties", "getProperty", "extensions", "properties", "getProperty", "extensionArray", "extensions", "split", "threshold", "Float", "parseFloat", "properties", "getProperty", "mlc", "Integer", "parseInt", "properties", "getProperty", "mlcc", "Integer", "parseInt", "properties", "getProperty", "minLine", "Integer", "parseInt", "properties", "getProperty", "sepNum", "Long", "parseLong", "properties", "getProperty", "exe", "properties", "getProperty", "granularity", "properties", "getProperty", "openStringHash", "Integer", "parseInt", "properties", "getProperty", "useLongType", "Integer", "parseInt", "properties", "getProperty", "useGPU", "Integer", "parseInt", "properties", "getProperty", "onlyTokenize", "Integer", "parseInt", "properties", "getProperty", "reduceToken", "Integer", "parseInt", "properties", "getProperty", "else", "save", "logger", "error", "System", "exit", "catch", "IOException", "e", "System", "exit", "catch", "NumberFormatException", "e", "logger", "error", "System", "exit" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\CPUSnippetParser.java",
  "startLine" : 35,
  "endLine" : 62,
  "identifiers" : [ "logger", "info", "logger", "info", "logger", "info", "List", "Integer", "result", "new", "ArrayList", "int", "tokenFileNum", "tokenIndexList", "size", "if", "tokenFileNum", "ParseMatchResult", "parseFileToInt", "result", "parseOneDataFile", "result", "result", "clear", "else", "int", "totalCnt", "tokenFileNum", "tokenFileNum", "int", "cnt", "for", "int", "j", "j", "tokenFileNum", "j", "for", "int", "i", "j", "i", "tokenFileNum", "i", "cnt", "logger", "info", "cnt", "f", "totalCnt", "ParseMatchResult", "parseFileToInt", "j", "i", "result", "parseOneDataFile", "result", "result", "clear", "logger", "info", "cloneID", "get" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\CPUSnippetParser.java",
  "startLine" : 64,
  "endLine" : 82,
  "identifiers" : [ "int", "cache", "for", "int", "i", "i", "result", "size", "int", "situation", "int", "float", "i", "float", "result", "size", "if", "situation", "cache", "cache", "situation", "try", "gatherCloneFragment", "result", "get", "i", "result", "get", "i", "result", "get", "i", "i", "catch", "IndexOutOfBoundsException", "e", "e", "printStackTrace", "printType12Clone", "printType3Clone" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\CPUSnippetParser.java",
  "startLine" : 84,
  "endLine" : 137,
  "identifiers" : [ "int", "firstFrom", "Measure", "binarySearchStart", "x1", "int", "firstTo", "Measure", "binarySearchEnd", "x1", "cloneLen", "int", "secondFrom", "Measure", "binarySearchStart", "x2", "int", "secondTo", "Measure", "binarySearchEnd", "x2", "cloneLen", "if", "firstFrom", "firstTo", "secondFrom", "secondTo", "return", "Measure", "f1", "Measure", "measureList", "get", "firstFrom", "Measure", "f2", "Measure", "measureList", "get", "secondFrom", "int", "f1startToken", "int", "x1", "f1", "getStartToken", "int", "f2startToken", "int", "x2", "f2", "getStartToken", "Snippet", "s1", "new", "Snippet", "s1", "setFile", "files", "get", "f1", "getFileId", "getAbsolutePath", "s1", "setmStartLine", "f1", "getStartLine", "s1", "setmEndLine", "f1", "getEndLine", "s1", "setStartToken", "f1startToken", "s1", "setEndToken", "f1startToken", "cloneLen", "Snippet", "s2", "new", "Snippet", "s2", "setFile", "files", "get", "f2", "getFileId", "getAbsolutePath", "s2", "setmStartLine", "f2", "getStartLine", "s2", "setmEndLine", "f2", "getEndLine", "s2", "setStartToken", "f2startToken", "s2", "setEndToken", "f2startToken", "cloneLen", "SnippetPair", "snippetPair", "null", "if", "s1", "getEndToken", "s2", "getEndToken", "snippetPair", "new", "SnippetPair", "s1", "s2", "else", "snippetPair", "new", "SnippetPair", "s2", "s1", "String", "key", "generateType12Key", "snippetPair", "List", "SnippetPair", "snippetPairs", "snippets", "getOrDefault", "key", "new", "ArrayList", "snippetPairs", "add", "snippetPair", "snippets", "put", "key", "snippetPairs", "String", "method1", "String", "format", "s1", "getFile", "s1", "getmStartLine", "s1", "getmEndLine", "String", "method2", "String", "format", "s2", "getFile", "s2", "getmStartLine", "s2", "getmEndLine", "if", "method1", "compareTo", "method2", "snippetPair", "new", "SnippetPair", "s1", "s2", "key", "method1", "method2", "else", "snippetPair", "new", "SnippetPair", "s2", "s1", "key", "method2", "method1", "snippetPairs", "type3Snippets", "getOrDefault", "key", "new", "ArrayList", "snippetPairs", "add", "snippetPair", "type3Snippets", "put", "key", "snippetPairs" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\CPUSnippetParser.java",
  "startLine" : 143,
  "endLine" : 171,
  "identifiers" : [ "int", "groupId", "try", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "Config", "TYPE12_FRAGMENT_RESULT_FILE", "for", "List", "SnippetPair", "snippetPairs", "snippets", "values", "groupId", "if", "snippetPairs", "size", "printSnippetPair", "snippetPairs", "get", "groupId", "writer", "continue", "SnippetPair", "pair", "snippetPairs", "stream", "min", "new", "Comparator", "SnippetPair", "Override", "public", "int", "compare", "SnippetPair", "o1", "SnippetPair", "o2", "if", "o1", "getS1", "getStartToken", "o2", "getS1", "getStartToken", "return", "else", "if", "o1", "getS1", "getStartToken", "o2", "getS1", "getStartToken", "return", "return", "get", "snippetPairs", "clear", "printSnippetPair", "pair", "groupId", "writer", "writer", "flush", "catch", "Exception", "e", "e", "printStackTrace", "cloneID", "set", "groupId" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\CPUSnippetParser.java",
  "startLine" : 173,
  "endLine" : 184,
  "identifiers" : [ "snippetPair", "getS1", "setGroupId", "groupId", "snippetPair", "getS2", "setGroupId", "groupId", "try", "writer", "write", "snippetPair", "getS1", "toString", "writer", "newLine", "writer", "write", "snippetPair", "getS2", "toString", "writer", "newLine", "writer", "newLine", "catch", "Exception", "e" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\CPUSnippetParser.java",
  "startLine" : 194,
  "endLine" : 215,
  "identifiers" : [ "int", "groupId", "cloneID", "get", "try", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "Config", "TYPE3_FRAGMENT_RESULT_FILE", "for", "List", "SnippetPair", "snippetPairs", "type3Snippets", "values", "if", "snippetPairs", "size", "continue", "List", "SnippetPair", "type3Pairs", "mergeType3Snippets", "snippetPairs", "if", "type3Pairs", "size", "continue", "for", "SnippetPair", "pair", "type3Pairs", "groupId", "printSnippetPair", "pair", "groupId", "writer", "catch", "Exception", "e", "e", "printStackTrace", "cloneID", "set", "groupId", "type3Snippets", "clear" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\CPUSnippetParser.java",
  "startLine" : 222,
  "endLine" : 293,
  "identifiers" : [ "int", "tokenGap", "List", "SnippetPair", "type3Pairs", "new", "ArrayList", "snippetPairs", "sort", "new", "Comparator", "SnippetPair", "Override", "public", "int", "compare", "SnippetPair", "o1", "SnippetPair", "o2", "if", "o1", "getS1", "getStartToken", "o2", "getS1", "getStartToken", "return", "else", "if", "o1", "getS1", "getStartToken", "o2", "getS1", "getStartToken", "return", "return", "SnippetPair", "pair", "snippetPairs", "get", "boolean", "isSameMethodClone", "isInSameMethod", "pair", "getS1", "pair", "getS2", "int", "i", "if", "isSameMethodClone", "while", "i", "snippetPairs", "size", "SnippetPair", "nextPair", "snippetPairs", "get", "i", "if", "pair", "getS1", "getStartToken", "nextPair", "getS1", "getStartToken", "pair", "getS2", "getStartToken", "nextPair", "getS1", "getStartToken", "pair", "getS2", "getStartToken", "nextPair", "getS2", "getStartToken", "if", "pair", "getS1", "getEndToken", "nextPair", "getS1", "getEndToken", "if", "pair", "getS1", "getEndToken", "tokenGap", "nextPair", "getS1", "getStartToken", "if", "pair", "getS2", "getEndToken", "tokenGap", "nextPair", "getS2", "getStartToken", "Snippet", "tmp1", "linkSnippets", "pair", "getS1", "nextPair", "getS1", "Snippet", "tmp2", "linkSnippets", "pair", "getS2", "nextPair", "getS2", "type3Pairs", "add", "new", "SnippetPair", "tmp1", "tmp2", "pair", "nextPair", "i", "else", "int", "cnt", "while", "i", "snippetPairs", "size", "SnippetPair", "nextPair", "snippetPairs", "get", "i", "boolean", "merged", "false", "if", "pair", "getS1", "getEndToken", "nextPair", "getS1", "getEndToken", "if", "pair", "getS1", "getEndToken", "tokenGap", "nextPair", "getS1", "getStartToken", "if", "pair", "getS2", "getStartToken", "nextPair", "getS2", "getStartToken", "if", "pair", "getS2", "getEndToken", "tokenGap", "nextPair", "getS2", "getStartToken", "Snippet", "tmp1", "linkSnippets", "pair", "getS1", "nextPair", "getS1", "Snippet", "tmp2", "linkSnippets", "pair", "getS2", "nextPair", "getS2", "pair", "new", "SnippetPair", "tmp1", "tmp2", "merged", "true", "cnt", "if", "merged", "i", "snippetPairs", "size", "if", "cnt", "type3Pairs", "add", "pair", "cnt", "pair", "nextPair", "i", "return", "type3Pairs" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\CPUSnippetParser.java",
  "startLine" : 313,
  "endLine" : 321,
  "identifiers" : [ "Snippet", "newSnip", "new", "Snippet", "newSnip", "setFile", "s1", "getFile", "newSnip", "setmStartLine", "s1", "getmStartLine", "newSnip", "setmEndLine", "s1", "getmEndLine", "newSnip", "setStartToken", "Math", "min", "s1", "getStartToken", "s2", "getStartToken", "newSnip", "setEndToken", "Math", "max", "s1", "getEndToken", "s2", "getEndToken", "return", "newSnip" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\enums\\CTokens.java",
  "startLine" : 113,
  "endLine" : 207,
  "identifiers" : [ "tokenMap", "put", "AUTO", "tokenMap", "put", "BREAK", "tokenMap", "put", "CASE", "tokenMap", "put", "CHAR", "tokenMap", "put", "CONST", "tokenMap", "put", "CONTINUE", "tokenMap", "put", "DEFAULT", "tokenMap", "put", "DO", "tokenMap", "put", "DOUBLE", "tokenMap", "put", "ELSE", "tokenMap", "put", "ENUM", "tokenMap", "put", "EXTERN", "tokenMap", "put", "FLOAT", "tokenMap", "put", "FOR", "tokenMap", "put", "GOTO", "tokenMap", "put", "IF", "tokenMap", "put", "INLINE", "tokenMap", "put", "INT", "tokenMap", "put", "LONG", "tokenMap", "put", "REGISTER", "tokenMap", "put", "RESTRICT", "tokenMap", "put", "RETURN", "tokenMap", "put", "SHORT", "tokenMap", "put", "SIGNED", "tokenMap", "put", "SIZE_OF", "tokenMap", "put", "STATIC", "tokenMap", "put", "STRUCT", "tokenMap", "put", "SWITCH", "tokenMap", "put", "TYPE_OF", "tokenMap", "put", "UNION", "tokenMap", "put", "UNSIGNED", "tokenMap", "put", "VOID", "tokenMap", "put", "VOLATILE", "tokenMap", "put", "WHILE", "tokenMap", "put", "ALIGN_AS", "tokenMap", "put", "ALIGN_OF", "tokenMap", "put", "AUTOMIC", "tokenMap", "put", "BOOL", "tokenMap", "put", "COMPLEX", "tokenMap", "put", "GENERIC", "tokenMap", "put", "STATIC_ASSERT", "tokenMap", "put", "THREAD_LOCAL", "tokenMap", "put", "LEFT_PAREN", "tokenMap", "put", "RIGHT_PAREN", "tokenMap", "put", "LEFT_BRACKET", "tokenMap", "put", "RIGHT_BRACKET", "tokenMap", "put", "LEFT_BRACE", "tokenMap", "put", "RIGHT_BRACE", "tokenMap", "put", "LESS", "tokenMap", "put", "LESS_EQUAL", "tokenMap", "put", "GREATER", "tokenMap", "put", "GREATER_EQUAL", "tokenMap", "put", "LEFT_SHIFT", "tokenMap", "put", "RIGHT_SHIFT", "tokenMap", "put", "PLUS", "tokenMap", "put", "PLUS_PLUS", "tokenMap", "put", "MINUS", "tokenMap", "put", "MINUS_MINUS", "tokenMap", "put", "STAR", "tokenMap", "put", "DIV", "tokenMap", "put", "MOD", "tokenMap", "put", "AND", "tokenMap", "put", "OR", "tokenMap", "put", "AND_AND", "tokenMap", "put", "OR_OR", "tokenMap", "put", "CARET", "tokenMap", "put", "NOT", "tokenMap", "put", "TILDE", "tokenMap", "put", "QUESTION", "tokenMap", "put", "COLON", "tokenMap", "put", "SEMI", "tokenMap", "put", "COMMA", "tokenMap", "put", "ASSIGN", "tokenMap", "put", "STAR_ASSIGN", "tokenMap", "put", "DIV_ASSIGN", "tokenMap", "put", "MOD_ASSIGN", "tokenMap", "put", "PLUS_ASSIGN", "tokenMap", "put", "MINUS_ASSIGN", "tokenMap", "put", "LEFT_SHIFT_ASSIGN", "tokenMap", "put", "RIGHT_SHIFT_ASSIGN", "tokenMap", "put", "AND_ASSIGN", "tokenMap", "put", "XOR_ASSIGN", "tokenMap", "put", "OR_ASSIGN", "tokenMap", "put", "EQUAL", "tokenMap", "put", "NOT_EQUAL", "tokenMap", "put", "ARROW", "tokenMap", "put", "DOT", "tokenMap", "put", "ELLIPSIS", "tokenMap", "put", "IDENTIFIER", "tokenMap", "put", "DIGIT", "tokenMap", "put", "POUND" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\enums\\GoTokens.java",
  "startLine" : 83,
  "endLine" : 150,
  "identifiers" : [ "tokenMap", "put", "BREAK", "tokenMap", "put", "CASE", "tokenMap", "put", "CHAN", "tokenMap", "put", "CONST", "tokenMap", "put", "CONTINUE", "tokenMap", "put", "DEFAULT", "tokenMap", "put", "DEFER", "tokenMap", "put", "ELSE", "tokenMap", "put", "FALL_THROUGH", "tokenMap", "put", "FOR", "tokenMap", "put", "FUNC", "tokenMap", "put", "GO", "tokenMap", "put", "GOTO", "tokenMap", "put", "IF", "tokenMap", "put", "IMPORT", "tokenMap", "put", "INTERFACE", "tokenMap", "put", "MAP", "tokenMap", "put", "PACKAGE", "tokenMap", "put", "RANGE", "tokenMap", "put", "RETURN", "tokenMap", "put", "SELECT", "tokenMap", "put", "STRUCT", "tokenMap", "put", "SWITCH", "tokenMap", "put", "TYPE", "tokenMap", "put", "VAR", "tokenMap", "put", "PLUS", "tokenMap", "put", "MINUS", "tokenMap", "put", "STAR", "tokenMap", "put", "DIV", "tokenMap", "put", "MOD", "tokenMap", "put", "PLUS_PLUS", "tokenMap", "put", "MINUS_MINUS", "tokenMap", "put", "EQUAL", "tokenMap", "put", "NOT_EQUAL", "tokenMap", "put", "GREATER", "tokenMap", "put", "LESS", "tokenMap", "put", "GREATER_EQUAL", "tokenMap", "put", "LESS_EQUAL", "tokenMap", "put", "AND", "tokenMap", "put", "OR", "tokenMap", "put", "NOT", "tokenMap", "put", "CARET", "tokenMap", "put", "LEFT_SHIFT", "tokenMap", "put", "RIGHT_SHIFT", "tokenMap", "put", "ASSIGN", "tokenMap", "put", "PLUS_ASSIGN", "tokenMap", "put", "MINUS_ASSIGN", "tokenMap", "put", "STAR_ASSIGN", "tokenMap", "put", "DIV_ASSIGN", "tokenMap", "put", "MOD_ASSIGN", "tokenMap", "put", "LEFT_SHIFT_ASSIGN", "tokenMap", "put", "RIGHT_SHIFT_ASSIGN", "tokenMap", "put", "AND_ASSIGN", "tokenMap", "put", "XOR_ASSIGN", "tokenMap", "put", "OR_ASSIGN", "tokenMap", "put", "QUESTION", "tokenMap", "put", "COLON", "tokenMap", "put", "SEMI", "tokenMap", "put", "COMMA", "tokenMap", "put", "DOT", "tokenMap", "put", "LEFT_SMALL_BRACKET", "tokenMap", "put", "LEFT_MID_BRACKET", "tokenMap", "put", "LEFT_LARGE_BRACKET", "tokenMap", "put", "RIGHT_SMALL_BRACKET", "tokenMap", "put", "RIGHT_MID_BRACKET", "tokenMap", "put", "RIGHT_LARGE_BRACKET" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\enums\\JavaTokens.java",
  "startLine" : 66,
  "endLine" : 92,
  "identifiers" : [ "put", "BREAK", "put", "BYTE", "put", "CASE", "put", "CATCH", "put", "CHAR", "put", "STRING", "put", "CONTINUE", "put", "ELSE", "put", "FLOAT", "put", "DOUBLE", "put", "FOR", "put", "BYTE", "put", "LONG", "put", "SHORT", "put", "NEW", "put", "IF", "put", "RETURN", "put", "SWITCH", "put", "TRY", "put", "WHILE", "put", "SYSTEM", "put", "OUT", "put", "THIS" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\enums\\JavaTokens.java",
  "startLine" : 105,
  "endLine" : 154,
  "identifiers" : [ "tokenMap", "put", "LEFT_SMALL_BRACKET", "tokenMap", "put", "LEFT_MID_BRACKET", "tokenMap", "put", "PLUS", "tokenMap", "put", "MIN", "tokenMap", "put", "PERCENT", "tokenMap", "put", "MUL", "tokenMap", "put", "DIV", "tokenMap", "put", "AND", "tokenMap", "put", "OR", "tokenMap", "put", "NOT", "tokenMap", "put", "DOT", "tokenMap", "put", "EQ", "tokenMap", "put", "LT", "tokenMap", "put", "LTE", "tokenMap", "put", "GT", "tokenMap", "put", "GTE", "tokenMap", "put", "UEQ", "tokenMap", "put", "RIGHT_SMALL_BRACKET", "tokenMap", "put", "RIGHT_MID_BRACKET", "tokenMap", "put", "BREAK", "tokenMap", "put", "BYTE", "tokenMap", "put", "CASE", "tokenMap", "put", "THIS", "tokenMap", "put", "CATCH", "tokenMap", "put", "CHAR", "tokenMap", "put", "STRING", "tokenMap", "put", "CONTINUE", "tokenMap", "put", "ELSE", "tokenMap", "put", "FLOAT", "tokenMap", "put", "DOUBLE", "tokenMap", "put", "FOR", "tokenMap", "put", "LONG", "tokenMap", "put", "SHORT", "tokenMap", "put", "NEW", "tokenMap", "put", "IF", "tokenMap", "put", "RETURN", "tokenMap", "put", "SWITCH", "tokenMap", "put", "WHILE", "tokenMap", "put", "LEFT_LARGE_BRACKET", "tokenMap", "put", "RIGHT_LARGE_BRACKET", "tokenMap", "put", "COMMA", "tokenMap", "put", "COLON", "tokenMap", "put", "TRY", "tokenMap", "put", "ASSIGNMENT", "tokenMap", "put", "CLASSFLAG", "tokenMap", "put", "SYSTEM", "tokenMap", "put", "OUT", "tokenMap", "put", "SEMICOLON" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\enums\\JSTokens.java",
  "startLine" : 117,
  "endLine" : 216,
  "identifiers" : [ "tokenMap", "put", "ABSTRACT", "tokenMap", "put", "ARGUMENTS", "tokenMap", "put", "BOOLEAN", "tokenMap", "put", "BREAK", "tokenMap", "put", "BYTE", "tokenMap", "put", "CASE", "tokenMap", "put", "CATCH", "tokenMap", "put", "CHAR", "tokenMap", "put", "CLASS", "tokenMap", "put", "CONST", "tokenMap", "put", "CONTINUE", "tokenMap", "put", "DEBUGGER", "tokenMap", "put", "DEFAULT", "tokenMap", "put", "DELETE", "tokenMap", "put", "DO", "tokenMap", "put", "DOUBLE", "tokenMap", "put", "ELSE", "tokenMap", "put", "ENUM", "tokenMap", "put", "EVAL", "tokenMap", "put", "EXPORT", "tokenMap", "put", "EXTENDS", "tokenMap", "put", "FALSE", "tokenMap", "put", "FINAL", "tokenMap", "put", "FINALLY", "tokenMap", "put", "FLOAT", "tokenMap", "put", "FOR", "tokenMap", "put", "FUNCTION", "tokenMap", "put", "GOTO", "tokenMap", "put", "IF", "tokenMap", "put", "IMPLEMENTS", "tokenMap", "put", "IMPORT", "tokenMap", "put", "IN", "tokenMap", "put", "INSTANCE_OF", "tokenMap", "put", "INT", "tokenMap", "put", "INTERFACE", "tokenMap", "put", "LET", "tokenMap", "put", "LONG", "tokenMap", "put", "NATIVE", "tokenMap", "put", "NEW", "tokenMap", "put", "NULL", "tokenMap", "put", "PACKAGE", "tokenMap", "put", "PRIVATE", "tokenMap", "put", "PROTECTED", "tokenMap", "put", "PUBLIC", "tokenMap", "put", "RETURN", "tokenMap", "put", "SHORT", "tokenMap", "put", "STATIC", "tokenMap", "put", "SUPER", "tokenMap", "put", "SWITCH", "tokenMap", "put", "SYNCHRONIZED", "tokenMap", "put", "THIS", "tokenMap", "put", "THROW", "tokenMap", "put", "THROWS", "tokenMap", "put", "TRANSIENT", "tokenMap", "put", "TRUE", "tokenMap", "put", "TRY", "tokenMap", "put", "TYPE_OF", "tokenMap", "put", "VAR", "tokenMap", "put", "VOID", "tokenMap", "put", "VOLATILE", "tokenMap", "put", "WHILE", "tokenMap", "put", "WITH", "tokenMap", "put", "YIELD", "tokenMap", "put", "PLUS", "tokenMap", "put", "MINUS", "tokenMap", "put", "STAR", "tokenMap", "put", "DIV", "tokenMap", "put", "MOD", "tokenMap", "put", "PLUS_PLUS", "tokenMap", "put", "MINUS_MINUS", "tokenMap", "put", "ASSIGN", "tokenMap", "put", "PLUS_ASSIGN", "tokenMap", "put", "MINUS_ASSIGN", "tokenMap", "put", "STAR_ASSIGN", "tokenMap", "put", "DIV_ASSIGN", "tokenMap", "put", "MOD_ASSIGN", "tokenMap", "put", "EQUAL", "tokenMap", "put", "ABSOLUTE_EQUAL", "tokenMap", "put", "NOT_EQUAL", "tokenMap", "put", "ABSOLUTE_NOT_EQUAL", "tokenMap", "put", "GREATER", "tokenMap", "put", "LESS", "tokenMap", "put", "GREATER_EQUAL", "tokenMap", "put", "LESS_EQUAL", "tokenMap", "put", "AND", "tokenMap", "put", "OR", "tokenMap", "put", "NOT", "tokenMap", "put", "QUESTION", "tokenMap", "put", "COLON", "tokenMap", "put", "SEMI", "tokenMap", "put", "COMMA", "tokenMap", "put", "DOT", "tokenMap", "put", "LEFT_SMALL_BRACKET", "tokenMap", "put", "LEFT_MID_BRACKET", "tokenMap", "put", "LEFT_LARGE_BRACKET", "tokenMap", "put", "RIGHT_SMALL_BRACKET", "tokenMap", "put", "RIGHT_MID_BRACKET", "tokenMap", "put", "RIGHT_LARGE_BRACKET" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\enums\\PythonTokens.java",
  "startLine" : 88,
  "endLine" : 158,
  "identifiers" : [ "tokenMap", "put", "FALSE", "tokenMap", "put", "NONE", "tokenMap", "put", "TRUE", "tokenMap", "put", "AND", "tokenMap", "put", "AS", "tokenMap", "put", "ASSERT", "tokenMap", "put", "BREAK", "tokenMap", "put", "CLASS", "tokenMap", "put", "CONTINUE", "tokenMap", "put", "DEF", "tokenMap", "put", "DEL", "tokenMap", "put", "ELIF", "tokenMap", "put", "ELSE", "tokenMap", "put", "EXCEPT", "tokenMap", "put", "FINALLY", "tokenMap", "put", "FOR", "tokenMap", "put", "FROM", "tokenMap", "put", "GLOBAL", "tokenMap", "put", "IF", "tokenMap", "put", "IMPORT", "tokenMap", "put", "IN", "tokenMap", "put", "IS", "tokenMap", "put", "LAMBDA", "tokenMap", "put", "NONLOCAL", "tokenMap", "put", "NOT", "tokenMap", "put", "OR", "tokenMap", "put", "PASS", "tokenMap", "put", "RAISE", "tokenMap", "put", "RETURN", "tokenMap", "put", "TRY", "tokenMap", "put", "WHILE", "tokenMap", "put", "WITH", "tokenMap", "put", "YIELD", "tokenMap", "put", "LEFT_PAREN", "tokenMap", "put", "RIGHT_PAREN", "tokenMap", "put", "LEFT_BRACKET", "tokenMap", "put", "RIGHT_BRACKET", "tokenMap", "put", "LEFT_BRACE", "tokenMap", "put", "RIGHT_BRACE", "tokenMap", "put", "PLUS", "tokenMap", "put", "MINUS", "tokenMap", "put", "STAR", "tokenMap", "put", "DIV", "tokenMap", "put", "MOD", "tokenMap", "put", "EXP", "tokenMap", "put", "tokenMap", "put", "BIT_AND", "tokenMap", "put", "BIT_OR", "tokenMap", "put", "BIT_CARET", "tokenMap", "put", "BIT_TILDE", "tokenMap", "put", "LEFT_SHIFT", "tokenMap", "put", "RIGHT_SHIFT", "tokenMap", "put", "DOT", "tokenMap", "put", "COMMA", "tokenMap", "put", "COLON" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\format\\Printer.java",
  "startLine" : 21,
  "endLine" : 40,
  "identifiers" : [ "List", "MeasurePair", "measurePairList", "new", "ArrayList", "measurePairSet", "Collections", "sort", "measurePairList", "new", "Comparator", "MeasurePair", "Override", "public", "int", "compare", "MeasurePair", "o1", "MeasurePair", "o2", "if", "o1", "getFirstMeasureIndex", "o2", "getFirstMeasureIndex", "return", "else", "if", "o1", "getFirstMeasureIndex", "o2", "getFirstMeasureIndex", "return", "else", "return", "for", "MeasurePair", "measurePair", "measurePairList", "printWriter", "println", "measurePair", "toString", "printWriter", "flush" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\format\\Printer.java",
  "startLine" : 42,
  "endLine" : 48,
  "identifiers" : [ "for", "int", "i", "i", "list", "size", "i", "printWriter", "write", "list", "get", "i", "printWriter", "write", "list", "get", "list", "size", "printWriter", "flush" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\format\\Printer.java",
  "startLine" : 50,
  "endLine" : 64,
  "identifiers" : [ "PrintWriter", "pw", "new", "PrintWriter", "Config", "MEASURE_INDEX_FILE", "List", "Measure", "list", "Measure", "measureList", "for", "int", "i", "i", "list", "size", "i", "pw", "write", "i", "pw", "write", "files", "get", "list", "get", "i", "getFileId", "getAbsolutePath", "pw", "write", "pw", "write", "list", "get", "i", "getStartLine", "pw", "write", "pw", "write", "list", "get", "i", "getEndLine", "pw", "write", "pw", "flush", "pw", "close" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 41,
  "endLine" : 75,
  "identifiers" : [ "logger", "info", "logger", "info", "logger", "info", "List", "Integer", "result", "new", "ArrayList", "int", "tokenFileNum", "tokenIndexList", "size", "if", "tokenFileNum", "try", "ParseMatchResult", "parseFileToInt", "result", "parseOneDataFile", "result", "result", "clear", "catch", "Exception", "e", "e", "printStackTrace", "else", "int", "totalCnt", "tokenFileNum", "tokenFileNum", "int", "cnt", "for", "int", "j", "j", "tokenFileNum", "j", "for", "int", "i", "j", "i", "tokenFileNum", "i", "try", "cnt", "logger", "info", "cnt", "f", "totalCnt", "ParseMatchResult", "parseFileToInt", "j", "i", "result", "parseOneDataFile", "result", "result", "clear", "catch", "Exception", "e", "e", "printStackTrace", "logger", "info", "classID", "get" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 81,
  "endLine" : 97,
  "identifiers" : [ "List", "Integer", "tmpList", "new", "ArrayList", "int", "i", "while", "result", "get", "i", "equals", "Integer", "MAX_VALUE", "if", "i", "result", "size", "break", "tmpList", "add", "result", "get", "i", "tmpList", "add", "result", "get", "i", "tmpList", "add", "result", "get", "i", "i", "gatherCloneFragmentClass", "tmpList", "tmpList", "clear", "printType12Clone", "printType3Clone" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 103,
  "endLine" : 121,
  "identifiers" : [ "if", "classInstances", "null", "classInstances", "size", "return", "for", "int", "i", "i", "classInstances", "size", "i", "int", "x1", "classInstances", "get", "i", "int", "x2", "classInstances", "get", "i", "int", "cloneLen", "classInstances", "get", "i", "int", "firstFrom", "Measure", "binarySearchStart", "x1", "int", "firstTo", "Measure", "binarySearchEnd", "x1", "cloneLen", "int", "secondFrom", "Measure", "binarySearchStart", "x2", "int", "secondTo", "Measure", "binarySearchEnd", "x2", "cloneLen", "if", "firstFrom", "firstTo", "secondFrom", "secondTo", "else", "gatherCloneFragment", "x1", "x2", "x1", "cloneLen", "x2", "cloneLen", "firstFrom", "secondFrom" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 132,
  "endLine" : 179,
  "identifiers" : [ "Measure", "f1", "Measure", "measureList", "get", "firstFrom", "Measure", "f2", "Measure", "measureList", "get", "secondFrom", "int", "f1startToken", "int", "f1start", "f1", "getStartToken", "int", "f2startToken", "int", "f2start", "f2", "getStartToken", "int", "f1endToken", "int", "f1end", "f1", "getStartToken", "int", "f2endToken", "int", "f2end", "f2", "getStartToken", "Snippet", "s1", "new", "Snippet", "s1", "setFile", "files", "get", "f1", "getFileId", "getAbsolutePath", "s1", "setmStartLine", "f1", "getStartLine", "s1", "setmEndLine", "f1", "getEndLine", "s1", "setStartToken", "f1startToken", "s1", "setEndToken", "f1endToken", "Snippet", "s2", "new", "Snippet", "s2", "setFile", "files", "get", "f2", "getFileId", "getAbsolutePath", "s2", "setmStartLine", "f2", "getStartLine", "s2", "setmEndLine", "f2", "getEndLine", "s2", "setStartToken", "f2startToken", "s2", "setEndToken", "f2endToken", "SnippetPair", "snippetPair", "null", "if", "s1", "getEndToken", "s2", "getEndToken", "snippetPair", "new", "SnippetPair", "s1", "s2", "else", "snippetPair", "new", "SnippetPair", "s2", "s1", "String", "key", "generateType12Key", "snippetPair", "List", "SnippetPair", "snippetPairs", "snippets", "getOrDefault", "key", "new", "ArrayList", "snippetPairs", "add", "snippetPair", "snippets", "put", "key", "snippetPairs", "String", "method1", "String", "format", "s1", "getFile", "s1", "getmStartLine", "s1", "getmEndLine", "String", "method2", "String", "format", "s2", "getFile", "s2", "getmStartLine", "s2", "getmEndLine", "if", "method1", "compareTo", "method2", "snippetPair", "new", "SnippetPair", "s1", "s2", "key", "method1", "method2", "else", "snippetPair", "new", "SnippetPair", "s2", "s1", "key", "method2", "method1", "snippetPairs", "type3Snippets", "getOrDefault", "key", "new", "ArrayList", "snippetPairs", "add", "snippetPair", "type3Snippets", "put", "key", "snippetPairs" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 189,
  "endLine" : 218,
  "identifiers" : [ "int", "groupId", "try", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "Config", "TYPE12_FRAGMENT_RESULT_FILE", "for", "List", "SnippetPair", "snippetPairs", "snippets", "values", "groupId", "if", "snippetPairs", "size", "printSnippetPair", "snippetPairs", "get", "groupId", "writer", "continue", "SnippetPair", "pair", "snippetPairs", "stream", "min", "new", "Comparator", "SnippetPair", "Override", "public", "int", "compare", "SnippetPair", "o1", "SnippetPair", "o2", "if", "o1", "getS1", "getStartToken", "o2", "getS1", "getStartToken", "return", "else", "if", "o1", "getS1", "getStartToken", "o2", "getS1", "getStartToken", "return", "return", "get", "snippetPairs", "clear", "printSnippetPair", "pair", "groupId", "writer", "writer", "flush", "catch", "Exception", "e", "e", "printStackTrace", "classID", "set", "groupId", "snippets", "clear" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 223,
  "endLine" : 244,
  "identifiers" : [ "int", "groupId", "classID", "get", "try", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "Config", "TYPE3_FRAGMENT_RESULT_FILE", "for", "List", "SnippetPair", "snippetPairs", "type3Snippets", "values", "if", "snippetPairs", "size", "continue", "List", "SnippetPair", "type3Pairs", "mergeType3Snippets", "snippetPairs", "if", "type3Pairs", "size", "continue", "for", "SnippetPair", "pair", "type3Pairs", "groupId", "printSnippetPair", "pair", "groupId", "writer", "catch", "Exception", "e", "e", "printStackTrace", "classID", "set", "groupId", "type3Snippets", "clear" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 246,
  "endLine" : 257,
  "identifiers" : [ "snippetPair", "getS1", "setGroupId", "groupId", "snippetPair", "getS2", "setGroupId", "groupId", "try", "writer", "write", "snippetPair", "getS1", "toString", "writer", "newLine", "writer", "write", "snippetPair", "getS2", "toString", "writer", "newLine", "writer", "newLine", "catch", "Exception", "e" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 264,
  "endLine" : 336,
  "identifiers" : [ "int", "tokenGap", "List", "SnippetPair", "type3Pairs", "new", "ArrayList", "snippetPairs", "sort", "new", "Comparator", "SnippetPair", "Override", "public", "int", "compare", "SnippetPair", "o1", "SnippetPair", "o2", "if", "o1", "getS1", "getStartToken", "o2", "getS1", "getStartToken", "return", "else", "if", "o1", "getS1", "getStartToken", "o2", "getS1", "getStartToken", "return", "return", "SnippetPair", "pair", "snippetPairs", "get", "boolean", "isSameMethodClone", "isInSameMethod", "pair", "getS1", "pair", "getS2", "int", "i", "if", "isSameMethodClone", "while", "i", "snippetPairs", "size", "SnippetPair", "nextPair", "snippetPairs", "get", "i", "if", "pair", "getS1", "getStartToken", "nextPair", "getS1", "getStartToken", "pair", "getS2", "getStartToken", "nextPair", "getS1", "getStartToken", "pair", "getS2", "getStartToken", "nextPair", "getS2", "getStartToken", "if", "pair", "getS1", "getEndToken", "nextPair", "getS1", "getEndToken", "if", "pair", "getS1", "getEndToken", "tokenGap", "nextPair", "getS1", "getStartToken", "if", "pair", "getS2", "getEndToken", "tokenGap", "nextPair", "getS2", "getStartToken", "Snippet", "tmp1", "linkSnippets", "pair", "getS1", "nextPair", "getS1", "Snippet", "tmp2", "linkSnippets", "pair", "getS2", "nextPair", "getS2", "type3Pairs", "add", "new", "SnippetPair", "tmp1", "tmp2", "pair", "nextPair", "i", "else", "int", "cnt", "while", "i", "snippetPairs", "size", "SnippetPair", "nextPair", "snippetPairs", "get", "i", "boolean", "merged", "false", "if", "pair", "getS1", "getEndToken", "nextPair", "getS1", "getEndToken", "if", "pair", "getS1", "getEndToken", "tokenGap", "nextPair", "getS1", "getStartToken", "if", "pair", "getS2", "getStartToken", "nextPair", "getS2", "getStartToken", "if", "pair", "getS2", "getEndToken", "tokenGap", "nextPair", "getS2", "getStartToken", "Snippet", "tmp1", "linkSnippets", "pair", "getS1", "nextPair", "getS1", "Snippet", "tmp2", "linkSnippets", "pair", "getS2", "nextPair", "getS2", "pair", "new", "SnippetPair", "tmp1", "tmp2", "merged", "true", "cnt", "if", "merged", "i", "snippetPairs", "size", "if", "cnt", "type3Pairs", "add", "pair", "cnt", "pair", "nextPair", "i", "return", "type3Pairs" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\GPUSnippetParser.java",
  "startLine" : 356,
  "endLine" : 364,
  "identifiers" : [ "Snippet", "newSnip", "new", "Snippet", "newSnip", "setFile", "s1", "getFile", "newSnip", "setmStartLine", "s1", "getmStartLine", "newSnip", "setmEndLine", "s1", "getmEndLine", "newSnip", "setStartToken", "Math", "min", "s1", "getStartToken", "s2", "getStartToken", "newSnip", "setEndToken", "Math", "max", "s1", "getEndToken", "s2", "getEndToken", "return", "newSnip" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CLexer.java",
  "startLine" : 20,
  "endLine" : 275,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "peek", "t", "peek", "r", "else", "if", "peek", "n", "line", "line", "indexOfChar", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "indexOfChar", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "line", "else", "if", "peek", "n", "line", "line", "else", "break", "wordIndexOfChar", "indexOfChar", "switch", "peek", "case", "getChar", "if", "peek", "n", "line", "indexOfChar", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "CTokens", "LEFT_PAREN", "line", "case", "getChar", "return", "new", "Token", "CTokens", "RIGHT_PAREN", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "CTokens", "LEFT_BRACE", "line", "case", "getChar", "return", "new", "Token", "CTokens", "RIGHT_BRACE", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "CTokens", "ASSIGN", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "if", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line", "if", "Character", "isDigit", "peek", "int", "value", "do", "value", "value", "Character", "digit", "peek", "getChar", "while", "Character", "isDigit", "peek", "return", "new", "Token", "byte", "line", "if", "Character", "isLetter", "peek", "StringBuilder", "buffer", "new", "StringBuilder", "do", "buffer", "append", "peek", "getChar", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "String", "s", "buffer", "toString", "if", "s", "equals", "reader", "readLine", "getChar", "indexOfChar", "line", "line", "return", "new", "Token", "byte", "line", "else", "Byte", "token", "CTokens", "tokenMap", "get", "s", "if", "token", "null", "return", "new", "Token", "token", "line", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "s", "line", "return", "new", "Token", "CTokens", "IDENTIFIER", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CommonFileWord.java",
  "startLine" : 17,
  "endLine" : 76,
  "identifiers" : [ "try", "List", "Token", "tokenHashList", "new", "ArrayList", "Measure", "measure", "new", "Measure", "measure", "setFileId", "fileID", "measure", "setStartLine", "measure", "setStartToken", "tokenID", "get", "Integer", "MAX_VALUE", "switch", "Config", "language", "case", "DetectLanguage", "JAVA", "lexer", "new", "JavaLexer", "inputFileName", "break", "case", "DetectLanguage", "C", "lexer", "new", "CLexer", "inputFileName", "break", "case", "DetectLanguage", "CPP", "lexer", "new", "CPPLexer", "inputFileName", "break", "case", "DetectLanguage", "JAVA_SCRIPT", "lexer", "new", "JSLexer", "inputFileName", "break", "case", "DetectLanguage", "GO", "lexer", "new", "GoLexer", "inputFileName", "break", "case", "DetectLanguage", "PYTHON", "lexer", "new", "PythonLexer", "inputFileName", "break", "Token", "word", "null", "tokenHashList", "add", "new", "Token", "CommonTokens", "BOUND_LEFT", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "if", "word", "getTokenHash", "word", "getTokenHash", "tokenHashList", "add", "word", "tokenHashList", "add", "new", "Token", "CommonTokens", "BOUND_RIGHT", "lexer", "line", "if", "tokenHashList", "size", "mlc", "tokenHashList", "clear", "return", "new", "ArrayList", "if", "Config", "reduceToken", "tokenHashList", "TokenUtil", "reduce", "tokenHashList", "measure", "setEndToken", "tokenID", "addAndGet", "tokenHashList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "finally", "lexer", "closeReader", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CommonLexer.java",
  "startLine" : 14,
  "endLine" : 68,
  "identifiers" : [ "if", "peek", "n", "getChar", "line", "indexOfChar", "return", "new", "Token", "byte", "line", "if", "Character", "isSpaceChar", "peek", "getChar", "return", "new", "Token", "byte", "line", "if", "peek", "getReaderIsEnd", "getChar", "return", "new", "Token", "str2hash", "sb", "toString", "line", "String", "token", "if", "Character", "isDigit", "peek", "while", "Character", "isDigit", "peek", "token", "peek", "getChar", "if", "getReaderIsEnd", "break", "return", "new", "Token", "str2hash", "token", "line", "if", "Character", "isLetter", "peek", "peek", "_", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "token", "peek", "getChar", "if", "getReaderIsEnd", "break", "return", "new", "Token", "str2hash", "token", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CommonWord.java",
  "startLine" : 13,
  "endLine" : 50,
  "identifiers" : [ "try", "List", "Token", "tokenHashList", "new", "ArrayList", "Measure", "measure", "new", "Measure", "measure", "setFileId", "fileID", "measure", "setStartLine", "measure", "setStartToken", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "new", "CommonLexer", "inputFileName", "Token", "word", "null", "tokenHashList", "add", "new", "Token", "CommonTokens", "BOUND_LEFT", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "if", "word", "getTokenHash", "word", "getTokenHash", "tokenHashList", "add", "word", "tokenHashList", "add", "new", "Token", "CommonTokens", "BOUND_RIGHT", "lexer", "line", "if", "tokenHashList", "size", "mlc", "tokenHashList", "clear", "return", "new", "ArrayList", "measure", "setEndToken", "tokenID", "addAndGet", "tokenHashList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "finally", "lexer", "closeReader", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CPPLexer.java",
  "startLine" : 17,
  "endLine" : 266,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "peek", "t", "peek", "r", "else", "if", "peek", "n", "line", "line", "indexOfChar", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "indexOfChar", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "line", "else", "if", "peek", "n", "line", "line", "else", "break", "wordIndexOfChar", "indexOfChar", "switch", "peek", "case", "getChar", "if", "peek", "n", "line", "indexOfChar", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "LEFT_PAREN", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "RIGHT_PAREN", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "LEFT_BRACE", "line", "case", "getChar", "return", "new", "Token", "CPPTokens", "RIGHT_BRACE", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "CPPTokens", "ASSIGN", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "if", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "builder", "toString", "line", "return", "new", "Token", "byte", "line", "if", "Character", "isDigit", "peek", "int", "value", "do", "value", "value", "Character", "digit", "peek", "getChar", "while", "Character", "isDigit", "peek", "return", "new", "Token", "byte", "line", "if", "Character", "isLetter", "peek", "StringBuilder", "buffer", "new", "StringBuilder", "do", "buffer", "append", "peek", "getChar", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "String", "s", "buffer", "toString", "if", "s", "equals", "reader", "readLine", "getChar", "indexOfChar", "line", "line", "return", "new", "Token", "byte", "line", "else", "Byte", "token", "CPPTokens", "tokenMap", "get", "s", "if", "token", "null", "return", "new", "Token", "token", "line", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "s", "line", "return", "new", "Token", "CPPTokens", "IDENTIFIER", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CPPWord.java",
  "startLine" : 17,
  "endLine" : 72,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "CPPLexer", "inputFileName", "Token", "word", "null", "int", "functionPos", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "if", "word", "getTokenHash", "word", "getTokenHash", "tmpList", "add", "word", "if", "word", "getTokenHash", "CPPTokens", "LEFT_BRACE", "stack", "push", "lexer", "line", "if", "isFunction", "tmpList", "functionPos", "functionPos", "stack", "size", "tmpList", "clear", "tmpList", "add", "new", "Token", "CPPTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "else", "if", "word", "getTokenHash", "CPPTokens", "RIGHT_BRACE", "if", "stack", "size", "if", "stack", "size", "functionPos", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "add", "new", "Token", "CPPTokens", "BOUND_RIGHT", "lexer", "line", "if", "Config", "reduceToken", "tmpList", "TokenUtil", "reduce", "tmpList", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "tmpList", "clear", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "functionPos", "stack", "pop", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList", "finally", "lexer", "closeReader" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CPPWord.java",
  "startLine" : 79,
  "endLine" : 150,
  "identifiers" : [ "int", "size", "tmpList", "size", "if", "size", "return", "false", "int", "index", "size", "byte", "word", "tmpList", "get", "index", "getTokenHash", "byte", "midWord", "int", "limit", "while", "word", "CPPTokens", "RIGHT_PAREN", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "limit", "if", "word", "CPPTokens", "ASSIGN", "limit", "return", "false", "if", "word", "CPPTokens", "RIGHT_PAREN", "midWord", "word", "if", "midWord", "CPPTokens", "CONST", "return", "true", "if", "midWord", "return", "false", "int", "rightParenCnt", "while", "rightParenCnt", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "word", "CPPTokens", "LEFT_PAREN", "rightParenCnt", "else", "if", "word", "CPPTokens", "RIGHT_PAREN", "rightParenCnt", "index", "if", "index", "return", "false", "word", "tmpList", "get", "index", "getTokenHash", "if", "word", "CPPTokens", "FOR", "word", "CPPTokens", "SWITCH", "word", "CPPTokens", "IF", "word", "CPPTokens", "WHILE", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CWord.java",
  "startLine" : 17,
  "endLine" : 72,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "CLexer", "inputFileName", "Token", "word", "null", "int", "functionPos", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "if", "word", "getTokenHash", "word", "getTokenHash", "tmpList", "add", "word", "if", "word", "getTokenHash", "CTokens", "LEFT_BRACE", "stack", "push", "lexer", "line", "if", "isFunction", "tmpList", "functionPos", "functionPos", "stack", "size", "tmpList", "clear", "tmpList", "add", "new", "Token", "CTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "else", "if", "word", "getTokenHash", "CTokens", "RIGHT_BRACE", "if", "stack", "size", "if", "stack", "size", "functionPos", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "add", "new", "Token", "CTokens", "BOUND_RIGHT", "lexer", "line", "if", "Config", "reduceToken", "tmpList", "TokenUtil", "reduce", "tmpList", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "tmpList", "clear", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "functionPos", "stack", "pop", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList", "finally", "lexer", "closeReader" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\CWord.java",
  "startLine" : 79,
  "endLine" : 150,
  "identifiers" : [ "int", "size", "tmpList", "size", "if", "size", "return", "false", "int", "index", "size", "byte", "word", "tmpList", "get", "index", "getTokenHash", "byte", "midWord", "int", "limit", "while", "word", "CTokens", "RIGHT_PAREN", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "limit", "if", "word", "CTokens", "ASSIGN", "limit", "return", "false", "if", "word", "CTokens", "RIGHT_PAREN", "midWord", "word", "if", "midWord", "CTokens", "CONST", "return", "true", "if", "midWord", "return", "false", "int", "rightParenCnt", "while", "rightParenCnt", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "word", "CTokens", "LEFT_PAREN", "rightParenCnt", "else", "if", "word", "CTokens", "RIGHT_PAREN", "rightParenCnt", "index", "if", "index", "return", "false", "word", "tmpList", "get", "index", "getTokenHash", "if", "word", "CTokens", "FOR", "word", "CTokens", "SWITCH", "word", "CTokens", "IF", "word", "CTokens", "WHILE", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\GoLexer.java",
  "startLine" : 17,
  "endLine" : 264,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "peek", "t", "peek", "r", "else", "if", "peek", "n", "line", "line", "indexOfChar", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "indexOfChar", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "line", "else", "if", "peek", "n", "line", "line", "else", "break", "wordIndexOfChar", "indexOfChar", "switch", "peek", "case", "getChar", "if", "peek", "n", "line", "indexOfChar", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "GoTokens", "LEFT_LARGE_BRACKET", "line", "case", "getChar", "return", "new", "Token", "GoTokens", "RIGHT_LARGE_BRACKET", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "if", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "builder", "toString", "line", "return", "new", "Token", "byte", "line", "if", "Character", "isDigit", "peek", "int", "value", "do", "value", "value", "Character", "digit", "peek", "getChar", "while", "Character", "isDigit", "peek", "return", "new", "Token", "byte", "line", "if", "Character", "isLetter", "peek", "StringBuilder", "buffer", "new", "StringBuilder", "do", "buffer", "append", "peek", "getChar", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "String", "s", "buffer", "toString", "if", "s", "equals", "reader", "readLine", "getChar", "indexOfChar", "line", "line", "return", "new", "Token", "byte", "line", "else", "Byte", "token", "GoTokens", "tokenMap", "get", "s", "if", "token", "null", "return", "new", "Token", "token", "line", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "s", "line", "return", "new", "Token", "GoTokens", "ID", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\GoWord.java",
  "startLine" : 17,
  "endLine" : 68,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "GoLexer", "inputFileName", "Token", "word", "null", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "if", "word", "getTokenHash", "word", "getTokenHash", "tmpList", "add", "word", "if", "word", "getTokenHash", "GoTokens", "LEFT_LARGE_BRACKET", "stack", "push", "lexer", "line", "if", "stack", "size", "tmpList", "clear", "tmpList", "add", "new", "Token", "GoTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "else", "if", "word", "getTokenHash", "GoTokens", "RIGHT_LARGE_BRACKET", "if", "stack", "size", "if", "stack", "size", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "add", "new", "Token", "GoTokens", "BOUND_RIGHT", "lexer", "line", "if", "Config", "reduceToken", "tmpList", "TokenUtil", "reduce", "tmpList", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "tmpList", "clear", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "stack", "pop", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList", "finally", "lexer", "closeReader" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\JavaLexer.java",
  "startLine" : 20,
  "endLine" : 245,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "peek", "t", "continue", "else", "if", "peek", "n", "lastPeek", "line", "line", "indexOfChar", "continue", "else", "if", "lastPeek", "r", "peek", "r", "line", "line", "indexOfChar", "continue", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "indexOfChar", "if", "lastPeek", "r", "peek", "r", "line", "indexOfChar", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "else", "if", "peek", "n", "line", "indexOfChar", "else", "break", "wordIndexOfChar", "indexOfChar", "switch", "peek", "case", "getChar", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "LEFT_LARGE_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JavaTokens", "RIGHT_LARGE_BRACKET", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "if", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "if", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "if", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "if", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "if", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "sb", "toString", "line", "return", "new", "Token", "byte", "line", "if", "peek", "StringBuilder", "sb", "new", "StringBuilder", "sb", "append", "peek", "do", "if", "peek", "getChar", "sb", "append", "peek", "getChar", "else", "getChar", "sb", "append", "peek", "while", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "sb", "toString", "line", "return", "new", "Token", "byte", "line", "if", "Character", "isDigit", "peek", "int", "value", "do", "value", "value", "Character", "digit", "peek", "getChar", "while", "Character", "isDigit", "peek", "return", "new", "Token", "byte", "line", "lastIdentifier", "lastPeek", "if", "Character", "isLetter", "peek", "StringBuilder", "sb", "new", "StringBuilder", "do", "sb", "append", "peek", "getChar", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "peek", "String", "s", "sb", "toString", "if", "s", "equals", "s", "equals", "reader", "readLine", "indexOfChar", "line", "return", "new", "Token", "byte", "line", "else", "if", "s", "equals", "JavaTokens", "classKeyword", "return", "new", "Token", "JavaTokens", "CLASSFLAG", "line", "else", "if", "s", "endsWith", "JavaTokens", "exceptionKeyword", "return", "new", "Token", "byte", "line", "if", "JavaTokens", "neglectfulKeyword", "contains", "s", "return", "new", "Token", "byte", "line", "Byte", "isKeyWord", "JavaTokens", "map", "get", "s", "if", "isKeyWord", "null", "return", "new", "Token", "isKeyWord", "line", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "s", "line", "return", "new", "Token", "JavaTokens", "ID", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\JavaWord.java",
  "startLine" : 17,
  "endLine" : 79,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "JavaLexer", "inputFileName", "Token", "word", "null", "int", "innerClass", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "if", "word", "getTokenHash", "word", "getTokenHash", "tmpList", "add", "word", "if", "stack", "size", "word", "getTokenHash", "JavaTokens", "CLASSFLAG", "lexer", "lastIdentifier", "innerClass", "else", "if", "word", "getTokenHash", "JavaTokens", "LEFT_LARGE_BRACKET", "stack", "push", "lexer", "line", "if", "stack", "size", "innerClass", "tmpList", "new", "ArrayList", "tmpList", "add", "new", "Token", "JavaTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "else", "tmpList", "remove", "tmpList", "size", "else", "if", "word", "getTokenHash", "JavaTokens", "RIGHT_LARGE_BRACKET", "if", "stack", "size", "if", "stack", "size", "innerClass", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "add", "new", "Token", "JavaTokens", "BOUND_RIGHT", "lexer", "line", "if", "Config", "reduceToken", "tmpList", "TokenUtil", "reduce", "tmpList", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "tmpList", "clear", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "else", "tmpList", "remove", "tmpList", "size", "if", "stack", "size", "innerClass", "innerClass", "innerClass", "stack", "pop", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList", "finally", "lexer", "closeReader" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\JSLexer.java",
  "startLine" : 17,
  "endLine" : 269,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "peek", "t", "peek", "r", "else", "if", "peek", "n", "line", "indexOfChar", "else", "if", "peek", "getChar", "if", "peek", "for", "getChar", "if", "peek", "n", "line", "indexOfChar", "if", "lastPeek", "peek", "break", "if", "getReaderIsEnd", "break", "else", "if", "peek", "reader", "readLine", "indexOfChar", "line", "else", "if", "peek", "n", "line", "indexOfChar", "else", "break", "wordIndexOfChar", "indexOfChar", "switch", "peek", "case", "getChar", "if", "peek", "n", "line", "indexOfChar", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "JSTokens", "LEFT_SMALL_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JSTokens", "RIGHT_SMALL_BRACKET", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "JSTokens", "LEFT_LARGE_BRACKET", "line", "case", "getChar", "return", "new", "Token", "JSTokens", "RIGHT_LARGE_BRACKET", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "if", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "builder", "toString", "line", "return", "new", "Token", "byte", "line", "if", "peek", "StringBuilder", "sb", "new", "StringBuilder", "sb", "append", "peek", "do", "if", "peek", "getChar", "sb", "append", "peek", "getChar", "else", "getChar", "sb", "append", "peek", "while", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "sb", "toString", "line", "return", "new", "Token", "byte", "line", "if", "Character", "isDigit", "peek", "int", "value", "do", "value", "value", "Character", "digit", "peek", "getChar", "while", "Character", "isDigit", "peek", "return", "new", "Token", "byte", "line", "if", "Character", "isLetter", "peek", "StringBuilder", "buffer", "new", "StringBuilder", "do", "buffer", "append", "peek", "getChar", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "String", "s", "buffer", "toString", "if", "s", "equals", "reader", "readLine", "getChar", "indexOfChar", "line", "line", "return", "new", "Token", "byte", "line", "else", "Byte", "token", "JSTokens", "tokenMap", "get", "s", "if", "token", "null", "return", "new", "Token", "token", "line", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "s", "line", "return", "new", "Token", "JSTokens", "ID", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\JSWord.java",
  "startLine" : 18,
  "endLine" : 73,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "JSLexer", "inputFileName", "Token", "word", "null", "int", "functionPos", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "if", "word", "getTokenHash", "word", "getTokenHash", "tmpList", "add", "word", "if", "word", "getTokenHash", "JSTokens", "LEFT_LARGE_BRACKET", "stack", "push", "lexer", "line", "if", "isFunction", "tmpList", "functionPos", "functionPos", "stack", "size", "tmpList", "clear", "tmpList", "add", "new", "Token", "JSTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "else", "if", "word", "getTokenHash", "JSTokens", "RIGHT_LARGE_BRACKET", "if", "stack", "size", "if", "stack", "size", "functionPos", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "add", "new", "Token", "JSTokens", "BOUND_RIGHT", "lexer", "line", "if", "Config", "reduceToken", "tmpList", "TokenUtil", "reduce", "tmpList", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "line", "tmpList", "clear", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "functionPos", "stack", "pop", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "ArrayList", "finally", "lexer", "closeReader" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\JSWord.java",
  "startLine" : 80,
  "endLine" : 134,
  "identifiers" : [ "int", "size", "tmpList", "size", "if", "size", "return", "false", "if", "tmpList", "get", "size", "getTokenHash", "JSTokens", "RIGHT_SMALL_BRACKET", "return", "false", "int", "index", "size", "byte", "word", "tmpList", "get", "index", "getTokenHash", "int", "rightSmallBracketCnt", "while", "rightSmallBracketCnt", "index", "if", "index", "break", "word", "tmpList", "get", "index", "getTokenHash", "if", "word", "JSTokens", "RIGHT_SMALL_BRACKET", "rightSmallBracketCnt", "else", "if", "word", "JSTokens", "LEFT_SMALL_BRACKET", "rightSmallBracketCnt", "if", "index", "if", "tmpList", "get", "index", "getTokenHash", "JSTokens", "FUNCTION", "tmpList", "get", "index", "getTokenHash", "JSTokens", "FUNCTION", "return", "true", "byte", "lastWord", "tmpList", "get", "index", "getTokenHash", "if", "lastWord", "JSTokens", "FOR", "lastWord", "JSTokens", "SWITCH", "lastWord", "JSTokens", "CATCH", "lastWord", "JSTokens", "IF", "lastWord", "JSTokens", "WHILE", "return", "true", "if", "index", "if", "tmpList", "get", "index", "getTokenHash", "JSTokens", "FUNCTION", "return", "true", "byte", "lastWord", "tmpList", "get", "index", "getTokenHash", "if", "lastWord", "JSTokens", "FOR", "lastWord", "JSTokens", "SWITCH", "lastWord", "JSTokens", "CATCH", "lastWord", "JSTokens", "IF", "lastWord", "JSTokens", "WHILE", "return", "true", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\Lexer.java",
  "startLine" : 36,
  "endLine" : 51,
  "identifiers" : [ "FileWriter", "writer", "new", "FileWriter", "outputFileName", "writer", "write", "writer", "write", "if", "list", "size", "for", "SimToken", "x", "list", "writer", "write", "x", "toString", "writer", "flush", "writer", "close" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\Lexer.java",
  "startLine" : 92,
  "endLine" : 105,
  "identifiers" : [ "str", "str", "toLowerCase", "if", "str", "length", "int", "h", "str", "toCharArray", "str", "length", "h", "return", "byte", "h", "x7f", "else", "int", "h1", "str", "toCharArray", "str", "length", "int", "h2", "str", "toCharArray", "str", "length", "h1", "int", "h", "h1", "h2", "return", "byte", "h", "x7f" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\PythonLexer.java",
  "startLine" : 28,
  "endLine" : 262,
  "identifiers" : [ "for", "getChar", "if", "getReaderIsEnd", "break", "else", "if", "peek", "indentPos", "add", "indexOfChar", "else", "if", "peek", "t", "peek", "r", "indexOfChar", "else", "if", "peek", "n", "lastNotBlankLine", "indexOfChar", "line", "lastNotBlankLine", "line", "indexOfChar", "indentPos", "clear", "else", "if", "peek", "lastNotBlankLine", "indexOfChar", "line", "lastNotBlankLine", "reader", "readLine", "line", "indexOfChar", "indentPos", "clear", "else", "break", "wordIndexOfChar", "indexOfChar", "switch", "peek", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "rightParenLine", "line", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "if", "peek", "getChar", "return", "new", "Token", "byte", "line", "else", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "case", "getChar", "return", "new", "Token", "byte", "line", "if", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "builder", "toString", "line", "return", "new", "Token", "byte", "line", "if", "peek", "StringBuilder", "sb", "new", "StringBuilder", "sb", "append", "peek", "do", "if", "peek", "getChar", "sb", "append", "peek", "else", "if", "peek", "indentPos", "add", "indexOfChar", "else", "if", "peek", "n", "lastNotBlankLine", "line", "line", "indexOfChar", "indentPos", "clear", "getChar", "sb", "append", "peek", "while", "peek", "getReaderIsEnd", "getChar", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "sb", "toString", "line", "return", "new", "Token", "byte", "line", "if", "Character", "isDigit", "peek", "int", "value", "do", "value", "value", "Character", "digit", "peek", "getChar", "while", "Character", "isDigit", "peek", "return", "new", "Token", "byte", "line", "if", "Character", "isLetter", "peek", "StringBuilder", "buffer", "new", "StringBuilder", "do", "buffer", "append", "peek", "getChar", "while", "Character", "isLetterOrDigit", "peek", "peek", "_", "String", "s", "buffer", "toString", "if", "s", "equals", "reader", "readLine", "getChar", "lastNotBlankLine", "line", "indexOfChar", "line", "indentPos", "clear", "return", "new", "Token", "byte", "line", "else", "Byte", "token", "PythonTokens", "tokenMap", "get", "s", "if", "token", "null", "return", "new", "Token", "token", "line", "if", "Config", "openStringHash", "return", "new", "Token", "str2hash", "s", "line", "return", "new", "Token", "PythonTokens", "IDENTIFIER", "line", "if", "int", "peek", "xffff", "getChar", "return", "new", "Token", "byte", "line", "return", "new", "Token", "byte", "line" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\PythonLexer.java",
  "startLine" : 268,
  "endLine" : 280,
  "identifiers" : [ "if", "indentPos", "size", "return", "int", "indent", "for", "int", "i", "i", "indexOfChar", "i", "indentPos", "size", "i", "if", "indentPos", "get", "i", "i", "break", "indent", "return", "indent" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\PythonWord.java",
  "startLine" : 19,
  "endLine" : 71,
  "identifiers" : [ "List", "Token", "tmpList", "new", "ArrayList", "List", "Token", "tokenHashList", "new", "ArrayList", "Stack", "Integer", "stack", "new", "Stack", "Measure", "measure", "null", "try", "lexer", "new", "PythonLexer", "inputFileName", "Token", "word", "null", "int", "functionIndent", "while", "lexer", "getReaderIsEnd", "word", "lexer", "scan", "if", "word", "getTokenHash", "word", "getTokenHash", "tmpList", "add", "word", "if", "lexer", "getIndent", "functionIndent", "lexer", "line", "stack", "peek", "lexer", "line", "lexer", "rightParenLine", "if", "stack", "size", "if", "lexer", "line", "stack", "peek", "minLine", "tmpList", "size", "mlc", "tmpList", "remove", "tmpList", "size", "tmpList", "add", "new", "Token", "PythonTokens", "BOUND_RIGHT", "lexer", "line", "if", "Config", "reduceToken", "tmpList", "TokenUtil", "reduce", "tmpList", "measure", "setFileId", "fileID", "tokenHashList", "addAll", "tmpList", "measure", "setEndToken", "tokenID", "addAndGet", "tmpList", "size", "Integer", "MAX_VALUE", "measure", "setEndLine", "lexer", "lastNotBlankLine", "tmpList", "clear", "Measure", "measureID", "incrementAndGet", "Measure", "measureList", "add", "measure", "functionIndent", "stack", "pop", "if", "word", "getTokenHash", "PythonTokens", "DEF", "stack", "push", "lexer", "line", "functionIndent", "lexer", "getIndent", "tmpList", "clear", "tmpList", "add", "new", "Token", "PythonTokens", "BOUND_LEFT", "lexer", "line", "measure", "new", "Measure", "tokenID", "get", "Integer", "MAX_VALUE", "lexer", "line", "line", "addAndGet", "lexer", "line", "return", "tokenHashList", "catch", "Exception", "e", "e", "printStackTrace", "finally", "lexer", "closeReader", "return", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\Word.java",
  "startLine" : 50,
  "endLine" : 57,
  "identifiers" : [ "File", "file", "new", "File", "outputFileName", "OutputStream", "os", "new", "FileOutputStream", "file", "true", "List", "Byte", "tokens", "allTokenHashList", "stream", "map", "Token", "getTokenHash", "collect", "Collectors", "toList", "os", "write", "getLineTokenByteList", "tokens", "os", "flush", "os", "close" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\Word.java",
  "startLine" : 59,
  "endLine" : 68,
  "identifiers" : [ "File", "file", "new", "File", "outputFileName", "DataOutputStream", "dataOutputStream", "new", "DataOutputStream", "new", "FileOutputStream", "file", "true", "List", "Integer", "tokenLines", "allTokenHashList", "stream", "map", "Token", "getLine", "collect", "Collectors", "toList", "for", "Integer", "line", "tokenLines", "dataOutputStream", "writeShort", "line", "dataOutputStream", "flush", "dataOutputStream", "close" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\lexer\\Word.java",
  "startLine" : 70,
  "endLine" : 76,
  "identifiers" : [ "byte", "temp", "new", "byte", "list", "size", "for", "int", "i", "i", "list", "size", "i", "temp", "i", "list", "get", "i", "return", "temp" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\model\\CandidateClone.java",
  "startLine" : 18,
  "endLine" : 24,
  "identifiers" : [ "Measure", "firstMeasure", "Measure", "measureList", "get", "firstFrom", "Measure", "secondMeasure", "Measure", "measureList", "get", "secondFrom", "long", "m1start", "firstMeasure", "getStartToken", "long", "m2start", "secondMeasure", "getStartToken", "return", "int", "this", "f2start", "m2start", "this", "f1start", "m1start", "L" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\model\\CandidateClone.java",
  "startLine" : 26,
  "endLine" : 34,
  "identifiers" : [ "List", "CandidateClone", "list", "new", "ArrayList", "for", "int", "i", "i", "frag", "size", "i", "list", "add", "new", "CandidateClone", "Integer", "frag", "get", "i", "Integer", "frag", "get", "i", "Integer", "frag", "get", "i", "Integer", "frag", "get", "i", "return", "list" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\model\\CandidateClone.java",
  "startLine" : 36,
  "endLine" : 47,
  "identifiers" : [ "List", "Integer", "frag", "new", "ArrayList", "for", "int", "i", "i", "list", "size", "i", "frag", "add", "list", "get", "i", "f1start", "frag", "add", "list", "get", "i", "f2start", "frag", "add", "list", "get", "i", "cloneLen", "frag", "add", "list", "get", "i", "classid", "return", "frag" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\model\\CandidateClone.java",
  "startLine" : 49,
  "endLine" : 56,
  "identifiers" : [ "Comparator", "CandidateClone", "cmp", "Comparator", "comparing", "CandidateClone", "cc", "return", "cc", "getRank", "firstFrom", "secondFrom", "thenComparing", "cc", "return", "cc", "f1start", "Collections", "sort", "list", "cmp" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\model\\Clone.java",
  "startLine" : 21,
  "endLine" : 33,
  "identifiers" : [ "if", "this", "fileUrl", "clone", "fileUrl", "return", "false", "else", "if", "this", "start", "clone", "end", "clone", "end", "this", "start", "this", "end", "this", "start", "return", "true", "else", "if", "this", "end", "clone", "start", "clone", "start", "this", "end", "this", "start", "this", "end", "return", "true", "else", "return", "false" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\model\\Measure.java",
  "startLine" : 81,
  "endLine" : 96,
  "identifiers" : [ "int", "left", "int", "right", "measureList", "size", "int", "mid", "while", "left", "right", "mid", "left", "right", "if", "key", "measureList", "get", "mid", "getStartToken", "right", "mid", "else", "if", "key", "measureList", "get", "mid", "getStartToken", "left", "mid", "else", "return", "mid", "return", "right" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\model\\Measure.java",
  "startLine" : 99,
  "endLine" : 114,
  "identifiers" : [ "int", "left", "int", "right", "measureList", "size", "int", "mid", "while", "left", "right", "mid", "left", "right", "if", "key", "measureList", "get", "mid", "getEndToken", "right", "mid", "else", "if", "key", "measureList", "get", "mid", "getEndToken", "left", "mid", "else", "return", "mid", "return", "left" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\model\\MergedCCInstance.java",
  "startLine" : 32,
  "endLine" : 46,
  "identifiers" : [ "int", "idsize", "classIDs", "size", "int", "mvstep", "idsize", "long", "fil", "long", "power", "mvstep", "long", "hash", "L", "hash", "long", "idsize", "Integer", "classID", "for", "Iterator", "var7", "classIDs", "iterator", "var7", "hasNext", "hash", "long", "classID", "fil", "classID", "Integer", "var7", "next", "hash", "mvstep", "return", "hash" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\model\\SegmentAndLine.java",
  "startLine" : 27,
  "endLine" : 41,
  "identifiers" : [ "if", "this", "segNum", "y", "segNum", "return", "else", "if", "this", "segNum", "y", "segNum", "if", "this", "lineNum", "y", "lineNum", "return", "else", "if", "this", "lineNum", "y", "lineNum", "return", "else", "return", "else", "return" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\model\\SegmentAndLine.java",
  "startLine" : 43,
  "endLine" : 61,
  "identifiers" : [ "int", "low", "int", "high", "list", "size", "while", "low", "high", "low", "list", "size", "high", "list", "size", "int", "middle", "high", "low", "int", "re", "this", "compare", "list", "get", "middle", "if", "re", "return", "middle", "else", "if", "re", "high", "middle", "else", "low", "middle", "return" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\Pipeline.java",
  "startLine" : 26,
  "endLine" : 49,
  "identifiers" : [ "logger", "info", "File", "dataset", "new", "File", "Config", "dataset", "if", "dataset", "isFile", "List", "String", "paths", "FileUtil", "readLines", "Config", "dataset", "for", "String", "path", "paths", "files", "add", "new", "File", "path", "else", "Filetraves", "filetraves", "new", "FiletravesNIOimpl", "Config", "dataset", "files", "filetraves", "directoryAllFileList", "try", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "Config", "FILE_LIST_FILE", "for", "File", "f", "files", "writer", "write", "f", "getAbsolutePath", "writer", "newLine", "writer", "flush", "catch", "IOException", "e", "e", "printStackTrace", "logger", "info", "files", "size" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\Pipeline.java",
  "startLine" : 69,
  "endLine" : 80,
  "identifiers" : [ "if", "args", "length", "logger", "info", "System", "exit", "if", "new", "File", "args", "exists", "logger", "error", "args", "System", "exit", "Config", "dataset", "args" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\Pipeline.java",
  "startLine" : 82,
  "endLine" : 129,
  "identifiers" : [ "checkArgs", "args", "long", "start", "System", "currentTimeMillis", "Config", "load", "MyTimer", "reset", "makeResultFolder", "loadFiles", "loadState", "Tokenizer", "tokenizer", "new", "Tokenizer", "state", "tokenIndexList", "files", "tokenizer", "tokenize", "if", "Config", "onlyTokenize", "SuffixArrayBuilder", "builder", "new", "SuffixArrayBuilder", "tokenIndexList", "builder", "build", "DataZParser", "parser", "null", "if", "Config", "granularity", "equals", "DetectGranularity", "SNIPPET", "if", "Config", "useLongType", "parser", "new", "UnionFindParser", "tokenIndexList", "tokenizer", "getQuickFindUF", "else", "parser", "new", "UnionFindParserForLong", "tokenIndexList", "tokenizer", "getQuickFindUF", "else", "if", "Config", "useGPU", "parser", "new", "GPUSnippetParser", "tokenIndexList", "files", "else", "parser", "new", "CPUSnippetParser", "tokenIndexList", "files", "parser", "parseDataZ", "long", "end", "System", "currentTimeMillis", "String", "timeCost", "MyTimer", "convert", "end", "start", "logger", "info", "timeCost" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\SuffixArrayBuilder.java",
  "startLine" : 22,
  "endLine" : 85,
  "identifiers" : [ "logger", "info", "logger", "info", "logger", "info", "int", "tokenFileNum", "tokenIndexList", "size", "if", "tokenFileNum", "File", "gpuData", "new", "File", "if", "gpuData", "exists", "return", "try", "File", "file", "new", "File", "File", "separator", "File", "separator", "file", "createNewFile", "long", "allTokenCsv0Size", "FileUtil", "getSize", "File", "separator", "logger", "info", "allTokenCsv0Size", "if", "allTokenCsv0Size", "return", "String", "command", "Config", "exe", "tokenIndexList", "get", "Config", "mlcc", "logger", "info", "command", "Process", "p", "Runtime", "getRuntime", "exec", "command", "p", "waitFor", "catch", "Exception", "e", "e", "printStackTrace", "else", "for", "int", "i", "i", "tokenFileNum", "i", "for", "int", "j", "i", "j", "tokenFileNum", "j", "try", "Process", "p", "String", "command", "File", "gpuData", "new", "File", "i", "j", "if", "gpuData", "exists", "continue", "if", "i", "if", "j", "command", "Config", "exe", "i", "j", "tokenIndexList", "get", "i", "tokenIndexList", "get", "j", "Config", "mlcc", "else", "command", "Config", "exe", "i", "j", "tokenIndexList", "get", "i", "tokenIndexList", "get", "j", "Config", "mlcc", "else", "command", "Config", "exe", "i", "j", "tokenIndexList", "get", "i", "tokenIndexList", "get", "j", "Config", "mlcc", "long", "allTokenCsvSize1", "FileUtil", "getSize", "i", "long", "allTokenCsvSize2", "FileUtil", "getSize", "j", "logger", "info", "allTokenCsvSize1", "allTokenCsvSize2", "if", "allTokenCsvSize1", "allTokenCsvSize2", "continue", "p", "Runtime", "getRuntime", "exec", "command", "logger", "info", "command", "p", "waitFor", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\Tokenizer.java",
  "startLine" : 49,
  "endLine" : 64,
  "identifiers" : [ "try", "FileOutputStream", "os", "new", "FileOutputStream", "for", "Measure", "measure", "Measure", "measureList", "long", "x", "measure", "getEndToken", "for", "int", "i", "i", "i", "os", "write", "int", "x", "i", "os", "flush", "os", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\Tokenizer.java",
  "startLine" : 66,
  "endLine" : 178,
  "identifiers" : [ "logger", "info", "logger", "info", "logger", "info", "File", "file", "new", "File", "file", "mkdir", "file", "new", "File", "file", "createNewFile", "MyTimer", "reset", "Word", "word", "initWord", "word", "setMlc", "Config", "mlc", "word", "setMinLine", "Config", "minLine", "Measure", "measureList", "addAll", "MeasureListSaver", "load", "state", "getOutputId", "Measure", "measureID", "new", "AtomicInteger", "state", "getMeasureId", "if", "state", "getTokenIndexList", "null", "state", "getTokenIndexList", "size", "Word", "tokenID", "new", "AtomicLong", "else", "Word", "tokenID", "new", "AtomicLong", "state", "getTokenIndexList", "get", "state", "getTokenIndexList", "size", "Integer", "MAX_VALUE", "int", "outputId", "state", "getOutputId", "int", "cache", "Long", "tokenIdCache", "L", "Integer", "MAX_VALUE", "if", "new", "File", "Config", "STATE_FILE", "exists", "tokenIndexList", "addAll", "state", "getTokenIndexList", "else", "tokenIndexList", "add", "tokenIdCache", "tokenNum", "state", "getTokenNum", "Word", "line", "new", "AtomicLong", "state", "getLine", "int", "lastIndex", "if", "new", "File", "Config", "STATE_FILE", "exists", "lastIndex", "state", "getLastProcessedFileIndex", "int", "lastMeasureId", "state", "getMeasureId", "String", "lastTokenPath", "outputId", "File", "lastTokenFile", "new", "File", "lastTokenPath", "if", "lastTokenFile", "exists", "lastTokenFile", "delete", "if", "Config", "granularity", "equals", "DetectGranularity", "SNIPPET", "String", "lastTokenLinePath", "outputId", "File", "lastTokenLineFile", "new", "File", "lastTokenLinePath", "if", "lastTokenLineFile", "exists", "lastTokenLineFile", "delete", "for", "int", "i", "lastIndex", "i", "files", "size", "i", "try", "int", "situation", "int", "i", "float", "files", "size", "if", "situation", "cache", "logger", "info", "situation", "cache", "situation", "String", "inputFile", "files", "get", "i", "getAbsolutePath", "List", "Token", "partTokenHash", "word", "segment", "inputFile", "i", "if", "partTokenHash", "size", "continue", "String", "currentFile", "outputId", "word", "saveToken", "partTokenHash", "currentFile", "if", "Config", "granularity", "equals", "DetectGranularity", "SNIPPET", "String", "currentTokenLineFile", "outputId", "word", "saveTokenLine", "partTokenHash", "currentTokenLineFile", "tokenNum", "partTokenHash", "size", "partTokenHash", "clear", "if", "Word", "tokenID", "get", "Config", "sepNum", "outputId", "state", "setLastProcessedFileIndex", "i", "state", "setOutputId", "outputId", "state", "setMeasureId", "Measure", "measureID", "get", "state", "setLine", "Word", "line", "get", "MeasureListSaver", "save", "Measure", "measureList", "subList", "lastMeasureId", "Measure", "measureID", "get", "outputId", "lastMeasureId", "Measure", "measureID", "get", "outputId", "tokenIdCache", "Word", "tokenID", "get", "Integer", "MAX_VALUE", "tokenIndexList", "add", "tokenIdCache", "state", "setTokenIndexList", "tokenIndexList", "state", "setTokenNum", "tokenNum", "StateUtil", "save", "state", "catch", "Exception", "e", "e", "printStackTrace", "if", "tokenNum", "state", "getTokenNum", "state", "setLastProcessedFileIndex", "files", "size", "state", "setOutputId", "outputId", "state", "setMeasureId", "Measure", "measureID", "get", "state", "setLine", "Word", "line", "get", "MeasureListSaver", "save", "Measure", "measureList", "subList", "lastMeasureId", "Measure", "measureID", "get", "outputId", "state", "setTokenNum", "tokenNum", "state", "setTokenIndexList", "tokenIndexList", "StateUtil", "save", "state", "logger", "info", "tokenIndexList", "logger", "info", "tokenNum", "logger", "info", "Measure", "measureID", "logger", "info", "Word", "line", "quickFindUF", "new", "UF", "Measure", "measureList", "size", "writeMeasureSep", "Printer", "printMeasureIndex", "files" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\Tokenizer.java",
  "startLine" : 184,
  "endLine" : 226,
  "identifiers" : [ "Word", "word", "null", "if", "Config", "language", "equals", "DetectLanguage", "JAVA", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "word", "new", "CommonFileWord", "else", "word", "new", "JavaWord", "else", "if", "Config", "language", "equals", "DetectLanguage", "C", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "word", "new", "CommonFileWord", "else", "word", "new", "CWord", "else", "if", "Config", "language", "equals", "DetectLanguage", "CPP", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "word", "new", "CommonFileWord", "else", "word", "new", "CPPWord", "else", "if", "Config", "language", "equals", "DetectLanguage", "PYTHON", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "word", "new", "CommonFileWord", "else", "word", "new", "PythonWord", "else", "if", "Config", "language", "equals", "DetectLanguage", "JAVA_SCRIPT", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "word", "new", "CommonFileWord", "else", "word", "new", "JSWord", "else", "if", "Config", "language", "equals", "DetectLanguage", "GO", "if", "Config", "granularity", "equals", "DetectGranularity", "FILE", "word", "new", "CommonFileWord", "else", "word", "new", "GoWord", "else", "if", "Config", "language", "equals", "DetectLanguage", "COMMON", "word", "new", "CommonWord", "return", "word" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\UnionFindParser.java",
  "startLine" : 35,
  "endLine" : 65,
  "identifiers" : [ "PrintWriter", "pwClass", "new", "PrintWriter", "new", "File", "Config", "TYPE123_RESULT_GROUP_FILE", "Map", "Integer", "List", "Integer", "clearDupHash", "new", "HashMap", "int", "ids", "quickFindUF", "getId", "for", "int", "i", "i", "ids", "length", "i", "List", "Integer", "list", "clearDupHash", "getOrDefault", "ids", "i", "new", "ArrayList", "list", "add", "i", "clearDupHash", "put", "ids", "i", "list", "List", "List", "Integer", "resultSet", "new", "ArrayList", "Iterator", "List", "Integer", "iterator3", "clearDupHash", "values", "iterator", "while", "iterator3", "hasNext", "List", "Integer", "list", "iterator3", "next", "if", "list", "size", "resultSet", "add", "list", "iterator3", "remove", "logger", "info", "resultSet", "size", "for", "int", "i", "i", "resultSet", "size", "i", "Printer", "printCloneClassByID", "pwClass", "resultSet", "get", "i", "pwClass", "flush", "pwClass", "close" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\UnionFindParser.java",
  "startLine" : 76,
  "endLine" : 106,
  "identifiers" : [ "int", "index", "long", "startToken", "int", "size", "int", "totalSize", "while", "index", "pairs", "size", "long", "pairIndex", "pairs", "get", "index", "getFirst", "int", "pairSize", "pairs", "get", "index", "getSize", "if", "index", "startToken", "pairIndex", "size", "pairSize", "index", "continue", "if", "startToken", "size", "pairIndex", "if", "startToken", "size", "pairIndex", "pairSize", "else", "size", "int", "pairIndex", "startToken", "pairSize", "index", "else", "totalSize", "size", "startToken", "pairIndex", "size", "pairSize", "index", "totalSize", "size", "return", "totalSize" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\UnionFindParser.java",
  "startLine" : 108,
  "endLine" : 166,
  "identifiers" : [ "Map", "String", "List", "ClonePair", "clonePairMap", "new", "HashMap", "for", "int", "i", "i", "result", "size", "i", "if", "result", "get", "i", "continue", "int", "x1", "result", "get", "i", "int", "x2", "result", "get", "i", "int", "cloneLen", "result", "get", "i", "int", "firstFrom", "Measure", "binarySearchStart", "x1", "int", "firstTo", "Measure", "binarySearchEnd", "x1", "cloneLen", "int", "secondFrom", "Measure", "binarySearchStart", "x2", "int", "secondTo", "Measure", "binarySearchEnd", "x2", "cloneLen", "if", "firstFrom", "secondFrom", "continue", "if", "firstFrom", "firstTo", "secondFrom", "secondTo", "continue", "String", "curPair", "linkMeasure", "firstFrom", "secondFrom", "List", "ClonePair", "pairs", "clonePairMap", "getOrDefault", "curPair", "new", "ArrayList", "pairs", "add", "new", "ClonePair", "Math", "min", "x1", "x2", "Math", "max", "x1", "x2", "cloneLen", "clonePairMap", "put", "curPair", "pairs", "for", "String", "pair", "clonePairMap", "keySet", "String", "tmp", "pair", "split", "int", "firstFrom", "Integer", "parseInt", "tmp", "int", "secondFrom", "Integer", "parseInt", "tmp", "Measure", "firstMeasure", "Measure", "measureList", "get", "firstFrom", "Measure", "secondMeasure", "Measure", "measureList", "get", "secondFrom", "int", "firstMeasureSize", "int", "firstMeasure", "getEndToken", "firstMeasure", "getStartToken", "int", "secondMeasureSize", "int", "secondMeasure", "getEndToken", "secondMeasure", "getStartToken", "int", "maxMeasureSize", "Math", "max", "firstMeasureSize", "secondMeasureSize", "List", "ClonePair", "pairs", "clonePairMap", "get", "pair", "Collections", "sort", "pairs", "new", "Comparator", "ClonePair", "Override", "public", "int", "compare", "ClonePair", "o1", "ClonePair", "o2", "if", "o1", "getFirst", "o2", "getFirst", "return", "else", "if", "o1", "getFirst", "o2", "getFirst", "return", "else", "return", "int", "totalCloneSize", "calculateCoverLength", "pairs", "float", "similarity", "totalCloneSize", "f", "maxMeasureSize", "if", "similarity", "Config", "threshold", "similarity", "f", "quickFindUF", "union", "firstFrom", "secondFrom", "clonePairMap", "clear" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\UnionFindParser.java",
  "startLine" : 169,
  "endLine" : 207,
  "identifiers" : [ "logger", "info", "logger", "info", "logger", "info", "List", "Integer", "result", "new", "ArrayList", "int", "tokenFileNum", "tokenIndexList", "size", "if", "tokenFileNum", "String", "dataFile", "if", "new", "File", "dataFile", "exists", "return", "ParseMatchResult", "parseFileToInt", "dataFile", "result", "parseOneDataFile", "result", "result", "clear", "else", "int", "totalCnt", "tokenFileNum", "tokenFileNum", "int", "cnt", "for", "int", "j", "j", "tokenFileNum", "j", "for", "int", "i", "j", "i", "tokenFileNum", "i", "try", "cnt", "logger", "info", "cnt", "f", "totalCnt", "String", "dataFile", "j", "i", "if", "new", "File", "dataFile", "exists", "continue", "ParseMatchResult", "parseFileToInt", "dataFile", "result", "parseOneDataFile", "result", "result", "clear", "catch", "Exception", "e", "e", "printStackTrace", "printUnionResult" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\UnionFindParserForLong.java",
  "startLine" : 36,
  "endLine" : 66,
  "identifiers" : [ "PrintWriter", "pwClass", "new", "PrintWriter", "new", "File", "Config", "TYPE123_RESULT_GROUP_FILE", "Map", "Integer", "List", "Integer", "clearDupHash", "new", "HashMap", "int", "ids", "quickFindUF", "getId", "for", "int", "i", "i", "ids", "length", "i", "List", "Integer", "list", "clearDupHash", "getOrDefault", "ids", "i", "new", "ArrayList", "list", "add", "i", "clearDupHash", "put", "ids", "i", "list", "List", "List", "Integer", "resultSet", "new", "ArrayList", "Iterator", "List", "Integer", "iterator3", "clearDupHash", "values", "iterator", "while", "iterator3", "hasNext", "List", "Integer", "list", "iterator3", "next", "if", "list", "size", "resultSet", "add", "list", "iterator3", "remove", "logger", "info", "resultSet", "size", "for", "int", "i", "i", "resultSet", "size", "i", "Printer", "printCloneClassByID", "pwClass", "resultSet", "get", "i", "pwClass", "flush", "pwClass", "close" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\UnionFindParserForLong.java",
  "startLine" : 77,
  "endLine" : 107,
  "identifiers" : [ "int", "index", "long", "startToken", "int", "size", "int", "totalSize", "while", "index", "pairs", "size", "long", "pairIndex", "pairs", "get", "index", "getFirst", "int", "pairSize", "pairs", "get", "index", "getSize", "if", "index", "startToken", "pairIndex", "size", "pairSize", "index", "continue", "if", "startToken", "size", "pairIndex", "if", "startToken", "size", "pairIndex", "pairSize", "else", "size", "int", "pairIndex", "startToken", "pairSize", "index", "else", "totalSize", "size", "startToken", "pairIndex", "size", "pairSize", "index", "totalSize", "size", "return", "totalSize" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\UnionFindParserForLong.java",
  "startLine" : 109,
  "endLine" : 166,
  "identifiers" : [ "Map", "String", "List", "ClonePair", "clonePairMap", "new", "HashMap", "for", "int", "i", "i", "result", "size", "i", "if", "result", "get", "i", "continue", "long", "x1", "result", "get", "i", "long", "x2", "result", "get", "i", "int", "cloneLen", "Math", "toIntExact", "result", "get", "i", "int", "firstFrom", "Measure", "binarySearchStart", "x1", "int", "firstTo", "Measure", "binarySearchEnd", "x1", "cloneLen", "int", "secondFrom", "Measure", "binarySearchStart", "x2", "int", "secondTo", "Measure", "binarySearchEnd", "x2", "cloneLen", "if", "firstFrom", "secondFrom", "continue", "if", "firstFrom", "firstTo", "secondFrom", "secondTo", "continue", "String", "curPair", "linkMeasure", "firstFrom", "secondFrom", "List", "ClonePair", "pairs", "clonePairMap", "getOrDefault", "curPair", "new", "ArrayList", "pairs", "add", "new", "ClonePair", "Math", "min", "x1", "x2", "Math", "max", "x1", "x2", "cloneLen", "clonePairMap", "put", "curPair", "pairs", "for", "String", "pair", "clonePairMap", "keySet", "String", "tmp", "pair", "split", "int", "firstFrom", "Integer", "parseInt", "tmp", "int", "secondFrom", "Integer", "parseInt", "tmp", "Measure", "firstMeasure", "Measure", "measureList", "get", "firstFrom", "Measure", "secondMeasure", "Measure", "measureList", "get", "secondFrom", "int", "firstMeasureSize", "int", "firstMeasure", "getEndToken", "firstMeasure", "getStartToken", "int", "secondMeasureSize", "int", "secondMeasure", "getEndToken", "secondMeasure", "getStartToken", "int", "maxMeasureSize", "Math", "max", "firstMeasureSize", "secondMeasureSize", "List", "ClonePair", "pairs", "clonePairMap", "get", "pair", "Collections", "sort", "pairs", "new", "Comparator", "ClonePair", "Override", "public", "int", "compare", "ClonePair", "o1", "ClonePair", "o2", "if", "o1", "getFirst", "o2", "getFirst", "return", "else", "if", "o1", "getFirst", "o2", "getFirst", "return", "else", "return", "int", "totalCloneSize", "calculateCoverLength", "pairs", "float", "similarity", "totalCloneSize", "f", "maxMeasureSize", "if", "similarity", "Config", "threshold", "similarity", "f", "quickFindUF", "union", "firstFrom", "secondFrom", "clonePairMap", "clear" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\UnionFindParserForLong.java",
  "startLine" : 169,
  "endLine" : 207,
  "identifiers" : [ "logger", "info", "logger", "info", "logger", "info", "List", "Long", "result", "new", "ArrayList", "int", "tokenFileNum", "tokenIndexList", "size", "if", "tokenFileNum", "String", "dataFile", "if", "new", "File", "dataFile", "exists", "return", "ParseMatchResult", "parseFileToLong", "dataFile", "result", "parseOneDataFile", "result", "result", "clear", "else", "int", "totalCnt", "tokenFileNum", "tokenFileNum", "int", "cnt", "for", "int", "j", "j", "tokenFileNum", "j", "for", "int", "i", "j", "i", "tokenFileNum", "i", "try", "cnt", "logger", "info", "cnt", "f", "totalCnt", "String", "dataFile", "j", "i", "if", "new", "File", "dataFile", "exists", "continue", "ParseMatchResult", "parseFileToLong", "dataFile", "result", "parseOneDataFile", "result", "result", "clear", "catch", "Exception", "e", "e", "printStackTrace", "printUnionResult" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\CalCoverage.java",
  "startLine" : 24,
  "endLine" : 70,
  "identifiers" : [ "if", "s", "null", "e", "null", "Arrays", "sort", "s", "Arrays", "sort", "e", "int", "p", "int", "q", "int", "start", "s", "p", "int", "coverLen", "while", "p", "s", "length", "q", "e", "length", "if", "s", "p", "e", "q", "p", "else", "q", "if", "p", "q", "coverLen", "e", "p", "start", "start", "s", "p", "if", "p", "coverLen", "e", "p", "start", "return", "coverLen", "else", "Arrays", "sort", "ls", "Arrays", "sort", "le", "int", "p", "int", "q", "long", "start", "ls", "p", "int", "coverLen", "while", "p", "ls", "length", "q", "le", "length", "if", "ls", "p", "le", "q", "p", "else", "q", "if", "p", "q", "coverLen", "le", "p", "start", "start", "ls", "p", "if", "p", "coverLen", "le", "p", "start", "return", "coverLen" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\FiletravesNIOimpl.java",
  "startLine" : 38,
  "endLine" : 46,
  "identifiers" : [ "for", "String", "ext", "Config", "extensionArray", "if", "file", "toFile", "getName", "endsWith", "ext", "fileLists", "add", "file", "toFile", "break", "return", "super", "visitFile", "file", "attrs" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\FileUtil.java",
  "startLine" : 20,
  "endLine" : 29,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "List", "String", "lines", "new", "ArrayList", "String", "line", "null", "while", "line", "reader", "readLine", "null", "lines", "add", "line", "reader", "close", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\FileUtil.java",
  "startLine" : 36,
  "endLine" : 45,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "StringBuilder", "builder", "new", "StringBuilder", "String", "line", "null", "while", "line", "reader", "readLine", "null", "builder", "append", "line", "reader", "close", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\FileUtil.java",
  "startLine" : 71,
  "endLine" : 80,
  "identifiers" : [ "FileInputStream", "fileInputStream", "new", "FileInputStream", "path", "List", "Character", "result", "new", "ArrayList", "int", "c", "while", "c", "fileInputStream", "read", "result", "add", "char", "c", "fileInputStream", "close", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\MeasureListSaver.java",
  "startLine" : 19,
  "endLine" : 27,
  "identifiers" : [ "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "String", "format", "FILE_TEMPLATE", "outputId", "for", "Measure", "measure", "measureList", "writer", "write", "measure", "toString", "writer", "newLine", "writer", "flush", "writer", "close" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\MeasureListSaver.java",
  "startLine" : 34,
  "endLine" : 55,
  "identifiers" : [ "List", "Measure", "measureList", "new", "ArrayList", "if", "new", "File", "String", "format", "FILE_TEMPLATE", "exists", "return", "measureList", "for", "int", "i", "i", "outputId", "i", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "String", "format", "FILE_TEMPLATE", "i", "String", "line", "null", "while", "line", "reader", "readLine", "null", "String", "info", "line", "split", "int", "startLine", "Integer", "parseInt", "info", "int", "endLine", "Integer", "parseInt", "info", "long", "startToken", "Long", "parseLong", "info", "long", "endToken", "Long", "parseLong", "info", "int", "fileId", "Integer", "parseInt", "info", "measureList", "add", "new", "Measure", "startToken", "endToken", "startLine", "endLine", "fileId", "reader", "close", "return", "measureList" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\MyTimer.java",
  "startLine" : 44,
  "endLine" : 50,
  "identifiers" : [ "int", "seconds", "int", "timeMillis", "e3", "int", "hour", "seconds", "int", "minute", "seconds", "hour", "int", "second", "seconds", "hour", "minute", "return", "String", "format", "hour", "minute", "second" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\ParseMatchResult.java",
  "startLine" : 20,
  "endLine" : 37,
  "identifiers" : [ "try", "BufferedInputStream", "br", "new", "BufferedInputStream", "new", "FileInputStream", "srcFile", "int", "buffer", "int", "buffer4", "for", "int", "count", "buffer", "br", "read", "count", "int", "bit", "count", "buffer", "bit", "buffer4", "buffer", "if", "count", "result", "add", "buffer4", "buffer4", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\ParseMatchResult.java",
  "startLine" : 44,
  "endLine" : 61,
  "identifiers" : [ "try", "BufferedInputStream", "br", "new", "BufferedInputStream", "new", "FileInputStream", "srcFile", "long", "buffer", "long", "buffer8", "for", "int", "count", "buffer", "br", "read", "count", "int", "bit", "count", "buffer", "bit", "buffer8", "buffer", "if", "count", "result", "add", "buffer8", "buffer8", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\StateUtil.java",
  "startLine" : 19,
  "endLine" : 27,
  "identifiers" : [ "try", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "Config", "STATE_FILE", "String", "json", "JSONObject", "toJSONString", "state", "writer", "write", "json", "writer", "flush", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\StateUtil.java",
  "startLine" : 33,
  "endLine" : 50,
  "identifiers" : [ "if", "new", "File", "Config", "STATE_FILE", "exists", "return", "new", "State", "try", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "Config", "STATE_FILE", "StringBuilder", "builder", "new", "StringBuilder", "String", "line", "null", "while", "line", "reader", "readLine", "null", "builder", "append", "line", "String", "json", "builder", "toString", "return", "JSONObject", "parseObject", "json", "State", "class", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "State" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\TokenUtil.java",
  "startLine" : 15,
  "endLine" : 33,
  "identifiers" : [ "List", "Token", "res", "new", "ArrayList", "res", "add", "tokenList", "get", "int", "index", "byte", "word", "int", "line", "while", "index", "tokenList", "size", "if", "index", "res", "add", "new", "Token", "word", "line", "index", "continue", "word", "tokenList", "get", "index", "getTokenHash", "line", "tokenList", "get", "index", "getLine", "index", "res", "add", "tokenList", "get", "tokenList", "size", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\UF.java",
  "startLine" : 19,
  "endLine" : 30,
  "identifiers" : [ "id", "new", "int", "N", "sz", "new", "int", "N", "for", "int", "i", "i", "N", "i", "id", "i", "i", "for", "int", "i", "i", "N", "i", "sz", "i", "this", "N", "N", "count", "N" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\src\\main\\java\\com\\company\\utils\\UF.java",
  "startLine" : 42,
  "endLine" : 57,
  "identifiers" : [ "int", "xRoot", "find", "x", "int", "yRoot", "find", "y", "if", "xRoot", "yRoot", "if", "sz", "xRoot", "sz", "yRoot", "id", "xRoot", "y", "sz", "yRoot", "sz", "xRoot", "else", "id", "yRoot", "x", "sz", "xRoot", "sz", "yRoot", "count" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 46,
  "endLine" : 102,
  "identifiers" : [ "DiffInfo", "diffInfo", "null", "try", "AbstractTreeIterator", "oldTreeParser", "prepareTreeParser", "repository", "oldCommit", "getId", "getName", "AbstractTreeIterator", "newTreeParser", "prepareTreeParser", "repository", "newCommit", "getId", "getName", "List", "DiffEntry", "diffEntryList", "git", "diff", "setOldTree", "oldTreeParser", "setNewTree", "newTreeParser", "setPathFilter", "PathFilter", "create", "getVersedRelativePath", "cloneInstance", "getPath", "setContextLines", "call", "if", "diffEntryList", "size", "System", "out", "println", "return", "null", "DiffEntry", "diffEntry", "diffEntryList", "get", "EditList", "editList", "getEditListFromDiffEntry", "repository", "diffEntry", "CloneInstanceWithStatus", "cloneInstanceInNewCommitWithStatus", "getNewCloneInstanceWithStatus", "editList", "cloneInstance", "if", "cloneInstanceInNewCommitWithStatus", "getStatus", "Status", "D", "boolean", "fileExist", "FileExistUtil", "isFileExist", "repository", "newCommit", "cloneInstanceInNewCommitWithStatus", "getPath", "if", "fileExist", "cloneInstanceInNewCommitWithStatus", "setStatus", "Status", "Q", "CloneInstance", "newCloneInstance", "new", "CloneInstance", "cloneInstanceInNewCommitWithStatus", "getPath", "cloneInstanceInNewCommitWithStatus", "getStartLine", "cloneInstanceInNewCommitWithStatus", "getEndLine", "diffInfo", "new", "DiffInfo", "newCommit", "newCloneInstance", "cloneInstanceInNewCommitWithStatus", "getStatus", "catch", "Exception", "e", "e", "printStackTrace", "return", "diffInfo" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 106,
  "endLine" : 122,
  "identifiers" : [ "try", "RevWalk", "walk", "new", "RevWalk", "repository", "RevCommit", "commit", "walk", "parseCommit", "ObjectId", "fromString", "objectId", "RevTree", "tree", "walk", "parseTree", "commit", "getTree", "getId", "CanonicalTreeParser", "treeParser", "new", "CanonicalTreeParser", "try", "ObjectReader", "reader", "repository", "newObjectReader", "treeParser", "reset", "reader", "tree", "getId", "walk", "dispose", "return", "treeParser" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 123,
  "endLine" : 153,
  "identifiers" : [ "if", "edits", "isEmpty", "return", "a", "for", "int", "i", "i", "edits", "size", "i", "final", "Edit", "e", "edits", "get", "i", "if", "a", "e", "getBeginA", "if", "i", "return", "a", "return", "e", "getBeginB", "e", "getBeginA", "a", "if", "e", "getBeginA", "a", "return", "e", "getBeginB", "if", "e", "getEndA", "a", "return", "e", "getEndB", "if", "e", "getBeginA", "a", "a", "e", "getEndA", "return", "final", "Edit", "last", "edits", "get", "edits", "size", "return", "last", "getEndB", "a", "last", "getEndA" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 170,
  "endLine" : 182,
  "identifiers" : [ "boolean", "isModified", "false", "for", "Edit", "edit", "editList", "int", "beginA", "edit", "getBeginA", "int", "endA", "edit", "getEndA", "if", "oldCloneInstance", "getStartLine", "beginA", "oldCloneInstance", "getEndLine", "endA", "isModified", "true", "return", "isModified" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 183,
  "endLine" : 199,
  "identifiers" : [ "DiffFormatter", "formatter", "new", "DiffFormatter", "NullOutputStream", "INSTANCE", "formatter", "setRepository", "repository", "formatter", "setContext", "formatter", "setDiffComparator", "RawTextComparator", "WS_IGNORE_ALL", "EditList", "editList", "new", "EditList", "String", "diffLogText", "null", "try", "formatter", "format", "diffEntry", "editList", "formatter", "toFileHeader", "diffEntry", "toEditList", "catch", "IOException", "e", "e", "printStackTrace", "return", "editList" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 201,
  "endLine" : 223,
  "identifiers" : [ "ByteArrayOutputStream", "byteArrayOutputStream", "new", "ByteArrayOutputStream", "DiffFormatter", "formatter", "new", "DiffFormatter", "byteArrayOutputStream", "formatter", "setRepository", "repository", "formatter", "setContext", "formatter", "setDiffComparator", "RawTextComparator", "WS_IGNORE_ALL", "EditList", "editList", "null", "String", "diffLogText", "null", "try", "formatter", "format", "diffEntry", "diffLogText", "byteArrayOutputStream", "toString", "byteArrayOutputStream", "close", "editList", "formatter", "toFileHeader", "diffEntry", "toEditList", "catch", "IOException", "e", "e", "printStackTrace", "Pair", "String", "EditList", "diffTextEditListPair", "new", "Pair", "diffLogText", "editList", "return", "diffTextEditListPair" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 225,
  "endLine" : 259,
  "identifiers" : [ "Status", "statusInNewCommit", "Status", "N", "int", "newStartLine", "int", "newEndLine", "newStartLine", "mapA2B", "oldCloneInstance", "getStartLine", "editList", "newEndLine", "mapA2B", "oldCloneInstance", "getEndLine", "editList", "if", "newStartLine", "newEndLine", "statusInNewCommit", "Status", "D", "else", "if", "newStartLine", "newStartLine", "getNewStartLine", "oldCloneInstance", "getStartLine", "editList", "statusInNewCommit", "Status", "E", "else", "if", "newEndLine", "newEndLine", "getNewEndLine", "oldCloneInstance", "getEndLine", "editList", "statusInNewCommit", "Status", "E", "else", "if", "newStartLine", "newEndLine", "statusInNewCommit", "Status", "D", "else", "if", "isModified", "oldCloneInstance", "editList", "statusInNewCommit", "Status", "M", "CloneInstanceWithStatus", "cloneInstanceWithStatus", "new", "CloneInstanceWithStatus", "oldCloneInstance", "getPath", "newStartLine", "newEndLine", "statusInNewCommit", "return", "cloneInstanceWithStatus" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 261,
  "endLine" : 294,
  "identifiers" : [ "List", "EditContent", "editContentListAfterCut", "new", "ArrayList", "int", "startLine", "oldCloneInstance", "getStartLine", "int", "endLine", "oldCloneInstance", "getEndLine", "for", "EditContent", "editContent", "fullEditContentList", "int", "beginA", "editContent", "getEdit", "getBeginA", "int", "endA", "editContent", "getEdit", "getEndA", "if", "startLine", "beginA", "endA", "endLine", "editContentListAfterCut", "add", "editContent", "else", "if", "beginA", "startLine", "startLine", "endA", "endA", "endLine", "Edit", "Type", "type", "editContent", "getEdit", "getType", "if", "type", "Edit", "Type", "INSERT", "editContentListAfterCut", "add", "editContent", "else", "if", "type", "Edit", "Type", "REPLACE", "int", "interval", "endA", "startLine", "Edit", "newEdit", "new", "Edit", "startLine", "endA", "editContent", "getEdit", "getEndB", "interval", "editContent", "getEdit", "getEndB", "else", "if", "beginA", "endLine", "endLine", "endA", "beginA", "startLine", "return", "editContentListAfterCut" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SACloneDetector\\testcase\\java\\ShowFileDiff.java",
  "startLine" : 296,
  "endLine" : 321,
  "identifiers" : [ "List", "EditContent", "editContentListAfterCut", "new", "ArrayList", "int", "startLine", "oldCloneInstance", "getStartLine", "int", "endLine", "oldCloneInstance", "getEndLine", "for", "EditContent", "editContent", "fullEditContentList", "int", "beginA", "editContent", "getEdit", "getBeginA", "int", "endA", "editContent", "getEdit", "getEndA", "if", "startLine", "beginA", "endA", "endLine", "editContentListAfterCut", "add", "editContent", "continue", "else", "if", "beginA", "startLine", "startLine", "endA", "editContentListAfterCut", "add", "editContent", "continue", "else", "if", "beginA", "endLine", "endLine", "endA", "editContentListAfterCut", "add", "editContent", "continue", "return", "editContentListAfterCut" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SAGABuilder\\src\\main\\java\\com\\fudan\\config\\Config.java",
  "startLine" : 32,
  "endLine" : 43,
  "identifiers" : [ "if", "new", "File", "CONFIG_FILE", "exists", "System", "out", "printf", "CONFIG_FILE", "save", "System", "exit", "properties", "load", "new", "FileReader", "CONFIG_FILE", "EXE_FILE", "properties", "getProperty", "MLCC", "Integer", "parseInt", "properties", "getProperty", "QUCIK_COMPARE_FILE", "properties", "getProperty" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SAGABuilder\\src\\main\\java\\com\\fudan\\Main.java",
  "startLine" : 19,
  "endLine" : 37,
  "identifiers" : [ "long", "start", "System", "currentTimeMillis", "logger", "info", "Config", "load", "logger", "info", "initState", "logger", "info", "logger", "info", "logger", "info", "ProcessManager", "processManager", "new", "ProcessManager", "state", "getTokenIndexList", "if", "equals", "Config", "QUCIK_COMPARE_FILE", "processManager", "execRuntimeProgram", "else", "processManager", "quickCompare", "long", "end", "System", "currentTimeMillis", "logger", "info", "DateUtil", "convert", "end", "start" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SAGABuilder\\src\\main\\java\\com\\fudan\\manager\\ProcessManager.java",
  "startLine" : 26,
  "endLine" : 84,
  "identifiers" : [ "int", "tokenFileNum", "tokenIndexList", "size", "if", "tokenFileNum", "File", "gpuData", "new", "File", "if", "gpuData", "exists", "return", "try", "File", "file", "new", "File", "File", "separator", "File", "separator", "file", "createNewFile", "String", "command", "Config", "EXE_FILE", "tokenIndexList", "get", "Config", "MLCC", "logger", "info", "command", "Process", "p", "Runtime", "getRuntime", "exec", "command", "p", "waitFor", "catch", "Exception", "e", "e", "printStackTrace", "else", "int", "totalCnt", "tokenFileNum", "tokenFileNum", "int", "cnt", "for", "int", "i", "i", "tokenFileNum", "i", "for", "int", "j", "i", "j", "tokenFileNum", "j", "try", "cnt", "logger", "info", "String", "format", "cnt", "f", "totalCnt", "Process", "p", "String", "command", "File", "gpuData", "new", "File", "i", "j", "if", "gpuData", "exists", "continue", "if", "i", "if", "j", "command", "Config", "EXE_FILE", "i", "j", "tokenIndexList", "get", "i", "tokenIndexList", "get", "j", "Config", "MLCC", "else", "command", "Config", "EXE_FILE", "i", "j", "tokenIndexList", "get", "i", "tokenIndexList", "get", "j", "Config", "MLCC", "else", "command", "Config", "EXE_FILE", "i", "j", "tokenIndexList", "get", "i", "tokenIndexList", "get", "j", "Config", "MLCC", "long", "allTokenCsvSize1", "FileUtil", "getSize", "i", "long", "allTokenCsvSize2", "FileUtil", "getSize", "j", "logger", "info", "allTokenCsvSize1", "allTokenCsvSize2", "if", "allTokenCsvSize1", "allTokenCsvSize2", "continue", "p", "Runtime", "getRuntime", "exec", "command", "logger", "info", "command", "p", "waitFor", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SAGABuilder\\src\\main\\java\\com\\fudan\\manager\\ProcessManager.java",
  "startLine" : 90,
  "endLine" : 143,
  "identifiers" : [ "try", "String", "content", "FileUtil", "readAllText", "Config", "QUCIK_COMPARE_FILE", "List", "List", "tokenIds", "JSONArray", "parseArray", "content", "List", "class", "for", "List", "tokenIdPair", "tokenIds", "if", "tokenIdPair", "size", "continue", "int", "tokenIndex1", "int", "tokenIdPair", "get", "int", "tokenIndex2", "int", "tokenIdPair", "get", "String", "tokenFile1", "tokenIndex1", "if", "new", "File", "tokenFile1", "exists", "logger", "info", "tokenFile1", "System", "exit", "String", "tokenFile2", "tokenIndex2", "if", "new", "File", "tokenFile2", "exists", "logger", "info", "tokenFile2", "System", "exit", "File", "gpuData", "new", "File", "String", "format", "tokenIndex1", "tokenIndex2", "if", "gpuData", "exists", "return", "String", "command", "if", "tokenIndex1", "if", "tokenIndex2", "command", "Config", "EXE_FILE", "tokenIndex1", "tokenIndex2", "tokenIndexList", "get", "tokenIndex1", "tokenIndexList", "get", "tokenIndex2", "Config", "MLCC", "else", "command", "Config", "EXE_FILE", "tokenIndex1", "tokenIndex2", "tokenIndexList", "get", "tokenIndex1", "tokenIndexList", "get", "tokenIndex2", "Config", "MLCC", "else", "command", "Config", "EXE_FILE", "tokenIndex1", "tokenIndex2", "tokenIndexList", "get", "tokenIndex1", "tokenIndexList", "get", "tokenIndex2", "Config", "MLCC", "long", "allTokenCsvSize1", "FileUtil", "getSize", "tokenFile1", "long", "allTokenCsvSize2", "FileUtil", "getSize", "tokenFile2", "logger", "info", "allTokenCsvSize1", "allTokenCsvSize2", "if", "allTokenCsvSize1", "allTokenCsvSize2", "logger", "info", "return", "Process", "p", "Runtime", "getRuntime", "exec", "command", "logger", "info", "command", "p", "waitFor", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SAGABuilder\\src\\main\\java\\com\\fudan\\util\\DateUtil.java",
  "startLine" : 10,
  "endLine" : 16,
  "identifiers" : [ "int", "seconds", "int", "timeMillis", "e3", "int", "hour", "seconds", "int", "minute", "seconds", "hour", "int", "second", "seconds", "hour", "minute", "return", "String", "format", "hour", "minute", "second" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SAGABuilder\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 20,
  "endLine" : 29,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "StringBuilder", "builder", "new", "StringBuilder", "String", "line", "null", "while", "line", "reader", "readLine", "null", "builder", "append", "line", "reader", "close", "return", "builder", "toString" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SAGABuilder\\src\\main\\java\\com\\fudan\\util\\StateUtil.java",
  "startLine" : 18,
  "endLine" : 26,
  "identifiers" : [ "try", "BufferedWriter", "writer", "new", "BufferedWriter", "new", "FileWriter", "file", "String", "json", "JSONObject", "toJSONString", "state", "writer", "write", "json", "writer", "flush", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SAGABuilder\\src\\main\\java\\com\\fudan\\util\\StateUtil.java",
  "startLine" : 32,
  "endLine" : 49,
  "identifiers" : [ "if", "new", "File", "file", "exists", "return", "new", "State", "try", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "StringBuilder", "builder", "new", "StringBuilder", "String", "line", "null", "while", "line", "reader", "readLine", "null", "builder", "append", "line", "String", "json", "builder", "toString", "return", "JSONObject", "parseObject", "json", "State", "class", "catch", "Exception", "e", "e", "printStackTrace", "return", "new", "State" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\entity\\MethodInfo.java",
  "startLine" : 28,
  "endLine" : 41,
  "identifiers" : [ "this", "id", "id", "this", "path", "path", "this", "project", "project", "this", "projectId", "projectId", "this", "startLine", "startLine", "this", "endLine", "endLine", "this", "groupId", "groupId", "this", "methodId", "methodId", "this", "hash1", "hash1", "this", "hash2", "hash2", "this", "hash3", "hash3", "this", "hash4", "hash4" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\Main.java",
  "startLine" : 21,
  "endLine" : 62,
  "identifiers" : [ "try", "long", "timeStart", "System", "currentTimeMillis", "logger", "info", "if", "new", "File", "Config", "CONFIG_FILE", "exists", "logger", "info", "Config", "CONFIG_FILE", "Config", "save", "Config", "CONFIG_FILE", "System", "exit", "Config", "config", "Config", "load", "Config", "CONFIG_FILE", "logger", "info", "MybatisUtil", "init", "config", "logger", "info", "IncrementFileManager", "incrementFileManager", "new", "IncrementFileManager", "config", "getIncrementFileFolder", "incrementFileManager", "process", "logger", "info", "DatabaseManager", "databaseManager", "new", "DatabaseManager", "config", "incrementFileManager", "databaseManager", "process", "logger", "info", "DetectResultManager", "detectResultManager", "new", "DetectResultManager", "config", "detectResultManager", "process", "logger", "info", "MethodAnalyzer", "analyzer", "new", "MethodAnalyzer", "config", "detectResultManager", "analyzer", "process", "long", "timeEnd", "System", "currentTimeMillis", "logger", "info", "TimeUtil", "convert", "timeEnd", "timeStart", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\manager\\DatabaseManager.java",
  "startLine" : 45,
  "endLine" : 87,
  "identifiers" : [ "SqlSession", "session", "MybatisUtil", "openSession", "if", "session", "null", "logger", "info", "System", "exit", "MethodInfoMapper", "mapper", "session", "getMapper", "MethodInfoMapper", "class", "MethodInfoExample", "example", "new", "MethodInfoExample", "List", "String", "files", "new", "ArrayList", "incrementFileManager", "getUpdatedFiles", "files", "addAll", "incrementFileManager", "getDeletedFiles", "files", "addAll", "incrementFileManager", "getNewFiles", "Map", "Long", "List", "String", "projectMap", "new", "HashMap", "for", "String", "file", "files", "String", "tmp", "file", "split", "String", "tmp2", "tmp", "split", "Long", "projectId", "Long", "parseLong", "tmp2", "tmp2", "length", "String", "path", "tmp", "List", "String", "projectFiles", "projectMap", "getOrDefault", "projectId", "new", "ArrayList", "projectFiles", "add", "path", "projectMap", "put", "projectId", "projectFiles", "int", "resCnt", "int", "projectNum", "projectMap", "size", "int", "index", "for", "Long", "projectId", "projectMap", "keySet", "example", "clear", "example", "setTableName", "config", "getJdbcTableName", "example", "createCriteria", "andProjectIdEqualTo", "projectId", "andPathIn", "projectMap", "get", "projectId", "int", "res", "mapper", "deleteByExample", "example", "resCnt", "res", "index", "logger", "info", "String", "format", "index", "f", "projectNum", "logger", "info", "resCnt", "session", "commit", "session", "close" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\manager\\DetectResultManager.java",
  "startLine" : 28,
  "endLine" : 37,
  "identifiers" : [ "this", "config", "config", "this", "groups", "new", "HashMap", "this", "measureId2GroupId", "new", "HashMap", "try", "measureReader", "new", "BufferedReader", "new", "FileReader", "config", "getDetectResultFolder", "FileNames", "MEASURE_INDEX_FILE", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\manager\\DetectResultManager.java",
  "startLine" : 42,
  "endLine" : 66,
  "identifiers" : [ "try", "if", "new", "File", "config", "getDetectResultFolder", "FileNames", "CLONE_GROUP_FILE", "exists", "return", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "config", "getDetectResultFolder", "FileNames", "CLONE_GROUP_FILE", "String", "line", "null", "int", "groupId", "while", "line", "reader", "readLine", "null", "groupId", "String", "tmp", "line", "trim", "split", "for", "String", "measureId", "tmp", "measureId2GroupId", "put", "Integer", "parseInt", "measureId", "groupId", "List", "Integer", "s", "groups", "getOrDefault", "groupId", "new", "ArrayList", "s", "add", "Integer", "parseInt", "measureId", "groups", "put", "groupId", "s", "reader", "close", "catch", "Exception", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\manager\\DetectResultManager.java",
  "startLine" : 72,
  "endLine" : 121,
  "identifiers" : [ "try", "String", "line", "measureReader", "readLine", "if", "line", "null", "measureReader", "close", "return", "null", "line", "line", "trim", "String", "tmp", "line", "split", "int", "id", "Integer", "parseInt", "tmp", "String", "path", "line", "substring", "line", "indexOf", "line", "lastIndexOf", "path", "path", "substring", "path", "lastIndexOf", "int", "startLine", "Integer", "parseInt", "tmp", "tmp", "length", "int", "endLine", "Integer", "parseInt", "tmp", "tmp", "length", "int", "gId", "if", "measureId2GroupId", "containsKey", "id", "gId", "measureId2GroupId", "get", "id", "MethodInfo", "measureIndex", "new", "MethodInfo", "measureIndex", "setId", "id", "measureIndex", "setPath", "path", "measureIndex", "setStartLine", "startLine", "measureIndex", "setEndLine", "endLine", "measureIndex", "setGroupId", "gId", "List", "String", "codes", "new", "ArrayList", "try", "codes", "FileUtil", "readLines", "measureIndex", "getPath", "measureIndex", "getStartLine", "measureIndex", "getEndLine", "catch", "IOException", "e", "e", "printStackTrace", "String", "code", "String", "join", "codes", "code", "CommentUtil", "removeComments2", "code", "config", "getLanguage", "long", "measureHashVal", "SimHash", "computeOptimizedSimHashForString", "code", "long", "hashs", "SimHash", "divide4", "measureHashVal", "measureIndex", "setHash1", "hashs", "measureIndex", "setHash2", "hashs", "measureIndex", "setHash3", "hashs", "measureIndex", "setHash4", "hashs", "String", "projectInfo", "NameUtil", "getProjectInfo", "String", "format", "config", "getIncrementFileFolder", "FileNames", "SNAPSHOTS_FOLDER", "path", "measureIndex", "setProject", "projectInfo", "measureIndex", "setProjectId", "Long", "parseLong", "projectInfo", "measureIndex", "setPath", "projectInfo", "return", "measureIndex", "catch", "Exception", "e", "MethodInfo", "methodInfo", "new", "MethodInfo", "methodInfo", "setId", "return", "methodInfo" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\manager\\IncrementFileManager.java",
  "startLine" : 49,
  "endLine" : 61,
  "identifiers" : [ "try", "String", "file", "String", "format", "incrementFileFolder", "FileNames", "NEW_FILE", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "while", "line", "reader", "readLine", "null", "newFiles", "add", "line", "trim", "reader", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\manager\\IncrementFileManager.java",
  "startLine" : 66,
  "endLine" : 78,
  "identifiers" : [ "try", "String", "file", "String", "format", "incrementFileFolder", "FileNames", "UPDATED_FILE", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "while", "line", "reader", "readLine", "null", "updatedFiles", "add", "line", "trim", "reader", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\manager\\IncrementFileManager.java",
  "startLine" : 83,
  "endLine" : 95,
  "identifiers" : [ "try", "String", "file", "String", "format", "incrementFileFolder", "FileNames", "DELETED_FILE", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "while", "line", "reader", "readLine", "null", "deletedFiles", "add", "line", "trim", "reader", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\manager\\IncrementFileManager.java",
  "startLine" : 100,
  "endLine" : 112,
  "identifiers" : [ "try", "String", "file", "String", "format", "incrementFileFolder", "FileNames", "DELETED_REPO", "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "String", "line", "null", "while", "line", "reader", "readLine", "null", "deletedRepos", "add", "line", "trim", "reader", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\processor\\MethodAnalyzer.java",
  "startLine" : 40,
  "endLine" : 49,
  "identifiers" : [ "this", "config", "config", "this", "detectResultManager", "detectResultManager", "newRecords", "new", "ArrayList", "updateRecords", "new", "ArrayList", "oldGroup2newGroup", "new", "HashMap", "noGroup2newGroup", "new", "HashMap", "measureId2GroupId", "new", "HashMap", "this", "modifiedRecords", "new", "ArrayList" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\processor\\MethodAnalyzer.java",
  "startLine" : 51,
  "endLine" : 98,
  "identifiers" : [ "logger", "info", "maxGroupId", "getMax", "startGroupId", "maxGroupId", "maxMethodId", "getMax", "startMethodId", "maxMethodId", "int", "size", "FileUtil", "getFileLineNum", "config", "getDetectResultFolder", "FileNames", "MEASURE_INDEX_FILE", "int", "cnt", "MethodInfo", "measureIndex", "null", "while", "true", "try", "measureIndex", "detectResultManager", "next", "if", "measureIndex", "null", "break", "cnt", "if", "cnt", "logger", "info", "String", "format", "cnt", "size", "if", "measureIndex", "getId", "continue", "measureIndex", "setMethodId", "startMethodId", "measureIndex", "setId", "measureIndex", "getMethodId", "matchNewInstance", "measureIndex", "catch", "Exception", "e", "logger", "info", "newRecords", "size", "insertNewRecords", "logger", "info", "updateRecords", "size", "changeUpdatedRecords", "printMeasure2Group", "printModifiedRecords" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\processor\\MethodAnalyzer.java",
  "startLine" : 100,
  "endLine" : 169,
  "identifiers" : [ "if", "oldGroup2newGroup", "containsKey", "measureIndex", "getGroupId", "measureIndex", "setGroupId", "oldGroup2newGroup", "get", "measureIndex", "getGroupId", "measureId2GroupId", "put", "measureIndex", "getMethodId", "maxMethodId", "String", "format", "measureIndex", "getMethodId", "measureIndex", "getGroupId", "newRecords", "add", "measureIndex", "return", "SqlSession", "session", "MybatisUtil", "openSession", "MethodInfoMapper", "mapper", "session", "getMapper", "MethodInfoMapper", "class", "MethodInfoExample", "example", "new", "MethodInfoExample", "example", "setTableName", "config", "getJdbcTableName", "example", "or", "andHash1EqualTo", "measureIndex", "getHash1", "andHash2EqualTo", "measureIndex", "getHash2", "example", "or", "andHash3EqualTo", "measureIndex", "getHash3", "andHash4EqualTo", "measureIndex", "getHash4", "List", "MethodInfo", "methodInfos", "mapper", "selectByExample", "example", "MethodInfo", "matchedInstance", "null", "long", "measureHash", "measureIndex", "getHash1", "measureIndex", "getHash2", "measureIndex", "getHash3", "measureIndex", "getHash4", "for", "MethodInfo", "methodInfo", "methodInfos", "long", "hash", "methodInfo", "getHash1", "methodInfo", "getHash2", "methodInfo", "getHash3", "methodInfo", "getHash4", "int", "dis", "SimHash", "hammingDistance", "measureHash", "hash", "if", "dis", "config", "getHammingDistanceThreshold", "int", "line1", "measureIndex", "getEndLine", "measureIndex", "getStartLine", "int", "line2", "methodInfo", "getEndLine", "methodInfo", "getStartLine", "int", "lineGap", "Math", "abs", "line1", "line2", "float", "lineGapPercent", "lineGap", "f", "Math", "min", "line1", "line2", "if", "lineGapPercent", "config", "getLineGapPercent", "matchedInstance", "methodInfo", "break", "session", "close", "if", "matchedInstance", "null", "if", "measureIndex", "getGroupId", "measureId2GroupId", "put", "measureIndex", "getMethodId", "maxMethodId", "String", "format", "measureIndex", "getMethodId", "measureIndex", "getGroupId", "newRecords", "add", "measureIndex", "else", "int", "newGroupId", "startGroupId", "oldGroup2newGroup", "put", "measureIndex", "getGroupId", "newGroupId", "measureIndex", "setGroupId", "newGroupId", "measureId2GroupId", "put", "measureIndex", "getMethodId", "maxMethodId", "String", "format", "measureIndex", "getMethodId", "measureIndex", "getGroupId", "newRecords", "add", "measureIndex", "return", "modifiedRecords", "add", "String", "format", "measureIndex", "getId", "matchedInstance", "getId", "if", "matchedInstance", "getGroupId", "measureIndex", "setGroupId", "matchedInstance", "getGroupId", "measureId2GroupId", "put", "measureIndex", "getMethodId", "maxMethodId", "String", "format", "measureIndex", "getMethodId", "measureIndex", "getGroupId", "newRecords", "add", "measureIndex", "else", "if", "noGroup2newGroup", "containsKey", "matchedInstance", "getMethodId", "measureIndex", "setGroupId", "noGroup2newGroup", "get", "matchedInstance", "getMethodId", "else", "measureIndex", "setGroupId", "startGroupId", "noGroup2newGroup", "put", "matchedInstance", "getMethodId", "measureIndex", "getGroupId", "matchedInstance", "setGroupId", "measureIndex", "getGroupId", "updateRecords", "add", "matchedInstance", "measureId2GroupId", "put", "measureIndex", "getMethodId", "maxMethodId", "String", "format", "measureIndex", "getMethodId", "measureIndex", "getGroupId", "newRecords", "add", "measureIndex" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\processor\\MethodAnalyzer.java",
  "startLine" : 174,
  "endLine" : 187,
  "identifiers" : [ "SqlSession", "session", "MybatisUtil", "openSession", "MethodInfoMapper", "mapper", "session", "getMapper", "MethodInfoMapper", "class", "int", "buffer", "int", "size", "newRecords", "size", "buffer", "newRecords", "size", "buffer", "newRecords", "size", "buffer", "for", "int", "i", "i", "size", "i", "logger", "info", "String", "format", "i", "f", "size", "int", "fromIndex", "i", "buffer", "int", "toIndex", "Math", "min", "i", "buffer", "newRecords", "size", "mapper", "batchInsert", "config", "getJdbcTableName", "newRecords", "subList", "fromIndex", "toIndex", "session", "commit", "session", "close" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\processor\\MethodAnalyzer.java",
  "startLine" : 192,
  "endLine" : 211,
  "identifiers" : [ "SqlSession", "session", "MybatisUtil", "openSession", "MethodInfoMapper", "mapper", "session", "getMapper", "MethodInfoMapper", "class", "MethodInfoExample", "example", "new", "MethodInfoExample", "int", "size", "updateRecords", "size", "int", "cnt", "for", "MethodInfo", "methodInfo", "updateRecords", "cnt", "logger", "info", "String", "format", "cnt", "f", "size", "example", "clear", "example", "setTableName", "config", "getJdbcTableName", "example", "createCriteria", "andMethodIdEqualTo", "methodInfo", "getMethodId", "MethodInfo", "tmp", "new", "MethodInfo", "tmp", "setGroupId", "methodInfo", "getGroupId", "mapper", "updateByExampleSelective", "tmp", "example", "session", "commit", "session", "close" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\processor\\MethodAnalyzer.java",
  "startLine" : 218,
  "endLine" : 228,
  "identifiers" : [ "SqlSession", "session", "MybatisUtil", "openSession", "if", "session", "null", "return", "MethodInfoMapper", "mapper", "session", "getMapper", "MethodInfoMapper", "class", "Integer", "res", "mapper", "selectMax", "config", "getJdbcTableName", "field", "res", "res", "null", "res", "session", "close", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\processor\\MethodAnalyzer.java",
  "startLine" : 233,
  "endLine" : 246,
  "identifiers" : [ "BufferedWriter", "writer", "null", "try", "writer", "new", "BufferedWriter", "new", "FileWriter", "FileNames", "MEASURE_TO_GROUP_FILE", "for", "Integer", "measureId", "measureId2GroupId", "keySet", "writer", "write", "String", "format", "measureId", "measureId2GroupId", "get", "measureId", "writer", "newLine", "writer", "flush", "writer", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\processor\\MethodAnalyzer.java",
  "startLine" : 251,
  "endLine" : 264,
  "identifiers" : [ "BufferedWriter", "writer", "null", "try", "writer", "new", "BufferedWriter", "new", "FileWriter", "FileNames", "MODIFIED_RECORDS_FILE", "for", "String", "record", "modifiedRecords", "writer", "write", "record", "writer", "newLine", "writer", "flush", "writer", "close", "catch", "IOException", "e", "e", "printStackTrace" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 59,
  "endLine" : 67,
  "identifiers" : [ "Long", "l", "new", "Long", "polynomial", "FPGenerator", "fpgen", "FPGenerator", "generators", "get", "l", "if", "fpgen", "null", "fpgen", "new", "FPGenerator", "polynomial", "degree", "generators", "put", "l", "fpgen", "return", "fpgen" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 78,
  "endLine" : 87,
  "identifiers" : [ "int", "N", "degree", "long", "local", "N", "fp", "L", "N", "long", "temp", "zero", "for", "int", "i", "i", "N", "i", "temp", "ByteModTable", "i", "int", "fp", "xff", "fp", "return", "local", "temp" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 107,
  "endLine" : 115,
  "identifiers" : [ "f", "xffff", "v", "int", "i", "int", "f", "long", "result", "f", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 120,
  "endLine" : 132,
  "identifiers" : [ "f", "xffffffffL", "v", "int", "i", "int", "f", "long", "result", "f", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "i", "result", "ByteModTable", "i", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 137,
  "endLine" : 155,
  "identifiers" : [ "f", "v", "long", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "f", "result", "ByteModTable", "int", "f", "xff", "return", "result" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 270,
  "endLine" : 277,
  "identifiers" : [ "int", "n", "s", "length", "for", "int", "i", "i", "n", "i", "int", "v", "int", "s", "charAt", "i", "f", "extend_char", "f", "v", "return", "reduce", "f" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 314,
  "endLine" : 321,
  "identifiers" : [ "int", "n", "s", "length", "for", "int", "i", "i", "n", "i", "int", "x", "int", "s", "charAt", "i", "f", "extend_byte", "f", "x", "return", "reduce", "f" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 363,
  "endLine" : 402,
  "identifiers" : [ "this", "degree", "degree", "this", "polynomial", "polynomial", "ByteModTable", "new", "long", "long", "PowerTable", "new", "long", "long", "x_to_the_i", "one", "long", "x_to_the_degree_minus_one", "one", "degree", "for", "int", "i", "i", "i", "PowerTable", "i", "x_to_the_i", "boolean", "overflow", "x_to_the_i", "x_to_the_degree_minus_one", "x_to_the_i", "if", "overflow", "x_to_the_i", "polynomial", "this", "empty", "PowerTable", "for", "int", "i", "i", "i", "for", "int", "j", "j", "j", "long", "v", "zero", "for", "int", "k", "k", "k", "if", "j", "k", "v", "PowerTable", "i", "k", "ByteModTable", "i", "j", "v" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\FPGenerator.java",
  "startLine" : 410,
  "endLine" : 474,
  "identifiers" : [ "null", "xC000000000000000L", "xC000000000000000L", "xE000000000000000L", "xE000000000000000L", "xD000000000000000L", "xB000000000000000L", "xF800000000000000L", "xF800000000000000L", "xEC00000000000000L", "xBC00000000000000L", "xDA00000000000000L", "xB600000000000000L", "xE500000000000000L", "xE500000000000000L", "x9680000000000000L", "xD480000000000000L", "x80C0000000000000L", "x8840000000000000L", "xB0A0000000000000L", "xE9A0000000000000L", "xD9F0000000000000L", "xC9B0000000000000L", "xE758000000000000L", "xDE98000000000000L", "xE42C000000000000L", "x94E4000000000000L", "xD4CE000000000000L", "xB892000000000000L", "xE2AB000000000000L", "x9E39000000000000L", "xCCE4800000000000L", "x9783800000000000L", "xD8F8C00000000000L", "xA9CDC00000000000L", "x9A28200000000000L", "xFD79E00000000000L", "xC782500000000000L", "x96CD300000000000L", "xBEE6880000000000L", "xE902C80000000000L", "x86D7E40000000000L", "xF066340000000000L", "x9888060000000000L", "x910ABE0000000000L", "xFF30E30000000000L", "xB27EFB0000000000L", "x8E375B8000000000L", "xA03D948000000000L", "xD1415C4000000000L", "xF5357CC000000000L", "x91A916E000000000L", "xB6CE66E000000000L", "xE6D2FC5000000000L", "xD55882B000000000L", "x9A3BA0B800000000L", "xFBD654E800000000L", "xAEA5D2E400000000L", "xF0E533AC00000000L", "xDA88B7BE00000000L", "xAA3AAEDE00000000L", "xBA75BB4300000000L", "xF5A811C500000000L", "x9B6C9A2F80000000L", "x9603CCED80000000L", "xFABB538840000000L", "xE2747090C0000000L", "x8358898EA0000000L", "x8C698D3D20000000L", "xDA8ABD5BF0000000L", "xF6DF3A0AF0000000L", "xB090C3F758000000L", "xD3B4D3D298000000L", "xAD9882F5BC000000L", "x88DA4FB544000000L", "xC3C366272A000000L", "xDCCF2A2262000000L", "x9BC0224A97000000L", "xAF5D96F273000000L", "x8643FFF621800000L", "x8E390C6EDC800000L", "xE45C01919BC00000L", "xCBB34C8945C00000L", "x80D8141BC2E00000L", "x886AFC3912200000L", "xF605807C26500000L", "xA3B92D28F6300000L", "xCE9A2CFC76280000L", "x98400C1921280000L", "xF61894904C040000L", "xC8BE6DBCEC8C0000L", "xE3A44C104D160000L", "xCA84A59443760000L", "xC7E84953A11B0000L", "xD9D4F6AA02CB0000L", "xC26CDD1C9A358000L", "x8BE8478434328000L", "xAE125DBEB198C000L", "xFCC5DBFD5AAAC000L", "x86DE52A079A6A000L", "xC5F16BD883816000L", "xDF82486AAFE37000L", "xA293EC735692D000L", "xE91ABA275C272800L", "xD686192874E3C800L", "x963D0960DAB3FC00L", "xBA9DE62072621400L", "xA2188C4E8A46CE00L", "xD31F75BCB4977E00L", "xC43A416020A6CB00L", "x99F57FECA12B3900L", "xA4F72EF82A58AE80L", "xCECE4391B81DA380L", "xB39F119264BC0940L", "x80A277D20DABB9C0L", "xFD6616C0CBFA0B20L", "xED16E64117DC11A0L", "xFFA8BC44327B5390L", "xEDFB13DB3B66C210L", "xCAE8EB99E73AB548L", "xC86135B6EA2F0B98L", "xBA49BADCDD19B16CL", "x8F1944AFB18564C4L", "xECFC86D765EABBEEL", "x9190E1C46CC13702L", "xE1F8D6B3195D6D97L", "xDF70267FF5E4C979L", "xD74307D3FD3382DBL", "x9999B3FFDC769B48L" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 105,
  "endLine" : 155,
  "identifiers" : [ ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 225,
  "endLine" : 239,
  "identifiers" : [ "if", "f", "f", "throw", "new", "IllegalArgumentException", "if", "n", "throw", "new", "IllegalArgumentException", "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "n", "f", "if", "l", "l", "l", "free", "PRIMES", "p", "l", "this", "f", "f", "this", "maxFill", "int", "free", "f", "key", "new", "long", "free", "state", "new", "byte", "free" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 305,
  "endLine" : 315,
  "identifiers" : [ "if", "offset", "throw", "new", "ArrayIndexOutOfBoundsException", "offset", "if", "length", "throw", "new", "IllegalArgumentException", "length", "if", "offset", "length", "arrayLength", "throw", "new", "ArrayIndexOutOfBoundsException", "offset", "length", "arrayLength" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 436,
  "endLine" : 471,
  "identifiers" : [ "final", "long", "key", "this", "key", "final", "byte", "state", "this", "state", "final", "int", "n", "key", "length", "final", "int", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "int", "h1", "k2i", "n", "if", "state", "h1", "OCCUPIED", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "OCCUPIED", "k", "key", "h1", "if", "state", "h1", "FREE", "return", "h1", "if", "state", "h1", "OCCUPIED", "return", "h1", "final", "int", "i", "h1", "if", "ASSERTS", "assert", "state", "h1", "REMOVED", "if", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "k", "key", "h1", "return", "state", "h1", "OCCUPIED", "h1", "i" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 481,
  "endLine" : 501,
  "identifiers" : [ "final", "long", "key", "this", "key", "final", "byte", "state", "this", "state", "final", "int", "n", "key", "length", "final", "int", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "int", "h1", "k2i", "n", "if", "state", "h1", "FREE", "k", "key", "h1", "final", "int", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "k", "key", "h1", "return", "state", "h1", "OCCUPIED", "h1" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 503,
  "endLine" : 523,
  "identifiers" : [ "final", "int", "i", "findInsertionPoint", "k", "if", "i", "return", "false", "if", "state", "i", "FREE", "free", "state", "i", "OCCUPIED", "key", "i", "k", "if", "count", "maxFill", "int", "newP", "Math", "min", "p", "growthFactor", "PRIMES", "length", "while", "PRIMES", "newP", "PRIMES", "p", "newP", "rehash", "newP", "if", "free", "rehash", "p", "if", "ASSERTS", "checkTable", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 599,
  "endLine" : 611,
  "identifiers" : [ "long", "retVal", "final", "byte", "state", "LongOpenHashSet", "this", "state", "final", "int", "n", "state", "length", "if", "hasNext", "throw", "new", "NoSuchElementException", "retVal", "key", "last", "pos", "if", "c", "do", "pos", "while", "pos", "n", "state", "pos", "OCCUPIED", "return", "retVal" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 668,
  "endLine" : 680,
  "identifiers" : [ "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "count", "f", "if", "l", "l", "l", "if", "l", "p", "return", "true", "try", "rehash", "l", "catch", "OutOfMemoryError", "cantDoIt", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 704,
  "endLine" : 717,
  "identifiers" : [ "int", "l", "Arrays", "binarySearch", "PRIMES", "int", "Math", "min", "Integer", "MAX_VALUE", "Math", "max", "n", "count", "f", "if", "l", "l", "l", "if", "p", "l", "return", "true", "try", "rehash", "l", "catch", "OutOfMemoryError", "cantDoIt", "return", "false", "return", "true" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 732,
  "endLine" : 761,
  "identifiers" : [ "int", "i", "j", "count", "k2i", "h1", "h2", "final", "byte", "state", "this", "state", "long", "k", "final", "int", "newN", "PRIMES", "newP", "final", "long", "key", "this", "key", "newKey", "new", "long", "newN", "final", "byte", "newState", "new", "byte", "newN", "while", "j", "while", "state", "i", "OCCUPIED", "i", "k", "key", "i", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "h1", "k2i", "newN", "if", "newState", "h1", "FREE", "h2", "k2i", "newN", "do", "h1", "h1", "h2", "newN", "while", "newState", "h1", "FREE", "newState", "h1", "OCCUPIED", "newKey", "h1", "k", "i", "p", "newP", "free", "newN", "count", "maxFill", "int", "newN", "f", "this", "key", "newKey", "this", "state", "newState" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 782,
  "endLine" : 792,
  "identifiers" : [ "LongOpenHashSet", "c", "try", "c", "LongOpenHashSet", "super", "clone", "catch", "CloneNotSupportedException", "cantHappen", "throw", "new", "InternalError", "c", "key", "key", "clone", "c", "state", "state", "clone", "return", "c" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 804,
  "endLine" : 813,
  "identifiers" : [ "int", "h", "i", "j", "count", "while", "j", "while", "state", "i", "OCCUPIED", "i", "h", "longHash2IntHash", "key", "i", "i", "return", "h" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\LongOpenHashSet.java",
  "startLine" : 826,
  "endLine" : 858,
  "identifiers" : [ "s", "defaultReadObject", "growthFactor", "DEFAULT_GROWTH_FACTOR", "p", "Arrays", "binarySearch", "PRIMES", "int", "count", "f", "if", "p", "p", "p", "final", "int", "n", "PRIMES", "p", "maxFill", "int", "n", "f", "free", "n", "count", "final", "long", "key", "this", "key", "new", "long", "n", "final", "byte", "state", "this", "state", "new", "byte", "n", "int", "i", "k2i", "h1", "h2", "long", "k", "i", "count", "while", "i", "k", "s", "readLong", "k2i", "longHash2IntHash", "k", "x7FFFFFFF", "h1", "k2i", "n", "if", "state", "h1", "FREE", "h2", "k2i", "n", "do", "h1", "h1", "h2", "n", "while", "state", "h1", "FREE", "state", "h1", "OCCUPIED", "key", "h1", "k", "if", "ASSERTS", "checkTable" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 53,
  "endLine" : 99,
  "identifiers" : [ "LongOpenHashSet", "shingles", "new", "LongOpenHashSet", "Math", "min", "s", "length", "int", "length", "s", "length", "for", "int", "i", "i", "length", "FIXED_CGRAM_LENGTH", "i", "long", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingle", "shingle", "s", "charAt", "i", "shingles", "add", "shingle", "int", "v", "new", "int", "HASH_SIZE", "byte", "longAsBytes", "new", "byte", "for", "long", "shingle", "shingles", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "long", "longHash", "FPGenerator", "std64", "fp", "longAsBytes", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 101,
  "endLine" : 155,
  "identifiers" : [ "LongOpenHashSet", "shingles", "new", "LongOpenHashSet", "Math", "min", "length", "FIXED_BGRAM_LENGTH", "for", "int", "i", "offset", "i", "length", "FIXED_BGRAM_LENGTH", "i", "int", "pos", "i", "long", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingle", "shingle", "data", "pos", "shingles", "add", "shingle", "int", "v", "new", "int", "HASH_SIZE", "byte", "longAsBytes", "new", "byte", "for", "long", "shingle", "shingles", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "longAsBytes", "byte", "shingle", "long", "longHash", "FPGenerator", "std64", "fp", "longAsBytes", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 157,
  "endLine" : 180,
  "identifiers" : [ "int", "v", "new", "int", "HASH_SIZE", "for", "String", "shingle", "shingles", "byte", "bytes", "shingle", "getBytes", "long", "longHash", "FPGenerator", "std64", "fp", "bytes", "bytes", "length", "for", "int", "i", "i", "HASH_SIZE", "i", "boolean", "bitSet", "longHash", "i", "L", "L", "v", "i", "bitSet", "long", "simhash", "for", "int", "i", "i", "HASH_SIZE", "i", "if", "v", "i", "simhash", "L", "i", "return", "simhash" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\simhash\\SimHash.java",
  "startLine" : 209,
  "endLine" : 216,
  "identifiers" : [ "long", "res", "new", "long", "res", "hash", "xffff000000000000L", "res", "hash", "x0000ffff00000000L", "res", "hash", "x00000000ffff0000L", "res", "hash", "x000000000000ffffL", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CodeUtils.java",
  "startLine" : 16,
  "endLine" : 85,
  "identifiers" : [ "try", "List", "Byte", "tokens1", "lexer", "code1", "List", "Byte", "tokens2", "lexer", "code2", "List", "Fragment", "fragments", "new", "ArrayList", "fragments", "add", "new", "Fragment", "tokens1", "size", "fragments", "add", "new", "Fragment", "tokens1", "size", "tokens1", "size", "tokens2", "size", "List", "Byte", "tokens", "new", "ArrayList", "tokens", "addAll", "tokens1", "tokens", "addAll", "tokens2", "SuffixArray", "suffixArray", "new", "SuffixArray", "suffixArray", "init", "tokens", "List", "Integer", "result", "suffixArray", "process", "List", "ClonePair", "clonePairs", "new", "ArrayList", "for", "int", "i", "i", "result", "size", "i", "if", "result", "get", "i", "continue", "int", "x1", "result", "get", "i", "int", "x2", "result", "get", "i", "int", "cloneLen", "result", "get", "i", "int", "firstFrom", "searchFragment", "fragments", "x1", "int", "firstTo", "searchFragment", "fragments", "x1", "cloneLen", "int", "secondFrom", "searchFragment", "fragments", "x2", "int", "secondTo", "searchFragment", "fragments", "x2", "cloneLen", "if", "firstFrom", "secondFrom", "continue", "if", "firstFrom", "firstTo", "secondFrom", "secondTo", "continue", "if", "cloneLen", "continue", "if", "firstFrom", "clonePairs", "add", "new", "ClonePair", "x1", "x2", "cloneLen", "else", "clonePairs", "add", "new", "ClonePair", "x2", "x1", "cloneLen", "Collections", "sort", "clonePairs", "new", "Comparator", "ClonePair", "Override", "public", "int", "compare", "ClonePair", "o1", "ClonePair", "o2", "if", "o1", "first", "o2", "first", "return", "else", "if", "o1", "first", "o2", "first", "return", "return", "int", "overlapping", "calculateOverlapping", "clonePairs", "return", "overlapping", "f", "Math", "max", "tokens1", "size", "tokens2", "size", "catch", "Exception", "e", "e", "printStackTrace", "return", "f" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CodeUtils.java",
  "startLine" : 93,
  "endLine" : 102,
  "identifiers" : [ "int", "index", "for", "int", "i", "i", "fragments", "size", "i", "if", "startIndex", "fragments", "get", "i", "start", "startIndex", "fragments", "get", "i", "end", "index", "i", "break", "return", "index" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CodeUtils.java",
  "startLine" : 109,
  "endLine" : 138,
  "identifiers" : [ "int", "index", "int", "startToken", "int", "size", "int", "totalSize", "while", "index", "pairs", "size", "int", "pairIndex", "pairs", "get", "index", "first", "int", "pairSize", "pairs", "get", "index", "size", "if", "index", "startToken", "pairIndex", "size", "pairSize", "index", "continue", "if", "startToken", "size", "pairIndex", "if", "startToken", "size", "pairIndex", "pairSize", "else", "size", "pairIndex", "startToken", "pairSize", "index", "else", "totalSize", "size", "startToken", "pairIndex", "size", "pairSize", "index", "return", "Math", "max", "totalSize", "size" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CodeUtils.java",
  "startLine" : 145,
  "endLine" : 181,
  "identifiers" : [ "int", "index", "List", "Byte", "res", "new", "ArrayList", "String", "token", "while", "index", "stat", "length", "char", "c", "stat", "charAt", "index", "if", "Character", "isSpaceChar", "c", "index", "continue", "if", "Character", "isDigit", "c", "while", "Character", "isDigit", "c", "token", "c", "if", "index", "stat", "length", "break", "c", "stat", "charAt", "index", "res", "add", "str2hash", "token", "token", "continue", "if", "Character", "isLetter", "c", "c", "_", "while", "Character", "isLetterOrDigit", "c", "c", "_", "token", "c", "if", "index", "stat", "length", "break", "c", "stat", "charAt", "index", "res", "add", "str2hash", "token", "token", "continue", "res", "add", "str2hash", "c", "index", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CodeUtils.java",
  "startLine" : 188,
  "endLine" : 201,
  "identifiers" : [ "str", "str", "toLowerCase", "if", "str", "length", "int", "h", "str", "toCharArray", "str", "length", "h", "return", "byte", "h", "x7f", "else", "int", "h1", "str", "toCharArray", "str", "length", "int", "h2", "str", "toCharArray", "str", "length", "h1", "int", "h", "h1", "h2", "return", "byte", "h", "x7f" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CodeUtils.java",
  "startLine" : 226,
  "endLine" : 253,
  "identifiers" : [ "for", "int", "i", "i", "sa", "length", "i", "sa", "i", "i", "for", "int", "i", "i", "tokens", "size", "i", "for", "int", "j", "i", "j", "tokens", "size", "j", "List", "Byte", "suffix1", "tokens", "subList", "sa", "i", "tokens", "size", "List", "Byte", "suffix2", "tokens", "subList", "sa", "j", "tokens", "size", "int", "size", "Math", "min", "suffix1", "size", "suffix2", "size", "boolean", "result", "suffix1", "size", "suffix2", "size", "for", "int", "m", "m", "size", "m", "if", "suffix1", "get", "m", "suffix2", "get", "m", "result", "true", "break", "else", "if", "suffix1", "get", "m", "suffix2", "get", "m", "result", "false", "break", "if", "result", "int", "tmp", "sa", "i", "sa", "i", "sa", "j", "sa", "j", "tmp" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CodeUtils.java",
  "startLine" : 258,
  "endLine" : 272,
  "identifiers" : [ "for", "int", "i", "i", "sa", "length", "i", "List", "Byte", "pre", "tokens", "subList", "sa", "i", "tokens", "size", "List", "Byte", "cur", "tokens", "subList", "sa", "i", "tokens", "size", "int", "cnt", "int", "size", "Math", "min", "pre", "size", "cur", "size", "for", "int", "j", "j", "size", "j", "if", "pre", "get", "j", "equals", "cur", "get", "j", "break", "cnt", "height", "i", "cnt" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CodeUtils.java",
  "startLine" : 278,
  "endLine" : 288,
  "identifiers" : [ "buildSuffixArray", "calculateHeight", "List", "Integer", "results", "new", "ArrayList", "for", "int", "i", "i", "height", "length", "i", "results", "add", "sa", "i", "results", "add", "sa", "i", "results", "add", "height", "i", "return", "results" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\CommentUtil.java",
  "startLine" : 29,
  "endLine" : 43,
  "identifiers" : [ "if", "language", "equals", "Language", "JAVA", "language", "equals", "Language", "C", "language", "equals", "Language", "CPP", "language", "equals", "Language", "GO", "code", "removeComments", "code", "JAVA_COMMENT_SINGLE_LINE", "code", "removeComments", "code", "JAVA_COMMENT_MULTI_LINE", "else", "if", "language", "equals", "Language", "PYTHON", "code", "removeComments", "code", "PYTHON_COMMENT_SINGLE_LINE", "code", "removeComments", "code", "PYTHON_COMMENT_MULTI_LINE", "code", "removeComments", "code", "PYTHON_COMMENT_MULTI_LINE2", "code", "code", "replaceAll", "return", "code" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\DiffUtil.java",
  "startLine" : 19,
  "endLine" : 31,
  "identifiers" : [ "Patch", "String", "patch", "difflib", "DiffUtils", "diff", "original", "revised", "List", "String", "res", "new", "ArrayList", "for", "Delta", "String", "delta", "patch", "getDeltas", "int", "s1", "delta", "getOriginal", "getPosition", "int", "e1", "s1", "delta", "getOriginal", "size", "int", "s2", "delta", "getRevised", "getPosition", "int", "e2", "s2", "delta", "getRevised", "size", "String", "type", "delta", "getType", "name", "res", "add", "String", "format", "s1", "e1", "s2", "e2", "type", "return", "res" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 21,
  "endLine" : 43,
  "identifiers" : [ "List", "String", "files", "new", "ArrayList", "File", "root", "new", "File", "path", "File", "subs", "root", "listFiles", "if", "subs", "null", "subs", "length", "return", "files", "for", "File", "f", "subs", "if", "f", "isFile", "if", "f", "getName", "contains", "continue", "String", "extension", "f", "getName", "substring", "f", "getName", "lastIndexOf", "if", "fileExtensionsMap", "containsKey", "extension", "files", "add", "f", "getAbsolutePath", "else", "List", "String", "tmp", "listAllFiles", "f", "getAbsolutePath", "fileExtensionsMap", "files", "addAll", "tmp", "return", "files" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 51,
  "endLine" : 70,
  "identifiers" : [ "List", "String", "files", "new", "ArrayList", "File", "root", "new", "File", "path", "File", "subs", "root", "listFiles", "if", "subs", "null", "subs", "length", "return", "files", "for", "File", "f", "subs", "if", "f", "isFile", "if", "f", "getName", "contains", "continue", "files", "add", "f", "getAbsolutePath", "else", "List", "String", "tmp", "listAllFiles", "f", "getAbsolutePath", "files", "addAll", "tmp", "return", "files" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 79,
  "endLine" : 88,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "List", "String", "lines", "new", "ArrayList", "String", "line", "null", "while", "line", "reader", "readLine", "null", "lines", "add", "line", "reader", "close", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\FileUtil.java",
  "startLine" : 99,
  "endLine" : 116,
  "identifiers" : [ "BufferedReader", "reader", "new", "BufferedReader", "new", "FileReader", "file", "List", "String", "lines", "new", "ArrayList", "String", "line", "null", "int", "lineCnt", "while", "line", "reader", "readLine", "null", "lineCnt", "if", "lineCnt", "startLine", "continue", "if", "lineCnt", "endLine", "break", "lines", "add", "line", "reader", "close", "return", "lines" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\MybatisUtil.java",
  "startLine" : 30,
  "endLine" : 38,
  "identifiers" : [ "Properties", "properties", "new", "Properties", "properties", "setProperty", "DRIVER", "config", "getJdbcDriver", "properties", "setProperty", "URL", "config", "getJdbcUrl", "properties", "setProperty", "USERNAME", "config", "getJdbcUsername", "properties", "setProperty", "PASSWORD", "config", "getJdbcPassword", "InputStream", "res", "Resources", "getResourceAsStream", "MYBATIS_CONFIG_FILE", "factory", "new", "SqlSessionFactoryBuilder", "build", "res", "properties" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\NameUtil.java",
  "startLine" : 27,
  "endLine" : 59,
  "identifiers" : [ "String", "path2", "path", "substring", "prefix", "length", "path2", "path2", "replaceAll", "String", "names", "path2", "split", "String", "info", "for", "int", "i", "i", "names", "length", "i", "int", "atCnt", "for", "char", "c", "names", "i", "toCharArray", "if", "c", "atCnt", "if", "atCnt", "String", "tmp", "names", "i", "split", "info", "tmp", "tmp", "length", "for", "int", "j", "j", "i", "j", "info", "names", "j", "info", "tmp", "info", "path2", "substring", "path2", "indexOf", "names", "i", "names", "i", "length", "break", "if", "info", "isEmpty", "String", "tmp", "path2", "split", "info", "tmp", "info", "info", "path2", "substring", "path2", "indexOf", "return", "info" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\main\\java\\com\\fudan\\util\\TimeUtil.java",
  "startLine" : 14,
  "endLine" : 20,
  "identifiers" : [ "int", "seconds", "int", "timeMillis", "e3", "int", "hour", "seconds", "int", "minute", "seconds", "hour", "int", "second", "seconds", "hour", "minute", "return", "String", "format", "hour", "minute", "second" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\test\\java\\com\\fudan\\manager\\IncrementFileManagerTests.java",
  "startLine" : 14,
  "endLine" : 23,
  "identifiers" : [ "Config", "config", "Config", "load", "Config", "CONFIG_FILE", "IncrementFileManager", "manager", "new", "IncrementFileManager", "config", "getIncrementFileFolder", "manager", "process", "List", "String", "newFiles", "manager", "getNewFiles", "List", "String", "updatedFiles", "manager", "getUpdatedFiles", "List", "String", "deletedFiles", "manager", "getDeletedFiles", "List", "String", "deletedRepos", "manager", "getDeletedRepos", "System", "out", "println" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\test\\java\\com\\fudan\\mapper\\MapperTests.java",
  "startLine" : 15,
  "endLine" : 25,
  "identifiers" : [ "Config", "config", "Config", "load", "Config", "CONFIG_FILE", "MybatisUtil", "init", "config", "SqlSession", "sqlSession", "MybatisUtil", "openSession", "MethodInfoMapper", "methodInfoMapper", "sqlSession", "getMapper", "MethodInfoMapper", "class", "MethodInfoExample", "example", "new", "MethodInfoExample", "example", "createCriteria", "andGroupIdEqualTo", "List", "MethodInfo", "methodInfoList", "methodInfoMapper", "selectByExample", "example", "System", "out", "println", "methodInfoList", "size", "sqlSession", "close" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\test\\java\\com\\fudan\\simhash\\SimHashTests.java",
  "startLine" : 19,
  "endLine" : 31,
  "identifiers" : [ "long", "start", "System", "currentTimeMillis", "String", "a", "abcdefg", "long", "b", "SimHash", "computeOptimizedSimHashForString", "a", "long", "end", "System", "currentTimeMillis", "System", "out", "println", "end", "start", "System", "out", "println", "b" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\test\\java\\com\\fudan\\util\\FileUtilTests.java",
  "startLine" : 18,
  "endLine" : 26,
  "identifiers" : [ "List", "Integer", "nums", "new", "ArrayList", "nums", "add", "nums", "add", "nums", "add", "List", "Integer", "nums2", "nums", "subList", "System", "out", "println", "nums2" ]
}, {
  "path" : "d:\\GitRepo\\TencentProjects\\SagaIncrementAnalyzer\\src\\test\\java\\com\\fudan\\util\\NameUtilTests.java",
  "startLine" : 10,
  "endLine" : 19,
  "identifiers" : [ "String", "path1", "String", "path2", "String", "prefix", "String", "projectInfo1", "NameUtil", "getProjectInfo", "prefix", "path1", "Arrays", "stream", "projectInfo1", "forEach", "System", "out", "println", "String", "projectInfo2", "NameUtil", "getProjectInfo", "prefix", "path2", "Arrays", "stream", "projectInfo2", "forEach", "System", "out", "println" ]
} ]